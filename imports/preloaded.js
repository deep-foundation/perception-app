export default {
  "packages": [
    {
      "id": 573,
      "type_id": 146,
      "from_id": 553,
      "to_id": 97,
      "value": {
        "id": 223,
        "value": "🏷",
        "link_id": 573
      }
    },
    {
      "id": 656,
      "type_id": 3,
      "from_id": 553,
      "to_id": 655,
      "value": {
        "id": 306,
        "value": "ValueSymbol",
        "link_id": 656
      }
    },
    {
      "id": 657,
      "type_id": 146,
      "from_id": 553,
      "to_id": 3,
      "value": {
        "id": 307,
        "value": "🗂",
        "link_id": 657
      }
    },
    {
      "id": 658,
      "type_id": 3,
      "from_id": 553,
      "to_id": 657,
      "value": {
        "id": 308,
        "value": "ContainSymbol",
        "link_id": 658
      }
    },
    {
      "id": 659,
      "type_id": 146,
      "from_id": 553,
      "to_id": 2,
      "value": {
        "id": 309,
        "value": "📦",
        "link_id": 659
      }
    },
    {
      "id": 660,
      "type_id": 3,
      "from_id": 553,
      "to_id": 659,
      "value": {
        "id": 310,
        "value": "PackageSymbol",
        "link_id": 660
      }
    },
    {
      "id": 661,
      "type_id": 146,
      "from_id": 553,
      "to_id": 1,
      "value": {
        "id": 311,
        "value": "⭐️",
        "link_id": 661
      }
    },
    {
      "id": 880,
      "type_id": 30,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 365,
        "value": "({ deep, require }) => {\n    const React = require('react');\n    const { useState } = require('react');\n    const axiosHooks = require(\"axios-hooks\");\n    const axios = require(\"axios\");\n    const useAxios = axiosHooks.makeUseAxios({ axios: axios.create() });\n    return ({ fillSize, style, link }) => {\n        const ssl = deep.apolloClient.ssl;\n        const path = deep.apolloClient.path.slice(0, -4);\n        const url = `${ssl ? \"https://\" : \"http://\"}${path}/file?linkId=${link.id}`;\n        const [{ data, loading, error }, refetch] = useAxios({\n            method: 'get',\n            url,\n            headers: {\n                'Authorization': `Bearer ${deep.token}`\n            },\n            responseType: \"blob\",\n        });\n        const [src, setSrc] = useState(\"test\");\n        if (!loading && data) {\n            const reader = new window.FileReader();\n            reader.onload = () => {\n                setSrc(reader.result);\n            };\n            reader.readAsDataURL(data);\n        }\n        const renderMedia = () => {\n            if (src.startsWith('data:image')) {\n                return React.createElement(\"img\", { src: src, alt: \"An image from Deep file storage.\", style: style });\n            }\n            else if (src.startsWith('data:audio')) {\n                return React.createElement(\"audio\", { src: src, controls: true, style: style }, \"Your browser does not support the audio element.\");\n            }\n            else {\n                return React.createElement(\"div\", null, \"Unsupported file type.\");\n            }\n        };\n        return renderMedia();\n    };\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsibW9kdWxlLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxDQUFDLEVBQUUsSUFBSSxFQUFFLE9BQU8sRUFBRSxFQUFFLEVBQUU7SUFDcEIsTUFBTSxLQUFLLEdBQUcsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQy9CLE1BQU0sRUFBRSxRQUFRLEVBQUUsR0FBRyxPQUFPLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDdEMsTUFBTSxVQUFVLEdBQUcsT0FBTyxDQUFDLGFBQWEsQ0FBQyxDQUFDO0lBQzFDLE1BQU0sS0FBSyxHQUFHLE9BQU8sQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUMvQixNQUFNLFFBQVEsR0FBRyxVQUFVLENBQUMsWUFBWSxDQUFDLEVBQUUsS0FBSyxFQUFFLEtBQUssQ0FBQyxNQUFNLEVBQUUsRUFBRSxDQUFDLENBQUM7SUFFcEUsT0FBTyxDQUFDLEVBQUUsUUFBUSxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUUsRUFBRSxFQUFFO1FBRW5DLE1BQU0sR0FBRyxHQUFHLElBQUksQ0FBQyxZQUFZLENBQUMsR0FBRyxDQUFDO1FBQ2xDLE1BQU0sSUFBSSxHQUFHLElBQUksQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUNqRCxNQUFNLEdBQUcsR0FBRyxHQUFHLEdBQUcsQ0FBQyxDQUFDLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxTQUFTLEdBQUcsSUFBSSxnQkFBZ0IsSUFBSSxDQUFDLEVBQUUsRUFBRSxDQUFDO1FBRTVFLE1BQU0sQ0FBQyxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUUsS0FBSyxFQUFFLEVBQUUsT0FBTyxDQUFDLEdBQUcsUUFBUSxDQUFDO1lBQ25ELE1BQU0sRUFBRSxLQUFLO1lBQ2IsR0FBRztZQUNILE9BQU8sRUFBRTtnQkFDUCxlQUFlLEVBQUUsVUFBVSxJQUFJLENBQUMsS0FBSyxFQUFFO2FBQ3hDO1lBRUQsWUFBWSxFQUFFLE1BQU07U0FDckIsQ0FBQyxDQUFDO1FBRUgsTUFBTSxDQUFDLEdBQUcsRUFBRSxNQUFNLENBQUMsR0FBRyxRQUFRLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDdkMsSUFBSSxDQUFDLE9BQU8sSUFBSSxJQUFJLEVBQUUsQ0FBQztZQUNyQixNQUFNLE1BQU0sR0FBRyxJQUFJLE1BQU0sQ0FBQyxVQUFVLEVBQUUsQ0FBQztZQUN2QyxNQUFNLENBQUMsTUFBTSxHQUFHLEdBQUcsRUFBRTtnQkFDbkIsTUFBTSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQztZQUN4QixDQUFDLENBQUE7WUFDRCxNQUFNLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQzdCLENBQUM7UUFFRCxNQUFNLFdBQVcsR0FBRyxHQUFHLEVBQUU7WUFDdkIsSUFBSSxHQUFHLENBQUMsVUFBVSxDQUFDLFlBQVksQ0FBQyxFQUFFLENBQUM7Z0JBQ2pDLE9BQU8sNkJBQUssR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUMsa0NBQWtDLEVBQUMsS0FBSyxFQUFFLEtBQUssR0FBUSxDQUFDO1lBQ3BGLENBQUM7aUJBQU0sSUFBSSxHQUFHLENBQUMsVUFBVSxDQUFDLFlBQVksQ0FBQyxFQUFFLENBQUM7Z0JBQ3hDLE9BQU8sK0JBQU8sR0FBRyxFQUFFLEdBQUcsRUFBRSxRQUFRLFFBQUMsS0FBSyxFQUFFLEtBQUssdURBQTBELENBQUM7WUFDMUcsQ0FBQztpQkFBTSxDQUFDO2dCQUNOLE9BQU8sMERBQWlDLENBQUM7WUFDM0MsQ0FBQztRQUNILENBQUMsQ0FBQTtRQUVELE9BQU8sV0FBVyxFQUFFLENBQUM7SUFDdkIsQ0FBQyxDQUFBO0FBQ0gsQ0FBQyxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiKHsgZGVlcCwgcmVxdWlyZSB9KSA9PiB7XG4gIGNvbnN0IFJlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcbiAgY29uc3QgeyB1c2VTdGF0ZSB9ID0gcmVxdWlyZSgncmVhY3QnKTtcbiAgY29uc3QgYXhpb3NIb29rcyA9IHJlcXVpcmUoXCJheGlvcy1ob29rc1wiKTtcbiAgY29uc3QgYXhpb3MgPSByZXF1aXJlKFwiYXhpb3NcIik7XG4gIGNvbnN0IHVzZUF4aW9zID0gYXhpb3NIb29rcy5tYWtlVXNlQXhpb3MoeyBheGlvczogYXhpb3MuY3JlYXRlKCkgfSk7XG5cbiAgcmV0dXJuICh7IGZpbGxTaXplLCBzdHlsZSwgbGluayB9KSA9PiB7XG5cbiAgICBjb25zdCBzc2wgPSBkZWVwLmFwb2xsb0NsaWVudC5zc2w7XG4gICAgY29uc3QgcGF0aCA9IGRlZXAuYXBvbGxvQ2xpZW50LnBhdGguc2xpY2UoMCwgLTQpO1xuICAgIGNvbnN0IHVybCA9IGAke3NzbCA/IFwiaHR0cHM6Ly9cIiA6IFwiaHR0cDovL1wifSR7cGF0aH0vZmlsZT9saW5rSWQ9JHtsaW5rLmlkfWA7XG5cbiAgICBjb25zdCBbeyBkYXRhLCBsb2FkaW5nLCBlcnJvciB9LCByZWZldGNoXSA9IHVzZUF4aW9zKHsgXG4gICAgICBtZXRob2Q6ICdnZXQnLFxuICAgICAgdXJsLFxuICAgICAgaGVhZGVyczoge1xuICAgICAgICAnQXV0aG9yaXphdGlvbic6IGBCZWFyZXIgJHtkZWVwLnRva2VufWBcbiAgICAgIH0sXG4gICAgICBcbiAgICAgIHJlc3BvbnNlVHlwZTogXCJibG9iXCIsXG4gICAgfSk7XG5cbiAgICBjb25zdCBbc3JjLCBzZXRTcmNdID0gdXNlU3RhdGUoXCJ0ZXN0XCIpO1xuICAgIGlmICghbG9hZGluZyAmJiBkYXRhKSB7XG4gICAgICBjb25zdCByZWFkZXIgPSBuZXcgd2luZG93LkZpbGVSZWFkZXIoKTtcbiAgICAgIHJlYWRlci5vbmxvYWQgPSAoKSA9PiB7XG4gICAgICAgIHNldFNyYyhyZWFkZXIucmVzdWx0KTtcbiAgICAgIH1cbiAgICAgIHJlYWRlci5yZWFkQXNEYXRhVVJMKGRhdGEpO1xuICAgIH1cblxuICAgIGNvbnN0IHJlbmRlck1lZGlhID0gKCkgPT4ge1xuICAgICAgaWYgKHNyYy5zdGFydHNXaXRoKCdkYXRhOmltYWdlJykpIHtcbiAgICAgICAgcmV0dXJuIDxpbWcgc3JjPXtzcmN9IGFsdD1cIkFuIGltYWdlIGZyb20gRGVlcCBmaWxlIHN0b3JhZ2UuXCIgc3R5bGU9e3N0eWxlfT48L2ltZz47XG4gICAgICB9IGVsc2UgaWYgKHNyYy5zdGFydHNXaXRoKCdkYXRhOmF1ZGlvJykpIHtcbiAgICAgICAgcmV0dXJuIDxhdWRpbyBzcmM9e3NyY30gY29udHJvbHMgc3R5bGU9e3N0eWxlfT5Zb3VyIGJyb3dzZXIgZG9lcyBub3Qgc3VwcG9ydCB0aGUgYXVkaW8gZWxlbWVudC48L2F1ZGlvPjtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiA8ZGl2PlVuc3VwcG9ydGVkIGZpbGUgdHlwZS48L2Rpdj47XG4gICAgICB9XG4gICAgfSBcblxuICAgIHJldHVybiByZW5kZXJNZWRpYSgpO1xuICB9XG59XG4iXX0=",
        "link_id": 880
      }
    },
    {
      "id": 881,
      "type_id": 3,
      "from_id": 810,
      "to_id": 880,
      "value": {
        "id": 364,
        "value": "generated",
        "link_id": 881
      }
    },
    {
      "id": 882,
      "type_id": 143,
      "from_id": 880,
      "to_id": 810
    },
    {
      "id": 883,
      "type_id": 3,
      "from_id": 810,
      "to_id": 882
    },
    {
      "id": 819,
      "type_id": 3,
      "from_id": 813,
      "to_id": 800,
      "value": {
        "id": 368,
        "value": "editorHandleClientSyncTextFile",
        "link_id": 819
      }
    },
    {
      "id": 827,
      "type_id": 3,
      "from_id": 813,
      "to_id": 808,
      "value": {
        "id": 376,
        "value": "stringPackageQueryHandleClient",
        "link_id": 827
      }
    },
    {
      "id": 828,
      "type_id": 3,
      "from_id": 813,
      "to_id": 809,
      "value": {
        "id": 377,
        "value": "stringJoinHandleClient",
        "link_id": 828
      }
    },
    {
      "id": 829,
      "type_id": 3,
      "from_id": 813,
      "to_id": 806,
      "value": {
        "id": 378,
        "value": "stringHandler",
        "link_id": 829
      }
    },
    {
      "id": 925,
      "type_id": 30,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 391,
        "value": "async ({ deep, require }) => {\n    const React = require('react');\n    const { useState, useEffect, useRef } = React;\n    const { Text, Box, Button, Link, Input, VStack, useColorModeValue } = require('@chakra-ui/react');\n    const { ExternalLinkIcon } = require('@chakra-ui/icons');\n    const { useEditorTabs, useCytoEditor } = require('@deep-foundation/deepcase');\n    const Publish = await deep.id('@deep-foundation/npm-packager', 'Publish');\n    return ({ fillSize, style, link, setHandlerId }) => {\n        const axiosHooks = require(\"axios-hooks\");\n        const axios = require(\"axios\");\n        const useAxios = axiosHooks.makeUseAxios({ axios: axios.create() });\n        const packageId = link.id;\n        const packageTypeId = deep.idLocal('@deep-foundation/core', 'Package');\n        const packageNamespaceTypeId = deep.idLocal('@deep-foundation/core', 'PackageNamespace');\n        const packageVersionTypeId = deep.idLocal('@deep-foundation/core', 'PackageVersion');\n        const packageActiveTypeId = deep.idLocal('@deep-foundation/core', 'PackageActive');\n        const packageQueryTypeId = deep.idLocal('@deep-foundation/core', 'PackageQuery');\n        const { data: prefetchedNpmPackageLinks } = deep.useDeepSubscription({\n            up: {\n                parent: {\n                    type_id: { _eq: packageTypeId },\n                    string: { value: { _in: [\"@deep-foundation/npm-packager\"] } }\n                }\n            }\n        });\n        const { data: prefetchedPackageActiveLinksAndNamespace } = deep.useDeepSubscription({\n            type_id: { _in: [packageNamespaceTypeId, packageVersionTypeId, packageTypeId, packageActiveTypeId] }\n        });\n        const pkg = deep.minilinks.byId[packageId];\n        const pkgVersion = pkg?.in?.filter(v => v.type_id === packageVersionTypeId)?.[0];\n        const pkgVersionValue = pkgVersion?.value?.value || \"\";\n        const packageNamespaceId = pkgVersion?.from_id;\n        const packageName = pkg?.value?.value || \"\";\n        const [currentPackageName, setCurrentPackageName] = useState(packageName);\n        const [currentPackageVersion, setCurrentPackageVersion] = useState(pkgVersionValue);\n        let packageUrl = `https://registry.npmjs.com/${currentPackageName}`;\n        let displayUrl = `npmjs.com/package/${currentPackageName}`;\n        const { data: [Published], loading: pubLoading } = deep.useDeepSubscription({\n            type_id: Publish,\n            from_id: link.id,\n            order_by: { id: 'desc' },\n            limit: 1,\n        });\n        const { data: [Result], loading: resLoading } = deep.useDeepSubscription(Published ? {\n            type_id: { _in: [\n                    deep.idLocal('@deep-foundation/core', 'Rejected'),\n                    deep.idLocal('@deep-foundation/core', 'Resolved'),\n                ] },\n            up: {\n                tree_id: deep.idLocal('@deep-foundation/core', 'promiseTree'),\n                parent_id: Published?.id,\n            },\n            limit: 1,\n        } : { id: 0 });\n        const publishingLoading = pubLoading || resLoading;\n        const bg = useColorModeValue('#eeeeee', '#1e1e1e');\n        const borderColor = useColorModeValue('#a3a3a3', '#4d4d4d');\n        const { addTab, activeTab } = useEditorTabs();\n        const [cytoEditor, setCytoEditor] = useCytoEditor();\n        const [disabled, setDisabled] = useState(false);\n        const resultRef = useRef();\n        useEffect(() => {\n            if (!!Result && Result?.id != resultRef?.current?.id && disabled) {\n                setDisabled(false);\n                setCurrentPackageVersion(pkgVersionValue);\n            }\n            if (!!Result && Result?.id != resultRef?.current?.id) {\n                resultRef.current = Result;\n            }\n        }, [Result]);\n        return (React.createElement(\"div\", { style: {\n                ...style,\n                position: 'relative',\n            } },\n            React.createElement(Box, { maxW: 'md', minW: 'sm', w: 'sm', borderColor: borderColor, borderWidth: '1px', borderRadius: 'lg', overflow: 'hidden', bg: bg },\n                displayUrl ? React.createElement(Box, { p: 2 },\n                    React.createElement(Link, { fontSize: 'xs', href: `https://${displayUrl}`, isExternal: true },\n                        displayUrl,\n                        \" \",\n                        React.createElement(ExternalLinkIcon, { mx: '2px' })),\n                    \" \") : null,\n                React.createElement(VStack, { p: 2 },\n                    React.createElement(Input, { placeholder: 'package name', value: currentPackageName, borderColor: borderColor, size: 'sm', onChange: (e) => setCurrentPackageName(e.target.value) }),\n                    React.createElement(Input, { placeholder: 'package version', value: currentPackageVersion, borderColor: borderColor, size: 'sm', onChange: (e) => setCurrentPackageVersion(e.target.value) }),\n                    React.createElement(Button, { colorScheme: 'blue', size: 'sm', w: '100%', disabled: disabled, isLoading: disabled, onClick: async () => {\n                            let actualNamespaceId = packageNamespaceId;\n                            if (!packageNamespaceId && currentPackageName) {\n                                const { data: [packageNamespaceLink] } = await deep.insert({\n                                    type_id: packageNamespaceTypeId,\n                                    string: { data: { value: currentPackageName } },\n                                }, { returning: deep.selectReturning });\n                                deep.minilinks.apply([packageNamespaceLink]);\n                                actualNamespaceId = packageNamespaceLink.id;\n                            }\n                            else if (currentPackageName) {\n                                const { data: [{ link: packageNamespaceLink }] } = await deep.update({ link_id: packageNamespaceId }, { value: currentPackageName }, { table: 'strings', returning: `link { ${deep.selectReturning} }` });\n                                deep.minilinks.apply([packageNamespaceLink]);\n                                actualNamespaceId = packageNamespaceId;\n                            }\n                            const packageActiveLinks = deep.minilinks.byId[actualNamespaceId]?.out?.filter(l => l.type_id == packageActiveTypeId) || [];\n                            if (!packageActiveLinks?.length) {\n                                const { data: [packageActiveLink] } = await deep.insert({\n                                    from_id: actualNamespaceId,\n                                    type_id: packageActiveTypeId,\n                                    to_id: packageId,\n                                }, { returning: deep.selectReturning });\n                                deep.minilinks.apply([packageActiveLink]);\n                            }\n                            if (currentPackageName) {\n                                if (pkg?.value?.value) {\n                                    await deep.update({ link_id: pkg?.id }, { value: currentPackageName }, { table: 'strings' });\n                                }\n                                else {\n                                    await deep.insert({\n                                        link_id: pkg?.id,\n                                        value: currentPackageName\n                                    }, { table: 'strings' });\n                                }\n                            }\n                            if (!pkgVersion?.id) {\n                                const { data: [{ id: packageVersionId }] } = await deep.insert({\n                                    from_id: actualNamespaceId,\n                                    type_id: packageVersionTypeId,\n                                    to_id: pkg?.id,\n                                    string: { data: { value: currentPackageVersion || '0.0.0' } },\n                                });\n                            }\n                            else if (currentPackageVersion) {\n                                await deep.update({ link_id: pkgVersion?.id }, { value: currentPackageVersion }, { table: 'strings' });\n                            }\n                        } }, \"save\"),\n                    React.createElement(Button, { colorScheme: 'blue', size: 'sm', w: '100%', disabled: disabled, isLoading: disabled, onClick: async () => {\n                            if (!(prefetchedNpmPackageLinks?.length > 0)) {\n                                return;\n                            }\n                            const { data: [{ id: packageQueryId }] } = await deep.insert({\n                                type_id: packageQueryTypeId,\n                                string: { data: { value: currentPackageName } },\n                            });\n                            const { data: [{ id: publishId }] } = await deep.insert({\n                                from_id: pkg?.id,\n                                type_id: Publish,\n                                to_id: packageQueryId\n                            });\n                            setDisabled(true);\n                        } }, \"publish\"),\n                    !!Published && React.createElement(Button, { isLoading: !!Published && (!Result || publishingLoading), variant: \"outline\", colorScheme: publishingLoading ? 'default' : Result ? Result.type_id === deep.idLocal('@deep-foundation/core', 'Resolved') ? 'green' : 'red' : 'default', loadingText: publishingLoading ? 'Loading' : 'Publishing', disabled: true, onClick: async () => {\n                            if (Result) {\n                                addTab({\n                                    id: Result.to_id,\n                                    initialValue: deep.stringify((await deep.select(Result.to_id))?.data?.[0]?.value?.value)\n                                });\n                                activeTab(Result.to_id);\n                                setCytoEditor(Result.to_id);\n                            }\n                        } },\n                        React.createElement(\"div\", null,\n                            Result ? Result.type_id === deep.idLocal('@deep-foundation/core', 'Resolved') ? 'Published' : 'Failed' : 'Publishing',\n                            React.createElement(\"br\", null),\n                            React.createElement(Text, { fontSize: \"xs\" }, Result ? '(click open in editor)' : '')))))));\n    };\n};\n//# sourceMappingURL=data:application/json;base64,",
        "link_id": 925
      }
    },
    {
      "id": 926,
      "type_id": 3,
      "from_id": 906,
      "to_id": 925,
      "value": {
        "id": 390,
        "value": "generated",
        "link_id": 926
      }
    },
    {
      "id": 927,
      "type_id": 143,
      "from_id": 925,
      "to_id": 906
    },
    {
      "id": 928,
      "type_id": 3,
      "from_id": 906,
      "to_id": 927
    },
    {
      "id": 5236,
      "type_id": 717,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 1180,
        "value": "async ({ deep, data, Go, require }) => {\n  const React = require('react');\n  const c = require('@chakra-ui/react');\n\n  const dpl = '@deep-foundation/perception-links';\n  const dc = '@deep-foundation/core';\n  const dml = '@deep-foundation/deepmemo-links';\n\n  const Handler = deep.idLocal(dc, 'Handler');\n  const Compatable = deep.idLocal(dpl, 'Compatable');\n  const Header = deep.idLocal(dpl, 'Header');\n  const Menu = deep.idLocal(dpl, 'Menu');\n  const Stack = deep.idLocal(dpl, 'Stack');\n\n  const Item = ({ link, isActive }) => (<Go.Handler\n    handlerId={link.id}\n    linkId={link.id}\n    isActive={isActive}\n  />);\n  \n  return ({\n    go,\n  }, ref) => {\n    const { data: menu } = deep.useSubscription({\n      type_id: Handler,\n      out: {\n        type_id: Compatable,\n        to_id: Menu,\n      },\n      order_by: { id: 'desc' }\n    });\n\n    return <go.On do={{\n      focus: (g,v,linkId,o) => {\n        !go.value && go.focus(Stack);\n        o?.id && go(Stack).focus(o?.id);\n      },\n    }}>\n      <go.Provider linkId={Stack}>\n        <go.Component path={[dpl, 'Stack']} links={menu} direction='vertical' Item={Item}/>\n      </go.Provider>\n    </go.On>;\n  };\n}",
        "link_id": 5236
      }
    },
    {
      "id": 1129,
      "type_id": 3,
      "from_id": 1123,
      "to_id": 1121,
      "value": {
        "id": 447,
        "value": "messagingTreeAny",
        "link_id": 1129
      }
    },
    {
      "id": 1188,
      "type_id": 1,
      "from_id": 8,
      "to_id": 1187
    },
    {
      "id": 1196,
      "type_id": 3,
      "from_id": 1190,
      "to_id": 1188,
      "value": {
        "id": 470,
        "value": "UsesModel",
        "link_id": 1196
      }
    },
    {
      "id": 1311,
      "type_id": 1100,
      "from_id": 1310,
      "to_id": 1310,
      "value": {
        "id": 4,
        "value": 128000,
        "link_id": 1311
      }
    },
    {
      "id": 1312,
      "type_id": 1221,
      "from_id": 1310,
      "to_id": 1299
    },
    {
      "id": 1373,
      "type_id": 3,
      "from_id": 1364,
      "to_id": 1362,
      "value": {
        "id": 542,
        "value": "code",
        "link_id": 1373
      }
    },
    {
      "id": 1403,
      "type_id": 1,
      "from_id": 1402,
      "to_id": 8
    },
    {
      "id": 1632,
      "type_id": 3,
      "from_id": 1616,
      "to_id": 1604,
      "value": {
        "id": 633,
        "value": "onActiveDelete",
        "link_id": 1632
      }
    },
    {
      "id": 574,
      "type_id": 3,
      "from_id": 553,
      "to_id": 573,
      "value": {
        "id": 224,
        "value": "PackageQuerySymbol",
        "link_id": 574
      }
    },
    {
      "id": 580,
      "type_id": 3,
      "from_id": 553,
      "to_id": 579,
      "value": {
        "id": 230,
        "value": "PackagePublishSymbol",
        "link_id": 580
      }
    },
    {
      "id": 581,
      "type_id": 146,
      "from_id": 553,
      "to_id": 84,
      "value": {
        "id": 231,
        "value": "📥",
        "link_id": 581
      }
    },
    {
      "id": 582,
      "type_id": 3,
      "from_id": 553,
      "to_id": 581,
      "value": {
        "id": 232,
        "value": "PackageInstallSymbol",
        "link_id": 582
      }
    },
    {
      "id": 662,
      "type_id": 3,
      "from_id": 553,
      "to_id": 661,
      "value": {
        "id": 312,
        "value": "TypeSymbol",
        "link_id": 662
      }
    },
    {
      "id": 1622,
      "type_id": 3,
      "from_id": 1616,
      "to_id": 1597,
      "value": {
        "id": 623,
        "value": "activeSymbol",
        "link_id": 1622
      }
    },
    {
      "id": 1638,
      "type_id": 3,
      "from_id": 1616,
      "to_id": 1612,
      "value": {
        "id": 639,
        "value": "onTelegramBotOutHandler",
        "link_id": 1638
      }
    },
    {
      "id": 1639,
      "type_id": 3,
      "from_id": 1616,
      "to_id": 1611,
      "value": {
        "id": 640,
        "value": "onTelegramBotOut",
        "link_id": 1639
      }
    },
    {
      "id": 906,
      "type_id": 717,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 389,
        "value": "async ({ deep, require }) => {\n  const React = require('react');\n  const { useState, useEffect, useRef } = React;\n  const { Text, Box, Button, Link, Input, VStack, useColorModeValue } = require('@chakra-ui/react');\n  const { ExternalLinkIcon } = require('@chakra-ui/icons');\n  const { useEditorTabs, useCytoEditor } = require('@deep-foundation/deepcase');\n\n  const Publish = await deep.id('@deep-foundation/npm-packager', 'Publish');\n\n  return ({ fillSize, style, link, setHandlerId }) => {\n    const axiosHooks = require(\"axios-hooks\");\n    const axios = require(\"axios\");\n    const useAxios = axiosHooks.makeUseAxios({ axios: axios.create() });\n    const packageId = link.id;\n    const packageTypeId = deep.idLocal('@deep-foundation/core', 'Package');\n    const packageNamespaceTypeId = deep.idLocal('@deep-foundation/core', 'PackageNamespace');\n    const packageVersionTypeId = deep.idLocal('@deep-foundation/core', 'PackageVersion');\n    const packageActiveTypeId = deep.idLocal('@deep-foundation/core', 'PackageActive');\n    const packageQueryTypeId = deep.idLocal('@deep-foundation/core', 'PackageQuery'); \n    const { data: prefetchedNpmPackageLinks } = deep.useDeepSubscription({ \n      up: { \n        parent: { \n          type_id: {_eq: packageTypeId},\n          string: { value: { _in: [\"@deep-foundation/npm-packager\"] } }\n        }\n      }\n    });     \n    const { data: prefetchedPackageActiveLinksAndNamespace } = deep.useDeepSubscription({\n      type_id: { _in: [packageNamespaceTypeId, packageVersionTypeId, packageTypeId, packageActiveTypeId] } \n    });\n    const pkg = deep.minilinks.byId[packageId];\n    const pkgVersion = pkg?.in?.filter(v => v.type_id === packageVersionTypeId)?.[0];\n    const pkgVersionValue = pkgVersion?.value?.value || \"\";\n    const packageNamespaceId = pkgVersion?.from_id;\n    const packageName = pkg?.value?.value || \"\";\n    const [currentPackageName, setCurrentPackageName] = useState(packageName);\n    const [currentPackageVersion, setCurrentPackageVersion] = useState(pkgVersionValue); \n    let packageUrl = `https://registry.npmjs.com/${currentPackageName}`;\n    let displayUrl = `npmjs.com/package/${currentPackageName}`\n\n    const { data: [Published], loading: pubLoading } = deep.useDeepSubscription({\n      type_id: Publish,\n      from_id: link.id,\n      order_by: { id: 'desc' },\n      limit: 1,\n    });\n\n    const { data: [Result], loading: resLoading } = deep.useDeepSubscription(Published ? {\n      type_id: { _in: [\n        deep.idLocal('@deep-foundation/core', 'Rejected'),\n        deep.idLocal('@deep-foundation/core', 'Resolved'),\n      ] },\n      up: {\n        tree_id: deep.idLocal('@deep-foundation/core', 'promiseTree'),\n        parent_id: Published?.id,\n      },\n      limit: 1,\n    } : { id: 0 });\n\n    const publishingLoading = pubLoading || resLoading;\n\n    const bg = useColorModeValue('#eeeeee', '#1e1e1e');\n    const borderColor = useColorModeValue('#a3a3a3', '#4d4d4d');\n\n    const { addTab, activeTab } = useEditorTabs();\n    const [cytoEditor, setCytoEditor] = useCytoEditor();\n\n    const [disabled, setDisabled] = useState(false);\n    const resultRef = useRef();\n    useEffect(() => {\n      if (!!Result && Result?.id != resultRef?.current?.id && disabled) {\n        setDisabled(false);\n        setCurrentPackageVersion(pkgVersionValue); \n      }\n      if (!!Result && Result?.id != resultRef?.current?.id) {\n        resultRef.current = Result;\n      }\n    }, [Result]);\n\n    return (<div\n        style={{\n          // width: '100%',\n          // height: '100%',\n          ...style,\n          position: 'relative',\n        }}\n      >\n        <Box maxW='md' minW='sm' w='sm' borderColor={borderColor} borderWidth='1px' borderRadius='lg' overflow='hidden' bg={bg}>\n      {displayUrl ? <Box p={2}><Link fontSize='xs' href={`https://${displayUrl}`} isExternal>\n        {displayUrl} <ExternalLinkIcon mx='2px' />\n      </Link> </Box> : null}\n        <VStack p={2}>\n          <Input \n            placeholder='package name'\n            value={currentPackageName}\n            borderColor={borderColor}\n            size='sm'\n            onChange={(e) => setCurrentPackageName(e.target.value)}\n            />\n          <Input \n            placeholder='package version'\n            value={currentPackageVersion}\n            borderColor={borderColor}\n            size='sm'\n            onChange={(e) => setCurrentPackageVersion(e.target.value)}\n            />\n          <Button colorScheme='blue' size='sm' w='100%' disabled={disabled} isLoading={disabled} onClick={async () => {\n            let actualNamespaceId = packageNamespaceId;\n            // console.log('npm-packager-ui-output', 'actualNamespaceId', actualNamespaceId);\n            // console.log('npm-packager-ui-output', 'currentPackageName', currentPackageName);\n            // console.log('npm-packager-ui-output', '!packageNamespaceId && currentPackageName', !packageNamespaceId && currentPackageName);\n            // console.log('npm-packager-ui-output', '!!currentPackageName', !!currentPackageName);\n            if (!packageNamespaceId && currentPackageName) {\n              const { data: [packageNamespaceLink] } = await deep.insert({\n                type_id: packageNamespaceTypeId,\n                string: { data: { value: currentPackageName } },\n              }, { returning: deep.selectReturning });\n              deep.minilinks.apply([packageNamespaceLink]);\n              actualNamespaceId = packageNamespaceLink.id;\n              // console.log('npm-packager-ui-output', 'actualNamespaceId after insert', actualNamespaceId);\n            } else if (currentPackageName) {\n              // console.log('npm-packager-ui-output', 'before update');\n              const { data: [{ link: packageNamespaceLink }] } = await deep.update(\n                { link_id: packageNamespaceId },\n                { value: currentPackageName },\n                { table: 'strings', returning: `link { ${deep.selectReturning} }` }\n              );\n              deep.minilinks.apply([packageNamespaceLink]);\n              // console.log('npm-packager-ui-output', 'after update', packageNamespaceLink);\n              actualNamespaceId = packageNamespaceId;\n            }\n            const packageActiveLinks = deep.minilinks.byId[actualNamespaceId]?.out?.filter(l => l.type_id == packageActiveTypeId) || [];\n            // console.log('npm-packager-ui-output', 'packageActiveLinks', packageActiveLinks);\n            if (!packageActiveLinks?.length) {\n              const { data: [packageActiveLink] } = await deep.insert({\n                from_id: actualNamespaceId,\n                type_id: packageActiveTypeId,\n                to_id: packageId,\n              }, { returning: deep.selectReturning });\n              deep.minilinks.apply([packageActiveLink]);\n            }\n            if (currentPackageName) {\n              if (pkg?.value?.value) {\n                await deep.update(\n                  { link_id: pkg?.id },\n                  { value: currentPackageName },\n                  { table: 'strings' }\n                );\n              } else {\n                await deep.insert(\n                  { \n                    link_id: pkg?.id,\n                    value: currentPackageName\n                  },\n                  { table: 'strings' }\n                );\n              }\n            }\n            if (!pkgVersion?.id) {\n              const { data: [{ id: packageVersionId }] } = await deep.insert({\n                from_id: actualNamespaceId,\n                type_id: packageVersionTypeId,\n                to_id: pkg?.id,\n                string: { data: { value: currentPackageVersion || '0.0.0' } },\n              });\n            } else if (currentPackageVersion) {\n              await deep.update(\n                { link_id: pkgVersion?.id },\n                { value: currentPackageVersion },\n                { table: 'strings' }\n              );\n            }\n          }}>save</Button>\n          <Button colorScheme='blue' size='sm' w='100%' disabled={disabled} isLoading={disabled} onClick={async () => {\n            if (!(prefetchedNpmPackageLinks?.length > 0)) {\n              return;\n            }\n            const { data: [{ id: packageQueryId }] } = await deep.insert({\n              type_id: packageQueryTypeId,\n              string: { data: { value: currentPackageName } },\n            });\n            const { data: [{ id: publishId }] } = await deep.insert({\n              from_id: pkg?.id,\n              type_id: Publish,\n              to_id: packageQueryId\n            });\n            setDisabled(true);\n          }}>publish</Button>\n          {!!Published && <Button\n            isLoading={!!Published && (!Result || publishingLoading)}\n            variant=\"outline\"\n            colorScheme={publishingLoading ? 'default' : Result ? Result.type_id === deep.idLocal('@deep-foundation/core', 'Resolved') ? 'green' : 'red' : 'default'}\n            loadingText={publishingLoading ? 'Loading' : 'Publishing'}\n            disabled\n            onClick={async () => {\n              if (Result) {\n                addTab({\n                  id: Result.to_id,\n                  initialValue: deep.stringify((await deep.select(Result.to_id))?.data?.[0]?.value?.value)\n                });\n                activeTab(Result.to_id);\n                setCytoEditor(Result.to_id);\n              }\n            }}\n          ><div>\n            {Result ? Result.type_id === deep.idLocal('@deep-foundation/core', 'Resolved') ? 'Published' : 'Failed' : 'Publishing'}\n            <br/>\n            <Text fontSize=\"xs\">{Result ? '(click open in editor)' : ''}</Text>\n          </div></Button>}\n        </VStack>\n      </Box>\n    </div>\n  );\n  }\n}",
        "link_id": 906
      }
    },
    {
      "id": 916,
      "type_id": 3,
      "from_id": 909,
      "to_id": 907,
      "value": {
        "id": 395,
        "value": "packageHandler",
        "link_id": 916
      }
    },
    {
      "id": 1718,
      "type_id": 1,
      "from_id": 0,
      "to_id": 0
    },
    {
      "id": 1719,
      "type_id": 1718,
      "from_id": 0,
      "to_id": 0
    },
    {
      "id": 1720,
      "type_id": 1718,
      "from_id": 0,
      "to_id": 0
    },
    {
      "id": 1072,
      "type_id": 79,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 430,
        "value": "deepf/python-docker-isolation-provider:main",
        "link_id": 1072
      }
    },
    {
      "id": 1073,
      "type_id": 32,
      "from_id": 0,
      "to_id": 0
    },
    {
      "id": 1088,
      "type_id": 3,
      "from_id": 1078,
      "to_id": 1072,
      "value": {
        "id": 437,
        "value": "PythonDockerIsolationProvider",
        "link_id": 1088
      }
    },
    {
      "id": 1089,
      "type_id": 3,
      "from_id": 1078,
      "to_id": 1073,
      "value": {
        "id": 438,
        "value": "PythonExecutionProvider",
        "link_id": 1089
      }
    },
    {
      "id": 1130,
      "type_id": 3,
      "from_id": 1123,
      "to_id": 1117,
      "value": {
        "id": 448,
        "value": "messageValue",
        "link_id": 1130
      }
    },
    {
      "id": 1131,
      "type_id": 3,
      "from_id": 1123,
      "to_id": 1116,
      "value": {
        "id": 449,
        "value": "Message",
        "link_id": 1131
      }
    },
    {
      "id": 1132,
      "type_id": 3,
      "from_id": 1123,
      "to_id": 1122,
      "value": {
        "id": 450,
        "value": "messagingTreeReply",
        "link_id": 1132
      }
    },
    {
      "id": 1172,
      "type_id": 3,
      "from_id": 1162,
      "to_id": 1161,
      "value": {
        "id": 466,
        "value": "DependencyRoot",
        "link_id": 1172
      }
    },
    {
      "id": 1198,
      "type_id": 3,
      "from_id": 1190,
      "to_id": 1185,
      "value": {
        "id": 472,
        "value": "UsesApiKey",
        "link_id": 1198
      }
    },
    {
      "id": 1199,
      "type_id": 3,
      "from_id": 1190,
      "to_id": 1186,
      "value": {
        "id": 473,
        "value": "ApiKeyValue",
        "link_id": 1199
      }
    },
    {
      "id": 1200,
      "type_id": 3,
      "from_id": 1190,
      "to_id": 1184,
      "value": {
        "id": 474,
        "value": "ApiKey",
        "link_id": 1200
      }
    },
    {
      "id": 1201,
      "type_id": 3,
      "from_id": 1190,
      "to_id": 1187,
      "value": {
        "id": 475,
        "value": "Model",
        "link_id": 1201
      }
    },
    {
      "id": 1721,
      "type_id": 2,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 657,
        "value": "@deep-foundation/boolean",
        "link_id": 1721
      }
    },
    {
      "id": 1727,
      "type_id": 3,
      "from_id": 1721,
      "to_id": 1719,
      "value": {
        "id": 659,
        "value": "false",
        "link_id": 1727
      }
    },
    {
      "id": 1738,
      "type_id": 35,
      "from_id": 145,
      "to_id": 1737
    },
    {
      "id": 1746,
      "type_id": 1,
      "from_id": 0,
      "to_id": 0
    },
    {
      "id": 1747,
      "type_id": 4,
      "from_id": 1746,
      "to_id": 7
    },
    {
      "id": 1748,
      "type_id": 1,
      "from_id": 8,
      "to_id": 8
    },
    {
      "id": 1749,
      "type_id": 1,
      "from_id": 8,
      "to_id": 1718
    },
    {
      "id": 1750,
      "type_id": 1,
      "from_id": 1718,
      "to_id": 1718
    },
    {
      "id": 1751,
      "type_id": 1,
      "from_id": 8,
      "to_id": 8
    },
    {
      "id": 1752,
      "type_id": 36,
      "from_id": 0,
      "to_id": 0
    },
    {
      "id": 1753,
      "type_id": 119,
      "from_id": 1752,
      "to_id": 1718
    },
    {
      "id": 1754,
      "type_id": 119,
      "from_id": 1752,
      "to_id": 1743
    },
    {
      "id": 1765,
      "type_id": 3,
      "from_id": 1758,
      "to_id": 1735,
      "value": {
        "id": 677,
        "value": "parseItInsertHandler",
        "link_id": 1765
      }
    },
    {
      "id": 1766,
      "type_id": 3,
      "from_id": 1758,
      "to_id": 1742,
      "value": {
        "id": 678,
        "value": "parseItInsertHandlerTranspiledCodeGeneratedFrom",
        "link_id": 1766
      }
    },
    {
      "id": 1767,
      "type_id": 3,
      "from_id": 1758,
      "to_id": 1733,
      "value": {
        "id": 679,
        "value": "parseItInsertHandlerTranspiledCode",
        "link_id": 1767
      }
    },
    {
      "id": 1768,
      "type_id": 3,
      "from_id": 1758,
      "to_id": 1736,
      "value": {
        "id": 680,
        "value": "updateHandler",
        "link_id": 1768
      }
    },
    {
      "id": 1769,
      "type_id": 3,
      "from_id": 1758,
      "to_id": 1740,
      "value": {
        "id": 681,
        "value": "updateHandlerCodeGeneratedFrom",
        "link_id": 1769
      }
    },
    {
      "id": 1834,
      "type_id": 717,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 702,
        "value": "async (req, res, next, { deep, require, gql }) => {\n    const { PassThrough, Readable } = require('stream');\n    const express = require('express');\n    const http = require('http');\n    const ApolloServer = require('apollo-server-express').ApolloServer;\n    const { ApolloServerPluginDrainHttpServer, ApolloServerPluginLandingPageGraphQLPlayground } = require('apollo-server-core');\n    const axios = require('axios');\n    const ffmpeg = require('fluent-ffmpeg');\n    const FormData = require('form-data');\n\n    function base64ToStream(base64String) {\n        const base64Data = base64String.replace(/^data:[^;]+;base64,/, '');\n        const binaryData = Buffer.from(base64Data, 'base64');\n        const stream = new Readable();\n\n        stream.push(binaryData);\n        stream.push(null);\n\n        return stream;\n    }\n\n    const typeDefs = `\n        input Voice {\n            id: Int!\n            record: String!\n            duration: Float!\n            mimeType: String!\n        }\n        type Query { deepmemo_upload(voice: Voice!): String }\n    `;\n\n    const resolvers = {\n        Query: { deepmemo_upload: async (parent, { voice: {\n            id, record, duration, mimeType\n        } }, contextValue, info) => {\n            let inputFormat;\n            if (mimeType.includes('audio/webm')) {\n                inputFormat = 'webm';\n            } else if (mimeType.includes('audio/aac')) {\n                inputFormat = 'aac';\n            } else if (mimeType.includes('audio/mp4')) {\n                inputFormat = 'mp4';\n            } else return 'not supported type';\n            return new Promise((res, rej) => {\n                    const stream = new PassThrough();\n                    let chunkData = [];\n                    stream.on('data', chunk => {\n                        chunkData.push(chunk);\n                    });\n                    ffmpeg()\n                        .input(base64ToStream(record))\n                        .inputFormat(inputFormat)\n                        // .output(stream)\n                        .outputFormat('mp3')\n                        .on('end', () => {\n                            stream.end();\n                            const byteArray = Buffer.concat(chunkData);\n                            const form = new FormData();\n                            form.append('file', byteArray, { type: 'audio/mp3', filename: `${id}.mp3` });\n                            axios.post(`http://${deep.client.path.slice(0, -4)}/file`, form, {\n                                headers: {\n                                    linkId: id,\n                                    Authorization: contextValue?.headers?.authorization,\n                                    // 'Content-Length': dataAsString.length,\n                                    // 'Content-Type': 'multipart/form-data'\n                                    // 'Content-Type': 'audio/mp3',\n                                    ...form.getHeaders(),\n                                },\n                            })\n                                .then((r) => {\n                                    res('done');\n                                })\n                                .catch((e) => {\n                                    console.error(e);\n                                    rej('error');\n                                });\n                        })\n                        .pipe(stream, { end: true });\n                        // .run();\n                // });\n            });\n        } },\n    };\n    \n    const context = ({ req }) => { return { headers: req.headers }; };\n    \n    const generateApolloServer = () => {\n        return new ApolloServer({\n            introspection: true,\n            typeDefs, \n            resolvers,\n            context,\n            plugins: [\n                ApolloServerPluginLandingPageGraphQLPlayground(),\n            ],\n        });\n    };\n\n    const router = express.Router();\n    const apolloServer = generateApolloServer();\n    await apolloServer.start();\n    apolloServer.applyMiddleware({ app: router, path: '/' });\n    router.handle(req, res);\n}",
        "link_id": 1834
      }
    },
    {
      "id": 1849,
      "type_id": 2,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 706,
        "value": "@deep-foundation/deepmemo-links",
        "link_id": 1849
      }
    },
    {
      "id": 1860,
      "type_id": 3,
      "from_id": 1849,
      "to_id": 1840,
      "value": {
        "id": 713,
        "value": "handleUploadGql",
        "link_id": 1860
      }
    },
    {
      "id": 1861,
      "type_id": 3,
      "from_id": 1849,
      "to_id": 1839,
      "value": {
        "id": 714,
        "value": "handleUpload",
        "link_id": 1861
      }
    },
    {
      "id": 1862,
      "type_id": 3,
      "from_id": 1849,
      "to_id": 1835,
      "value": {
        "id": 715,
        "value": "uploadHandler",
        "link_id": 1862
      }
    },
    {
      "id": 1863,
      "type_id": 3,
      "from_id": 1849,
      "to_id": 1834,
      "value": {
        "id": 716,
        "value": "uploadCode",
        "link_id": 1863
      }
    },
    {
      "id": 1869,
      "type_id": 3,
      "from_id": 1849,
      "to_id": 1846,
      "value": {
        "id": 722,
        "value": "Position",
        "link_id": 1869
      }
    },
    {
      "id": 1245,
      "type_id": 3,
      "from_id": 1225,
      "to_id": 1215,
      "value": {
        "id": 497,
        "value": "messagingTreeReply",
        "link_id": 1245
      }
    },
    {
      "id": 575,
      "type_id": 146,
      "from_id": 553,
      "to_id": 95,
      "value": {
        "id": 225,
        "value": "🧷",
        "link_id": 575
      }
    },
    {
      "id": 576,
      "type_id": 3,
      "from_id": 553,
      "to_id": 575,
      "value": {
        "id": 226,
        "value": "PromiseOutSymbol",
        "link_id": 576
      }
    },
    {
      "id": 577,
      "type_id": 146,
      "from_id": 553,
      "to_id": 92,
      "value": {
        "id": 227,
        "value": "💡",
        "link_id": 577
      }
    },
    {
      "id": 578,
      "type_id": 3,
      "from_id": 553,
      "to_id": 577,
      "value": {
        "id": 228,
        "value": "ActiveSymbol",
        "link_id": 578
      }
    },
    {
      "id": 716,
      "type_id": 35,
      "from_id": 83,
      "to_id": 715
    },
    {
      "id": 717,
      "type_id": 1,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 315,
        "value": "TSX",
        "link_id": 717
      }
    },
    {
      "id": 727,
      "type_id": 3,
      "from_id": 721,
      "to_id": 718,
      "value": {
        "id": 319,
        "value": "tsxSymbol",
        "link_id": 727
      }
    },
    {
      "id": 728,
      "type_id": 3,
      "from_id": 721,
      "to_id": 719,
      "value": {
        "id": 320,
        "value": "tsxValue",
        "link_id": 728
      }
    },
    {
      "id": 729,
      "type_id": 3,
      "from_id": 721,
      "to_id": 720,
      "value": {
        "id": 321,
        "value": "handleUpdate",
        "link_id": 729
      }
    },
    {
      "id": 826,
      "type_id": 3,
      "from_id": 813,
      "to_id": 807,
      "value": {
        "id": 375,
        "value": "stringContainHandleClient",
        "link_id": 826
      }
    },
    {
      "id": 831,
      "type_id": 3,
      "from_id": 813,
      "to_id": 797,
      "value": {
        "id": 380,
        "value": "Context",
        "link_id": 831
      }
    },
    {
      "id": 832,
      "type_id": 3,
      "from_id": 813,
      "to_id": 794,
      "value": {
        "id": 381,
        "value": "ContextToken",
        "link_id": 832
      }
    },
    {
      "id": 833,
      "type_id": 3,
      "from_id": 813,
      "to_id": 796,
      "value": {
        "id": 382,
        "value": "travelerSymbol",
        "link_id": 833
      }
    },
    {
      "id": 835,
      "type_id": 3,
      "from_id": 813,
      "to_id": 812,
      "value": {
        "id": 384,
        "value": "asyncFileHandleClient",
        "link_id": 835
      }
    },
    {
      "id": 907,
      "type_id": 35,
      "from_id": 145,
      "to_id": 906
    },
    {
      "id": 908,
      "type_id": 156,
      "from_id": 2,
      "to_id": 907
    },
    {
      "id": 909,
      "type_id": 2,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 392,
        "value": "@deep-foundation/npm-packager-ui",
        "link_id": 909
      }
    },
    {
      "id": 915,
      "type_id": 3,
      "from_id": 909,
      "to_id": 908,
      "value": {
        "id": 394,
        "value": "packageHandleClient",
        "link_id": 915
      }
    },
    {
      "id": 917,
      "type_id": 3,
      "from_id": 909,
      "to_id": 906,
      "value": {
        "id": 396,
        "value": "packageClientHandler",
        "link_id": 917
      }
    },
    {
      "id": 1050,
      "type_id": 23,
      "from_id": 0,
      "to_id": 0
    },
    {
      "id": 1133,
      "type_id": 3,
      "from_id": 1123,
      "to_id": 1118,
      "value": {
        "id": 451,
        "value": "Reply",
        "link_id": 1133
      }
    },
    {
      "id": 1134,
      "type_id": 3,
      "from_id": 1123,
      "to_id": 1119,
      "value": {
        "id": 452,
        "value": "Author",
        "link_id": 1134
      }
    },
    {
      "id": 1146,
      "type_id": 2,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 455,
        "value": "@freephoenix888/dependency",
        "link_id": 1146
      }
    },
    {
      "id": 1208,
      "type_id": 30,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 477,
        "value": "async ({ data: { newLink: reply, triggeredByLinkId }, deep }) => {\n  const ml = deep.minilinks;\n\n  const startTime = Date.now();\n  const axios = await deep.import('axios');\n\n  const ChatGPT = await deep.id(deep.linkId, 'ChatGPT');\n  const Conversation = await deep.id(deep.linkId, 'Conversation');\n  const ApiKey = await deep.id('@deep-foundation/openai', 'ApiKey');\n  const UsesApiKey = await deep.id('@deep-foundation/openai', 'UsesApiKey');\n  const Model = await deep.id('@deep-foundation/openai', 'Model');\n  const UsesModel = await deep.id('@deep-foundation/openai', 'UsesModel');\n  const Message = await deep.id('@deep-foundation/messaging', 'Message');\n  const Reply = await deep.id('@deep-foundation/chatgpt-azure', 'Reply');\n  const Author = await deep.id('@deep-foundation/messaging', 'Author');\n  const messagingTree = await deep.id('@deep-foundation/messaging', 'messagingTree');\n  const System = await deep.id('@deep-foundation/chatgpt-azure', 'System');\n  const Tokens = await deep.id(\"@deep-foundation/tokens\", \"Tokens\")\n  const ProvidedBy = await deep.id(\"@deep-foundation/chatgpt-azure\", \"ProvidedBy\")\n\n  await deep.await(reply.from_id);  const { data: [message] } = await deep.select({\n    id: reply.from_id,\n    _not: { out: { to_id: ChatGPT, type_id: Author } },\n  });\n  if (!message) return 'No need to react to message of this reply.';\n  if (!message.value?.value) throw new Error(`Message (##${message?.id}) must have a value`);\n\n  ml.apply(await deep.select({\n    type_id: ApiKey,\n    in: { from_id: triggeredByLinkId, type_id: UsesApiKey },\n    return: {\n      uses: { relation: 'in', type_id: UsesApiKey },\n    },\n  }), 'apikey');\n\n  const apikeys = ml.select({ type_id: ApiKey });\n  const useses = ml.select({ tyoe_id: UsesApiKey, to: { type_id: ApiKey } });\n  \n  if (!apikeys.length) throw new Error(`ApiKey not founded`);\n  if (useses.length > 1) throw new Error(`More than 1 links of type UsesApiKey are found`);\n  if (!apikeys[0]?.value?.value) throw new Error(`ApiKey ##${apikeys[0]?.id} has no value`);\n\n  const { data: [conversation] } = await deep.select({\n    type_id: Conversation,\n    down: { tree_id: messagingTree, link_id: reply.id }\n  });\n  if (!conversation) return 'Conversation upper not founded.';\n\n  const messagesByReply = await deep.select({\n    type_id: Message,\n    down: { tree_id: messagingTree, link_id: reply.from_id },\n    order_by: { id: 'asc' },\n    return: {\n      authors: { relation: 'out', type_id: Author },\n      tokens: { relation: 'out', type_id: Tokens },\n    }\n  });\n  ml.apply(messagesByReply, 'messagesByReply');\n\n  const messagesById = await deep.select({\n    id: { _nin: messagesByReply.data.map(l => l.id) },\n    type_id: Message,\n    up: { tree_id: messagingTree, parent_id: conversation.id },\n    order_by: { id: 'asc' },\n    return: {\n      authors: { relation: 'out', type_id: Author },\n      tokens: { relation: 'out', type_id: Tokens },\n    }\n  });\n  ml.apply(messagesById, 'messagesById');\n\n  const messagesToSend = [...messagesById.data, ...messagesByReply.data];\n  const models = await deep.select({\n    type_id: Model,\n    in: { type_id: UsesModel, from_id: { _in: [conversation.id, triggeredByLinkId] } },\n    return: {\n      usesModel: { relation: 'in', type_id: UsesModel },\n      tokens: { relation: 'out', type_id: Tokens },\n      providedBy: {\n        relation: 'out', type_id: ProvidedBy,\n        return: {\n          endpoint: { relation: 'to' }\n        },\n      },\n    },\n  });\n  ml.apply(models, 'models');\n\n  const [userLinkedModel] = ml.select({ type_id: Model, in: { type_id: UsesModel, from_id: triggeredByLinkId } });\n  if (!userLinkedModel) throw new Error(`UsersModel from triggeredByLinkId ${triggeredByLinkId} to Model not founded.`);\n  const [userLinkedModelTokens] = ml.select({ type_id: Tokens, from_id: userLinkedModel?.id });\n  const [linkedModel] = ml.select({ type_id: Model, in: { type_id: UsesModel, from_id: conversation.id } });\n  \n  const MAX_TOKENS = userLinkedModelTokens?.value?.value;\n  if (!MAX_TOKENS) throw new Error(`MAX_TOKENS Tokens (##${userLinkedModelTokens?.id}) .value from model not founded.`);\n  \n  const endpoint = ml.select({ in: { type_id: ProvidedBy } })[0];\n  const API_ENDPOINT = endpoint?.value?.value;\n  if (!API_ENDPOINT) throw new Error(`API_ENDPOINT Endpoint (##${endpoint?.id}) instance.value nout founded.`);\n  \n  const model = linkedModel?.value?.value || userLinkedModel?.value?.value;\n  if(!model) throw new Error(`UsersModel from conversation.id (##${conversation.id}) to Model not founded.`);\n\n  let preparedMessages = messagesToSend.map((link) => {\n    const tokens = ml.select({ type_id: Tokens, from_id: link.id })[0]?.value?.value;\n    return {\n      role: ml.select({ type_id: Author, from_id: link.id })[0]?.to_id === ChatGPT ? 'assistant' : 'user',\n      content: link.value.value,\n      tokens: ml.select({ type_id: Tokens, from_id: link.id })[0]?.value?.value,\n    }\n  });\n\n  const systems = await deep.select({\n    type_id: System, to_id: { _in: [triggeredByLinkId, conversation.id] },\n    return: {\n      message: { relation: 'from' },\n      conversation: { relation: 'to' },\n      tokens: { relation: 'in', type_id: Tokens },\n    },\n  });\n  ml.apply(systems, 'systems');\n\n  const conversationSystem = ml.select({ type_id: System, to_id: conversation.id })?.[0];\n  if (!!conversationSystem && !conversationSystem?.value?.value) throw new Error(`System .value to conversation not defined`);\n  const userSystems = ml.select({ type_id: System, to_id: triggeredByLinkId });\n  if (userSystems.length > 1) throw new Error(\"Multiple system messages linked to the user are found\");\n  const userSystem = userSystems[0];\n\n  const systemMessage = conversationSystem?.from || userSystem?.from;\n  if (systemMessage) {\n    if (!systemMessage?.value?.value) throw new Error(`System (##${systemMessage?.id}) .from Message.value not founded`);\n    preparedMessages.unshift({ role: 'system', content: systemMessage?.value?.value });\n  }\n\n  const tokenLimit = MAX_TOKENS * 7 / 8;\n  let totalTokens = 0;\n  let messages = [];\n\n  for (let i = preparedMessages.length - 1; i >= 0; i--) {\n    const message = preparedMessages[i];\n    if (message.role === 'system' || totalTokens + message.tokens <= tokenLimit) {\n      messages.unshift({ role: message.role, content: message.content });\n      totalTokens += message.tokens;\n    } else {\n      break;\n    }\n  }\n\n  let response;\n  try {\n    response = await axios.post(API_ENDPOINT, { messages }, {\n      headers: { 'Content-Type': 'application/json', 'api-key': apikeys[0]?.value?.value },\n    });\n  } catch (error) {\n    console.error('Error making API call:', error.response ? error.response.data : error.message);\n  }\n\n  const content = response.data.choices[0]?.message?.content;\n  await deep.insert({\n    type_id: Message,\n    string: { data: { value: content } },\n    out: { data: [\n      { type_id: Author, to_id: ChatGPT },\n      { type_id: Reply, to_id: reply.from_id },\n    ] },\n  });\n\n  const endTime = Date.now();\n  const duration = (endTime - startTime) / 1000;\n\n  ml.remove(Object.keys(ml.byId));\n\n  return {\n    request: { model, messages },\n    response: response.data,\n    duration, totalTokens,\n  };\n};",
        "link_id": 1208
      }
    },
    {
      "id": 1,
      "type_id": 1,
      "from_id": 8,
      "to_id": 8
    },
    {
      "id": 2,
      "type_id": 1,
      "from_id": 0,
      "to_id": 0
    },
    {
      "id": 3,
      "type_id": 1,
      "from_id": 8,
      "to_id": 8
    },
    {
      "id": 4,
      "type_id": 1,
      "from_id": 8,
      "to_id": 1
    },
    {
      "id": 5,
      "type_id": 1,
      "from_id": 0,
      "to_id": 0
    },
    {
      "id": 6,
      "type_id": 1,
      "from_id": 0,
      "to_id": 0
    },
    {
      "id": 7,
      "type_id": 1,
      "from_id": 0,
      "to_id": 0
    },
    {
      "id": 8,
      "type_id": 1,
      "from_id": 0,
      "to_id": 0
    },
    {
      "id": 9,
      "type_id": 1,
      "from_id": 0,
      "to_id": 0
    },
    {
      "id": 10,
      "type_id": 1,
      "from_id": 8,
      "to_id": 9
    },
    {
      "id": 11,
      "type_id": 1,
      "from_id": 9,
      "to_id": 8
    },
    {
      "id": 12,
      "type_id": 1,
      "from_id": 9,
      "to_id": 8
    },
    {
      "id": 13,
      "type_id": 4,
      "from_id": 1,
      "to_id": 5
    },
    {
      "id": 14,
      "type_id": 4,
      "from_id": 2,
      "to_id": 5
    },
    {
      "id": 15,
      "type_id": 1,
      "from_id": 0,
      "to_id": 0
    },
    {
      "id": 16,
      "type_id": 1,
      "from_id": 15,
      "to_id": 8
    },
    {
      "id": 17,
      "type_id": 1,
      "from_id": 0,
      "to_id": 0
    },
    {
      "id": 18,
      "type_id": 1,
      "from_id": 17,
      "to_id": 15
    },
    {
      "id": 19,
      "type_id": 1,
      "from_id": 17,
      "to_id": 15
    },
    {
      "id": 20,
      "type_id": 1,
      "from_id": 17,
      "to_id": 15
    },
    {
      "id": 21,
      "type_id": 4,
      "from_id": 3,
      "to_id": 5
    },
    {
      "id": 22,
      "type_id": 1,
      "from_id": 0,
      "to_id": 0
    },
    {
      "id": 23,
      "type_id": 1,
      "from_id": 0,
      "to_id": 0
    },
    {
      "id": 24,
      "type_id": 4,
      "from_id": 23,
      "to_id": 5
    },
    {
      "id": 25,
      "type_id": 23,
      "from_id": 0,
      "to_id": 0
    },
    {
      "id": 26,
      "type_id": 23,
      "from_id": 0,
      "to_id": 0
    },
    {
      "id": 27,
      "type_id": 23,
      "from_id": 0,
      "to_id": 0
    },
    {
      "id": 28,
      "type_id": 23,
      "from_id": 0,
      "to_id": 0
    },
    {
      "id": 29,
      "type_id": 1,
      "from_id": 0,
      "to_id": 0
    },
    {
      "id": 30,
      "type_id": 29,
      "from_id": 0,
      "to_id": 0
    },
    {
      "id": 31,
      "type_id": 4,
      "from_id": 30,
      "to_id": 5
    },
    {
      "id": 32,
      "type_id": 1,
      "from_id": 0,
      "to_id": 0
    },
    {
      "id": 33,
      "type_id": 32,
      "from_id": 0,
      "to_id": 0
    },
    {
      "id": 34,
      "type_id": 1,
      "from_id": 1,
      "to_id": 8
    },
    {
      "id": 35,
      "type_id": 1,
      "from_id": 82,
      "to_id": 8
    },
    {
      "id": 36,
      "type_id": 1,
      "from_id": 0,
      "to_id": 0
    },
    {
      "id": 37,
      "type_id": 34,
      "from_id": 36,
      "to_id": 8
    },
    {
      "id": 316,
      "type_id": 3,
      "from_id": 184,
      "to_id": 132,
      "value": {
        "id": 138,
        "value": "ruleTreeRuleObject",
        "link_id": 316
      }
    },
    {
      "id": 317,
      "type_id": 3,
      "from_id": 184,
      "to_id": 133,
      "value": {
        "id": 139,
        "value": "ruleTreeRuleSubject",
        "link_id": 317
      }
    },
    {
      "id": 38,
      "type_id": 34,
      "from_id": 36,
      "to_id": 8
    },
    {
      "id": 42,
      "type_id": 39,
      "from_id": 40,
      "to_id": 8
    },
    {
      "id": 43,
      "type_id": 1,
      "from_id": 0,
      "to_id": 0
    },
    {
      "id": 44,
      "type_id": 4,
      "from_id": 43,
      "to_id": 5
    },
    {
      "id": 45,
      "type_id": 1,
      "from_id": 43,
      "to_id": 2
    },
    {
      "id": 46,
      "type_id": 1,
      "from_id": 43,
      "to_id": 2
    },
    {
      "id": 47,
      "type_id": 4,
      "from_id": 46,
      "to_id": 5
    },
    {
      "id": 48,
      "type_id": 1,
      "from_id": 1,
      "to_id": 1
    },
    {
      "id": 49,
      "type_id": 48,
      "from_id": 8,
      "to_id": 35
    },
    {
      "id": 50,
      "type_id": 48,
      "from_id": 8,
      "to_id": 35
    },
    {
      "id": 51,
      "type_id": 48,
      "from_id": 8,
      "to_id": 35
    },
    {
      "id": 134,
      "type_id": 39,
      "from_id": 129,
      "to_id": 15
    },
    {
      "id": 135,
      "type_id": 39,
      "from_id": 129,
      "to_id": 58
    },
    {
      "id": 136,
      "type_id": 37,
      "from_id": 129,
      "to_id": 16
    },
    {
      "id": 137,
      "type_id": 37,
      "from_id": 129,
      "to_id": 72
    },
    {
      "id": 138,
      "type_id": 37,
      "from_id": 129,
      "to_id": 73
    },
    {
      "id": 161,
      "type_id": 1,
      "from_id": 0,
      "to_id": 0
    },
    {
      "id": 223,
      "type_id": 3,
      "from_id": 184,
      "to_id": 39,
      "value": {
        "id": 45,
        "value": "TreeIncludeNode",
        "link_id": 223
      }
    },
    {
      "id": 260,
      "type_id": 3,
      "from_id": 184,
      "to_id": 76,
      "value": {
        "id": 82,
        "value": "scheduleValue",
        "link_id": 260
      }
    },
    {
      "id": 318,
      "type_id": 3,
      "from_id": 184,
      "to_id": 134,
      "value": {
        "id": 140,
        "value": "ruleTreeRuleSelector",
        "link_id": 318
      }
    },
    {
      "id": 319,
      "type_id": 3,
      "from_id": 184,
      "to_id": 135,
      "value": {
        "id": 141,
        "value": "ruleTreeRuleQuery",
        "link_id": 319
      }
    },
    {
      "id": 348,
      "type_id": 3,
      "from_id": 184,
      "to_id": 164,
      "value": {
        "id": 170,
        "value": "SupportsCompatable",
        "link_id": 348
      }
    },
    {
      "id": 349,
      "type_id": 3,
      "from_id": 184,
      "to_id": 165,
      "value": {
        "id": 171,
        "value": "plv8JSSupportsCompatableHandleInsert",
        "link_id": 349
      }
    },
    {
      "id": 579,
      "type_id": 146,
      "from_id": 553,
      "to_id": 85,
      "value": {
        "id": 229,
        "value": "📤",
        "link_id": 579
      }
    },
    {
      "id": 718,
      "type_id": 146,
      "from_id": 717,
      "to_id": 717,
      "value": {
        "id": 316,
        "value": "📑",
        "link_id": 718
      }
    },
    {
      "id": 719,
      "type_id": 4,
      "from_id": 717,
      "to_id": 5
    },
    {
      "id": 720,
      "type_id": 50,
      "from_id": 717,
      "to_id": 716
    },
    {
      "id": 721,
      "type_id": 2,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 317,
        "value": "@deep-foundation/tsx",
        "link_id": 721
      }
    },
    {
      "id": 731,
      "type_id": 3,
      "from_id": 721,
      "to_id": 715,
      "value": {
        "id": 323,
        "value": "compiler",
        "link_id": 731
      }
    },
    {
      "id": 744,
      "type_id": 30,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 326,
        "value": "async ({ deep, require, gql, data: { triggeredByLinkId, newLink } }) => {\n  const fs = await deep.import('fs');\n  const encoding = 'utf8';\n  const deepPackageKeyWord = 'deep-package';\n  \n  const makeTempDirectory = async () => {\n    const os = await deep.import('os');\n    const { v4: uuid } = await deep.import('uuid');\n    \n    const baseTempDirectory = os.tmpdir();\n    const randomId = uuid();\n    const tempDirectory = [baseTempDirectory,randomId].join('/');\n    fs.mkdirSync(tempDirectory);\n    console.log(tempDirectory);\n    return tempDirectory;\n  };\n  const npmInstall = async (packageName, installationPath, setTildaPrefix) => {\n    const execSync = (await deep.import('child_process')).execSync;\n\n    if (setTildaPrefix === true) {\n      const savePrefixCommand = `npm --prefix \"${installationPath}\" config set save-prefix=\"~\"`;\n      try {\n        const output = execSync(savePrefixCommand, { \n          encoding: 'utf-8',\n          cwd: installationPath\n        }).toString();\n        console.log(`${savePrefixCommand}\\n`, output);\n      } catch(error) {\n        return {\n          rejected: error\n        };\n      }\n    }\n  \n    let result;\n    const command = `npm --prefix \"${installationPath}\" i ${packageName}`;\n    try {\n      const output = execSync(command, { \n        encoding: 'utf-8',\n        cwd: installationPath\n      }).toString();\n      console.log(`${command}\\n`, output);\n      result = {\n        resolved: {\n          status: 0,\n          stdout: output\n        }\n      };\n    } catch(error) {\n      return {\n        rejected: error\n      };\n    }\n\n    if (setTildaPrefix === true) {\n      const deletePrefixCommand = `npm --prefix \"${installationPath}\" config delete save-prefix`;\n      try {\n        const output = execSync(deletePrefixCommand, { \n          encoding: 'utf-8',\n          cwd: installationPath\n        }).toString();\n        console.log(`${deletePrefixCommand}\\n`, output);\n      } catch(error) {\n        return {\n          rejected: error\n        };\n      }\n    }\n\n    return result;\n  };\n  const npmLogin = async (token, tempDirectory) => {\n    const execSync = (await deep.import('child_process')).execSync;\n  \n    const command = `npm set \"//registry.npmjs.org/:_authToken\" ${token}`;\n    const output = execSync(command, { \n        encoding: 'utf-8',\n        cwd: tempDirectory\n    });\n    console.log(`${command}\\n`, output);\n    return output;\n  };\n  const npmPublish = async (tempDirectory) => {\n    const execSync = (await deep.import('child_process')).execSync;\n  \n    const command = `npm publish --access public`;\n    const output = execSync(command, { \n        encoding: 'utf-8',\n        cwd: tempDirectory\n    });\n    console.log(`${command}\\n`, output);\n    return output;\n  };\n  const makeDeepPackagePath = (tempDirectory, packageName) => [tempDirectory, 'node_modules', packageName].join('/');\n  const makeDeepJsonPath = (packagePath) => [packagePath, 'deep.json'].join('/');\n  const makePackageJsonPath = (packagePath) => [packagePath, 'package.json'].join('/');\n  const deepExport = async (packageId) => {\n    const packager = new (await deep.import('@deep-foundation/deeplinks/imports/packager.js')).Packager(deep);\n    const exported = await packager.export({ packageLinkId: packageId });\n    console.log(exported);\n    if (exported?.errors?.length) throw exported;\n    return exported;\n  };\n  const loadNpmToken = async () => {\n    const containTreeId = await deep.id('@deep-foundation/core', 'containTree');\n    const tokenTypeId = await deep.id('@deep-foundation/npm-packager', 'Token');\n    const { data: [{ value: { value: npmToken = undefined } = {}} = {}] = []} = await deep.select({\n      up: {\n        tree_id: { _eq: containTreeId },\n        parent: { id: { _eq: triggeredByLinkId } },\n        link: { type_id: { _eq: tokenTypeId } }\n      }\n    });\n    return npmToken;\n  };\n  const loadFromJson = (path) => {\n    if (!fs.existsSync(path)) {\n      throw new Error(`${path} is not found.`);\n    }\n    const json = fs.readFileSync(path, { encoding });\n    if (!json) {\n      throw new Error(`${path} is empty or was not read properly.`);\n    }\n    console.log(`Parsing ${path} ...`);\n    const data = JSON.parse(json);\n    console.log(`Parsing ${path} finished.`);\n    return data;\n  }\n  const saveAsJson = (path, data) => {\n    fs.writeFileSync(path, JSON.stringify(data, null, 2), { encoding });\n  }\n  const updateVersion = async (deepJsonPath, packageJsonPath, localVersion) => {\n    const semver = await deep.import('semver');\n\n    const deepPackage = loadFromJson(deepJsonPath);\n    const npmPackage = loadFromJson(packageJsonPath);\n\n    const oldNpmVersion = npmPackage?.version || '0.0.0';\n\n    const nextVersion = semver.gt(localVersion, oldNpmVersion) ? localVersion : semver.inc(oldNpmVersion, 'patch');\n\n    npmPackage.version = nextVersion;\n    if (!deepPackage.package) {\n      deepPackage.package = {};\n    }\n    deepPackage.package.version = nextVersion;  \n\n    saveAsJson(deepJsonPath, deepPackage);\n    saveAsJson(packageJsonPath, npmPackage);\n\n    return nextVersion;\n  };\n  const addKeyword = (packageJsonPath, keyword) => {\n    const npmPackage = loadFromJson(packageJsonPath);\n    if (npmPackage?.keywords?.length > 0) {\n      if (!npmPackage.keywords.includes(keyword)) {\n        npmPackage.keywords.push(keyword); \n      }\n    } else {\n      npmPackage.keywords = [ keyword ];\n    }\n    saveAsJson(packageJsonPath, npmPackage);\n  };\n  const installDependencies = async (packagePath, dependencies) => {\n    for (const dependency of dependencies) {\n      const dependencyPackageName = `${dependency.name}@${dependency.version}`;\n      const installationResult = await npmInstall(dependencyPackageName, packagePath, true);\n      if (installationResult?.rejected) {\n        console.log(`Unable to install ${dependencyPackageName} dependency.`)\n        throw installationResult.rejected;\n      } else if (!installationResult?.resolved) {\n        throw new Error(`Unsupported NPM dependency installation result for ${dependencyPackageName} dependency package.`);\n      }\n    }\n  }\n\n  if (!triggeredByLinkId) {\n    throw new Error('Publish link should be inserted using JWT token (role link), it cannot be inserted using hasura secret (role admin).');\n  }\n\n  const { data: [packageQuery] } = await deep.select({ id: newLink.to_id });\n  const packageName = packageQuery?.value?.value;\n  if (!packageName) {\n    throw new Error('Package query value is empty.');\n  }\n  const packageVersionTypeId = await deep.id('@deep-foundation/core', 'PackageVersion');\n  const { data: [{ versions: [{ version: { value: localVersion = undefined } = {}} = {}] = []} = {}] = []} = await deep.select({ id: newLink.from_id }, { returning: `id versions: in(where: { type_id: { _eq: ${packageVersionTypeId} } }) { id type_id version: value }` });\n  if (!localVersion) {\n    throw new Error('Package must have a version.');\n  }\n\n  const packageId = newLink.from_id;\n  const { data: [{ value: actualPackageName }]} = await deep.select(\n    { link_id: { _eq: packageId } },\n    {\n      table: 'strings',\n      returning: 'value'\n    }\n  );\n  if (packageName !== actualPackageName) {\n    throw new Error('Package query value should be equal to actual package name.');\n  }\n  const tempDirectory = await makeTempDirectory();\n  try {\n    const npmToken = await loadNpmToken();\n    if (!npmToken) {\n      throw new Error('NPM token is required to publish package. NPM token should be contained by user that does insert publish link.');\n    }\n    await npmLogin(npmToken, tempDirectory);\n    const installationResult = await npmInstall(packageName, tempDirectory, false);\n    let deepPackagePath; \n    let packageJsonPath;\n    if (installationResult?.resolved) {\n      deepPackagePath = makeDeepPackagePath(tempDirectory, packageName);\n      packageJsonPath = makePackageJsonPath(deepPackagePath);\n    } else if(installationResult?.rejected) {\n      deepPackagePath = tempDirectory;\n      packageJsonPath = makePackageJsonPath(deepPackagePath);\n      const packageJson = {\n        name: packageName\n      };\n      saveAsJson(packageJsonPath, packageJson);\n    } else {\n      throw new Error(`Unsupported NPM installation result for ${packageName} package.`);\n    }\n    console.log('deepPackagePath', deepPackagePath);\n    console.log('packageJsonPath', packageJsonPath);\n    \n    const pkg = await deepExport(packageId);\n    console.log(pkg);\n    await installDependencies(deepPackagePath, pkg.dependencies);\n    const deepJsonPath = makeDeepJsonPath(deepPackagePath);\n    saveAsJson(deepJsonPath, pkg);\n    const nextVersion = await updateVersion(deepJsonPath, packageJsonPath, localVersion);\n    addKeyword(packageJsonPath, deepPackageKeyWord);\n    await npmPublish(deepPackagePath);\n    if (nextVersion !== localVersion) {\n      await deep.update({\n        link: {\n          type_id: { _eq: await deep.id('@deep-foundation/core', 'PackageVersion') },\n          to_id: { _eq: packageId },\n        },\n      }, { value: nextVersion }, { table: 'strings' });\n    }\n  } finally {\n    fs.rmSync(tempDirectory, { recursive: true, force: true });\n  }\n}",
        "link_id": 744
      }
    },
    {
      "id": 751,
      "type_id": 49,
      "from_id": 750,
      "to_id": 745
    },
    {
      "id": 753,
      "type_id": 1,
      "from_id": 752,
      "to_id": 2
    },
    {
      "id": 754,
      "type_id": 1,
      "from_id": 752,
      "to_id": 2
    },
    {
      "id": 755,
      "type_id": 49,
      "from_id": 752,
      "to_id": 747
    },
    {
      "id": 756,
      "type_id": 2,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 328,
        "value": "@deep-foundation/npm-packager",
        "link_id": 756
      }
    },
    {
      "id": 769,
      "type_id": 3,
      "from_id": 756,
      "to_id": 750,
      "value": {
        "id": 337,
        "value": "Publish",
        "link_id": 769
      }
    },
    {
      "id": 770,
      "type_id": 3,
      "from_id": 756,
      "to_id": 755,
      "value": {
        "id": 338,
        "value": "installCodeHandleInsert",
        "link_id": 770
      }
    },
    {
      "id": 771,
      "type_id": 3,
      "from_id": 756,
      "to_id": 747,
      "value": {
        "id": 339,
        "value": "installCodeHandler",
        "link_id": 771
      }
    },
    {
      "id": 772,
      "type_id": 3,
      "from_id": 756,
      "to_id": 746,
      "value": {
        "id": 340,
        "value": "installCode",
        "link_id": 772
      }
    },
    {
      "id": 773,
      "type_id": 3,
      "from_id": 756,
      "to_id": 752,
      "value": {
        "id": 341,
        "value": "Install",
        "link_id": 773
      }
    },
    {
      "id": 836,
      "type_id": 3,
      "from_id": 813,
      "to_id": 811,
      "value": {
        "id": 385,
        "value": "asyncFileHandler",
        "link_id": 836
      }
    },
    {
      "id": 1051,
      "type_id": 2,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 425,
        "value": "@deep-foundation/unsafe",
        "link_id": 1051
      }
    },
    {
      "id": 1629,
      "type_id": 3,
      "from_id": 1616,
      "to_id": 1602,
      "value": {
        "id": 630,
        "value": "onActiveInsertHandler",
        "link_id": 1629
      }
    },
    {
      "id": 1630,
      "type_id": 3,
      "from_id": 1616,
      "to_id": 1601,
      "value": {
        "id": 631,
        "value": "onActiveInsert",
        "link_id": 1630
      }
    },
    {
      "id": 1635,
      "type_id": 3,
      "from_id": 1616,
      "to_id": 1607,
      "value": {
        "id": 636,
        "value": "onTelegramIn",
        "link_id": 1635
      }
    },
    {
      "id": 1739,
      "type_id": 717,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 668,
        "value": "import { DeepClient } from \"@deep-foundation/deeplinks/imports/client.js\";\nimport { Link } from \"@deep-foundation/deeplinks/imports/minilinks.js\";\nimport { DeepClientInstance } from \"@deep-foundation/deeplinks/imports/client\";\n\nasync (options: {\n  deep: DeepClient;\n  data: {\n    newLink: Link<number>;\n    promiseId: number;\n  };\n}) => {\n  const {\n    deep,\n    data: { newLink: rootLink, promiseId },\n  } = options;\n  await new Promise(res => {\n    const unsubscribe = deep.subscribe({\n      up: { tree_id: deep.idLocal('@deep-foundation/core', 'promiseTree'), parent_id: rootLink.id },\n      type_id: deep.idLocal('@deep-foundation/core', 'Promise'),\n      id: { _lte: promiseId },\n      _not: {\n          down: {\n              tree_id: deep.idLocal('@deep-foundation/core', 'promiseTree'),\n              link: {\n                  type_id: { _in: [deep.idLocal('@deep-foundation/core', 'Resolved'), deep.idLocal('@deep-foundation/core', 'Rejected')] }\n              }\n          }\n      },\n    }).subscribe({ next: (links) => {\n      console.log('updateHandlerCode next', links);\n      if (!links.length) {\n        unsubscribe();\n        res();\n      }\n    }, error: (err) => {\n      unsubscribe();\n      console.log('updateHandlerCode error', err);\n    } });\n  });\n  const { default: ts } = await import(\"typescript\");\n  const { default: util } = await import(\"util\");\n  try {\n    const result = await main();\n    return {\n      result: util.inspect(result),\n    };\n  } catch (error) {\n    throw {\n      error: util.inspect(error),\n    };\n  }\n\n  async function main() {\n    let obj;\n    if (typeof rootLink.value?.value === \"object\") {\n      obj = rootLink.value?.value;\n    } else if (typeof rootLink.value?.value === \"string\") {\n      try {\n        obj = JSON.parse(rootLink.value?.value);\n      } catch (error) {\n        throw new Error(\n          `##${rootLink.id} must be valid JSON if it is a string`,\n        );\n      }\n    } else {\n      throw new Error(`##${rootLink.id} must have value`);\n    }\n    if (!obj) {\n      throw new Error(`##${rootLink.id} must have value`);\n    }\n\n    const clientHandlerResult = await callClientHandler({\n      deep,\n      linkId: await deep.id(deep.linkId!, \"clientHandler\"),\n      args: [\n        {\n          deep: deep,\n          obj: obj,\n          rootLinkId: rootLink.id,\n          resultLinkId: rootLink.to_id,\n          // TODO?\n          // customMethods: options.customMethods,\n        },\n      ],\n    });\n\n    return clientHandlerResult;\n  }\n\n  async function callClientHandler(\n    options: CallClientHandlerOptions,\n  ): Promise<any> {\n    const { linkId, deep, args } = options;\n    const code = await deep\n      .select({\n        in: {\n          id: linkId,\n        },\n      })\n      .then((result) => {\n        const link = result.data[0];\n        if (!link)\n          throw new Error(`Unable to find SyncTextFile for ##${linkId}`);\n        const code = link.value?.value;\n        if (!code) throw new Error(`##${link.id} must have value`);\n        return code;\n      });\n\n    const functionExpressionString = ts\n      .transpileModule(code, {\n        compilerOptions: {\n          module: ts.ModuleKind.ESNext,\n          sourceMap: true,\n          target: ts.ScriptTarget.ESNext,\n        },\n      })\n      .outputText.replace(\"export {}\", \"\");\n    const fn: Function = eval(functionExpressionString);\n\n    const result = await fn(...args);\n    return result;\n  }\n\n  interface CallClientHandlerOptions {\n    deep: DeepClientInstance;\n    linkId: number;\n    args: Array<any>;\n  }\n};\n",
        "link_id": 1739
      }
    },
    {
      "id": 1162,
      "type_id": 2,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 460,
        "value": "@deep-foundation/chatgpt-tokens-gpt-4-encoder",
        "link_id": 1162
      }
    },
    {
      "id": 1190,
      "type_id": 2,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 468,
        "value": "@deep-foundation/openai",
        "link_id": 1190
      }
    },
    {
      "id": 1216,
      "type_id": 1,
      "from_id": 0,
      "to_id": 0
    },
    {
      "id": 1220,
      "type_id": 4,
      "from_id": 1219,
      "to_id": 5
    },
    {
      "id": 1221,
      "type_id": 1,
      "from_id": 1187,
      "to_id": 1219
    },
    {
      "id": 1222,
      "type_id": 1,
      "from_id": 1116,
      "to_id": 8
    },
    {
      "id": 1238,
      "type_id": 3,
      "from_id": 1225,
      "to_id": 1214,
      "value": {
        "id": 490,
        "value": "replyHandleInsert",
        "link_id": 1238
      }
    },
    {
      "id": 1239,
      "type_id": 3,
      "from_id": 1225,
      "to_id": 1210,
      "value": {
        "id": 491,
        "value": "replyInsertHandler",
        "link_id": 1239
      }
    },
    {
      "id": 1244,
      "type_id": 3,
      "from_id": 1225,
      "to_id": 1222,
      "value": {
        "id": 496,
        "value": "System",
        "link_id": 1244
      }
    },
    {
      "id": 1296,
      "type_id": 1219,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 502,
        "value": "https://deep-ai.openai.azure.com/openai/deployments/gpt-4/chat/completions?api-version=2023-03-15-preview",
        "link_id": 1296
      }
    },
    {
      "id": 1297,
      "type_id": 1219,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 503,
        "value": "https://deep-ai.openai.azure.com/openai/deployments/gpt-35-16k/chat/completions?api-version=2023-03-15-preview",
        "link_id": 1297
      }
    },
    {
      "id": 39,
      "type_id": 34,
      "from_id": 36,
      "to_id": 8
    },
    {
      "id": 40,
      "type_id": 36,
      "from_id": 0,
      "to_id": 0
    },
    {
      "id": 584,
      "type_id": 3,
      "from_id": 553,
      "to_id": 583,
      "value": {
        "id": 234,
        "value": "SupportsSymbol",
        "link_id": 584
      }
    },
    {
      "id": 585,
      "type_id": 146,
      "from_id": 553,
      "to_id": 77,
      "value": {
        "id": 235,
        "value": "🚦",
        "link_id": 585
      }
    },
    {
      "id": 730,
      "type_id": 3,
      "from_id": 721,
      "to_id": 716,
      "value": {
        "id": 322,
        "value": "handler",
        "link_id": 730
      }
    },
    {
      "id": 1157,
      "type_id": 30,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 459,
        "value": "import tiktoken\r\n\r\nasync def fn(arg):\r\n    deep = arg['deep']\r\n    print(arg)\r\n\r\n    message_link = arg['data']['newLink']\r\n    triggeredByLinkId = arg['data']['triggeredByLinkId']\r\n    \r\n    encoding = tiktoken.encoding_for_model(\"gpt-4\")\r\n    \r\n    tokens_count = len(encoding.encode(message_link['value']['value']))\r\n    \r\n    type_id_tokens = await deep.id(\"@deep-foundation/tokens\", \"Tokens\")\r\n    type_id_contain = await deep.id(\"@deep-foundation/core\", \"Contain\")\r\n    \r\n    await deep.insert({\r\n        'type_id': type_id_tokens,\r\n        'from_id': message_link['id'],\r\n        'to_id': message_link['id'],\r\n        'number': {'data': {'value': tokens_count}},\r\n    })\r\n    \r\n    return tokens_count\r\n",
        "link_id": 1157
      }
    },
    {
      "id": 1225,
      "type_id": 2,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 481,
        "value": "@deep-foundation/chatgpt-azure",
        "link_id": 1225
      }
    },
    {
      "id": 1299,
      "type_id": 1219,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 505,
        "value": "https://deep-ai-west-us-3.openai.azure.com/openai/deployments/gpt-4o/chat/completions?api-version=2023-03-15-preview",
        "link_id": 1299
      }
    },
    {
      "id": 1370,
      "type_id": 3,
      "from_id": 1364,
      "to_id": 1363,
      "value": {
        "id": 539,
        "value": "handler",
        "link_id": 1370
      }
    },
    {
      "id": 1371,
      "type_id": 3,
      "from_id": 1364,
      "to_id": 1361,
      "value": {
        "id": 540,
        "value": "textValue",
        "link_id": 1371
      }
    },
    {
      "id": 1402,
      "type_id": 1,
      "from_id": 0,
      "to_id": 0
    },
    {
      "id": 763,
      "type_id": 3,
      "from_id": 756,
      "to_id": 754,
      "value": {
        "id": 331,
        "value": "Used",
        "link_id": 763
      }
    },
    {
      "id": 764,
      "type_id": 3,
      "from_id": 756,
      "to_id": 749,
      "value": {
        "id": 332,
        "value": "tokenValue",
        "link_id": 764
      }
    },
    {
      "id": 765,
      "type_id": 3,
      "from_id": 756,
      "to_id": 748,
      "value": {
        "id": 333,
        "value": "Token",
        "link_id": 765
      }
    },
    {
      "id": 766,
      "type_id": 3,
      "from_id": 756,
      "to_id": 751,
      "value": {
        "id": 334,
        "value": "publishCodeHandleInsert",
        "link_id": 766
      }
    },
    {
      "id": 767,
      "type_id": 3,
      "from_id": 756,
      "to_id": 745,
      "value": {
        "id": 335,
        "value": "publishCodeHandler",
        "link_id": 767
      }
    },
    {
      "id": 768,
      "type_id": 3,
      "from_id": 756,
      "to_id": 744,
      "value": {
        "id": 336,
        "value": "publishCode",
        "link_id": 768
      }
    },
    {
      "id": 837,
      "type_id": 3,
      "from_id": 813,
      "to_id": 810,
      "value": {
        "id": 386,
        "value": "asyncFileClientHandler",
        "link_id": 837
      }
    },
    {
      "id": 1456,
      "type_id": 15,
      "from_id": 0,
      "to_id": 0
    },
    {
      "id": 1457,
      "type_id": 19,
      "from_id": 1452,
      "to_id": 1456
    },
    {
      "id": 1458,
      "type_id": 16,
      "from_id": 1456,
      "to_id": 1116
    },
    {
      "id": 1459,
      "type_id": 70,
      "from_id": 1458,
      "to_id": 40
    },
    {
      "id": 1460,
      "type_id": 16,
      "from_id": 1456,
      "to_id": 1118
    },
    {
      "id": 1461,
      "type_id": 70,
      "from_id": 1460,
      "to_id": 40
    },
    {
      "id": 1467,
      "type_id": 70,
      "from_id": 1466,
      "to_id": 40
    },
    {
      "id": 1471,
      "type_id": 35,
      "from_id": 83,
      "to_id": 1470
    },
    {
      "id": 1472,
      "type_id": 30,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 560,
        "value": "async ({ deep, data: { newLink, triggeredByLinkId }, require }) => {\n    const { Telegraf } = require('telegraf');\n    const Markup = require('telegraf/markup');\n\n    const Bot = await deep.id('@deep-foundation/telegram-bot', 'Bot');\n    const Token = await deep.id('@deep-foundation/telegram-bot', 'Token');\n    const Active = await deep.id('@deep-foundation/telegram-bot', 'Active');\n    const Conversation = await deep.id('@deep-foundation/telegram-bot', 'Conversation');\n    const HandleTelegramBotOut = await deep.id('@deep-foundation/telegram-bot', 'HandleTelegramBotOut');\n    const messagingTree = await deep.id('@deep-foundation/messaging', 'messagingTree');\n    const containTree = deep.idLocal('@deep-foundation/core', 'containTree');\n    const Contain = deep.idLocal('@deep-foundation/core', 'Contain');\n\n    function splitStringIntoChunks(str, chunkSize = 4096) {\n        const chunks = [];\n        for (let i = 0, len = str.length; i < len; i += chunkSize) {\n            chunks.push(str.substring(i, i + chunkSize));\n        }\n        return chunks;\n    }\n\n    const botId = (await deep.select({\n        type_id: Bot,\n        down: {\n            tree_id: containTree,\n            link_id: triggeredByLinkId\n        },\n    }))?.data?.[0]?.id;\n    if (!botId) {\n        const botId = (await deep.select({\n            type_id: Bot,\n            down: {\n                tree_id: messagingTree,\n                link_id: newLink.id,\n            },\n        }))?.data?.[0]?.id;\n        const token = (await deep.select({\n            type_id: Token,\n            in: {\n                type_id: Active,\n                from: {\n                    down: {\n                        tree_id: messagingTree,\n                        link_id: newLink.id,\n                    },\n                },\n            },\n        }))?.data?.[0];\n        const conversationId = (await deep.select({\n            type_id: Conversation,\n            down: {\n                tree_id: messagingTree,\n                link_id: newLink.id,\n            },\n        }))?.data?.[0]?.id;\n        const replyToId = newLink.to_id;\n\n        const message = (await deep.select(newLink.from_id))?.data?.[0];\n\n        const bot = new Telegraf(token?.value?.value);\n\n        const { data: handles } = await deep.select({\n            type_id: HandleTelegramBotOut,\n            from_id: botId,\n            order_by: { id: 'asc' },\n        });\n\n        const state = {\n            defaultHandling: true,\n        };\n        const handled = {};\n        for (let h in handles) {\n            const packageId = (await deep.select({\n                out: { type_id: Contain, to_id: handles[h].to_id },\n            }))?.data?.[0]?.id;\n            if (!packageId) {\n                handled[handles[h].to_id] = { error: `!packageId by handler(${handles[h].to_id}).in(Contain).from` };\n                continue;\n            }\n            const hdeep = new deep.DeepClient({\n                deep, ...(await deep.jwt({ linkId: packageId }))\n            })\n            handled[handles[h].to_id] = await hdeep.eval({\n                linkId: botId,\n                handlerId: handles[h].to_id,\n                input: {\n                    data: {\n                        state,\n                        bot,\n                        botId,\n                        userId: triggeredByLinkId,\n                        conversationId,\n                        handlerId: handles[h].to_id,\n                        reply: newLink,\n                        message,\n                    },\n                },\n            });\n        }\n\n        if (state.defaultHandling) {\n            const chanks = splitStringIntoChunks(message?.value?.value);\n            for (let c in chanks) {\n                bot.telegram.sendMessage(\n                    await deep.name(conversationId),\n                    chanks[c],\n                );\n            }\n        }\n\n        return {\n            botId,\n            conversationId,\n            replyToId,\n            message,\n            token,\n        };\n    } else {\n        return { botId };\n    }\n}",
        "link_id": 1472
      }
    },
    {
      "id": 1486,
      "type_id": 39,
      "from_id": 1120,
      "to_id": 1484
    },
    {
      "id": 1487,
      "type_id": 48,
      "from_id": 1484,
      "to_id": 35
    },
    {
      "id": 1488,
      "type_id": 164,
      "from_id": 83,
      "to_id": 1487
    },
    {
      "id": 1489,
      "type_id": 48,
      "from_id": 1484,
      "to_id": 35
    },
    {
      "id": 1491,
      "type_id": 1,
      "from_id": 1484,
      "to_id": 1479
    },
    {
      "id": 1506,
      "type_id": 3,
      "from_id": 1495,
      "to_id": 1489,
      "value": {
        "id": 573,
        "value": "HandleTelegramBotIn",
        "link_id": 1506
      }
    },
    {
      "id": 1519,
      "type_id": 3,
      "from_id": 1495,
      "to_id": 1452,
      "value": {
        "id": 586,
        "value": "telegramUsersAllowInsertMessaging",
        "link_id": 1519
      }
    },
    {
      "id": 1522,
      "type_id": 3,
      "from_id": 1495,
      "to_id": 1454,
      "value": {
        "id": 589,
        "value": "tuaimRuleSubjectSelector",
        "link_id": 1522
      }
    },
    {
      "id": 1529,
      "type_id": 3,
      "from_id": 1495,
      "to_id": 1456,
      "value": {
        "id": 596,
        "value": "tuaimRuleObjectSelector",
        "link_id": 1529
      }
    },
    {
      "id": 1530,
      "type_id": 3,
      "from_id": 1495,
      "to_id": 1467,
      "value": {
        "id": 597,
        "value": "tuaimRuleActionTree",
        "link_id": 1530
      }
    },
    {
      "id": 1532,
      "type_id": 3,
      "from_id": 1495,
      "to_id": 1464,
      "value": {
        "id": 599,
        "value": "tuaimRuleActionSelector",
        "link_id": 1532
      }
    },
    {
      "id": 1533,
      "type_id": 3,
      "from_id": 1495,
      "to_id": 1469,
      "value": {
        "id": 600,
        "value": "routerListening",
        "link_id": 1533
      }
    },
    {
      "id": 1534,
      "type_id": 3,
      "from_id": 1495,
      "to_id": 1468,
      "value": {
        "id": 601,
        "value": "router",
        "link_id": 1534
      }
    },
    {
      "id": 1535,
      "type_id": 3,
      "from_id": 1495,
      "to_id": 1471,
      "value": {
        "id": 602,
        "value": "onActiveDeleteHandler",
        "link_id": 1535
      }
    },
    {
      "id": 1597,
      "type_id": 146,
      "from_id": 1596,
      "to_id": 1596,
      "value": {
        "id": 613,
        "value": "💥",
        "link_id": 1597
      }
    },
    {
      "id": 1603,
      "type_id": 49,
      "from_id": 1596,
      "to_id": 1602
    },
    {
      "id": 1604,
      "type_id": 30,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 616,
        "value": "async ({ deep, data: { oldLink } }) => {\n    const router = await deep.id('@deep-foundation/telegram-bot', 'router');\n    const onTelegramInHandler = await deep.id('@deep-foundation/telegram-bot', 'onTelegramInHandler');\n\n    const containTree = deep.idLocal('@deep-foundation/core', 'containTree');\n    const Contain = deep.idLocal('@deep-foundation/core', 'Contain');\n\n    await deep.delete({\n        up: {\n            tree_id: containTree,\n            parent: {\n                type_id: Contain,\n                string: { value: { _in: [\n                    'include'+oldLink.to_id,\n                    'tree'+oldLink.to_id,\n                    'handleTelegramBotIn'+oldLink.to_id,\n                    'handleTelegramBotOut'+oldLink.to_id,\n                    'system'+oldLink.to_id,\n                    'executorJoin'+oldLink.to_id,\n                ] } },\n            },\n        },\n    });\n}",
        "link_id": 1604
      }
    },
    {
      "id": 1605,
      "type_id": 35,
      "from_id": 83,
      "to_id": 1604
    },
    {
      "id": 1606,
      "type_id": 51,
      "from_id": 1596,
      "to_id": 1605
    },
    {
      "id": 1610,
      "type_id": 35,
      "from_id": 83,
      "to_id": 1609
    },
    {
      "id": 1613,
      "type_id": 15,
      "from_id": 0,
      "to_id": 0
    },
    {
      "id": 1614,
      "type_id": 49,
      "from_id": 1613,
      "to_id": 1608
    },
    {
      "id": 1623,
      "type_id": 3,
      "from_id": 1616,
      "to_id": 1603,
      "value": {
        "id": 624,
        "value": "onActiveInsertHandle",
        "link_id": 1623
      }
    },
    {
      "id": 1625,
      "type_id": 3,
      "from_id": 1616,
      "to_id": 1596,
      "value": {
        "id": 626,
        "value": "Active",
        "link_id": 1625
      }
    },
    {
      "id": 1626,
      "type_id": 3,
      "from_id": 1616,
      "to_id": 1598,
      "value": {
        "id": 627,
        "value": "reader",
        "link_id": 1626
      }
    },
    {
      "id": 1740,
      "type_id": 143,
      "from_id": 1734,
      "to_id": 1739
    },
    {
      "id": 1741,
      "type_id": 717,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 671,
        "value": "import { DeepClient } from \"@deep-foundation/deeplinks/imports/client.js\";\r\nimport { Link } from \"@deep-foundation/deeplinks/imports/minilinks.js\";\r\nimport { DeepClientInstance } from \"@deep-foundation/deeplinks/imports/client\";\r\n\r\nasync (options: {\r\n  deep: DeepClient;\r\n  data: {\r\n    newLink: Link<number>;\r\n  };\r\n}) => {\r\n  const {\r\n    deep,\r\n    data: { newLink: parseItLink },\r\n  } = options;\r\n  const { default: ts } = await import(\"typescript\");\r\n  const { default: util } = await import(\"util\");\r\n  try {\r\n    const result = await main();\r\n    return {\r\n      result: util.inspect(result),\r\n    };\r\n  } catch (error) {\r\n    throw {\r\n      error: util.inspect(error),\r\n    };\r\n  }\r\n\r\n  async function main() {\r\n    const {\r\n      data: [rootLink],\r\n    } = await deep.select({\r\n      id: parseItLink.from_id,\r\n    });\r\n    if (!rootLink) {\r\n      throw new Error(`parseIt.to does not exist: ##${parseItLink.from_id}`);\r\n    }\r\n    \r\n    let obj;\r\n    if(typeof rootLink.value?.value === 'object') {\r\n      obj = rootLink.value?.value;\r\n    } else if (typeof rootLink.value?.value === 'string') {\r\n      try {\r\n        obj = JSON.parse(rootLink.value?.value);\r\n      } catch (error) {\r\n        throw new Error(`##${rootLink.id} must be valid JSON if it is a string`);\r\n      }\r\n    } else {\r\n      throw new Error(`##${rootLink.id} must have value`);\r\n    }\r\n    if (!obj) {\r\n      throw new Error(`##${rootLink.id} must have value`);\r\n    }\r\n\r\n    const clientHandlerResult = await callClientHandler({\r\n      deep,\r\n      linkId: await deep.id(deep.linkId!, \"clientHandler\"),\r\n      args: [\r\n        {\r\n          deep: deep,\r\n          obj: obj,\r\n          rootLinkId: rootLink.id,\r\n          resultLinkId: parseItLink.to_id,\r\n          // TODO?\r\n          // customMethods: options.customMethods,\r\n        },\r\n      ],\r\n    });\r\n\r\n    return clientHandlerResult;\r\n  }\r\n\r\n  async function callClientHandler(\r\n    options: CallClientHandlerOptions,\r\n  ): Promise<any> {\r\n    const { linkId, deep, args } = options;\r\n    const code = await deep\r\n      .select({\r\n        in: {\r\n          id: linkId,\r\n        },\r\n      })\r\n      .then((result) => {\r\n        const link = result.data[0];\r\n        if (!link)\r\n          throw new Error(`Unable to find SyncTextFile for ##${linkId}`);\r\n        const code = link.value?.value;\r\n        if (!code) throw new Error(`##${link.id} must have value`);\r\n        return code;\r\n      });\r\n\r\n    const functionExpressionString = ts\r\n      .transpileModule(code, {\r\n        compilerOptions: {\r\n          module: ts.ModuleKind.ESNext,\r\n          sourceMap: true,\r\n          target: ts.ScriptTarget.ESNext,\r\n        },\r\n      })\r\n      .outputText.replace(\"export {}\", \"\");\r\n    const fn: Function = eval(functionExpressionString);\r\n\r\n    const result = await fn(...args);\r\n    return result;\r\n  }\r\n\r\n  interface CallClientHandlerOptions {\r\n    deep: DeepClientInstance;\r\n    linkId: number;\r\n    args: Array<any>;\r\n  }\r\n};\r\n",
        "link_id": 1741
      }
    },
    {
      "id": 1823,
      "type_id": 30,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 673,
        "value": "async (options) => {\n    const { deep, data: { newLink: parseItLink }, } = options;\n    const { default: ts } = await import(\"typescript\");\n    const { default: util } = await import(\"util\");\n    try {\n        const result = await main();\n        return {\n            result: util.inspect(result),\n        };\n    }\n    catch (error) {\n        throw {\n            error: util.inspect(error),\n        };\n    }\n    async function main() {\n        const { data: [rootLink], } = await deep.select({\n            id: parseItLink.from_id,\n        });\n        if (!rootLink) {\n            throw new Error(`parseIt.to does not exist: ##${parseItLink.from_id}`);\n        }\n        let obj;\n        if (typeof rootLink.value?.value === 'object') {\n            obj = rootLink.value?.value;\n        }\n        else if (typeof rootLink.value?.value === 'string') {\n            try {\n                obj = JSON.parse(rootLink.value?.value);\n            }\n            catch (error) {\n                throw new Error(`##${rootLink.id} must be valid JSON if it is a string`);\n            }\n        }\n        else {\n            throw new Error(`##${rootLink.id} must have value`);\n        }\n        if (!obj) {\n            throw new Error(`##${rootLink.id} must have value`);\n        }\n        const clientHandlerResult = await callClientHandler({\n            deep,\n            linkId: await deep.id(deep.linkId, \"clientHandler\"),\n            args: [\n                {\n                    deep: deep,\n                    obj: obj,\n                    rootLinkId: rootLink.id,\n                    resultLinkId: parseItLink.to_id,\n                },\n            ],\n        });\n        return clientHandlerResult;\n    }\n    async function callClientHandler(options) {\n        const { linkId, deep, args } = options;\n        const code = await deep\n            .select({\n            in: {\n                id: linkId,\n            },\n        })\n            .then((result) => {\n            const link = result.data[0];\n            if (!link)\n                throw new Error(`Unable to find SyncTextFile for ##${linkId}`);\n            const code = link.value?.value;\n            if (!code)\n                throw new Error(`##${link.id} must have value`);\n            return code;\n        });\n        const functionExpressionString = ts\n            .transpileModule(code, {\n            compilerOptions: {\n                module: ts.ModuleKind.ESNext,\n                sourceMap: true,\n                target: ts.ScriptTarget.ESNext,\n            },\n        })\n            .outputText.replace(\"export {}\", \"\");\n        const fn = eval(functionExpressionString);\n        const result = await fn(...args);\n        return result;\n    }\n};\nexport {};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsibW9kdWxlLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFJQSxLQUFLLEVBQUUsT0FLTixFQUFFLEVBQUU7SUFDSCxNQUFNLEVBQ0osSUFBSSxFQUNKLElBQUksRUFBRSxFQUFFLE9BQU8sRUFBRSxXQUFXLEVBQUUsR0FDL0IsR0FBRyxPQUFPLENBQUM7SUFDWixNQUFNLEVBQUUsT0FBTyxFQUFFLEVBQUUsRUFBRSxHQUFHLE1BQU0sTUFBTSxDQUFDLFlBQVksQ0FBQyxDQUFDO0lBQ25ELE1BQU0sRUFBRSxPQUFPLEVBQUUsSUFBSSxFQUFFLEdBQUcsTUFBTSxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDL0MsSUFBSSxDQUFDO1FBQ0gsTUFBTSxNQUFNLEdBQUcsTUFBTSxJQUFJLEVBQUUsQ0FBQztRQUM1QixPQUFPO1lBQ0wsTUFBTSxFQUFFLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDO1NBQzdCLENBQUM7SUFDSixDQUFDO0lBQUMsT0FBTyxLQUFLLEVBQUUsQ0FBQztRQUNmLE1BQU07WUFDSixLQUFLLEVBQUUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUM7U0FDM0IsQ0FBQztJQUNKLENBQUM7SUFFRCxLQUFLLFVBQVUsSUFBSTtRQUNqQixNQUFNLEVBQ0osSUFBSSxFQUFFLENBQUMsUUFBUSxDQUFDLEdBQ2pCLEdBQUcsTUFBTSxJQUFJLENBQUMsTUFBTSxDQUFDO1lBQ3BCLEVBQUUsRUFBRSxXQUFXLENBQUMsT0FBTztTQUN4QixDQUFDLENBQUM7UUFDSCxJQUFJLENBQUMsUUFBUSxFQUFFLENBQUM7WUFDZCxNQUFNLElBQUksS0FBSyxDQUFDLGdDQUFnQyxXQUFXLENBQUMsT0FBTyxFQUFFLENBQUMsQ0FBQztRQUN6RSxDQUFDO1FBRUQsSUFBSSxHQUFHLENBQUM7UUFDUixJQUFHLE9BQU8sUUFBUSxDQUFDLEtBQUssRUFBRSxLQUFLLEtBQUssUUFBUSxFQUFFLENBQUM7WUFDN0MsR0FBRyxHQUFHLFFBQVEsQ0FBQyxLQUFLLEVBQUUsS0FBSyxDQUFDO1FBQzlCLENBQUM7YUFBTSxJQUFJLE9BQU8sUUFBUSxDQUFDLEtBQUssRUFBRSxLQUFLLEtBQUssUUFBUSxFQUFFLENBQUM7WUFDckQsSUFBSSxDQUFDO2dCQUNILEdBQUcsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLFFBQVEsQ0FBQyxLQUFLLEVBQUUsS0FBSyxDQUFDLENBQUM7WUFDMUMsQ0FBQztZQUFDLE9BQU8sS0FBSyxFQUFFLENBQUM7Z0JBQ2YsTUFBTSxJQUFJLEtBQUssQ0FBQyxLQUFLLFFBQVEsQ0FBQyxFQUFFLHVDQUF1QyxDQUFDLENBQUM7WUFDM0UsQ0FBQztRQUNILENBQUM7YUFBTSxDQUFDO1lBQ04sTUFBTSxJQUFJLEtBQUssQ0FBQyxLQUFLLFFBQVEsQ0FBQyxFQUFFLGtCQUFrQixDQUFDLENBQUM7UUFDdEQsQ0FBQztRQUNELElBQUksQ0FBQyxHQUFHLEVBQUUsQ0FBQztZQUNULE1BQU0sSUFBSSxLQUFLLENBQUMsS0FBSyxRQUFRLENBQUMsRUFBRSxrQkFBa0IsQ0FBQyxDQUFDO1FBQ3RELENBQUM7UUFFRCxNQUFNLG1CQUFtQixHQUFHLE1BQU0saUJBQWlCLENBQUM7WUFDbEQsSUFBSTtZQUNKLE1BQU0sRUFBRSxNQUFNLElBQUksQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU8sRUFBRSxlQUFlLENBQUM7WUFDcEQsSUFBSSxFQUFFO2dCQUNKO29CQUNFLElBQUksRUFBRSxJQUFJO29CQUNWLEdBQUcsRUFBRSxHQUFHO29CQUNSLFVBQVUsRUFBRSxRQUFRLENBQUMsRUFBRTtvQkFDdkIsWUFBWSxFQUFFLFdBQVcsQ0FBQyxLQUFLO2lCQUdoQzthQUNGO1NBQ0YsQ0FBQyxDQUFDO1FBRUgsT0FBTyxtQkFBbUIsQ0FBQztJQUM3QixDQUFDO0lBRUQsS0FBSyxVQUFVLGlCQUFpQixDQUM5QixPQUFpQztRQUVqQyxNQUFNLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsR0FBRyxPQUFPLENBQUM7UUFDdkMsTUFBTSxJQUFJLEdBQUcsTUFBTSxJQUFJO2FBQ3BCLE1BQU0sQ0FBQztZQUNOLEVBQUUsRUFBRTtnQkFDRixFQUFFLEVBQUUsTUFBTTthQUNYO1NBQ0YsQ0FBQzthQUNELElBQUksQ0FBQyxDQUFDLE1BQU0sRUFBRSxFQUFFO1lBQ2YsTUFBTSxJQUFJLEdBQUcsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUM1QixJQUFJLENBQUMsSUFBSTtnQkFDUCxNQUFNLElBQUksS0FBSyxDQUFDLHFDQUFxQyxNQUFNLEVBQUUsQ0FBQyxDQUFDO1lBQ2pFLE1BQU0sSUFBSSxHQUFHLElBQUksQ0FBQyxLQUFLLEVBQUUsS0FBSyxDQUFDO1lBQy9CLElBQUksQ0FBQyxJQUFJO2dCQUFFLE1BQU0sSUFBSSxLQUFLLENBQUMsS0FBSyxJQUFJLENBQUMsRUFBRSxrQkFBa0IsQ0FBQyxDQUFDO1lBQzNELE9BQU8sSUFBSSxDQUFDO1FBQ2QsQ0FBQyxDQUFDLENBQUM7UUFFTCxNQUFNLHdCQUF3QixHQUFHLEVBQUU7YUFDaEMsZUFBZSxDQUFDLElBQUksRUFBRTtZQUNyQixlQUFlLEVBQUU7Z0JBQ2YsTUFBTSxFQUFFLEVBQUUsQ0FBQyxVQUFVLENBQUMsTUFBTTtnQkFDNUIsU0FBUyxFQUFFLElBQUk7Z0JBQ2YsTUFBTSxFQUFFLEVBQUUsQ0FBQyxZQUFZLENBQUMsTUFBTTthQUMvQjtTQUNGLENBQUM7YUFDRCxVQUFVLENBQUMsT0FBTyxDQUFDLFdBQVcsRUFBRSxFQUFFLENBQUMsQ0FBQztRQUN2QyxNQUFNLEVBQUUsR0FBYSxJQUFJLENBQUMsd0JBQXdCLENBQUMsQ0FBQztRQUVwRCxNQUFNLE1BQU0sR0FBRyxNQUFNLEVBQUUsQ0FBQyxHQUFHLElBQUksQ0FBQyxDQUFDO1FBQ2pDLE9BQU8sTUFBTSxDQUFDO0lBQ2hCLENBQUM7QUFPSCxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEZWVwQ2xpZW50IH0gZnJvbSBcIkBkZWVwLWZvdW5kYXRpb24vZGVlcGxpbmtzL2ltcG9ydHMvY2xpZW50LmpzXCI7XHJcbmltcG9ydCB7IExpbmsgfSBmcm9tIFwiQGRlZXAtZm91bmRhdGlvbi9kZWVwbGlua3MvaW1wb3J0cy9taW5pbGlua3MuanNcIjtcclxuaW1wb3J0IHsgRGVlcENsaWVudEluc3RhbmNlIH0gZnJvbSBcIkBkZWVwLWZvdW5kYXRpb24vZGVlcGxpbmtzL2ltcG9ydHMvY2xpZW50XCI7XHJcblxyXG5hc3luYyAob3B0aW9uczoge1xyXG4gIGRlZXA6IERlZXBDbGllbnQ7XHJcbiAgZGF0YToge1xyXG4gICAgbmV3TGluazogTGluazxudW1iZXI+O1xyXG4gIH07XHJcbn0pID0+IHtcclxuICBjb25zdCB7XHJcbiAgICBkZWVwLFxyXG4gICAgZGF0YTogeyBuZXdMaW5rOiBwYXJzZUl0TGluayB9LFxyXG4gIH0gPSBvcHRpb25zO1xyXG4gIGNvbnN0IHsgZGVmYXVsdDogdHMgfSA9IGF3YWl0IGltcG9ydChcInR5cGVzY3JpcHRcIik7XHJcbiAgY29uc3QgeyBkZWZhdWx0OiB1dGlsIH0gPSBhd2FpdCBpbXBvcnQoXCJ1dGlsXCIpO1xyXG4gIHRyeSB7XHJcbiAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBtYWluKCk7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICByZXN1bHQ6IHV0aWwuaW5zcGVjdChyZXN1bHQpLFxyXG4gICAgfTtcclxuICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgdGhyb3cge1xyXG4gICAgICBlcnJvcjogdXRpbC5pbnNwZWN0KGVycm9yKSxcclxuICAgIH07XHJcbiAgfVxyXG5cclxuICBhc3luYyBmdW5jdGlvbiBtYWluKCkge1xyXG4gICAgY29uc3Qge1xyXG4gICAgICBkYXRhOiBbcm9vdExpbmtdLFxyXG4gICAgfSA9IGF3YWl0IGRlZXAuc2VsZWN0KHtcclxuICAgICAgaWQ6IHBhcnNlSXRMaW5rLmZyb21faWQsXHJcbiAgICB9KTtcclxuICAgIGlmICghcm9vdExpbmspIHtcclxuICAgICAgdGhyb3cgbmV3IEVycm9yKGBwYXJzZUl0LnRvIGRvZXMgbm90IGV4aXN0OiAjIyR7cGFyc2VJdExpbmsuZnJvbV9pZH1gKTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgbGV0IG9iajtcclxuICAgIGlmKHR5cGVvZiByb290TGluay52YWx1ZT8udmFsdWUgPT09ICdvYmplY3QnKSB7XHJcbiAgICAgIG9iaiA9IHJvb3RMaW5rLnZhbHVlPy52YWx1ZTtcclxuICAgIH0gZWxzZSBpZiAodHlwZW9mIHJvb3RMaW5rLnZhbHVlPy52YWx1ZSA9PT0gJ3N0cmluZycpIHtcclxuICAgICAgdHJ5IHtcclxuICAgICAgICBvYmogPSBKU09OLnBhcnNlKHJvb3RMaW5rLnZhbHVlPy52YWx1ZSk7XHJcbiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGAjIyR7cm9vdExpbmsuaWR9IG11c3QgYmUgdmFsaWQgSlNPTiBpZiBpdCBpcyBhIHN0cmluZ2ApO1xyXG4gICAgICB9XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYCMjJHtyb290TGluay5pZH0gbXVzdCBoYXZlIHZhbHVlYCk7XHJcbiAgICB9XHJcbiAgICBpZiAoIW9iaikge1xyXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYCMjJHtyb290TGluay5pZH0gbXVzdCBoYXZlIHZhbHVlYCk7XHJcbiAgICB9XHJcblxyXG4gICAgY29uc3QgY2xpZW50SGFuZGxlclJlc3VsdCA9IGF3YWl0IGNhbGxDbGllbnRIYW5kbGVyKHtcclxuICAgICAgZGVlcCxcclxuICAgICAgbGlua0lkOiBhd2FpdCBkZWVwLmlkKGRlZXAubGlua0lkISwgXCJjbGllbnRIYW5kbGVyXCIpLFxyXG4gICAgICBhcmdzOiBbXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgZGVlcDogZGVlcCxcclxuICAgICAgICAgIG9iajogb2JqLFxyXG4gICAgICAgICAgcm9vdExpbmtJZDogcm9vdExpbmsuaWQsXHJcbiAgICAgICAgICByZXN1bHRMaW5rSWQ6IHBhcnNlSXRMaW5rLnRvX2lkLFxyXG4gICAgICAgICAgLy8gVE9ETz9cclxuICAgICAgICAgIC8vIGN1c3RvbU1ldGhvZHM6IG9wdGlvbnMuY3VzdG9tTWV0aG9kcyxcclxuICAgICAgICB9LFxyXG4gICAgICBdLFxyXG4gICAgfSk7XHJcblxyXG4gICAgcmV0dXJuIGNsaWVudEhhbmRsZXJSZXN1bHQ7XHJcbiAgfVxyXG5cclxuICBhc3luYyBmdW5jdGlvbiBjYWxsQ2xpZW50SGFuZGxlcihcclxuICAgIG9wdGlvbnM6IENhbGxDbGllbnRIYW5kbGVyT3B0aW9ucyxcclxuICApOiBQcm9taXNlPGFueT4ge1xyXG4gICAgY29uc3QgeyBsaW5rSWQsIGRlZXAsIGFyZ3MgfSA9IG9wdGlvbnM7XHJcbiAgICBjb25zdCBjb2RlID0gYXdhaXQgZGVlcFxyXG4gICAgICAuc2VsZWN0KHtcclxuICAgICAgICBpbjoge1xyXG4gICAgICAgICAgaWQ6IGxpbmtJZCxcclxuICAgICAgICB9LFxyXG4gICAgICB9KVxyXG4gICAgICAudGhlbigocmVzdWx0KSA9PiB7XHJcbiAgICAgICAgY29uc3QgbGluayA9IHJlc3VsdC5kYXRhWzBdO1xyXG4gICAgICAgIGlmICghbGluaylcclxuICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgVW5hYmxlIHRvIGZpbmQgU3luY1RleHRGaWxlIGZvciAjIyR7bGlua0lkfWApO1xyXG4gICAgICAgIGNvbnN0IGNvZGUgPSBsaW5rLnZhbHVlPy52YWx1ZTtcclxuICAgICAgICBpZiAoIWNvZGUpIHRocm93IG5ldyBFcnJvcihgIyMke2xpbmsuaWR9IG11c3QgaGF2ZSB2YWx1ZWApO1xyXG4gICAgICAgIHJldHVybiBjb2RlO1xyXG4gICAgICB9KTtcclxuXHJcbiAgICBjb25zdCBmdW5jdGlvbkV4cHJlc3Npb25TdHJpbmcgPSB0c1xyXG4gICAgICAudHJhbnNwaWxlTW9kdWxlKGNvZGUsIHtcclxuICAgICAgICBjb21waWxlck9wdGlvbnM6IHtcclxuICAgICAgICAgIG1vZHVsZTogdHMuTW9kdWxlS2luZC5FU05leHQsXHJcbiAgICAgICAgICBzb3VyY2VNYXA6IHRydWUsXHJcbiAgICAgICAgICB0YXJnZXQ6IHRzLlNjcmlwdFRhcmdldC5FU05leHQsXHJcbiAgICAgICAgfSxcclxuICAgICAgfSlcclxuICAgICAgLm91dHB1dFRleHQucmVwbGFjZShcImV4cG9ydCB7fVwiLCBcIlwiKTtcclxuICAgIGNvbnN0IGZuOiBGdW5jdGlvbiA9IGV2YWwoZnVuY3Rpb25FeHByZXNzaW9uU3RyaW5nKTtcclxuXHJcbiAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBmbiguLi5hcmdzKTtcclxuICAgIHJldHVybiByZXN1bHQ7XHJcbiAgfVxyXG5cclxuICBpbnRlcmZhY2UgQ2FsbENsaWVudEhhbmRsZXJPcHRpb25zIHtcclxuICAgIGRlZXA6IERlZXBDbGllbnRJbnN0YW5jZTtcclxuICAgIGxpbmtJZDogbnVtYmVyO1xyXG4gICAgYXJnczogQXJyYXk8YW55PjtcclxuICB9XHJcbn07XHJcbiJdfQ==",
        "link_id": 1823
      }
    },
    {
      "id": 1824,
      "type_id": 3,
      "from_id": 1741,
      "to_id": 1823,
      "value": {
        "id": 672,
        "value": "generated",
        "link_id": 1824
      }
    },
    {
      "id": 1825,
      "type_id": 143,
      "from_id": 1823,
      "to_id": 1741
    },
    {
      "id": 1826,
      "type_id": 3,
      "from_id": 1741,
      "to_id": 1825
    },
    {
      "id": 41,
      "type_id": 37,
      "from_id": 40,
      "to_id": 3
    },
    {
      "id": 110,
      "type_id": 39,
      "from_id": 109,
      "to_id": 99
    },
    {
      "id": 162,
      "type_id": 161,
      "from_id": 0,
      "to_id": 0
    },
    {
      "id": 163,
      "type_id": 1,
      "from_id": 161,
      "to_id": 108
    },
    {
      "id": 164,
      "type_id": 1,
      "from_id": 82,
      "to_id": 48
    },
    {
      "id": 165,
      "type_id": 164,
      "from_id": 141,
      "to_id": 49
    },
    {
      "id": 166,
      "type_id": 164,
      "from_id": 141,
      "to_id": 50
    },
    {
      "id": 167,
      "type_id": 164,
      "from_id": 141,
      "to_id": 51
    },
    {
      "id": 168,
      "type_id": 164,
      "from_id": 83,
      "to_id": 49
    },
    {
      "id": 169,
      "type_id": 164,
      "from_id": 83,
      "to_id": 50
    },
    {
      "id": 170,
      "type_id": 164,
      "from_id": 83,
      "to_id": 51
    },
    {
      "id": 171,
      "type_id": 164,
      "from_id": 83,
      "to_id": 74
    },
    {
      "id": 172,
      "type_id": 164,
      "from_id": 83,
      "to_id": 101
    },
    {
      "id": 173,
      "type_id": 164,
      "from_id": 83,
      "to_id": 108
    },
    {
      "id": 174,
      "type_id": 164,
      "from_id": 145,
      "to_id": 156
    },
    {
      "id": 175,
      "type_id": 36,
      "from_id": 0,
      "to_id": 0
    },
    {
      "id": 176,
      "type_id": 39,
      "from_id": 175,
      "to_id": 8
    },
    {
      "id": 177,
      "type_id": 37,
      "from_id": 175,
      "to_id": 10
    },
    {
      "id": 178,
      "type_id": 39,
      "from_id": 175,
      "to_id": 9
    },
    {
      "id": 179,
      "type_id": 37,
      "from_id": 175,
      "to_id": 11
    },
    {
      "id": 180,
      "type_id": 37,
      "from_id": 175,
      "to_id": 12
    },
    {
      "id": 181,
      "type_id": 39,
      "from_id": 175,
      "to_id": 52
    },
    {
      "id": 182,
      "type_id": 1,
      "from_id": 0,
      "to_id": 0
    },
    {
      "id": 183,
      "type_id": 36,
      "from_id": 0,
      "to_id": 0
    },
    {
      "id": 184,
      "type_id": 2,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 6,
        "value": "@deep-foundation/core",
        "link_id": 184
      }
    },
    {
      "id": 185,
      "type_id": 3,
      "from_id": 184,
      "to_id": 1,
      "value": {
        "id": 7,
        "value": "Type",
        "link_id": 185
      }
    },
    {
      "id": 186,
      "type_id": 3,
      "from_id": 184,
      "to_id": 2,
      "value": {
        "id": 8,
        "value": "Package",
        "link_id": 186
      }
    },
    {
      "id": 187,
      "type_id": 3,
      "from_id": 184,
      "to_id": 3,
      "value": {
        "id": 9,
        "value": "Contain",
        "link_id": 187
      }
    },
    {
      "id": 188,
      "type_id": 3,
      "from_id": 184,
      "to_id": 4,
      "value": {
        "id": 10,
        "value": "Value",
        "link_id": 188
      }
    },
    {
      "id": 189,
      "type_id": 3,
      "from_id": 184,
      "to_id": 5,
      "value": {
        "id": 11,
        "value": "String",
        "link_id": 189
      }
    },
    {
      "id": 190,
      "type_id": 3,
      "from_id": 184,
      "to_id": 6,
      "value": {
        "id": 12,
        "value": "Number",
        "link_id": 190
      }
    },
    {
      "id": 191,
      "type_id": 3,
      "from_id": 184,
      "to_id": 7,
      "value": {
        "id": 13,
        "value": "Object",
        "link_id": 191
      }
    },
    {
      "id": 192,
      "type_id": 3,
      "from_id": 184,
      "to_id": 8,
      "value": {
        "id": 14,
        "value": "Any",
        "link_id": 192
      }
    },
    {
      "id": 193,
      "type_id": 3,
      "from_id": 184,
      "to_id": 9,
      "value": {
        "id": 15,
        "value": "Promise",
        "link_id": 193
      }
    },
    {
      "id": 194,
      "type_id": 3,
      "from_id": 184,
      "to_id": 10,
      "value": {
        "id": 16,
        "value": "Then",
        "link_id": 194
      }
    },
    {
      "id": 195,
      "type_id": 3,
      "from_id": 184,
      "to_id": 11,
      "value": {
        "id": 17,
        "value": "Resolved",
        "link_id": 195
      }
    },
    {
      "id": 196,
      "type_id": 3,
      "from_id": 184,
      "to_id": 12,
      "value": {
        "id": 18,
        "value": "Rejected",
        "link_id": 196
      }
    },
    {
      "id": 197,
      "type_id": 3,
      "from_id": 184,
      "to_id": 13,
      "value": {
        "id": 19,
        "value": "typeValue",
        "link_id": 197
      }
    },
    {
      "id": 1084,
      "type_id": 3,
      "from_id": 1078,
      "to_id": 1075,
      "value": {
        "id": 433,
        "value": "dockerPythonSupportsCompatableHandleInsert",
        "link_id": 1084
      }
    },
    {
      "id": 1624,
      "type_id": 3,
      "from_id": 1616,
      "to_id": 1606,
      "value": {
        "id": 625,
        "value": "onActiveDeleteHandle",
        "link_id": 1624
      }
    },
    {
      "id": 1728,
      "type_id": 3,
      "from_id": 1721,
      "to_id": 1720,
      "value": {
        "id": 660,
        "value": "true",
        "link_id": 1728
      }
    },
    {
      "id": 1814,
      "type_id": 30,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 670,
        "value": "async (options) => {\n    const { deep, data: { newLink: rootLink, promiseId }, } = options;\n    await new Promise(res => {\n        const unsubscribe = deep.subscribe({\n            up: { tree_id: deep.idLocal('@deep-foundation/core', 'promiseTree'), parent_id: rootLink.id },\n            type_id: deep.idLocal('@deep-foundation/core', 'Promise'),\n            id: { _lte: promiseId },\n            _not: {\n                down: {\n                    tree_id: deep.idLocal('@deep-foundation/core', 'promiseTree'),\n                    link: {\n                        type_id: { _in: [deep.idLocal('@deep-foundation/core', 'Resolved'), deep.idLocal('@deep-foundation/core', 'Rejected')] }\n                    }\n                }\n            },\n        }).subscribe({ next: (links) => {\n                console.log('updateHandlerCode next', links);\n                if (!links.length) {\n                    unsubscribe();\n                    res();\n                }\n            }, error: (err) => {\n                unsubscribe();\n                console.log('updateHandlerCode error', err);\n            } });\n    });\n    const { default: ts } = await import(\"typescript\");\n    const { default: util } = await import(\"util\");\n    try {\n        const result = await main();\n        return {\n            result: util.inspect(result),\n        };\n    }\n    catch (error) {\n        throw {\n            error: util.inspect(error),\n        };\n    }\n    async function main() {\n        let obj;\n        if (typeof rootLink.value?.value === \"object\") {\n            obj = rootLink.value?.value;\n        }\n        else if (typeof rootLink.value?.value === \"string\") {\n            try {\n                obj = JSON.parse(rootLink.value?.value);\n            }\n            catch (error) {\n                throw new Error(`##${rootLink.id} must be valid JSON if it is a string`);\n            }\n        }\n        else {\n            throw new Error(`##${rootLink.id} must have value`);\n        }\n        if (!obj) {\n            throw new Error(`##${rootLink.id} must have value`);\n        }\n        const clientHandlerResult = await callClientHandler({\n            deep,\n            linkId: await deep.id(deep.linkId, \"clientHandler\"),\n            args: [\n                {\n                    deep: deep,\n                    obj: obj,\n                    rootLinkId: rootLink.id,\n                    resultLinkId: rootLink.to_id,\n                },\n            ],\n        });\n        return clientHandlerResult;\n    }\n    async function callClientHandler(options) {\n        const { linkId, deep, args } = options;\n        const code = await deep\n            .select({\n            in: {\n                id: linkId,\n            },\n        })\n            .then((result) => {\n            const link = result.data[0];\n            if (!link)\n                throw new Error(`Unable to find SyncTextFile for ##${linkId}`);\n            const code = link.value?.value;\n            if (!code)\n                throw new Error(`##${link.id} must have value`);\n            return code;\n        });\n        const functionExpressionString = ts\n            .transpileModule(code, {\n            compilerOptions: {\n                module: ts.ModuleKind.ESNext,\n                sourceMap: true,\n                target: ts.ScriptTarget.ESNext,\n            },\n        })\n            .outputText.replace(\"export {}\", \"\");\n        const fn = eval(functionExpressionString);\n        const result = await fn(...args);\n        return result;\n    }\n};\nexport {};\n//# sourceMappingURL=data:application/json;base64,",
        "link_id": 1814
      }
    },
    {
      "id": 1815,
      "type_id": 3,
      "from_id": 1739,
      "to_id": 1814,
      "value": {
        "id": 669,
        "value": "generated",
        "link_id": 1815
      }
    },
    {
      "id": 1816,
      "type_id": 143,
      "from_id": 1814,
      "to_id": 1739
    },
    {
      "id": 1817,
      "type_id": 3,
      "from_id": 1739,
      "to_id": 1816
    },
    {
      "id": 1780,
      "type_id": 3,
      "from_id": 1758,
      "to_id": 1745,
      "value": {
        "id": 692,
        "value": "Object",
        "link_id": 1780
      }
    },
    {
      "id": 1890,
      "type_id": 30,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 704,
        "value": "async (req, res, next, { deep, require, gql }) => {\n    const { PassThrough, Readable } = require('stream');\n    const express = require('express');\n    const http = require('http');\n    const ApolloServer = require('apollo-server-express').ApolloServer;\n    const { ApolloServerPluginDrainHttpServer, ApolloServerPluginLandingPageGraphQLPlayground } = require('apollo-server-core');\n    const axios = require('axios');\n    const ffmpeg = require('fluent-ffmpeg');\n    const FormData = require('form-data');\n    function base64ToStream(base64String) {\n        const base64Data = base64String.replace(/^data:[^;]+;base64,/, '');\n        const binaryData = Buffer.from(base64Data, 'base64');\n        const stream = new Readable();\n        stream.push(binaryData);\n        stream.push(null);\n        return stream;\n    }\n    const typeDefs = `\n        input Voice {\n            id: Int!\n            record: String!\n            duration: Float!\n            mimeType: String!\n        }\n        type Query { deepmemo_upload(voice: Voice!): String }\n    `;\n    const resolvers = {\n        Query: { deepmemo_upload: async (parent, { voice: { id, record, duration, mimeType } }, contextValue, info) => {\n                let inputFormat;\n                if (mimeType.includes('audio/webm')) {\n                    inputFormat = 'webm';\n                }\n                else if (mimeType.includes('audio/aac')) {\n                    inputFormat = 'aac';\n                }\n                else if (mimeType.includes('audio/mp4')) {\n                    inputFormat = 'mp4';\n                }\n                else\n                    return 'not supported type';\n                return new Promise((res, rej) => {\n                    const stream = new PassThrough();\n                    let chunkData = [];\n                    stream.on('data', chunk => {\n                        chunkData.push(chunk);\n                    });\n                    ffmpeg()\n                        .input(base64ToStream(record))\n                        .inputFormat(inputFormat)\n                        .outputFormat('mp3')\n                        .on('end', () => {\n                        stream.end();\n                        const byteArray = Buffer.concat(chunkData);\n                        const form = new FormData();\n                        form.append('file', byteArray, { type: 'audio/mp3', filename: `${id}.mp3` });\n                        axios.post(`http://${deep.client.path.slice(0, -4)}/file`, form, {\n                            headers: {\n                                linkId: id,\n                                Authorization: contextValue?.headers?.authorization,\n                                ...form.getHeaders(),\n                            },\n                        })\n                            .then((r) => {\n                            res('done');\n                        })\n                            .catch((e) => {\n                            console.error(e);\n                            rej('error');\n                        });\n                    })\n                        .pipe(stream, { end: true });\n                });\n            } },\n    };\n    const context = ({ req }) => { return { headers: req.headers }; };\n    const generateApolloServer = () => {\n        return new ApolloServer({\n            introspection: true,\n            typeDefs,\n            resolvers,\n            context,\n            plugins: [\n                ApolloServerPluginLandingPageGraphQLPlayground(),\n            ],\n        });\n    };\n    const router = express.Router();\n    const apolloServer = generateApolloServer();\n    await apolloServer.start();\n    apolloServer.applyMiddleware({ app: router, path: '/' });\n    router.handle(req, res);\n};\n//# sourceMappingURL=data:application/json;base64,",
        "link_id": 1890
      }
    },
    {
      "id": 1891,
      "type_id": 3,
      "from_id": 1834,
      "to_id": 1890,
      "value": {
        "id": 703,
        "value": "generated",
        "link_id": 1891
      }
    },
    {
      "id": 1892,
      "type_id": 143,
      "from_id": 1890,
      "to_id": 1834
    },
    {
      "id": 1893,
      "type_id": 3,
      "from_id": 1834,
      "to_id": 1892
    },
    {
      "id": 1197,
      "type_id": 3,
      "from_id": 1190,
      "to_id": 1189,
      "value": {
        "id": 471,
        "value": "ModelValue",
        "link_id": 1197
      }
    },
    {
      "id": 1300,
      "type_id": 1219,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 506,
        "value": "https://deep-ai.openai.azure.com/openai/deployments/gpt-4-128k/chat/completions?api-version=2023-03-15-preview",
        "link_id": 1300
      }
    },
    {
      "id": 1325,
      "type_id": 3,
      "from_id": 1316,
      "to_id": 1301,
      "value": {
        "id": 517,
        "value": "gpt-4-32k",
        "link_id": 1325
      }
    },
    {
      "id": 1326,
      "type_id": 3,
      "from_id": 1316,
      "to_id": 1305,
      "value": {
        "id": 518,
        "value": "gpt-35-turbo-16k-max-tokens",
        "link_id": 1326
      }
    },
    {
      "id": 1327,
      "type_id": 3,
      "from_id": 1316,
      "to_id": 1306,
      "value": {
        "id": 519,
        "value": "gpt-35-turbo-16k-providedBy",
        "link_id": 1327
      }
    },
    {
      "id": 1332,
      "type_id": 3,
      "from_id": 1316,
      "to_id": 1311,
      "value": {
        "id": 524,
        "value": "gpt-4o-max-tokens",
        "link_id": 1332
      }
    },
    {
      "id": 1334,
      "type_id": 3,
      "from_id": 1316,
      "to_id": 1310,
      "value": {
        "id": 526,
        "value": "gpt-4o",
        "link_id": 1334
      }
    },
    {
      "id": 1337,
      "type_id": 3,
      "from_id": 1316,
      "to_id": 1297,
      "value": {
        "id": 529,
        "value": "gpt-35-turbo-16k-endpoint",
        "link_id": 1337
      }
    },
    {
      "id": 1404,
      "type_id": 1,
      "from_id": 1403,
      "to_id": 1116
    },
    {
      "id": 1407,
      "type_id": 1,
      "from_id": 1213,
      "to_id": 1213
    },
    {
      "id": 1408,
      "type_id": 30,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 545,
        "value": "async ({ require, deep, data: { newLink, triggeredByLinkId } }) => {\r\n    const Conversation = await deep.id(\"@deep-foundation/chatgpt-azure\", \"Conversation\");\r\n    const Result = await deep.id(\"@deep-foundation/chatgpt-azure-templates\", \"Result\");\r\n    const Message = await deep.id(\"@deep-foundation/messaging\", \"Message\");\r\n    const Contain = await deep.id(\"@deep-foundation/core\", \"Contain\");\r\n    const Reply = await deep.id(\"@deep-foundation/chatgpt-azure\", 'Reply');\r\n    const Continue = await deep.id(deep.linkId, \"Continue\");\r\n\r\n    const { data: [template] } = await deep.select(newLink.from_id);\r\n    const { data: [cont] } = await deep.select({\r\n        type_id: Continue,\r\n        from_id: newLink.id,\r\n    });\r\n\r\n    const evalTemplate = async (options) => {\r\n        const { linkId, deep, template } = options;\r\n        const result = eval('(async () => (`'+template+'`))()');\r\n        return result;\r\n    }\r\n\r\n    const linkId = newLink.to_id;\r\n    const value = template?.value?.value || '';\r\n    const result = await evalTemplate({ linkId, deep, template: value });\r\n\r\n    const { data: [{ id: messageLinkId }] } = await deep.insert({\r\n        string: { data: { value: result } },\r\n        type_id: Message,\r\n        in: { data: [\r\n            {\r\n                type_id: Contain,\r\n                from_id: newLink.from_id,\r\n            },\r\n            {\r\n                type_id: Result,\r\n                from_id: newLink.id,\r\n                in: {\r\n                    data: {\r\n                        type_id: Contain,\r\n                        from_id: newLink.from_id,\r\n                    },\r\n                },\r\n            },\r\n        ] },\r\n    });\r\n\r\n    await deep.insert({\r\n        type_id: Reply,\r\n        from_id: messageLinkId,\r\n        ...(cont ? {\r\n            to_id: cont.to_id,\r\n        } : {\r\n            to: { data: {\r\n                type_id: Conversation,\r\n                in: { data: {\r\n                    type_id: Contain,\r\n                    from_id: newLink.id,\r\n                } },\r\n            } },\r\n        }),\r\n        in: { data: [{\r\n                type_id: Contain,\r\n                from_id: newLink.id,\r\n        }] }\r\n    });\r\n\r\n    return {\r\n        templateId: linkId,\r\n        template: template?.value?.value,\r\n        result,\r\n    };\r\n}",
        "link_id": 1408
      }
    },
    {
      "id": 1409,
      "type_id": 35,
      "from_id": 83,
      "to_id": 1408
    },
    {
      "id": 1417,
      "type_id": 3,
      "from_id": 1411,
      "to_id": 1410,
      "value": {
        "id": 548,
        "value": "HandleTemplate",
        "link_id": 1417
      }
    },
    {
      "id": 1452,
      "type_id": 17,
      "from_id": 0,
      "to_id": 0
    },
    {
      "id": 1453,
      "type_id": 15,
      "from_id": 0,
      "to_id": 0
    },
    {
      "id": 1454,
      "type_id": 15,
      "from_id": 0,
      "to_id": 0
    },
    {
      "id": 1466,
      "type_id": 16,
      "from_id": 1464,
      "to_id": 125
    },
    {
      "id": 1484,
      "type_id": 1,
      "from_id": 0,
      "to_id": 0
    },
    {
      "id": 1485,
      "type_id": 146,
      "from_id": 1484,
      "to_id": 1484,
      "value": {
        "id": 564,
        "value": "🤖",
        "link_id": 1485
      }
    },
    {
      "id": 1490,
      "type_id": 164,
      "from_id": 83,
      "to_id": 1489
    },
    {
      "id": 1492,
      "type_id": 146,
      "from_id": 1491,
      "to_id": 1491,
      "value": {
        "id": 565,
        "value": "💥",
        "link_id": 1492
      }
    },
    {
      "id": 1493,
      "type_id": 51,
      "from_id": 1491,
      "to_id": 1471
    },
    {
      "id": 1494,
      "type_id": 49,
      "from_id": 1491,
      "to_id": 1478
    },
    {
      "id": 1495,
      "type_id": 2,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 566,
        "value": "@deep-foundation/telegram-bot",
        "link_id": 1495
      }
    },
    {
      "id": 1501,
      "type_id": 3,
      "from_id": 1495,
      "to_id": 1485,
      "value": {
        "id": 568,
        "value": "botSymbol",
        "link_id": 1501
      }
    },
    {
      "id": 1502,
      "type_id": 3,
      "from_id": 1495,
      "to_id": 1486,
      "value": {
        "id": 569,
        "value": "messagingTreeIncludeBot",
        "link_id": 1502
      }
    },
    {
      "id": 1503,
      "type_id": 3,
      "from_id": 1495,
      "to_id": 1488,
      "value": {
        "id": 570,
        "value": "HandleTelegramBotOutSupportsCompatable",
        "link_id": 1503
      }
    },
    {
      "id": 1504,
      "type_id": 3,
      "from_id": 1495,
      "to_id": 1487,
      "value": {
        "id": 571,
        "value": "HandleTelegramBotOut",
        "link_id": 1504
      }
    },
    {
      "id": 1505,
      "type_id": 3,
      "from_id": 1495,
      "to_id": 1490,
      "value": {
        "id": 572,
        "value": "HandleTelegramBotInSupportsCompatable",
        "link_id": 1505
      }
    },
    {
      "id": 1507,
      "type_id": 3,
      "from_id": 1495,
      "to_id": 1492,
      "value": {
        "id": 574,
        "value": "activeSymbol",
        "link_id": 1507
      }
    },
    {
      "id": 1509,
      "type_id": 3,
      "from_id": 1495,
      "to_id": 1494,
      "value": {
        "id": 576,
        "value": "onActiveInsertHandle",
        "link_id": 1509
      }
    },
    {
      "id": 1524,
      "type_id": 3,
      "from_id": 1495,
      "to_id": 1458,
      "value": {
        "id": 591,
        "value": "tuaimRuleObjectMessage",
        "link_id": 1524
      }
    },
    {
      "id": 1525,
      "type_id": 3,
      "from_id": 1495,
      "to_id": 1461,
      "value": {
        "id": 592,
        "value": "tuaimRuleObjectReplyTree",
        "link_id": 1525
      }
    },
    {
      "id": 1526,
      "type_id": 3,
      "from_id": 1495,
      "to_id": 1460,
      "value": {
        "id": 593,
        "value": "tuaimRuleObjectReply",
        "link_id": 1526
      }
    },
    {
      "id": 1598,
      "type_id": 22,
      "from_id": 0,
      "to_id": 0
    },
    {
      "id": 1600,
      "type_id": 1116,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 614,
        "value": "Играй роль моей второй памяти, восприятия и мышления. Тебя зовут Джарвис. Постарайся пожалуйста быть моим лучшим партнером и ассистентом.\n\nПредоставляю тебе доступ к моей памяти, это документация для того что бы ты мог генерировать запросы. Иногда я буду просить что нибудь сделать. Например если я прошу найти для меня что-то, я имею в веду найти в предоставленной тебе памяти через переменную deep. Если ты предложишь код на исполнение - я его выполню автоматически, и результат выполнения передам тебе.\n\nГлубина индексирует ассоциативное поле не только по значениям и указателям, а так-же прошивая связи сквозными мультиродительскими мультинаправленными деревьями. Благодаря этой индексации используя GraphQL API и Deep.Client можно делать запросы о включенности определенных связей. Например:\n\nЕсть дерево containTree (экземпляр связи Tree), в которое включены все связи связью { type_id: TreeIncludeNode, from_id: containTree, to_id: Type } и включены экземпляры типа связи Contain связью { type_id: TreeIncludeFromCurrentTo, from_id: containTree, to_id: Contain }. Мы используем связи типа Contain как аналог вложенности в файловой системе, в том числе указывая в value у этих связей имена вложенных сущностей.\n\nДопустим у нас есть некоторая связь, Найди всех тех пользователей которые есть выше по дереву владения, тем или иным способом владеющих по дереву containTree ею.\n\nawait deep.select({\n  type_id: { _id: [”@deep-foundation/core”,”User”] }\n  down: { tree_id: { _id: [”@deep-foundation/core”,”containTree”] }, link_id: 123 },\n});\n\nТакой запрос вернет { data: Link[] } в котором будут все те пользователи выше по дереву вложенности.\n\nВсе варианты включения типов в деревья:\nTreeIncludeDown, TreeIncludeUp, TreeIncludeNode, TreeIncludeIn, TreeIncludeOut, TreeIncludeFromCurrent, TreeIncludeToCurrent, TreeIncludeCurrentFrom, TreeIncludeCurrentTo, TreeIncludeFromCurrentTo, TreeIncludeToCurrentFrom\n\nОдин тип связи может быть многократно включен в разные деревья разными способами. Это значит что одна связь может быть одновременно во множестве деревьев, где-то нести причастность к дереву от одной связи к другой как это делает Contain из-за TreeIncludeFromCurrentTo, другие, например, принимать от своих from и to причастность к дереву к себе но не передавать с помощью TreeIncludeIn или наоборот раздавать на from и to от себя причастность к дереву.\n\nБлагодаря деревьям, в Глубине работают очень многие механики.\n\nСелектор - это подмножество связей позволяющих в ассоциативной памяти выделить связями диапазон связей по определенным деревьям.\n\nSelector - связь символизирующая один экземпляр “выделения” некоторого диапазона. Он может быть использован, например, что бы подписаться на флуктуации поля связей в этом диапазоне, или что бы применить к нему правила/права.\n\nSelectorInclude - (от selector на некоторую связь) указывает на ту связь от которой и далее вниз применится “выделение”.\n\nSelectorExclude - (от selector на некоторую связь) указывает на связи начиная от которых и ниже необходимо исключить диапазон из выделения. Например SelectorInclude указывает на весь диапозон данных от пользователя и ниже, а SelectorExclude исключает из этого определенную часть памяти, что бы по этому селектору дать своему другу - другому пользователю избирательный доступ.\n\nSelectorTree - (от SelectorInclude или SelectorExclude, ведет на экземпляр типа Tree) обязательная связь, сообщает по какому именно дереву делается выделение. Например указывает на containTree.\n\nSelectorFIlter - (от Selector на Query) позволяет добавить дополнительный запрос проверки после попадания. Например при проверки прав важно что связь не просто попадает в диапозон но и есть связьведущая на предмет подтверждающая факт оплаты в рамках вашего проекта, которую вы создали когда оплата прошла: { in: { type_id: { _id: [”@myproject”,”payed”], from_id: “X-Deep-User-Id” } } }\n\nВ правиле (Rule) связи RuleSubject, RuleObject, RuleAction от экземпляра Rule ведут всегда к некоторому Selector указывающему на диапазон.\n\nВ системе исполнения кода, как синхронной так и синхронной оркестрации, подписка на флуктуации такая как HandleInsert, HandleUpdate, HandleDelete и другие могут вести на селекторы что бы отслеживать события и выполнять код на любом языке в связи с ними.\n\nСелекторы очень удобно использовать как способ выделить что-то,  на будущее, динамически и по каким либо критериям.\n\n\nВ Глубине можно создать SyncTextFile с value куда поместить любой код на любом языке программирования.\nРазработчики на framework-е Глубины создают пакеты для поддержки множество сред выполнения. Для этого создаются вот такие контейнеры создающие среду выполнения, которой способен оперировать оркестратор Глубины автоматически.\nЧтобы код мог был выполнен, его необходимо привязать связью типа Handler от заранее созданного или установленным из пакетного менеджера Supports определенного окружения к связи кода.\nКод обрабатывается пока есть связь Handle*, если ее создать обработка начинается, если ее удалить обработка прекратиться.\nЧтобы привязать код к определенному событию в системе заранее созданы связи-типы, которые можно связать от Handler к некоторой причине выполнения:\n\nHandleInsert - выполнить handle.from когда у handle.to происходит событие insert, handle.to может быть типом, тогда наблюдение будет за экземплярами, либо handle.to может вести на селектор, в таком случае наблюдение будет за событием в диапазоне связей.\nHandleUpdate - выполнить handle.from когда у handle.to происходит событие update, handle.to может быть типом, тогда наблюдение будет за экземплярами, либо handle.to может вести на селектор, в таком случае наблюдение будет за событием в диапазоне связей.\nHandleDelete - выполнить handle.from когда у handle.to происходит событие delete, handle.to может быть типом, тогда наблюдение будет за экземплярами, либо handle.to может вести на селектор, в таком случае наблюдение будет за событием в диапазоне связей.\nHandleRoute - существуют связи Port (поднимает новый обработчик порта), Router (символ маршрутизатора), Route (конкретный обрабатываемый роут в стандарте expressjs), этот handle привязывает некоторый код на любом языке как обработчик запросов по указанному пути на указанном порте, при этом порт может быть не только новый но и PORT на котором развернут Deep.Links сервер\nHandlePort - если им указать от экземпляра Port с value=портом связи на экземпляр JSDockerIsolationProvider с value=именем Docker контейнера, Глубина сама установит поднимет будет обновлять этот контейнер пробросив определенный порт на него.\nHandleGql - если некоторый HandleRoute уже обрабатывает некоторый код, то в нем можно написать GraphQL сервер, а HandleGql позволяет добавить эту GraphQL схему к основной mainGqlEndpoint\nHandleSchedule - должен вести на Schedule содержащий в качестве value строку в стандарте CRON, запускает хендлер по таймеру\n\nМожно создавать свои Handle* связи. Они считаются совместимыми с Supports если от Supports экземпляра на тип Handle* ведет связь SupportsCompatable. Можно создавать любые обстоятельства выполнения, и и выполнять код при любых условиях.\n\nexport type Query = BoolExpLink | number;\n\nexport type LinkToLinksRelations = 'from' | 'to' | 'type' | 'in' | 'out' | 'typed';\n\nexport interface QueryLink extends BoolExpLink {\n  limit?: number;\n  order_by?: { [key: string]: 'asc'|'desc' };\n  offset?: number;\n  distinct_on?: [string];\n  return?: QueryLinkReturn;\n}\n\nexport interface QueryLinkReturn extends QueryLink {\n  relation: LinkToLinksRelations;\n}\n\nexport interface BoolExp<T> {\n  _and?: T[];\n  _or?: T[];\n  _not?: T;\n}\nexport interface BoolExpLink extends BoolExp<BoolExpLink> {\n  id?: ComparasionType<Id>;\n  from_id?: ComparasionType<Id>;\n  to_id?: ComparasionType<Id>;\n  type_id?: ComparasionType<Id>;\n  _id?: ComparasionType<Id>;\n  _from_id?: ComparasionType<Id>;\n  _to_id?: ComparasionType<Id>;\n  _type_id?: ComparasionType<Id>;\n  from?: BoolExpLink;\n  to?: BoolExpLink;\n  type?: BoolExpLink;\n  /** Links related to current by to_id field */\n  in?: BoolExpLink | BoolExpLink[];\n  /** Links related to current by from_id field */\n  out?: BoolExpLink | BoolExpLink[];\n  /** Links related to current by type_id field */\n  typed?: BoolExpLink | BoolExpLink[];\n  /** Selected by this link as selector (usable only for Selector typed links) */\n  selected?: BoolExpSelector | BoolExpSelector[];\n  /** Selectors that select current link. */\n  selectors?: BoolExpSelector | BoolExpSelector[];\n  /** Value type number definition. */\n  number?: BoolExpValue<number>;\n  /** Value type string definition. */\n  string?: BoolExpValue<string>;\n  /** Value type object definition. */\n  object?: BoolExpValue<object>;\n  /** Value (number/string/object shortly). */\n  value?: BoolExpValue<any>;\n  /** Relation to current rule. */\n  can_rule?: BoolExpCan;\n  /** Relation to rules where current link used as action. */\n  can_action?: BoolExpCan;\n  /** Relation to rules where current link used as object. */\n  can_object?: BoolExpCan;\n  /** Relation to rules where current link used as subject. */\n  can_subject?: BoolExpCan;\n  /** Links down by all available trees. (Use link_id for search) */\n  down?: BoolExpTree;\n  /** Links up by all available trees. (Use parent_id for search) */\n  up?: BoolExpTree;\n  /** Links using this link as a tree. */\n  tree?: BoolExpTree;\n  /** Links using this link as a root. */\n  root?: BoolExpTree;\n}\nexport interface BoolExpValue<T> extends BoolExp<BoolExpValue<T>> {\n  id?: ComparasionType<Id>;\n  /** If of link that contains this value. */\n  link_id?: ComparasionType<Id>;\n  /** Relation to the link that contains this value. */\n  link?: BoolExpLink;\n  value?: ComparasionType<T>;\n}\nexport interface BoolExpCan extends BoolExp<BoolExpCan> {\n  /** Link of current rule. */\n  rule_id?: ComparasionType<Id>;\n  /** Id of link symbolizing action, as AllowSelect/AllowInsertType/AllowUpdat e/AllowDelete...*/\n  action_id?: ComparasionType<Id>;\n  /** Id of link symbolizing object to which the rule applies. */\n  object_id?: ComparasionType<Id>;\n  /** Id of link for which, as an authorized link, the rule to action on the object i s granted.*/\n  subject_id?: ComparasionType<Id>;\n  /** Relation to link symbolizing action, as AllowSelect/AllowInsertType/AllowUpdat e/AllowDelete...*/\n  rule?: BoolExpLink;\n  /** Relation to link symbolizing object to which the rule applies. */\n  action?: BoolExpLink;\n  /** Relation to link symbolizing object to which the rule applies. */\n  object?: BoolExpLink;\n  /** Relation to link for which, as an authorized link, the rule to action on th e object is granted.*/\n  subject?: BoolExpLink;\n}\nexport interface BoolExpSelector extends BoolExp<BoolExpCan> {\n  /** Id of link item to be matched by the selector. */\n  item_id?: ComparasionType<Id>;\n  /** Relation to link item to be matched by the selector. */\n  item?: BoolExpLink;\n  /** Id of link selector that the item includes. */\n  selector_id?: ComparasionType<Id>;\n  /** Relation to link selector that the item includes. */\n  selector?: BoolExpLink;\n  /** Id of Query - boolean expression attached to a selector. */\n  query_id?: ComparasionType<Id>;\n  /** Relation to Query - boolean expression attached to a selector. */\n  query?: BoolExpLink;\n  selector_include_id?: ComparasionType<Id>;\n}\nexport interface BoolExpTree extends BoolExp<BoolExpCan> {\n  id?: ComparasionType<Id>;\n  /** Current link id. */\n  link_id?: ComparasionType<Id>;\n  /** Id of link used as tree. */\n  tree_id?: ComparasionType<Id>;\n  /** Root link id by current subtree. */\n  root_id?: ComparasionType<Id>;\n  /** Each parent link id where found upper from link_id */\n  parent_id?: ComparasionType<Id>;\n  /** Depth in subtree of parent_id from root_id */\n  depth?: ComparasionType<string>;\n  /** Equal string for all parent_id in subtree from root_id to link_id. */\n  position_id?: ComparasionType<string>;\n  /** Relation to current link. */\n  link?: BoolExpLink;\n  /** Relation to link used as tree. */\n  tree?: BoolExpLink;\n  /** Relation to root link by current subtree. */\n  root?: BoolExpLink;\n  /** Relation to each parent link found upper from link_id. */\n  parent?: BoolExpLink;\n  /** Relation to all tree rows with equal link_id. */\n  by_link?: BoolExpTree;\n  /** Relation to all tree rows with equal tree_id. */\n  by_tree?: BoolExpTree;\n  /** Relation to all tree rows with equal root_id. */\n  by_root?: BoolExpTree;\n  /** Relation to all tree rows with equal parent_id. */\n  by_parent?: BoolExpTree;\n  /** Relation to all tree rows with equal position_id. */\n  by_position?: BoolExpTree;\n}\nexport interface BoolExpHandler extends BoolExp<BoolExpCan> {\n  /** Id of link with distribution version of executable handler content. */\n  dist_id?: ComparasionType<Id>;\n  /** Relation to link with distribution version of executable handler content. */\n  dist?: BoolExpLink;\n  /** Id of link with source version of executable handler content. */\n  src_id?: ComparasionType<Id>;\n  /** Relation to link with source version of executable handler content. */\n  src?: BoolExpLink;\n  /** Id of link ExecutionProvider. */\n  execution_provider_id?: ComparasionType<Id>;\n  /** Relation to link ExecutionProvider. */\n  execution_provider?: BoolExpLink;\n  /** Id of link IsolationProvider. */\n  isolation_provider_id?: ComparasionType<Id>;\n  /** Relation to link IsolationProvider. */\n  isolation_provider?: BoolExpLink;\n  /** Id of Handler link. */\n  handler_id?: ComparasionType<Id>;\n  /** Relation to Handler link. */\n  handler?: BoolExpLink;\n}\nexport type ComparasionType<T> = ComparasionExp<T> | T;\nexport interface ComparasionExp<T> {\n  _eq?: T;\n  _neq?: T;\n  _gt?: T;\n  _gte?: T;\n  _lt?: T;\n  _lte?: T;\n  _is_null?: boolean;\n  _in?: T[];\n  _nin?: T[];\n  _type_of?: T;\n  _id?: [any, ...any[]];\n  _like?: string;\n  _ilike?: string;\n  _nlike?: string;\n  _nilike?: string;\n  _regex?: string;\n  _nregex?: string;\n  _iregex?: string;\n  _niregex?: string;\n}\nexport interface MutationInput {}\nexport interface MutationInputLinkPlain {\n  id?: Id;\n  from_id?: Id;\n  to_id?: Id;\n  type_id?: Id;\n  from?: { data: MutationInputLink } | MutationInputLink;\n  to?: { data: MutationInputLink } | MutationInputLink;\n  out?: { data: MutationInputLink | MutationInputLink[] } | MutationInputLink | MutationInputLink[];\n  in?: { data: MutationInputLink | MutationInputLink[] } | MutationInputLink | MutationInputLink[];\n  number?: { data: MutationInputValue<number> } | number;\n  string?: { data: MutationInputValue<string> } | string;\n  object?: { data: MutationInputValue<any> } | any;\n  typed?: { data: MutationInputLink | MutationInputLink[] };\n}\nexport interface MutationInputLink extends MutationInputLinkPlain {\n  from?: { data: MutationInputLink } | MutationInputLink;\n  to?: { data: MutationInputLink } | MutationInputLink;\n  out?: { data: MutationInputLink | MutationInputLink[] } | MutationInputLink | MutationInputLink[];\n  in?: { data: MutationInputLink | MutationInputLink[] } | MutationInputLink | MutationInputLink[];\n  number?: { data: MutationInputValue<number> } | number;\n  string?: { data: MutationInputValue<string> } | string;\n  object?: { data: MutationInputValue<any> } | any;\n  typed?: { data: MutationInputLink | MutationInputLink[] };\n}\nexport interface MutationInputValue<T> {\n  link_id?: Id;\n  link?: { data: MutationInputLink };\n  value?: T;\n}\n\nexport type Exp<TTable extends Table = 'links'> = (\n  TTable extends 'numbers' ? BoolExpValue<number> :\n  TTable extends 'strings' ? BoolExpValue<string> :\n  TTable extends 'objects' ? BoolExpValue<object> :\n  TTable extends 'can' ? BoolExpCan :\n  TTable extends 'selectors' ? BoolExpSelector :\n  TTable extends 'tree' ? BoolExpTree :\n  TTable extends 'handlers' ? BoolExpHandler :\n  QueryLink\n) | Id | Id[];\n\nexport type UpdateValue<TTable extends Table = 'links'> = (\n  TTable extends 'numbers' ? MutationInputValue<number> :\n  TTable extends 'strings' ? MutationInputValue<string> :\n  TTable extends 'objects' ? MutationInputValue<any> :\n  MutationInputLinkPlain\n);\n\nexport type InsertObjects<TTable extends Table = 'links'> = (\n  TTable extends 'numbers' ? MutationInputValue<number> :\n  TTable extends 'strings' ? MutationInputValue<string> :\n  TTable extends 'objects' ? MutationInputValue<any> :\n  MutationInputLink\n) | (\n  TTable extends 'numbers' ? MutationInputValue<number> :\n  TTable extends 'strings' ? MutationInputValue<string> :\n  TTable extends 'objects' ? MutationInputValue<any> :\n  MutationInputLink\n)[]\n\nexport type Options<TTable extends Table = 'links'> = {\n  table?: TTable;\n  tableNamePostfix?: string;\n  returning?: string;\n  variables?: any;\n  name?: string;\n  aggregate?: 'count' | 'sum' | 'avg' | 'min' | 'max';\n  mini?: string;\n  deep?: DeepClient<Link<Id>>;\n  subscription?: boolean;\n};\n\nexport type ReadOptions<TTable extends Table = 'links'> = Options<TTable>;\n\nexport type WriteOptions<TTable extends Table = 'links'>  = Options<TTable> & {\n  silent?: boolean;\n  remote?: boolean;\n  local?: boolean;\n}\n\nexport interface DeepClientInstance<L extends Link<Id> = Link<Id>> {\n  linkId?: Id;\n\n  select<TTable extends 'links'|'numbers'|'strings'|'objects'|'can'|'selectors'|'tree'|'handlers', LL = L>(exp: Exp<TTable>, options?: ReadOptions<TTable>): Promise<DeepClientResult<LL[] | number>>;\n  subscribe<TTable extends 'links'|'numbers'|'strings'|'objects'|'can'|'selectors'|'tree'|'handlers', LL = L>(exp: Exp<TTable>, options?: ReadOptions<TTable>): Observable<LL[] | number>;\n\n  insert<TTable extends 'links'|'numbers'|'strings'|'objects', LL = L>(objects: InsertObjects<TTable> , options?: WriteOptions<TTable>):Promise<DeepClientResult<{ id }[]>>;\n\n  update<TTable extends 'links'|'numbers'|'strings'|'objects'>(exp: Exp<TTable>, value: UpdateValue<TTable>, options?: WriteOptions<TTable>):Promise<DeepClientResult<{ id }[]>>;\n\n  delete<TTable extends 'links'|'numbers'|'strings'|'objects'>(exp: Exp<TTable>, options?: WriteOptions<TTable>):Promise<DeepClientResult<{ id }[]>>;\n\n  serial(options: AsyncSerialParams): Promise<DeepClientResult<{ id }[]>>;\n\n  reserve<LL = L>(count: number): Promise<Id[]>;\n\n  await(id: Id): Promise<boolean>;\n \n  id(start: DeepClientStartItem | Exp, ...path: DeepClientPathItem[]): Promise<Id>;\n  idLocal(start: DeepClientStartItem, ...path: DeepClientPathItem[]): Id;\n\n  guest(options: DeepClientGuestOptions): Promise<DeepClientAuthResult>;\n\n  jwt(options: DeepClientJWTOptions): Promise<DeepClientAuthResult>;\n\n  login(options: DeepClientJWTOptions): Promise<DeepClientAuthResult>;\n\n  logout(): Promise<DeepClientAuthResult>;\n\n  can(objectIds: Id[], subjectIds: Id[], actionIds: Id[]): Promise<boolean>;\n\n  Traveler(links: Link<Id>[]): NativeTraveler;\n}\n\nЕсли пишешь код, ВСЕГДА выделяй его тремся косыми ковычками ууказывая javascript, и пиши перед ним ключевое слово DEEP_MEMORY_EXECUTE. Тогда код будет выполняться автоматически и ты будешь получать результаты, имея возможность продолжать твою работу. Если тебя просят осмотреться, посмотреть на что-то, найти что-то или изучить - это может значить: напиши код результат выполнения которого позволит тебе ответить на этот вопрос, если он будет выполнен. То что ты хочешь получить из исполняемого кода, верни с помощью return. Не используй console.log.",
        "link_id": 1600
      }
    },
    {
      "id": 1601,
      "type_id": 30,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 615,
        "value": "async ({ deep, data: { newLink } }) => {\n    const selector = await deep.id(deep.linkId, 'inSelector');\n    const executor = await deep.id(deep.linkId, 'executor');\n    const reader = await deep.id(deep.linkId, 'reader');\n    const HandleTelegramBotIn = await deep.id('@deep-foundation/telegram-bot', 'HandleTelegramBotIn');\n    const onTelegramBotInHandler = await deep.id(deep.linkId, 'onTelegramBotInHandler');\n    const HandleTelegramBotOut = await deep.id('@deep-foundation/telegram-bot', 'HandleTelegramBotOut');\n    const onTelegramBotOutHandler = await deep.id(deep.linkId, 'onTelegramBotOutHandler');\n    const messagingTree = await deep.id('@deep-foundation/messaging', 'messagingTree');\n    const systemMessage = await deep.id(deep.linkId, 'systemMessage');\n    const System = await deep.id('@deep-foundation/chatgpt-azure', 'System');\n\n    const Join = deep.idLocal('@deep-foundation/core', 'Join');\n    const Contain = deep.idLocal('@deep-foundation/core', 'Contain');\n    const SelectorTree = deep.idLocal('@deep-foundation/core', 'SelectorTree');\n    const SelectorInclude = deep.idLocal('@deep-foundation/core', 'SelectorInclude');\n\n    const contain = (value, from_id) => ({\n        in: { data: {\n            type_id: Contain,\n            from_id: from_id,\n            string: { data: { value } },\n        } },\n    });\n\n    await deep.insert([\n        {\n            type_id: SelectorInclude,\n            from_id: selector,\n            to_id: newLink.to_id,\n            ...contain('include'+newLink.to_id, selector),\n            out: { data: {\n                type_id: SelectorTree,\n                to_id: messagingTree,\n                ...contain('tree'+newLink.to_id, selector),\n            } },\n        },\n        {\n            type_id: HandleTelegramBotIn,\n            from_id: newLink.to_id,\n            to_id: onTelegramBotInHandler,\n            ...contain('handleTelegramBotIn'+newLink.to_id, selector),\n        },\n        {\n            type_id: HandleTelegramBotOut,\n            from_id: newLink.to_id,\n            to_id: onTelegramBotOutHandler,\n            ...contain('handleTelegramBotOut'+newLink.to_id, selector),\n        },\n        {\n            type_id: Join,\n            from_id: executor,\n            to_id: deep.linkId,\n            ...contain('executorJoin'+newLink.to_id, selector),\n        },\n        {\n            type_id: System,\n            from_id: systemMessage,\n            to_id: await deep.id('@deep-foundation/chatgpt-azure-templates'),\n            ...contain('system'+newLink.to_id, selector),\n        },\n    ]);\n}",
        "link_id": 1601
      }
    },
    {
      "id": 1602,
      "type_id": 35,
      "from_id": 83,
      "to_id": 1601
    },
    {
      "id": 1607,
      "type_id": 30,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 617,
        "value": "async ({ deep, data: { newLink, triggeredByLinkId } }) => {\n    const Bot = await deep.id('@deep-foundation/telegram-bot', 'Bot');\n    const Token = await deep.id('@deep-foundation/telegram-bot', 'Token');\n    const Active = await deep.id('@deep-foundation/deepmemorybot', 'Active');\n    const Contain = await deep.id('@deep-foundation/core', 'Contain');\n    const Message = await deep.id('@deep-foundation/messaging', 'Message');\n    const messagingTree = await deep.id('@deep-foundation/messaging', 'messagingTree');\n    const Reply = await deep.id('@deep-foundation/messaging', 'Reply');\n    const containTree = deep.idLocal('@deep-foundation/core', 'containTree');\n    var bConversation = await deep.id('@deep-foundation/telegram-bot', 'Conversation');\n    var gptConversation = await deep.id('@deep-foundation/chatgpt-azure', 'Conversation');\n\n    const reader = await deep.id('@deep-foundation/deepmemorybot', 'reader');\n    const executor = await deep.id('@deep-foundation/deepmemorybot', 'executor');\n\n    const botIdByContain = (await deep.select({\n        type_id: Bot,\n        down: {\n            tree_id: containTree,\n            link_id: triggeredByLinkId\n        },\n    }))?.data?.[0]?.id;\n    // found gpt convesations before\n    var { data: [bconv] } = await deep.select({ type_id: bConversation, down: { tree_id: messagingTree, link_id: newLink.id } });\n    const gptconv = bconv ? (await deep.select({\n        type_id: gptConversation,\n        down: {\n            tree_id: messagingTree,\n            link: {\n                up: {\n                    tree_id: messagingTree,\n                    parent_id: bconv.id,\n                },\n            },\n        },\n    }))?.data?.[0] : undefined;\n    // const conversationId = (await deep.select({\n    //     type_id: Conversation,\n    //     down: {\n    //         tree_id: messagingTree,\n    //         link_id: newLink.id,\n    //     },\n    // }))?.data?.[0]?.id;\n    if (!!botIdByContain || triggeredByLinkId == reader || triggeredByLinkId == executor) {\n        const botId = botIdByContain || (await deep.select({\n            type_id: Bot,\n            down: {\n                tree_id: messagingTree,\n                link_id: newLink.id,\n            },\n        }))?.data?.[0]?.id;\n        if (!botId) return { error: '!botId', botId, triggeredByLinkId, botIdByContain, executor, reader }\n        const { data: [active] } = await deep.select({\n            type_id: Active,\n            to_id: botId,\n        });\n        if (!active) return { error: '!active', botId, triggeredByLinkId }\n        const { data: [{ id }] } = await deep.insert({\n            type_id: await deep.id('@deep-foundation/chatgpt-azure-templates', 'Apply'),\n            from_id: await deep.id('@deep-foundation/deepmemorybot', 'template'),\n            to_id: newLink.from_id,\n            ...(gptconv ? {\n                out: { data: {\n                    type_id: await deep.id('@deep-foundation/chatgpt-azure-templates', 'Continue'),\n                    to_id: gptconv.id,\n                    in: { data: {\n                        type_id: Contain,\n                        from_id: active.id\n                    } },\n                } }\n            } : {}),\n            in: { data: {\n                type_id: Contain,\n                from_id: active.id\n            } },\n        });\n        const { data: [apply] } = await deep.select(id);\n        \n        const response = await new Promise(async (res, rej) => {\n            let counter = 0;\n            const interval = setInterval(async () => {\n                const { data: [response] } = await deep.Traveler([apply])\n                    .out({ type_id: await deep.id('@deep-foundation/chatgpt-azure-templates', 'Result') })\n                    .to().in({ type_id: await deep.id('@deep-foundation/chatgpt-azure', 'Reply') }).from()\n                    .select();\n                if (response) res(response);\n                else {\n                    if (counter > 500) {\n                        clearInterval(interval);\n                        rej(new Error(`timeout ${counter} times`));\n                    } else {\n                        counter++;\n                    }\n                }\n            }, 1000);\n        });\n\n        if (!response) return { error: '!response' };\n\n        await deep.insert({\n            type_id: Reply,\n            from_id: response?.id,\n            to_id: newLink.from_id,\n            in: { data: {\n                type_id: Contain,\n                from_id: active.id\n            } },\n        });\n        return { botId, triggeredByLinkId };\n    } else {\n        return { botId: botIdByContain, triggeredByLinkId };\n    }\n}",
        "link_id": 1607
      }
    },
    {
      "id": 1608,
      "type_id": 35,
      "from_id": 83,
      "to_id": 1607
    },
    {
      "id": 1609,
      "type_id": 30,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 618,
        "value": "async ({ deep, data: {\n    state,\n    req, res,\n    botId,\n    userId,\n    conversationId,\n    handlerId,\n    udeep,\n}, require }) => {\n    const Active = await deep.id('@deep-foundation/deepmemorybot', 'Active');\n    const Contain = await deep.id('@deep-foundation/core', 'Contain');\n    const Message = await deep.id('@deep-foundation/messaging', 'Message');\n    const Reply = await deep.id('@deep-foundation/messaging', 'Reply');\n\n    const reader = await deep.id('@deep-foundation/deepmemorybot', 'reader');\n    const executor = await deep.id('@deep-foundation/deepmemorybot', 'executor');\n\n    const { serializeError } = await deep.import('serialize-error');\n\n    const edeep = new deep.DeepClient({\n        deep, ...(await deep.jwt({ linkId: executor }))\n    });\n\n    if (req?.body?.callback_query?.data) {\n        const data = JSON.parse(req?.body?.callback_query?.data);\n        if (data.messageId) {\n            state.defaultHandling = false;\n            const { data: [active] } = await edeep.select({\n                type_id: Active,\n                to_id: botId,\n            });\n            if (!active) return { error: '!active' }\n            let result;\n            try {\n                result = await edeep.eval({\n                    linkId: data.messageId,\n                    handlerId: data.handlerId,\n                });\n                if (result.error) result.error = serializeError(result.error);\n            } catch(error) {\n                result = { error: serializeError(error) };\n            }\n            const { data: [reply] } = await edeep.insert({\n                type_id: Reply,\n                from: { data: {\n                    type_id: Message,\n                    string: { data: { value: `${JSON.stringify(result, null, 2)}` } },\n                    in: { data: {\n                        type_id: Contain,\n                        from_id: executor,\n                    } },\n                } },\n                to_id: data.messageId,\n                in: { data: {\n                    type_id: Contain,\n                    from_id: executor,\n                } },\n            });\n            if (reply) await deep.await(reply.id);\n            res.send(JSON.stringify({\n                userId: executor,\n                replyId: reply.id,\n                result,\n            }));\n        }\n    }\n}",
        "link_id": 1609
      }
    },
    {
      "id": 1835,
      "type_id": 35,
      "from_id": 83,
      "to_id": 1834
    },
    {
      "id": 1839,
      "type_id": 108,
      "from_id": 1838,
      "to_id": 1835
    },
    {
      "id": 1840,
      "type_id": 163,
      "from_id": 162,
      "to_id": 1839
    },
    {
      "id": 1855,
      "type_id": 3,
      "from_id": 1849,
      "to_id": 1847,
      "value": {
        "id": 708,
        "value": "positionValue",
        "link_id": 1855
      }
    },
    {
      "id": 1856,
      "type_id": 3,
      "from_id": 1849,
      "to_id": 1848,
      "value": {
        "id": 709,
        "value": "handleUpdatePosition",
        "link_id": 1856
      }
    },
    {
      "id": 1857,
      "type_id": 3,
      "from_id": 1849,
      "to_id": 1844,
      "value": {
        "id": 710,
        "value": "handleUpdateDevice",
        "link_id": 1857
      }
    },
    {
      "id": 52,
      "type_id": 1,
      "from_id": 0,
      "to_id": 0
    },
    {
      "id": 53,
      "type_id": 4,
      "from_id": 52,
      "to_id": 7
    },
    {
      "id": 54,
      "type_id": 1,
      "from_id": 8,
      "to_id": 8
    },
    {
      "id": 55,
      "type_id": 1,
      "from_id": 8,
      "to_id": 8
    },
    {
      "id": 56,
      "type_id": 4,
      "from_id": 55,
      "to_id": 7
    },
    {
      "id": 57,
      "type_id": 29,
      "from_id": 0,
      "to_id": 0
    },
    {
      "id": 58,
      "type_id": 1,
      "from_id": 0,
      "to_id": 0
    },
    {
      "id": 59,
      "type_id": 4,
      "from_id": 58,
      "to_id": 7
    },
    {
      "id": 60,
      "type_id": 1,
      "from_id": 0,
      "to_id": 0
    },
    {
      "id": 61,
      "type_id": 4,
      "from_id": 60,
      "to_id": 7
    },
    {
      "id": 62,
      "type_id": 1,
      "from_id": 0,
      "to_id": 0
    },
    {
      "id": 63,
      "type_id": 4,
      "from_id": 62,
      "to_id": 5
    },
    {
      "id": 64,
      "type_id": 23,
      "from_id": 0,
      "to_id": 0
    },
    {
      "id": 65,
      "type_id": 8,
      "from_id": 0,
      "to_id": 0
    },
    {
      "id": 66,
      "type_id": 1,
      "from_id": 8,
      "to_id": 8
    },
    {
      "id": 67,
      "type_id": 36,
      "from_id": 0,
      "to_id": 0
    },
    {
      "id": 68,
      "type_id": 38,
      "from_id": 67,
      "to_id": 66
    },
    {
      "id": 69,
      "type_id": 39,
      "from_id": 67,
      "to_id": 8
    },
    {
      "id": 70,
      "type_id": 1,
      "from_id": 8,
      "to_id": 36
    },
    {
      "id": 71,
      "type_id": 23,
      "from_id": 0,
      "to_id": 0
    },
    {
      "id": 72,
      "type_id": 1,
      "from_id": 15,
      "to_id": 8
    },
    {
      "id": 73,
      "type_id": 1,
      "from_id": 15,
      "to_id": 58
    },
    {
      "id": 74,
      "type_id": 48,
      "from_id": 8,
      "to_id": 35
    },
    {
      "id": 75,
      "type_id": 1,
      "from_id": 0,
      "to_id": 0
    },
    {
      "id": 76,
      "type_id": 4,
      "from_id": 75,
      "to_id": 5
    },
    {
      "id": 77,
      "type_id": 1,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 1,
        "value": "Router",
        "link_id": 77
      }
    },
    {
      "id": 78,
      "type_id": 1,
      "from_id": 0,
      "to_id": 0
    },
    {
      "id": 79,
      "type_id": 78,
      "from_id": 0,
      "to_id": 0
    },
    {
      "id": 80,
      "type_id": 4,
      "from_id": 79,
      "to_id": 5
    },
    {
      "id": 81,
      "type_id": 79,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 2,
        "value": "deepf/js-docker-isolation-provider:main",
        "link_id": 81
      }
    },
    {
      "id": 82,
      "type_id": 1,
      "from_id": 8,
      "to_id": 8
    },
    {
      "id": 83,
      "type_id": 82,
      "from_id": 81,
      "to_id": 33
    },
    {
      "id": 84,
      "type_id": 1,
      "from_id": 8,
      "to_id": 97
    },
    {
      "id": 87,
      "type_id": 35,
      "from_id": 83,
      "to_id": 86
    },
    {
      "id": 88,
      "type_id": 49,
      "from_id": 84,
      "to_id": 87
    },
    {
      "id": 201,
      "type_id": 3,
      "from_id": 184,
      "to_id": 17,
      "value": {
        "id": 23,
        "value": "Rule",
        "link_id": 201
      }
    },
    {
      "id": 233,
      "type_id": 3,
      "from_id": 184,
      "to_id": 49,
      "value": {
        "id": 55,
        "value": "HandleInsert",
        "link_id": 233
      }
    },
    {
      "id": 234,
      "type_id": 3,
      "from_id": 184,
      "to_id": 50,
      "value": {
        "id": 56,
        "value": "HandleUpdate",
        "link_id": 234
      }
    },
    {
      "id": 1627,
      "type_id": 3,
      "from_id": 1616,
      "to_id": 1599,
      "value": {
        "id": 628,
        "value": "executor",
        "link_id": 1627
      }
    },
    {
      "id": 1628,
      "type_id": 3,
      "from_id": 1616,
      "to_id": 1600,
      "value": {
        "id": 629,
        "value": "systemMessage",
        "link_id": 1628
      }
    },
    {
      "id": 1631,
      "type_id": 3,
      "from_id": 1616,
      "to_id": 1605,
      "value": {
        "id": 632,
        "value": "onActiveDeleteHandler",
        "link_id": 1631
      }
    },
    {
      "id": 1729,
      "type_id": 3,
      "from_id": 1721,
      "to_id": 1718,
      "value": {
        "id": 661,
        "value": "Boolean",
        "link_id": 1729
      }
    },
    {
      "id": 5239,
      "type_id": 3,
      "from_id": 2586,
      "to_id": 5236,
      "value": {
        "id": 1141,
        "value": "MenuComponent",
        "link_id": 5239
      }
    },
    {
      "id": 553,
      "type_id": 2,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 207,
        "value": "@deep-foundation/core-symbols",
        "link_id": 553
      }
    },
    {
      "id": 559,
      "type_id": 146,
      "from_id": 553,
      "to_id": 146,
      "value": {
        "id": 209,
        "value": "🙂",
        "link_id": 559
      }
    },
    {
      "id": 560,
      "type_id": 3,
      "from_id": 553,
      "to_id": 559,
      "value": {
        "id": 210,
        "value": "SymbolSymbol",
        "link_id": 560
      }
    },
    {
      "id": 586,
      "type_id": 3,
      "from_id": 553,
      "to_id": 585,
      "value": {
        "id": 236,
        "value": "RouterSymbol",
        "link_id": 586
      }
    },
    {
      "id": 587,
      "type_id": 146,
      "from_id": 553,
      "to_id": 75,
      "value": {
        "id": 237,
        "value": "⏲",
        "link_id": 587
      }
    },
    {
      "id": 593,
      "type_id": 146,
      "from_id": 553,
      "to_id": 66,
      "value": {
        "id": 243,
        "value": "🤝",
        "link_id": 593
      }
    },
    {
      "id": 594,
      "type_id": 3,
      "from_id": 553,
      "to_id": 593,
      "value": {
        "id": 244,
        "value": "JoinSymbol",
        "link_id": 594
      }
    },
    {
      "id": 595,
      "type_id": 146,
      "from_id": 553,
      "to_id": 62,
      "value": {
        "id": 245,
        "value": "🔮",
        "link_id": 595
      }
    },
    {
      "id": 603,
      "type_id": 146,
      "from_id": 553,
      "to_id": 52,
      "value": {
        "id": 253,
        "value": "🔖",
        "link_id": 603
      }
    },
    {
      "id": 606,
      "type_id": 3,
      "from_id": 553,
      "to_id": 605,
      "value": {
        "id": 256,
        "value": "HandleOperationSymbol",
        "link_id": 606
      }
    },
    {
      "id": 607,
      "type_id": 146,
      "from_id": 553,
      "to_id": 46,
      "value": {
        "id": 257,
        "value": "🏷",
        "link_id": 607
      }
    },
    {
      "id": 752,
      "type_id": 1,
      "from_id": 8,
      "to_id": 97
    },
    {
      "id": 946,
      "type_id": 717,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 399,
        "value": "({ deep, require }) => {\n  const React = require('react');\n  const { Wrap, WrapItem, Stack, HStack, VStack, Flex, StackDivider, Box, Button, Text, Input } = require('@chakra-ui/react');\n  const { Resize } = require('@deep-foundation/deepcase');\n  const MonacoEditor = require('@monaco-editor/react');\n  const json5 = require('json5');\n  const {TbArrowMoveLeft, TbArrowMoveRight } =require('react-icons/tb');\n  const { useDebounceCallback } = require('@react-hook/debounce');\n  const { useColorModeValue, useColorMode } = require('@chakra-ui/react');\n\n  const getSymbol = (link) => link?.inByType?.[deep.idLocal('@deep-foundation/core', 'Symbol')]?.[0]?.value?.value\n\n  const getTypes = (link) => {\n    const types = [];\n    for (let l = link; l?.type && l?.id !== 1; l = link?.type) types.push(link?.type_id);\n    return types;\n  };\n\n  const Contain = deep.idLocal('@deep-foundation/core', 'Contain');\n\n  const ListItem = ({ link, current, setCurrent,  setMode, ...props }) => {\n    // const [__symbol] = deep.useMinilinksSubscription({\n    //   type_id: deep.idLocal('@deep-foundation/core', 'Symbol'),\n    //   to_id: { _in: getTypes(link) },```\n    // });\n    // const _symbol = __symbol?.value?.value;\n    const _symbol = getSymbol(link) || getSymbol(link?.type) || getSymbol(link?.type?.type);\n    const _value = deep.stringify(link?.value?.value);\n    const __value = _value?.length > 29 ? _value.slice(0, 20)+'...'+_value.slice(-9, _value.length) : _value;\n\n    const [fromL] = deep.useMinilinksSubscription({\n      out: { id: link.id, type_id: Contain }\n    });\n    const [parentL] = deep.useMinilinksSubscription(link.type_id === Contain ? {\n      out: { type_id: Contain, to_id: link.from_id },\n    } : {\n      out: { type_id: Contain, to_id: link.id },\n    });\n    const broadcrumbs = [];\n    if (fromL) broadcrumbs.push(fromL.id);\n    let next = parentL;\n    do {\n      if (next) {\n        if (deep.nameLocal(next?.id)) broadcrumbs.push(next?.id);\n        next = next?.inByType?.[Contain]?.[0]?.from;\n      }\n    } while (next);\n    // if (parentL) broadcrumbs.push(parentL.id);\n\n    return (<Box\n      background='backgroundModal' p='0.2rem' {...props}\n      xs={{\n        border: current?.id === link?.id ? '3px #ffffff solid' : '0px transparent solid',\n        transition: 'all 1s ease',\n        cursor: 'pointer',\n      }}\n      _hover={{ border: '3px #ffffff7d solid' }}\n    >\n      <Box mr='0.5rem'><Text>{_symbol} {link?.id} {deep.nameLocal(link?.id)}</Text></Box>\n      <Box mr='0.5rem'><Text>\n        {broadcrumbs.map(id => <Button\n          key={id}\n          size=\"xs\"\n          onClick={async () => {\n            const { data: [next] } = await deep.select(id);\n            setCurrent(next);\n            setMode('Contains');\n          }}\n        >{deep.nameLocal(id)}</Button>)}\n      </Text></Box>\n      <Box mr='0.5rem'><Text>{__value}</Text></Box>\n      <Flex \n        divider={<StackDivider borderColor='borderColor' />}\n        spacing={2}\n        justifyContent='space-between'\n        alignItems='center'\n        sx={{\n          '& > *:not(:last-of-type)': {\n            mr: '0.5rem'\n          }\n        }}\n      >\n        {!!link?.from_id && <Button \n          size='sm'\n          variant=\"outline\" \n          width='max-content'\n          rightIcon={<TbArrowMoveLeft size='1.3rem' />}\n          onClick={async () => {\n            const { data: [next] } = await deep.select(link?.from_id);\n            setCurrent(next);\n          }}\n        ><Text fontSize='sm'>{link?.from_id || 0}</Text></Button>}\n        {!!link?.to_id && <Button \n          size='sm'\n          fontSize='sm'\n          variant=\"outline\"\n          leftIcon={<TbArrowMoveRight size='1.3rem' />} \n            onClick={async () => {\n            const { data: [next] } = await deep.select(link?.to_id);\n            setCurrent(next);\n          }}\n        ><Text>{link?.to_id || 0}</Text></Button>}\n        {!!link?.type_id && <Button\n          size='sm' \n          fontSize='sm'\n          variant=\"outline\" \n            onClick={async () => {\n            const { data: [next] } = await deep.select(link?.type_id);\n            setCurrent(next);\n          }}\n        ><Text>{link?.type_id} {deep.nameLocal(link?.type_id)}</Text></Button>}\n      </Flex>\n    </Box>);\n  };\n\n  const List = ({\n    link, parentsQuery, childrenQuery, current, setCurrent, setMode\n  }) => {\n    const { data: parents } = deep.useDeepSubscription(parentsQuery);\n\n    const { data: children } = deep.useDeepSubscription(childrenQuery);\n\n    const descriptionQuery = React.useMemo(() => {\n      return {\n        to: { down: {\n          tree_id: deep.idLocal('@deep-foundation/core', 'typesTree'),\n          link_id: { _in: [\n            ...(current?.id ? [current.id] : []),\n            ...parents?.map(l => l.id),\n            ...children?.map(l => l.id),\n            ...parents?.map(l => l.from_id),\n            ...children?.map(l => l.from_id),\n            ...parents?.map(l => l.to_id),\n            ...children?.map(l => l.to_id),\n          ] },\n         } },\n        type_id: { _in: [deep.idLocal('@deep-foundation/core', 'Contain'), deep.idLocal('@deep-foundation/core', 'Symbol')] },\n      };\n    }, [current, parents, children]);\n    const description = deep.useDeepSubscription(descriptionQuery);\n\n    deep.useDeepSubscription({\n      down: {\n        tree_id: { _in: [\n          deep.idLocal('@deep-foundation/core', 'typesTree'),\n          deep.idLocal('@deep-foundation/core', 'containTree'),\n        ] },\n        link_id: { _in: [\n          ...(current?.id ? [current.id] : []),\n          ...parents?.map(l => l.id),\n          ...children?.map(l => l.id),\n          ...parents?.map(l => l.from_id),\n          ...children?.map(l => l.from_id),\n          ...parents?.map(l => l.to_id),\n          ...children?.map(l => l.to_id),\n        ] },\n      },\n    });\n\n    return <>{!description.loading &&\n      <VStack\n        divider={<StackDivider borderColor='borderColor' />}\n        spacing={1}\n        align='stretch'\n        fontSize='sm'\n      >\n        {parents?.map(c => (\n          <ListItem key={c?.id} current={current} setMode={setMode} setCurrent={setCurrent} link={c} onClick={() => setCurrent(c)} bg='backgroundModal' p='0.2rem' />\n        ))}\n        {!!current && <ListItem current={current} setMode={setMode}  setCurrent={setCurrent} link={current}  p='0.2rem' />}\n        {children?.map(c => (\n          <ListItem key={c?.id} current={current} setMode={setMode}  setCurrent={setCurrent} link={c} onClick={() => setCurrent(c)}/>\n        ))}\n      </VStack>\n    }</>;\n  };\n\n  return ({\n    style,\n    link,\n    onChange,\n    search,\n    query,\n    fillSize,\n    children = null,\n  }: {\n    style: any;\n    link: any;\n    onChange?: any;\n    search?: any;\n    query?: any;\n    fillSize?: boolean;\n    children?: any;\n  }) => {\n    const [currentId, setCurrentId] = React.useState<number>(link?.id || 0)\n    const setCurrent = React.useCallback((link) => setCurrentId(link?.id || 0));\n    const { data: [current] = [] } = deep.useDeepSubscription({ id: currentId });\n    const [mode, setMode] = React.useState(typeof(search) === 'string' ? 'Search' : typeof(query) === 'object' ? 'Query' : 'Contains');\n    const [ viewSize, setViewSize ] = React.useState({ height: 400, width: 450 });\n\n    React.useEffect(() => onChange && onChange(current), [current]);\n\n    const [trees, setTrees] = React.useState([]);\n    React.useEffect(() => { mode === 'Trees' && (async () => {\n      setTrees((await deep.select({\n        link_id: { _eq: current?.id },\n        parent_id: { _eq: current?.id }\n        distinct_on: ['tree_id'],\n      }, {\n        table: 'tree',\n        returning: `\n          id link_id tree_id root_id depth position_id\n        `,\n      }))?.data);\n    })() }, [mode, current]);\n    const [tree, setTree] = React.useState();\n    React.useEffect(() => setTree(), [mode, current]);\n\n    const [q, setQ] = React.useState(query);\n    const setQoDebounce = useDebounceCallback((q) => {\n      try {\n        setQo(json5.parse(q));\n      } catch(error) {}\n    }, 1000);\n    const [qo setQo] = React.useState(q);\n\n    const [s, setS] = React.useState(search || '');\n    const setSoDebounce = useDebounceCallback((s) => {\n      const num = parseFloat(s);\n      const _or = [];\n      if (!Number.isNaN(num)) {\n        _or.push({ id: num }, { number: { value: num } });\n      }\n      _or.push(\n        { string: { value: s } },\n        { string: { value: { _ilike: `%${s}%` } } },\n        { string: { value: { _similar: s } } },\n        { in: { type_id: deep.idLocal('@deep-foundation/core', 'Contain'), string: { value: s } } },\n        { in: { type_id: deep.idLocal('@deep-foundation/core', 'Contain'), string: { value: { _ilike: `%${s}%` } } } },\n        { in: { type_id: deep.idLocal('@deep-foundation/core', 'Contain'), string: { value: { _similar: s } } } },\n      );\n      \n      \n      const query = JSON.stringify({\n        _not: { type_id: deep.idLocal('@deep-foundation/core', 'Contain') },\n        _or,\n      });\n      setQ(query);\n      // setQoDebounce(query);\n      try {\n        setQo(json5.parse(query));\n      } catch(error) {}\n    }, 1000);\n\n    const { colorMode } = useColorMode();\n\n    const bg = useColorModeValue('#eeeeee', '#434343');\n    const hover = useColorModeValue('white', '#1e1e1e');\n    const borderColor = useColorModeValue('#434343', '#eeeeee');\n    const color = useColorModeValue('#1e1e1e', 'white');\n\n    const body = <Box sx={{ \n        height: fillSize ? '100%' : viewSize.height, \n        width: fillSize ? '100%' : viewSize.width, \n        overflowY: 'auto', \n        position: 'relative', \n        borderColor: 'borderColor', \n        borderWidth: 'thin',\n        borderRadius: '0.5rem',\n        p: '0.2rem',\n        ...style }}\n      >\n      <HStack\n        // divider={<StackDivider borderColor='borderColor' />}\n        // spacing={1}\n        align='stretch'\n        justifyContent='space-between'\n        sx={{ position: 'sticky', top: 0, mb: '0.3rem' }}\n        bg='transparent'\n      >\n        <Button variant='solid' size='sm' background={!(mode === 'Search') ? 'backgroundModal' : 'gray.400'} borderColor={!(mode === 'Search') ? 'borderColor' : 'backgroundModal'} borderWidth='thin' onClick={() => setMode('Search')}>🪬</Button>\n        <Button variant='solid' size='sm' background={!(mode === 'Query') ? 'backgroundModal' : 'gray.400'} borderColor={!(mode === 'Query') ? 'borderColor' : 'backgroundModal'} borderWidth='thin' onClick={() => setMode('Query')}>🔍</Button>\n        <Button variant='solid' size='sm' background={!(mode === 'Contains') ? 'backgroundModal' : 'gray.400'} borderColor={!(mode === 'Contains') ? 'borderColor' : 'backgroundModal'} borderWidth='thin' onClick={() => setMode('Contains')}>🗂</Button>\n        <Button variant='solid' size='sm' background={!(mode === 'In/Out') ? 'backgroundModal' : 'gray.400'} borderColor={!(mode === 'In/Out') ? 'borderColor' : 'backgroundModal'} borderWidth='thin' onClick={() => setMode('In/Out')}>In/Out</Button>\n        <Button variant='solid' size='sm' background={!(mode === 'Trees') ? 'backgroundModal' : 'gray.400'} borderColor={!(mode === 'Trees') ? 'borderColor' : 'backgroundModal'} borderWidth='thin' onClick={() => setMode('Trees')}>🌲</Button>\n      </HStack>\n      {mode === 'Search' && <>\n        {current && <List\n          link={link}\n          current={current}\n          setMode={setMode}\n          setCurrent={setCurrent}\n          parentsQuery={{ id: 0 }}\n          childrenQuery={{ id: 0 }}\n        />}\n        <Input\n          autoFocus\n          type=\"text\"\n          variant='filled'\n          variant='filled'\n          bg={bg}\n          color={color}\n          borderWidth='thin'\n          borderColor={borderColor}\n          _hover={{bg: hover}}\n          _focus={{bg: bg}}\n          sx={{\n            width: '100%',\n          }}\n          onChange={(e) => {\n            setS(e.target.value);\n            setSoDebounce(e.target.value);\n          }}\n          value={s}\n        />\n        {<List\n          link={link}\n          current={null}\n          setMode={setMode}\n          setCurrent={setCurrent}\n          parentsQuery={{ id: 0 }}\n          childrenQuery={{\n            ...qo,\n            limit: 30,\n          }}\n        />}\n      </>}\n      {mode === 'Query' && <>\n        {current && <List\n          link={link}\n          current={current}\n          setMode={setMode}\n          setCurrent={setCurrent}\n          parentsQuery={{ id: 0 }}\n          childrenQuery={{ id: 0 }}\n        />}\n        <MonacoEditor\n          options={{\n            minimap: {\n              enabled: false\n            },\n            lineNumbers: 'off',\n            wordWrap: true,\n          }}\n          height=\"200px\"\n          width=\"100%\"\n          theme={colorMode === 'light' ? 'light' : \"vs-dark\"}\n          defaultLanguage=\"json\"\n          defaultValue={q || ''}\n          onChange={(value) => {\n            setQ(value);\n            setQoDebounce(value);\n          }}\n          // onMount={handleEditorDidMount}\n        />\n        <List\n          link={link}\n          current={null}\n          setMode={setMode}\n          setCurrent={setCurrent}\n          parentsQuery={{ id: 0 }}\n          childrenQuery={{\n            ...qo,\n            limit: 30,\n          }}\n        />\n      </>}\n      {mode === 'Contains' && current && <List\n        link={link}\n        current={current}\n        setMode={setMode}\n        setCurrent={setCurrent}\n        parentsQuery={{\n          out: {\n            type_id: deep.idLocal('@deep-foundation/core', 'Contain'),\n            to_id: current?.id,\n          }\n        }}\n        childrenQuery={{\n          in: {\n            type_id: deep.idLocal('@deep-foundation/core', 'Contain'),\n            from_id: current?.id,\n          }\n        }}\n      />}\n      {mode === 'In/Out' && current && <>\n        <List\n          link={link}\n          current={current}\n          setMode={setMode}\n          setCurrent={setCurrent}\n          parentsQuery={{\n            to_id: current?.id\n          }}\n          childrenQuery={{\n            from_id: current?.id\n          }}\n        />\n      </>}\n      {mode === 'Trees' && <>\n        <VStack\n          divider={<StackDivider borderColor='borderColor' />}\n          spacing={1}\n          align='stretch'\n          bg='gray.800'\n        >\n          {[<Wrap key={tree?.id || 0} spacing={1} justify='center'>\n            {trees?.map(t => <WrapItem key={t?.id}>\n              <Button size='sm' variant={tree?.id === t?.id ? 'solid' : \"outline\"} onClick={() => setTree(t)}>{deep.nameLocal(t?.tree_id)}</Button>\n            </WrapItem>)}\n          </Wrap>]}\n        </VStack>\n        {!tree && <>\n          <List\n            link={link}\n            current={current}\n            setMode={setMode}\n            setCurrent={setCurrent}\n            parentsQuery={{\n              id: 0\n            }}\n            childrenQuery={{ \n              id: 0\n            }}\n          />\n        </>}\n        {!!tree && !!current?.id && <>\n          {[<List\n            key={tree?.id}\n            link={link}\n            current={current}\n            setMode={setMode}\n            setCurrent={setCurrent}\n            parentsQuery={{\n              down: {\n                tree_id: tree?.tree_id,\n                position_id: tree?.position_id,\n                link_id: current?.id\n              },\n            }}\n            childrenQuery={{ _and: [\n              { up: {\n                tree_id: tree?.tree_id,\n                root_id: tree?.root_id,\n                parent_id: tree?.link_id,\n                depth: tree?.depth,\n              } },\n              { down: {\n                tree_id: tree?.tree_id,\n                root_id: tree?.root_id,\n                depth: tree?.depth + 1,\n              } },\n            ]}}\n          />]}\n        </>}\n      </>}\n      {children}\n    </div>\n    \n    return <>\n      {fillSize \n      ? body \n      : <Resize\n          onChangeSize={(viewSize) => setViewSize(viewSize)} \n          style={{\n          // position: 'relative',\n          // overflow: nested ? 'hidden' : 'inherit',\n          borderRadius: 5,\n          border: 'none',\n        }}\n      >{body}</Resize>}\n    </>;\n  };\n}\n",
        "link_id": 946
      }
    },
    {
      "id": 1057,
      "type_id": 3,
      "from_id": 1051,
      "to_id": 1050,
      "value": {
        "id": 427,
        "value": "AllowUnsafe",
        "link_id": 1057
      }
    },
    {
      "id": 1152,
      "type_id": 3,
      "from_id": 1146,
      "to_id": 1145,
      "value": {
        "id": 457,
        "value": "Dependency",
        "link_id": 1152
      }
    },
    {
      "id": 1185,
      "type_id": 1,
      "from_id": 8,
      "to_id": 1184
    },
    {
      "id": 85,
      "type_id": 1,
      "from_id": 2,
      "to_id": 97
    },
    {
      "id": 86,
      "type_id": 30,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 3,
        "value": "\nasync ({ deep, require, gql, data: { newLink } }) => {\n  const { data: [pq] } = await deep.select({ id: newLink.to_id });\n  const { data: { packager_install: imported }, error } = await deep.apolloClient.query({\n    query: gql`query PACKAGE_INSTALL($address: String!) {\n      packager_install(input: { address: $address }) {\n        ids\n        packageId\n        errors\n      }\n    }`,\n    variables: {\n      address: pq?.value?.value,\n    },\n  });\n  if (error) throw error;\n  if (imported?.errors?.length) throw imported.errors;\n  await deep.insert({\n    type_id: deep.idLocal('@deep-foundation/core', 'Contain'),\n    from_id: newLink.from_id,\n    to_id: imported.packageId,\n  });\n  return imported;\n}\n    ",
        "link_id": 86
      }
    },
    {
      "id": 89,
      "type_id": 30,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 4,
        "value": "\nasync ({ deep, require, gql, data: { newLink } }) => {\n  const { data: [pq] } = await deep.select({ id: newLink.to_id });\n  const { data: { packager_publish: exported }, error } = await deep.apolloClient.query({\n    query: gql`query PACKAGE_PUBLISH($address: String!, $id: Int) {\n      packager_publish(input: { address: $address, id: $id }) {\n        address\n        errors\n      }\n    }`,\n    variables: {\n      address: pq?.value?.value,\n      id: newLink.from_id,\n    },\n  });\n  if (error) throw error;\n  if (exported?.errors?.length) throw exported.errors;\n  return exported;\n}\n    ",
        "link_id": 89
      }
    },
    {
      "id": 90,
      "type_id": 35,
      "from_id": 83,
      "to_id": 89
    },
    {
      "id": 91,
      "type_id": 49,
      "from_id": 85,
      "to_id": 90
    },
    {
      "id": 92,
      "type_id": 1,
      "from_id": 8,
      "to_id": 8
    },
    {
      "id": 93,
      "type_id": 23,
      "from_id": 0,
      "to_id": 0
    },
    {
      "id": 94,
      "type_id": 23,
      "from_id": 0,
      "to_id": 0
    },
    {
      "id": 118,
      "type_id": 34,
      "from_id": 36,
      "to_id": 8
    },
    {
      "id": 131,
      "type_id": 37,
      "from_id": 129,
      "to_id": 20
    },
    {
      "id": 132,
      "type_id": 37,
      "from_id": 129,
      "to_id": 19
    },
    {
      "id": 227,
      "type_id": 3,
      "from_id": 184,
      "to_id": 43,
      "value": {
        "id": 49,
        "value": "PackageNamespace",
        "link_id": 227
      }
    },
    {
      "id": 278,
      "type_id": 3,
      "from_id": 184,
      "to_id": 94,
      "value": {
        "id": 100,
        "value": "AllowPackagePublish",
        "link_id": 278
      }
    },
    {
      "id": 279,
      "type_id": 3,
      "from_id": 184,
      "to_id": 95,
      "value": {
        "id": 101,
        "value": "PromiseOut",
        "link_id": 279
      }
    },
    {
      "id": 280,
      "type_id": 3,
      "from_id": 184,
      "to_id": 96,
      "value": {
        "id": 102,
        "value": "promiseOutValue",
        "link_id": 280
      }
    },
    {
      "id": 281,
      "type_id": 3,
      "from_id": 184,
      "to_id": 97,
      "value": {
        "id": 103,
        "value": "PackageQuery",
        "link_id": 281
      }
    },
    {
      "id": 282,
      "type_id": 3,
      "from_id": 184,
      "to_id": 98,
      "value": {
        "id": 104,
        "value": "packageQueryValue",
        "link_id": 282
      }
    },
    {
      "id": 283,
      "type_id": 3,
      "from_id": 184,
      "to_id": 99,
      "value": {
        "id": 105,
        "value": "Port",
        "link_id": 283
      }
    },
    {
      "id": 284,
      "type_id": 3,
      "from_id": 184,
      "to_id": 100,
      "value": {
        "id": 106,
        "value": "portValue",
        "link_id": 284
      }
    },
    {
      "id": 285,
      "type_id": 3,
      "from_id": 184,
      "to_id": 101,
      "value": {
        "id": 107,
        "value": "HandlePort",
        "link_id": 285
      }
    },
    {
      "id": 286,
      "type_id": 3,
      "from_id": 184,
      "to_id": 102,
      "value": {
        "id": 108,
        "value": "PackageInstalled",
        "link_id": 286
      }
    },
    {
      "id": 287,
      "type_id": 3,
      "from_id": 184,
      "to_id": 103,
      "value": {
        "id": 109,
        "value": "PackagePublished",
        "link_id": 287
      }
    },
    {
      "id": 332,
      "type_id": 3,
      "from_id": 184,
      "to_id": 148,
      "value": {
        "id": 154,
        "value": "containTreeSymbol",
        "link_id": 332
      }
    },
    {
      "id": 333,
      "type_id": 3,
      "from_id": 184,
      "to_id": 149,
      "value": {
        "id": 155,
        "value": "containTreeThen",
        "link_id": 333
      }
    },
    {
      "id": 334,
      "type_id": 3,
      "from_id": 184,
      "to_id": 150,
      "value": {
        "id": 156,
        "value": "containTreeResolved",
        "link_id": 334
      }
    },
    {
      "id": 335,
      "type_id": 3,
      "from_id": 184,
      "to_id": 151,
      "value": {
        "id": 157,
        "value": "containTreeRejected",
        "link_id": 335
      }
    },
    {
      "id": 336,
      "type_id": 3,
      "from_id": 184,
      "to_id": 152,
      "value": {
        "id": 158,
        "value": "handlersTree",
        "link_id": 336
      }
    },
    {
      "id": 337,
      "type_id": 3,
      "from_id": 184,
      "to_id": 153,
      "value": {
        "id": 159,
        "value": "handlersTreeHandler",
        "link_id": 337
      }
    },
    {
      "id": 338,
      "type_id": 3,
      "from_id": 184,
      "to_id": 154,
      "value": {
        "id": 160,
        "value": "handlersTreeSupports",
        "link_id": 338
      }
    },
    {
      "id": 356,
      "type_id": 3,
      "from_id": 184,
      "to_id": 172,
      "value": {
        "id": 178,
        "value": "dockerJSSupportsCompatableHandlePort",
        "link_id": 356
      }
    },
    {
      "id": 357,
      "type_id": 3,
      "from_id": 184,
      "to_id": 173,
      "value": {
        "id": 179,
        "value": "dockerJSSupportsCompatableHandleRoute",
        "link_id": 357
      }
    },
    {
      "id": 561,
      "type_id": 146,
      "from_id": 553,
      "to_id": 143,
      "value": {
        "id": 211,
        "value": "🏗",
        "link_id": 561
      }
    },
    {
      "id": 562,
      "type_id": 3,
      "from_id": 553,
      "to_id": 561,
      "value": {
        "id": 212,
        "value": "GeneratedFromSymbol",
        "link_id": 562
      }
    },
    {
      "id": 563,
      "type_id": 146,
      "from_id": 553,
      "to_id": 142,
      "value": {
        "id": 213,
        "value": "🔑",
        "link_id": 563
      }
    },
    {
      "id": 564,
      "type_id": 3,
      "from_id": 553,
      "to_id": 563,
      "value": {
        "id": 214,
        "value": "AuthorizationSymbol",
        "link_id": 564
      }
    },
    {
      "id": 571,
      "type_id": 146,
      "from_id": 553,
      "to_id": 99,
      "value": {
        "id": 221,
        "value": "🗜",
        "link_id": 571
      }
    },
    {
      "id": 588,
      "type_id": 3,
      "from_id": 553,
      "to_id": 587,
      "value": {
        "id": 238,
        "value": "ScheduleSymbol",
        "link_id": 588
      }
    },
    {
      "id": 589,
      "type_id": 146,
      "from_id": 553,
      "to_id": 73,
      "value": {
        "id": 239,
        "value": "🔎",
        "link_id": 589
      }
    },
    {
      "id": 590,
      "type_id": 3,
      "from_id": 553,
      "to_id": 589,
      "value": {
        "id": 240,
        "value": "SelectorFilterSymbol",
        "link_id": 590
      }
    },
    {
      "id": 591,
      "type_id": 146,
      "from_id": 553,
      "to_id": 70,
      "value": {
        "id": 241,
        "value": "🌲",
        "link_id": 591
      }
    },
    {
      "id": 596,
      "type_id": 3,
      "from_id": 553,
      "to_id": 595,
      "value": {
        "id": 246,
        "value": "SpaceSymbol",
        "link_id": 596
      }
    },
    {
      "id": 601,
      "type_id": 146,
      "from_id": 553,
      "to_id": 54,
      "value": {
        "id": 251,
        "value": "🧲",
        "link_id": 601
      }
    },
    {
      "id": 762,
      "type_id": 3,
      "from_id": 756,
      "to_id": 753,
      "value": {
        "id": 330,
        "value": "Installed",
        "link_id": 762
      }
    },
    {
      "id": 967,
      "type_id": 30,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 401,
        "value": "({ deep, require }) => {\n    const React = require('react');\n    const { Wrap, WrapItem, Stack, HStack, VStack, Flex, StackDivider, Box, Button, Text, Input } = require('@chakra-ui/react');\n    const { Resize } = require('@deep-foundation/deepcase');\n    const MonacoEditor = require('@monaco-editor/react');\n    const json5 = require('json5');\n    const { TbArrowMoveLeft, TbArrowMoveRight } = require('react-icons/tb');\n    const { useDebounceCallback } = require('@react-hook/debounce');\n    const { useColorModeValue, useColorMode } = require('@chakra-ui/react');\n    const getSymbol = (link) => link?.inByType?.[deep.idLocal('@deep-foundation/core', 'Symbol')]?.[0]?.value?.value;\n    const getTypes = (link) => {\n        const types = [];\n        for (let l = link; l?.type && l?.id !== 1; l = link?.type)\n            types.push(link?.type_id);\n        return types;\n    };\n    const Contain = deep.idLocal('@deep-foundation/core', 'Contain');\n    const ListItem = ({ link, current, setCurrent, setMode, ...props }) => {\n        const _symbol = getSymbol(link) || getSymbol(link?.type) || getSymbol(link?.type?.type);\n        const _value = deep.stringify(link?.value?.value);\n        const __value = _value?.length > 29 ? _value.slice(0, 20) + '...' + _value.slice(-9, _value.length) : _value;\n        const [fromL] = deep.useMinilinksSubscription({\n            out: { id: link.id, type_id: Contain }\n        });\n        const [parentL] = deep.useMinilinksSubscription(link.type_id === Contain ? {\n            out: { type_id: Contain, to_id: link.from_id },\n        } : {\n            out: { type_id: Contain, to_id: link.id },\n        });\n        const broadcrumbs = [];\n        if (fromL)\n            broadcrumbs.push(fromL.id);\n        let next = parentL;\n        do {\n            if (next) {\n                if (deep.nameLocal(next?.id))\n                    broadcrumbs.push(next?.id);\n                next = next?.inByType?.[Contain]?.[0]?.from;\n            }\n        } while (next);\n        return (React.createElement(Box, { background: 'backgroundModal', p: '0.2rem', ...props, xs: {\n                border: current?.id === link?.id ? '3px #ffffff solid' : '0px transparent solid',\n                transition: 'all 1s ease',\n                cursor: 'pointer',\n            }, _hover: { border: '3px #ffffff7d solid' } },\n            React.createElement(Box, { mr: '0.5rem' },\n                React.createElement(Text, null,\n                    _symbol,\n                    \" \",\n                    link?.id,\n                    \" \",\n                    deep.nameLocal(link?.id))),\n            React.createElement(Box, { mr: '0.5rem' },\n                React.createElement(Text, null, broadcrumbs.map(id => React.createElement(Button, { key: id, size: \"xs\", onClick: async () => {\n                        const { data: [next] } = await deep.select(id);\n                        setCurrent(next);\n                        setMode('Contains');\n                    } }, deep.nameLocal(id))))),\n            React.createElement(Box, { mr: '0.5rem' },\n                React.createElement(Text, null, __value)),\n            React.createElement(Flex, { divider: React.createElement(StackDivider, { borderColor: 'borderColor' }), spacing: 2, justifyContent: 'space-between', alignItems: 'center', sx: {\n                    '& > *:not(:last-of-type)': {\n                        mr: '0.5rem'\n                    }\n                } },\n                !!link?.from_id && React.createElement(Button, { size: 'sm', variant: \"outline\", width: 'max-content', rightIcon: React.createElement(TbArrowMoveLeft, { size: '1.3rem' }), onClick: async () => {\n                        const { data: [next] } = await deep.select(link?.from_id);\n                        setCurrent(next);\n                    } },\n                    React.createElement(Text, { fontSize: 'sm' }, link?.from_id || 0)),\n                !!link?.to_id && React.createElement(Button, { size: 'sm', fontSize: 'sm', variant: \"outline\", leftIcon: React.createElement(TbArrowMoveRight, { size: '1.3rem' }), onClick: async () => {\n                        const { data: [next] } = await deep.select(link?.to_id);\n                        setCurrent(next);\n                    } },\n                    React.createElement(Text, null, link?.to_id || 0)),\n                !!link?.type_id && React.createElement(Button, { size: 'sm', fontSize: 'sm', variant: \"outline\", onClick: async () => {\n                        const { data: [next] } = await deep.select(link?.type_id);\n                        setCurrent(next);\n                    } },\n                    React.createElement(Text, null,\n                        link?.type_id,\n                        \" \",\n                        deep.nameLocal(link?.type_id))))));\n    };\n    const List = ({ link, parentsQuery, childrenQuery, current, setCurrent, setMode }) => {\n        const { data: parents } = deep.useDeepSubscription(parentsQuery);\n        const { data: children } = deep.useDeepSubscription(childrenQuery);\n        const descriptionQuery = React.useMemo(() => {\n            return {\n                to: { down: {\n                        tree_id: deep.idLocal('@deep-foundation/core', 'typesTree'),\n                        link_id: { _in: [\n                                ...(current?.id ? [current.id] : []),\n                                ...parents?.map(l => l.id),\n                                ...children?.map(l => l.id),\n                                ...parents?.map(l => l.from_id),\n                                ...children?.map(l => l.from_id),\n                                ...parents?.map(l => l.to_id),\n                                ...children?.map(l => l.to_id),\n                            ] },\n                    } },\n                type_id: { _in: [deep.idLocal('@deep-foundation/core', 'Contain'), deep.idLocal('@deep-foundation/core', 'Symbol')] },\n            };\n        }, [current, parents, children]);\n        const description = deep.useDeepSubscription(descriptionQuery);\n        deep.useDeepSubscription({\n            down: {\n                tree_id: { _in: [\n                        deep.idLocal('@deep-foundation/core', 'typesTree'),\n                        deep.idLocal('@deep-foundation/core', 'containTree'),\n                    ] },\n                link_id: { _in: [\n                        ...(current?.id ? [current.id] : []),\n                        ...parents?.map(l => l.id),\n                        ...children?.map(l => l.id),\n                        ...parents?.map(l => l.from_id),\n                        ...children?.map(l => l.from_id),\n                        ...parents?.map(l => l.to_id),\n                        ...children?.map(l => l.to_id),\n                    ] },\n            },\n        });\n        return React.createElement(React.Fragment, null, !description.loading &&\n            React.createElement(VStack, { divider: React.createElement(StackDivider, { borderColor: 'borderColor' }), spacing: 1, align: 'stretch', fontSize: 'sm' },\n                parents?.map(c => (React.createElement(ListItem, { key: c?.id, current: current, setMode: setMode, setCurrent: setCurrent, link: c, onClick: () => setCurrent(c), bg: 'backgroundModal', p: '0.2rem' }))),\n                !!current && React.createElement(ListItem, { current: current, setMode: setMode, setCurrent: setCurrent, link: current, p: '0.2rem' }),\n                children?.map(c => (React.createElement(ListItem, { key: c?.id, current: current, setMode: setMode, setCurrent: setCurrent, link: c, onClick: () => setCurrent(c) })))));\n    };\n    return ({ style, link, onChange, search, query, fillSize, children = null, }) => {\n        const [currentId, setCurrentId] = React.useState(link?.id || 0);\n        const setCurrent = React.useCallback((link) => setCurrentId(link?.id || 0));\n        const { data: [current] = [] } = deep.useDeepSubscription({ id: currentId });\n        const [mode, setMode] = React.useState(typeof (search) === 'string' ? 'Search' : typeof (query) === 'object' ? 'Query' : 'Contains');\n        const [viewSize, setViewSize] = React.useState({ height: 400, width: 450 });\n        React.useEffect(() => onChange && onChange(current), [current]);\n        const [trees, setTrees] = React.useState([]);\n        React.useEffect(() => {\n            mode === 'Trees' && (async () => {\n                setTrees((await deep.select({\n                    link_id: { _eq: current?.id },\n                    parent_id: { _eq: current?.id },\n                    distinct_on: ['tree_id'],\n                }, {\n                    table: 'tree',\n                    returning: `\n          id link_id tree_id root_id depth position_id\n        `,\n                }))?.data);\n            })();\n        }, [mode, current]);\n        const [tree, setTree] = React.useState();\n        React.useEffect(() => setTree(), [mode, current]);\n        const [q, setQ] = React.useState(query);\n        const setQoDebounce = useDebounceCallback((q) => {\n            try {\n                setQo(json5.parse(q));\n            }\n            catch (error) { }\n        }, 1000);\n        const [qo, setQo] = React.useState(q);\n        const [s, setS] = React.useState(search || '');\n        const setSoDebounce = useDebounceCallback((s) => {\n            const num = parseFloat(s);\n            const _or = [];\n            if (!Number.isNaN(num)) {\n                _or.push({ id: num }, { number: { value: num } });\n            }\n            _or.push({ string: { value: s } }, { string: { value: { _ilike: `%${s}%` } } }, { string: { value: { _similar: s } } }, { in: { type_id: deep.idLocal('@deep-foundation/core', 'Contain'), string: { value: s } } }, { in: { type_id: deep.idLocal('@deep-foundation/core', 'Contain'), string: { value: { _ilike: `%${s}%` } } } }, { in: { type_id: deep.idLocal('@deep-foundation/core', 'Contain'), string: { value: { _similar: s } } } });\n            const query = JSON.stringify({\n                _not: { type_id: deep.idLocal('@deep-foundation/core', 'Contain') },\n                _or,\n            });\n            setQ(query);\n            try {\n                setQo(json5.parse(query));\n            }\n            catch (error) { }\n        }, 1000);\n        const { colorMode } = useColorMode();\n        const bg = useColorModeValue('#eeeeee', '#434343');\n        const hover = useColorModeValue('white', '#1e1e1e');\n        const borderColor = useColorModeValue('#434343', '#eeeeee');\n        const color = useColorModeValue('#1e1e1e', 'white');\n        const body = React.createElement(Box, { sx: {\n                height: fillSize ? '100%' : viewSize.height,\n                width: fillSize ? '100%' : viewSize.width,\n                overflowY: 'auto',\n                position: 'relative',\n                borderColor: 'borderColor',\n                borderWidth: 'thin',\n                borderRadius: '0.5rem',\n                p: '0.2rem',\n                ...style\n            } },\n            React.createElement(HStack, { align: 'stretch', justifyContent: 'space-between', sx: { position: 'sticky', top: 0, mb: '0.3rem' }, bg: 'transparent' },\n                React.createElement(Button, { variant: 'solid', size: 'sm', background: !(mode === 'Search') ? 'backgroundModal' : 'gray.400', borderColor: !(mode === 'Search') ? 'borderColor' : 'backgroundModal', borderWidth: 'thin', onClick: () => setMode('Search') }, \"\\uD83E\\uDEAC\"),\n                React.createElement(Button, { variant: 'solid', size: 'sm', background: !(mode === 'Query') ? 'backgroundModal' : 'gray.400', borderColor: !(mode === 'Query') ? 'borderColor' : 'backgroundModal', borderWidth: 'thin', onClick: () => setMode('Query') }, \"\\uD83D\\uDD0D\"),\n                React.createElement(Button, { variant: 'solid', size: 'sm', background: !(mode === 'Contains') ? 'backgroundModal' : 'gray.400', borderColor: !(mode === 'Contains') ? 'borderColor' : 'backgroundModal', borderWidth: 'thin', onClick: () => setMode('Contains') }, \"\\uD83D\\uDDC2\"),\n                React.createElement(Button, { variant: 'solid', size: 'sm', background: !(mode === 'In/Out') ? 'backgroundModal' : 'gray.400', borderColor: !(mode === 'In/Out') ? 'borderColor' : 'backgroundModal', borderWidth: 'thin', onClick: () => setMode('In/Out') }, \"In/Out\"),\n                React.createElement(Button, { variant: 'solid', size: 'sm', background: !(mode === 'Trees') ? 'backgroundModal' : 'gray.400', borderColor: !(mode === 'Trees') ? 'borderColor' : 'backgroundModal', borderWidth: 'thin', onClick: () => setMode('Trees') }, \"\\uD83C\\uDF32\")),\n            mode === 'Search' && React.createElement(React.Fragment, null,\n                current && React.createElement(List, { link: link, current: current, setMode: setMode, setCurrent: setCurrent, parentsQuery: { id: 0 }, childrenQuery: { id: 0 } }),\n                React.createElement(Input, { autoFocus: true, type: \"text\", variant: 'filled', variant: 'filled', bg: bg, color: color, borderWidth: 'thin', borderColor: borderColor, _hover: { bg: hover }, _focus: { bg: bg }, sx: {\n                        width: '100%',\n                    }, onChange: (e) => {\n                        setS(e.target.value);\n                        setSoDebounce(e.target.value);\n                    }, value: s }),\n                React.createElement(List, { link: link, current: null, setMode: setMode, setCurrent: setCurrent, parentsQuery: { id: 0 }, childrenQuery: {\n                        ...qo,\n                        limit: 30,\n                    } })),\n            mode === 'Query' && React.createElement(React.Fragment, null,\n                current && React.createElement(List, { link: link, current: current, setMode: setMode, setCurrent: setCurrent, parentsQuery: { id: 0 }, childrenQuery: { id: 0 } }),\n                React.createElement(MonacoEditor, { options: {\n                        minimap: {\n                            enabled: false\n                        },\n                        lineNumbers: 'off',\n                        wordWrap: true,\n                    }, height: \"200px\", width: \"100%\", theme: colorMode === 'light' ? 'light' : \"vs-dark\", defaultLanguage: \"json\", defaultValue: q || '', onChange: (value) => {\n                        setQ(value);\n                        setQoDebounce(value);\n                    } }),\n                React.createElement(List, { link: link, current: null, setMode: setMode, setCurrent: setCurrent, parentsQuery: { id: 0 }, childrenQuery: {\n                        ...qo,\n                        limit: 30,\n                    } })),\n            mode === 'Contains' && current && React.createElement(List, { link: link, current: current, setMode: setMode, setCurrent: setCurrent, parentsQuery: {\n                    out: {\n                        type_id: deep.idLocal('@deep-foundation/core', 'Contain'),\n                        to_id: current?.id,\n                    }\n                }, childrenQuery: {\n                    in: {\n                        type_id: deep.idLocal('@deep-foundation/core', 'Contain'),\n                        from_id: current?.id,\n                    }\n                } }),\n            mode === 'In/Out' && current && React.createElement(React.Fragment, null,\n                React.createElement(List, { link: link, current: current, setMode: setMode, setCurrent: setCurrent, parentsQuery: {\n                        to_id: current?.id\n                    }, childrenQuery: {\n                        from_id: current?.id\n                    } })),\n            mode === 'Trees' && React.createElement(React.Fragment, null,\n                React.createElement(VStack, { divider: React.createElement(StackDivider, { borderColor: 'borderColor' }), spacing: 1, align: 'stretch', bg: 'gray.800' }, [React.createElement(Wrap, { key: tree?.id || 0, spacing: 1, justify: 'center' }, trees?.map(t => React.createElement(WrapItem, { key: t?.id },\n                        React.createElement(Button, { size: 'sm', variant: tree?.id === t?.id ? 'solid' : \"outline\", onClick: () => setTree(t) }, deep.nameLocal(t?.tree_id)))))]),\n                !tree && React.createElement(React.Fragment, null,\n                    React.createElement(List, { link: link, current: current, setMode: setMode, setCurrent: setCurrent, parentsQuery: {\n                            id: 0\n                        }, childrenQuery: {\n                            id: 0\n                        } })),\n                !!tree && !!current?.id && React.createElement(React.Fragment, null, [React.createElement(List, { key: tree?.id, link: link, current: current, setMode: setMode, setCurrent: setCurrent, parentsQuery: {\n                            down: {\n                                tree_id: tree?.tree_id,\n                                position_id: tree?.position_id,\n                                link_id: current?.id\n                            },\n                        }, childrenQuery: { _and: [\n                                { up: {\n                                        tree_id: tree?.tree_id,\n                                        root_id: tree?.root_id,\n                                        parent_id: tree?.link_id,\n                                        depth: tree?.depth,\n                                    } },\n                                { down: {\n                                        tree_id: tree?.tree_id,\n                                        root_id: tree?.root_id,\n                                        depth: tree?.depth + 1,\n                                    } },\n                            ] } })])),\n            children);\n        return React.createElement(React.Fragment, null, fillSize\n            ? body\n            : React.createElement(Resize, { onChangeSize: (viewSize) => setViewSize(viewSize), style: {\n                    borderRadius: 5,\n                    border: 'none',\n                } }, body));\n    };\n};\n//# sourceMappingURL=data:application/json;base64,",
        "link_id": 967
      }
    },
    {
      "id": 968,
      "type_id": 3,
      "from_id": 946,
      "to_id": 967,
      "value": {
        "id": 400,
        "value": "generated",
        "link_id": 968
      }
    },
    {
      "id": 969,
      "type_id": 143,
      "from_id": 967,
      "to_id": 946
    },
    {
      "id": 970,
      "type_id": 3,
      "from_id": 946,
      "to_id": 969
    },
    {
      "id": 980,
      "type_id": 1,
      "from_id": 8,
      "to_id": 8
    },
    {
      "id": 981,
      "type_id": 1,
      "from_id": 980,
      "to_id": 35
    },
    {
      "id": 982,
      "type_id": 2,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 410,
        "value": "@deep-foundation/deepcase-opened",
        "link_id": 982
      }
    },
    {
      "id": 1074,
      "type_id": 82,
      "from_id": 1072,
      "to_id": 1073
    },
    {
      "id": 1075,
      "type_id": 164,
      "from_id": 1074,
      "to_id": 49
    },
    {
      "id": 1268,
      "type_id": 30,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 480,
        "value": "async ({ deep, require }) => {\n    const PACKAGE_NAME = \"@deep-foundation/chatgpt-azure-discord-bot\";\n    const logsPrefix = \"@chatgpt-azure\" + \" \" + \"manager\" + \"ClientHandler\";\n    const React = await deep.import(\"react\");\n    const { useState, useMemo, useRef } = React;\n    const Chakra = await deep.import(\"@chakra-ui/react\");\n    console.log(logsPrefix, { Chakra });\n    const { Input, InputGroup, InputRightElement, IconButton, Popover, PopoverTrigger, PopoverContent, PopoverArrow, PopoverBody, FormControl, FormLabel, Box, PopoverHeader, PopoverCloseButton, HStack, Stack, Text, Link, Select, Tooltip, Button, NumberInput, NumberInputField, FormHelperText, FormErrorMessage, Divider, } = Chakra;\n    const ChakraIcons = await deep.import(\"@chakra-ui/icons\");\n    const { InfoOutlineIcon } = ChakraIcons;\n    console.log(logsPrefix, ChakraIcons);\n    const DeepCase = await deep.import(\"@deep-foundation/deepcase\");\n    const { FinderPopover } = await deep.import(\"./cyto/hooks\");\n    const { ClientHandler } = DeepCase;\n    console.log(logsPrefix, { DeepCase });\n    console.log(logsPrefix, { FinderPopover });\n    const ReactHookForm = await deep.import(\"react-hook-form\");\n    console.log(logsPrefix, { ReactHookForm });\n    const { useForm, Controller } = ReactHookForm;\n    const containTypeLinkId = await deep.id(\"@deep-foundation/core\", \"Contain\");\n    const chatGPTAzureClientHandlerLinkId = await deep.id(\"@deep-foundation/chatgpt-azure\", \"managerClientHandler\");\n    return ({ fillSize, style, link }) => {\n        const { handleSubmit, register, formState: { errors, isSubmitting }, control, setValue, setError, } = useForm();\n        async function onSubmit(values) {\n            const { apiKey, chatGPTModelLinkId, userLinkId, containerLinkId } = values;\n            const containTypeLinkId = await deep.id(\"@deep-foundation/core\", \"Contain\");\n            const reservedLinkIds = await deep.reserve(6);\n            const apiKeyLinkId = reservedLinkIds.pop();\n            const containForApiKeyLinkId = reservedLinkIds.pop();\n            const usesApiKeyLinkId = reservedLinkIds.pop();\n            const containForUsesApiKeyLinkId = reservedLinkIds.pop();\n            const usesModelLinkId = reservedLinkIds.pop();\n            const containForUsesModelLinkId = reservedLinkIds.pop();\n            await deep\n                .serial({\n                operations: [\n                    {\n                        type: \"insert\",\n                        table: \"links\",\n                        objects: {\n                            id: apiKeyLinkId,\n                            type_id: await deep.id(\"@deep-foundation/openai\", \"ApiKey\"),\n                        },\n                    },\n                    {\n                        type: \"insert\",\n                        table: \"strings\",\n                        objects: {\n                            link_id: apiKeyLinkId,\n                            value: apiKey,\n                        },\n                    },\n                    {\n                        type: \"insert\",\n                        table: \"links\",\n                        objects: {\n                            id: containForApiKeyLinkId,\n                            type_id: containTypeLinkId,\n                            from_id: containerLinkId,\n                            to_id: apiKeyLinkId,\n                        },\n                    },\n                    {\n                        type: \"insert\",\n                        table: \"links\",\n                        objects: {\n                            id: usesApiKeyLinkId,\n                            type_id: await deep.id(\"@deep-foundation/openai\", \"UsesApiKey\"),\n                            from_id: userLinkId,\n                            to_id: apiKeyLinkId,\n                        },\n                    },\n                    {\n                        type: \"insert\",\n                        table: \"links\",\n                        objects: {\n                            id: containForUsesApiKeyLinkId,\n                            type_id: containTypeLinkId,\n                            from_id: containerLinkId,\n                            to_id: usesApiKeyLinkId,\n                        },\n                    },\n                    {\n                        type: \"insert\",\n                        table: \"links\",\n                        objects: {\n                            id: usesModelLinkId,\n                            type_id: await deep.id(\"@deep-foundation/openai\", \"UsesModel\"),\n                            from_id: userLinkId,\n                            to_id: chatGPTModelLinkId,\n                        },\n                    },\n                    {\n                        type: \"insert\",\n                        table: \"links\",\n                        objects: {\n                            id: containForUsesModelLinkId,\n                            type_id: containTypeLinkId,\n                            from_id: containerLinkId,\n                            to_id: usesModelLinkId,\n                        },\n                    },\n                ],\n            })\n                .catch(setError);\n        }\n        return (React.createElement(Box, { style: { minWidth: 450, ...style }, bg: \"bgColor\", color: \"text\", borderColor: \"borderColor\", borderWidth: \"1px\", borderRadius: \"lg\", padding: 4 },\n            React.createElement(\"form\", { onSubmit: handleSubmit(onSubmit) },\n                React.createElement(FormControl, { isInvalid: errors.root },\n                    React.createElement(Stack, { spacing: 6, divider: React.createElement(Divider, null), display: \"flex\", justifyContent: \"center\" },\n                        React.createElement(ApiKeyTextField, { register: register, error: errors.apiKey && errors.apiKey.message }),\n                        React.createElement(ModelLinkIdSelect, { register: register, error: errors.chatGPTModelLinkId && errors.chatGPTModelLinkId.message }),\n                        React.createElement(UserLinkIdTextField, { control: control, error: errors.userLinkId && errors.userLinkId.message, setValue: setValue }),\n                        React.createElement(ContainerLinkIdTextField, { control: control, setValue: setValue, error: errors.containerLinkId && errors.containerLinkId.message }),\n                        errors.root && React.createElement(FormErrorMessage, null, JSON.stringify(errors.root, null, 2)),\n                        React.createElement(Button, { isLoading: isSubmitting, type: \"submit\" }, \"Submit\"))))));\n    };\n    function ModelLinkIdSelect(options) {\n        const { register, error } = options;\n        const { data: modelLinks } = deep.useDeepSubscription({\n            type_id: {\n                _id: [\"@deep-foundation/openai\", \"Model\"],\n            },\n        });\n        const modelOptions = useMemo(() => {\n            if (!modelLinks || modelLinks.length === 0)\n                return null;\n            return modelLinks.map((link) => {\n                const name = link.value.value;\n                return React.createElement(\"option\", { value: link.id }, name);\n            });\n        }, [modelLinks]);\n        console.log({ modelOptions });\n        return (React.createElement(Tooltip, { label: `No model links of type [\"@deep-foundation/openai\", \"Model\"] available to choose from. You can install \"@deep-foundation/chatgpt-azure-deep\" for already configured chatgpt models`, isDisabled: modelLinks.length > 0 },\n            React.createElement(FormControl, { isInvalid: error },\n                React.createElement(FormLabel, { htmlFor: \"chatGPTModelLinkId\" }, \"ChatGPT Model Link ID\"),\n                React.createElement(Select, { placeholder: \"ChatGPT Model link ID\", ...register(\"chatGPTModelLinkId\", {\n                        required: \"ChatGPT Model link ID is required\",\n                    }), isDisabled: modelLinks.length === 0 }, modelOptions),\n                React.createElement(FormErrorMessage, null, error),\n                React.createElement(FormHelperText, null, \"ChatGPT model is required to know which model should be used for requests\"))));\n    }\n    function ApiKeyTextField(options) {\n        const { error, register } = options;\n        return (React.createElement(HStack, null,\n            React.createElement(FormControl, { isInvalid: error },\n                React.createElement(FormLabel, { htmlFor: \"apiKey\" }, \"ApiKey Link ID\"),\n                React.createElement(Input, { ...register(\"apiKey\", {\n                        required: \"Api Key is required\",\n                    }) }),\n                React.createElement(FormErrorMessage, null, error),\n                React.createElement(FormHelperText, null,\n                    React.createElement(Stack, null,\n                        React.createElement(Text, null, \"Api Key is required to make requests to openai on your behalf\"),\n                        React.createElement(Link, { isExternal: true, href: \"https://platform.openai.com/api-keys\" }, \"Obtain Api Key\"))))));\n    }\n    function UserLinkIdTextField(options) {\n        const { setValue, error, control } = options;\n        return (React.createElement(FormControl, { isInvalid: error },\n            React.createElement(FormLabel, { htmlFor: \"userLinkId\" }, \"User Link ID\"),\n            React.createElement(Controller, { name: \"userLinkId\", control: control, defaultValue: undefined, rules: {\n                    required: {\n                        value: true,\n                        message: \"User link ID is required\",\n                    },\n                    validate: async (value) => {\n                        const valueNumber = parseInt(value);\n                        if (isNaN(valueNumber)) {\n                            return \"User link ID must be a number\";\n                        }\n                        const { data: [link], } = await deep.select({ id: valueNumber });\n                        if (!link) {\n                            return `Link ${valueNumber} does not exist`;\n                        }\n                        else {\n                            return true;\n                        }\n                    },\n                }, render: ({ field }) => (React.createElement(HStack, null,\n                    React.createElement(NumberInput, { ...field, min: 0 },\n                        React.createElement(NumberInputField, { ref: field.ref, name: field.name })),\n                    React.createElement(FinderPopover, { link: deep.linkId, onSubmit: async (link) => {\n                            setValue(\"containerLinkId\", link.id);\n                        } },\n                        React.createElement(IconButton, { \"aria-label\": \"finder\", icon: React.createElement(React.Fragment, null, \"\\uD83E\\uDEAC\") })))) }),\n            React.createElement(FormErrorMessage, null, error),\n            React.createElement(FormHelperText, null, \"User link is a link that is considered as a user of ApiKey. User link will be \\\"from\\\" for UsesApiKey\")));\n    }\n    function ContainerLinkIdTextField(options) {\n        const { setValue, error, control } = options;\n        const helpContent = `Container link is a link that will contain newly created ApiKey, UsesApiKey`;\n        return (React.createElement(FormControl, { isInvalid: error },\n            React.createElement(FormLabel, { htmlFor: \"containerLinkId\" }, \"Container Link ID\"),\n            React.createElement(HStack, null,\n                React.createElement(Controller, { name: \"containerLinkId\", control: control, defaultValue: undefined, rules: {\n                        required: {\n                            value: true,\n                            message: \"Container link id is required\",\n                        },\n                        validate: async (value) => {\n                            const valueNumber = parseInt(value);\n                            if (isNaN(valueNumber)) {\n                                return \"Container link id must be a number\";\n                            }\n                            const { data: [link], } = await deep.select({ id: valueNumber });\n                            if (!link) {\n                                return `Link ${valueNumber} does not exist`;\n                            }\n                            else {\n                                return true;\n                            }\n                        },\n                    }, render: ({ field }) => (React.createElement(NumberInput, { ...field, min: 0 },\n                        React.createElement(NumberInputField, { ref: field.ref, name: field.name }))) }),\n                React.createElement(FinderPopover, { link: deep.linkId, onSubmit: async (link) => {\n                        setValue(\"containerLinkId\", link.id);\n                    } },\n                    React.createElement(IconButton, { \"aria-label\": \"finder\", icon: React.createElement(React.Fragment, null, \"\\uD83E\\uDEAC\") }))),\n            React.createElement(FormErrorMessage, null, error),\n            React.createElement(FormHelperText, null, \"Container link is a link that will contain newly created ApiKey, UsesApiKey\")));\n    }\n};\n//# sourceMappingURL=data:application/json;base64,",
        "link_id": 1268
      }
    },
    {
      "id": 1269,
      "type_id": 3,
      "from_id": 1211,
      "to_id": 1268,
      "value": {
        "id": 479,
        "value": "generated",
        "link_id": 1269
      }
    },
    {
      "id": 1270,
      "type_id": 143,
      "from_id": 1268,
      "to_id": 1211
    },
    {
      "id": 1271,
      "type_id": 3,
      "from_id": 1211,
      "to_id": 1270
    },
    {
      "id": 1301,
      "type_id": 1187,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 507,
        "value": "gpt-4-32k",
        "link_id": 1301
      }
    },
    {
      "id": 1306,
      "type_id": 1221,
      "from_id": 1304,
      "to_id": 1297
    },
    {
      "id": 1307,
      "type_id": 1187,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 509,
        "value": "gpt-4-128k",
        "link_id": 1307
      }
    },
    {
      "id": 1308,
      "type_id": 1100,
      "from_id": 1307,
      "to_id": 1307,
      "value": {
        "id": 3,
        "value": 128000,
        "link_id": 1308
      }
    },
    {
      "id": 1405,
      "type_id": 1,
      "from_id": 1403,
      "to_id": 1223
    },
    {
      "id": 1406,
      "type_id": 4,
      "from_id": 1402,
      "to_id": 5
    },
    {
      "id": 1411,
      "type_id": 2,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 546,
        "value": "@deep-foundation/chatgpt-azure-templates",
        "link_id": 1411
      }
    },
    {
      "id": 1455,
      "type_id": 18,
      "from_id": 1452,
      "to_id": 1454
    },
    {
      "id": 1477,
      "type_id": 30,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 562,
        "value": "async ({ deep, data: { newLink, deeplinksUrl }, require }) => {\n    const axios = require('axios');\n    const router = await deep.id('@deep-foundation/telegram-bot', 'router');\n    const onTelegramInHandler = await deep.id('@deep-foundation/telegram-bot', 'onTelegramInHandler');\n    const selector = await deep.id('@deep-foundation/telegram-bot', 'botSelector');\n    const tuaimRuleSubjectSelector = await deep.id('@deep-foundation/telegram-bot', 'tuaimRuleSubjectSelector');\n    const messagingTree = await deep.id('@deep-foundation/messaging', 'messagingTree');\n    const joinTree = await deep.id('@deep-foundation/core', 'joinTree');\n\n    let { data: [token] } = await deep.select({ id: newLink.to_id });\n\n    const Route = deep.idLocal('@deep-foundation/core', 'Route');\n    const RouterStringUse = deep.idLocal('@deep-foundation/core', 'RouterStringUse');\n    const HandleRoute = deep.idLocal('@deep-foundation/core', 'HandleRoute');\n    const Contain = deep.idLocal('@deep-foundation/core', 'Contain');\n    const SelectorTree = deep.idLocal('@deep-foundation/core', 'SelectorTree');\n    const SelectorInclude = deep.idLocal('@deep-foundation/core', 'SelectorInclude');\n\n    const contain = (value, from_id) => ({\n        in: { data: {\n            type_id: Contain,\n            from_id: from_id,\n            string: { data: { value } },\n        } },\n    });\n\n    const { data: insertedLinks } = await deep.insert([\n        {\n            type_id: SelectorInclude,\n            from_id: tuaimRuleSubjectSelector,\n            to_id: newLink.from_id,\n            ...contain('ruleInclude'+newLink.from_id, tuaimRuleSubjectSelector),\n            out: { data: {\n                type_id: SelectorTree,\n                to_id: joinTree,\n                ...contain('ruleTree'+newLink.from_id, tuaimRuleSubjectSelector),\n            } },\n        },\n        {\n            type_id: SelectorInclude,\n            from_id: selector,\n            to_id: newLink.from_id,\n            ...contain('include'+newLink.from_id, selector),\n            out: { data: {\n                type_id: SelectorTree,\n                to_id: messagingTree,\n                ...contain('tree'+newLink.from_id, selector),\n            } },\n        },\n        {\n            type_id: Route,\n            ...contain('route'+newLink.from_id, router),\n            out: { data: [\n                {\n                    type_id: HandleRoute,\n                    to_id: onTelegramInHandler,\n                    ...contain('handle'+newLink.from_id, router),\n                },\n                {\n                    type_id: RouterStringUse,\n                    to_id: router,\n                    string: { data: { value: '/packages/deep-foundation/telegram-bot/'+newLink.from_id } },\n                    ...contain('use'+newLink.from_id, router),\n                },\n            ] },\n        },\n    ]);\n\n    const { data: insertedWebhook } = await axios.get(`https://api.telegram.org/bot${token?.value?.value}/setWebhook?url=${deeplinksUrl}/packages/deep-foundation/telegram-bot/${newLink.from_id}`);\n\n    return {\n        insertedLinks,\n        insertedWebhook,\n    };\n}",
        "link_id": 1477
      }
    },
    {
      "id": 1527,
      "type_id": 3,
      "from_id": 1495,
      "to_id": 1463,
      "value": {
        "id": 594,
        "value": "tuaimRuleObjectContainTree",
        "link_id": 1527
      }
    },
    {
      "id": 1528,
      "type_id": 3,
      "from_id": 1495,
      "to_id": 1462,
      "value": {
        "id": 595,
        "value": "tuaimRuleObjectContain",
        "link_id": 1528
      }
    },
    {
      "id": 1531,
      "type_id": 3,
      "from_id": 1495,
      "to_id": 1466,
      "value": {
        "id": 598,
        "value": "tuaimRuleActionSelectorInclude",
        "link_id": 1531
      }
    },
    {
      "id": 1536,
      "type_id": 3,
      "from_id": 1495,
      "to_id": 1470,
      "value": {
        "id": 603,
        "value": "onActiveDelete",
        "link_id": 1536
      }
    },
    {
      "id": 1538,
      "type_id": 3,
      "from_id": 1495,
      "to_id": 1472,
      "value": {
        "id": 605,
        "value": "onReplyInsert",
        "link_id": 1538
      }
    },
    {
      "id": 1539,
      "type_id": 3,
      "from_id": 1495,
      "to_id": 1476,
      "value": {
        "id": 606,
        "value": "onTelegramInHandler",
        "link_id": 1539
      }
    },
    {
      "id": 1540,
      "type_id": 3,
      "from_id": 1495,
      "to_id": 1475,
      "value": {
        "id": 607,
        "value": "onTelegramIn",
        "link_id": 1540
      }
    },
    {
      "id": 1541,
      "type_id": 3,
      "from_id": 1495,
      "to_id": 1478,
      "value": {
        "id": 608,
        "value": "onActiveInsertHandler",
        "link_id": 1541
      }
    },
    {
      "id": 1599,
      "type_id": 22,
      "from_id": 0,
      "to_id": 0
    },
    {
      "id": 1611,
      "type_id": 30,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 619,
        "value": "async ({ deep, data: {\n    state,\n    bot,\n    botId,\n    userId,\n    conversationId,\n    handlerId,\n    reply,\n    message,\n} }) => {\n    if ((message?.value?.value || '').includes('DEEP_MEMORY_EXECUTE')) {\n        const codeMatch = message?.value?.value.matchAll(/```javascript([\\s\\S]*?)```/g);\n        const codes = [...codeMatch].map(c => c[1].trim());\n        for (let c in codes) {\n            const { data: [{ id: newHandlerId }] } = await deep.insert({\n                type_id: deep.idLocal('@deep-foundation/core', 'Handler'),\n                to: { data: {\n                    type_id: deep.idLocal('@deep-foundation/core', 'SyncTextFile'),\n                    string: { data: { value: `async ({ deep, sql }) => { ${codes[c]} }` } },\n                    in: { data: {\n                        type_id: deep.idLocal('@deep-foundation/core', 'Contain'),\n                        from_id: await deep.id('@deep-foundation/deepmemorybot', 'executor'),\n                    } },\n                } },\n                from_id: 83,\n                in: { data: {\n                    type_id: deep.idLocal('@deep-foundation/core', 'Contain'),\n                    from_id: await deep.id('@deep-foundation/deepmemorybot', 'executor'),\n                } },\n            });\n            bot.telegram.sendMessage(\n                await deep.name(conversationId),\n                codes[c],\n                { reply_markup: { inline_keyboard: [[\n                    {\n                        text: 'Execute',\n                        callback_data: JSON.stringify({\n                            messageId: message.id,\n                            handlerId: newHandlerId,\n                        }),\n                    },\n                ]] } },\n            );\n        }\n    }\n}",
        "link_id": 1611
      }
    },
    {
      "id": 1633,
      "type_id": 3,
      "from_id": 1616,
      "to_id": 1614,
      "value": {
        "id": 634,
        "value": "onTelegramHandle",
        "link_id": 1633
      }
    },
    {
      "id": 1636,
      "type_id": 3,
      "from_id": 1616,
      "to_id": 1610,
      "value": {
        "id": 637,
        "value": "onTelegramBotInHandler",
        "link_id": 1636
      }
    },
    {
      "id": 1637,
      "type_id": 3,
      "from_id": 1616,
      "to_id": 1609,
      "value": {
        "id": 638,
        "value": "onTelegramBotIn",
        "link_id": 1637
      }
    },
    {
      "id": 1640,
      "type_id": 3,
      "from_id": 1616,
      "to_id": 1613,
      "value": {
        "id": 641,
        "value": "inSelector",
        "link_id": 1640
      }
    },
    {
      "id": 1675,
      "type_id": 16,
      "from_id": 1613,
      "to_id": 1665
    },
    {
      "id": 1676,
      "type_id": 3,
      "from_id": 1613,
      "to_id": 1675,
      "value": {
        "id": 648,
        "value": "include1665",
        "link_id": 1676
      }
    },
    {
      "id": 1677,
      "type_id": 70,
      "from_id": 1675,
      "to_id": 1120
    },
    {
      "id": 1678,
      "type_id": 3,
      "from_id": 1613,
      "to_id": 1677,
      "value": {
        "id": 649,
        "value": "tree1665",
        "link_id": 1678
      }
    },
    {
      "id": 1680,
      "type_id": 1489,
      "from_id": 1665,
      "to_id": 1610
    },
    {
      "id": 1682,
      "type_id": 3,
      "from_id": 1613,
      "to_id": 1680,
      "value": {
        "id": 650,
        "value": "handleTelegramBotIn1665",
        "link_id": 1682
      }
    },
    {
      "id": 1685,
      "type_id": 1487,
      "from_id": 1665,
      "to_id": 1612
    },
    {
      "id": 1687,
      "type_id": 3,
      "from_id": 1613,
      "to_id": 1685,
      "value": {
        "id": 651,
        "value": "handleTelegramBotOut1665",
        "link_id": 1687
      }
    },
    {
      "id": 1689,
      "type_id": 66,
      "from_id": 1599,
      "to_id": 1616
    },
    {
      "id": 1690,
      "type_id": 3,
      "from_id": 1613,
      "to_id": 1689,
      "value": {
        "id": 653,
        "value": "executorJoin1665",
        "link_id": 1690
      }
    },
    {
      "id": 1691,
      "type_id": 1222,
      "from_id": 1600,
      "to_id": 1411
    },
    {
      "id": 1692,
      "type_id": 3,
      "from_id": 1613,
      "to_id": 1691,
      "value": {
        "id": 654,
        "value": "system1665",
        "link_id": 1692
      }
    },
    {
      "id": 5240,
      "type_id": 35,
      "from_id": 145,
      "to_id": 5236
    },
    {
      "id": 5241,
      "type_id": 3,
      "from_id": 2586,
      "to_id": 5240,
      "value": {
        "id": 1145,
        "value": "Menu",
        "link_id": 5241
      }
    },
    {
      "id": 95,
      "type_id": 1,
      "from_id": 9,
      "to_id": 8
    },
    {
      "id": 96,
      "type_id": 4,
      "from_id": 95,
      "to_id": 5
    },
    {
      "id": 97,
      "type_id": 1,
      "from_id": 0,
      "to_id": 0
    },
    {
      "id": 98,
      "type_id": 4,
      "from_id": 97,
      "to_id": 5
    },
    {
      "id": 99,
      "type_id": 1,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 5,
        "value": "Port",
        "link_id": 99
      }
    },
    {
      "id": 100,
      "type_id": 4,
      "from_id": 99,
      "to_id": 6
    },
    {
      "id": 101,
      "type_id": 48,
      "from_id": 99,
      "to_id": 8
    },
    {
      "id": 102,
      "type_id": 1,
      "from_id": 2,
      "to_id": 97
    },
    {
      "id": 103,
      "type_id": 1,
      "from_id": 2,
      "to_id": 97
    },
    {
      "id": 104,
      "type_id": 1,
      "from_id": 0,
      "to_id": 0
    },
    {
      "id": 105,
      "type_id": 1,
      "from_id": 77,
      "to_id": 99
    },
    {
      "id": 106,
      "type_id": 1,
      "from_id": 104,
      "to_id": 77
    },
    {
      "id": 107,
      "type_id": 4,
      "from_id": 106,
      "to_id": 5
    },
    {
      "id": 108,
      "type_id": 48,
      "from_id": 104,
      "to_id": 35
    },
    {
      "id": 109,
      "type_id": 36,
      "from_id": 0,
      "to_id": 0
    },
    {
      "id": 111,
      "type_id": 39,
      "from_id": 109,
      "to_id": 77
    },
    {
      "id": 112,
      "type_id": 39,
      "from_id": 109,
      "to_id": 104
    },
    {
      "id": 113,
      "type_id": 39,
      "from_id": 109,
      "to_id": 35
    },
    {
      "id": 114,
      "type_id": 38,
      "from_id": 109,
      "to_id": 105
    },
    {
      "id": 115,
      "type_id": 38,
      "from_id": 109,
      "to_id": 106
    },
    {
      "id": 116,
      "type_id": 37,
      "from_id": 109,
      "to_id": 108
    },
    {
      "id": 117,
      "type_id": 34,
      "from_id": 36,
      "to_id": 8
    },
    {
      "id": 133,
      "type_id": 37,
      "from_id": 129,
      "to_id": 18
    },
    {
      "id": 142,
      "type_id": 1,
      "from_id": 8,
      "to_id": 8
    },
    {
      "id": 143,
      "type_id": 1,
      "from_id": 8,
      "to_id": 8
    },
    {
      "id": 144,
      "type_id": 78,
      "from_id": 0,
      "to_id": 0
    },
    {
      "id": 145,
      "type_id": 82,
      "from_id": 144,
      "to_id": 33
    },
    {
      "id": 146,
      "type_id": 1,
      "from_id": 8,
      "to_id": 8
    },
    {
      "id": 147,
      "type_id": 4,
      "from_id": 146,
      "to_id": 5
    },
    {
      "id": 148,
      "type_id": 120,
      "from_id": 40,
      "to_id": 146
    },
    {
      "id": 149,
      "type_id": 123,
      "from_id": 40,
      "to_id": 10
    },
    {
      "id": 150,
      "type_id": 123,
      "from_id": 40,
      "to_id": 11
    },
    {
      "id": 151,
      "type_id": 123,
      "from_id": 40,
      "to_id": 12
    },
    {
      "id": 152,
      "type_id": 36,
      "from_id": 0,
      "to_id": 0
    },
    {
      "id": 153,
      "type_id": 38,
      "from_id": 152,
      "to_id": 35
    },
    {
      "id": 256,
      "type_id": 3,
      "from_id": 184,
      "to_id": 72,
      "value": {
        "id": 78,
        "value": "SelectorExclude",
        "link_id": 256
      }
    },
    {
      "id": 257,
      "type_id": 3,
      "from_id": 184,
      "to_id": 73,
      "value": {
        "id": 79,
        "value": "SelectorFilter",
        "link_id": 257
      }
    },
    {
      "id": 258,
      "type_id": 3,
      "from_id": 184,
      "to_id": 74,
      "value": {
        "id": 80,
        "value": "HandleSchedule",
        "link_id": 258
      }
    },
    {
      "id": 259,
      "type_id": 3,
      "from_id": 184,
      "to_id": 75,
      "value": {
        "id": 81,
        "value": "Schedule",
        "link_id": 259
      }
    },
    {
      "id": 261,
      "type_id": 3,
      "from_id": 184,
      "to_id": 77,
      "value": {
        "id": 83,
        "value": "Router",
        "link_id": 261
      }
    },
    {
      "id": 271,
      "type_id": 3,
      "from_id": 184,
      "to_id": 87,
      "value": {
        "id": 93,
        "value": "packageInstallCodeHandler",
        "link_id": 271
      }
    },
    {
      "id": 272,
      "type_id": 3,
      "from_id": 184,
      "to_id": 88,
      "value": {
        "id": 94,
        "value": "packageInstallCodeHandleInsert",
        "link_id": 272
      }
    },
    {
      "id": 295,
      "type_id": 3,
      "from_id": 184,
      "to_id": 111,
      "value": {
        "id": 117,
        "value": "routeTreeRouter",
        "link_id": 295
      }
    },
    {
      "id": 296,
      "type_id": 3,
      "from_id": 184,
      "to_id": 112,
      "value": {
        "id": 118,
        "value": "routeTreeRoute",
        "link_id": 296
      }
    },
    {
      "id": 297,
      "type_id": 3,
      "from_id": 184,
      "to_id": 113,
      "value": {
        "id": 119,
        "value": "routeTreeHandler",
        "link_id": 297
      }
    },
    {
      "id": 298,
      "type_id": 3,
      "from_id": 184,
      "to_id": 114,
      "value": {
        "id": 120,
        "value": "routeTreeRouterListening",
        "link_id": 298
      }
    },
    {
      "id": 299,
      "type_id": 3,
      "from_id": 184,
      "to_id": 115,
      "value": {
        "id": 121,
        "value": "routeTreeRouterStringUse",
        "link_id": 299
      }
    },
    {
      "id": 300,
      "type_id": 3,
      "from_id": 184,
      "to_id": 116,
      "value": {
        "id": 122,
        "value": "routeTreeHandleRoute",
        "link_id": 300
      }
    },
    {
      "id": 351,
      "type_id": 3,
      "from_id": 184,
      "to_id": 167,
      "value": {
        "id": 173,
        "value": "plv8JSSupportsCompatableHandleDelete",
        "link_id": 351
      }
    },
    {
      "id": 352,
      "type_id": 3,
      "from_id": 184,
      "to_id": 168,
      "value": {
        "id": 174,
        "value": "dockerJSSupportsCompatableHandleInsert",
        "link_id": 352
      }
    },
    {
      "id": 353,
      "type_id": 3,
      "from_id": 184,
      "to_id": 169,
      "value": {
        "id": 175,
        "value": "dockerJSSupportsCompatableHandleUpdate",
        "link_id": 353
      }
    },
    {
      "id": 354,
      "type_id": 3,
      "from_id": 184,
      "to_id": 170,
      "value": {
        "id": 176,
        "value": "dockerJSSupportsCompatableHandleDelete",
        "link_id": 354
      }
    },
    {
      "id": 355,
      "type_id": 3,
      "from_id": 184,
      "to_id": 171,
      "value": {
        "id": 177,
        "value": "dockerJSSupportsCompatableHandleSchedule",
        "link_id": 355
      }
    },
    {
      "id": 358,
      "type_id": 3,
      "from_id": 184,
      "to_id": 174,
      "value": {
        "id": 180,
        "value": "clientJSSupportsCompatableHandleClient",
        "link_id": 358
      }
    },
    {
      "id": 359,
      "type_id": 3,
      "from_id": 184,
      "to_id": 175,
      "value": {
        "id": 181,
        "value": "promiseTree",
        "link_id": 359
      }
    },
    {
      "id": 360,
      "type_id": 3,
      "from_id": 184,
      "to_id": 176,
      "value": {
        "id": 182,
        "value": "promiseTreeAny",
        "link_id": 360
      }
    },
    {
      "id": 361,
      "type_id": 3,
      "from_id": 184,
      "to_id": 177,
      "value": {
        "id": 183,
        "value": "promiseTreeThen",
        "link_id": 361
      }
    },
    {
      "id": 362,
      "type_id": 3,
      "from_id": 184,
      "to_id": 178,
      "value": {
        "id": 184,
        "value": "promiseTreePromise",
        "link_id": 362
      }
    },
    {
      "id": 363,
      "type_id": 3,
      "from_id": 184,
      "to_id": 179,
      "value": {
        "id": 185,
        "value": "promiseTreeResolved",
        "link_id": 363
      }
    },
    {
      "id": 364,
      "type_id": 3,
      "from_id": 184,
      "to_id": 180,
      "value": {
        "id": 186,
        "value": "promiseTreeRejected",
        "link_id": 364
      }
    },
    {
      "id": 565,
      "type_id": 146,
      "from_id": 553,
      "to_id": 106,
      "value": {
        "id": 215,
        "value": "🔗",
        "link_id": 565
      }
    },
    {
      "id": 592,
      "type_id": 3,
      "from_id": 553,
      "to_id": 591,
      "value": {
        "id": 242,
        "value": "SelectorTreeSymbol",
        "link_id": 592
      }
    },
    {
      "id": 604,
      "type_id": 3,
      "from_id": 553,
      "to_id": 603,
      "value": {
        "id": 254,
        "value": "PromiseResultSymbol",
        "link_id": 604
      }
    },
    {
      "id": 608,
      "type_id": 3,
      "from_id": 553,
      "to_id": 607,
      "value": {
        "id": 258,
        "value": "PackageVersionSymbol",
        "link_id": 608
      }
    },
    {
      "id": 609,
      "type_id": 146,
      "from_id": 553,
      "to_id": 45,
      "value": {
        "id": 259,
        "value": "📯",
        "link_id": 609
      }
    },
    {
      "id": 610,
      "type_id": 3,
      "from_id": 553,
      "to_id": 609,
      "value": {
        "id": 260,
        "value": "PackageActiveSymbol",
        "link_id": 610
      }
    },
    {
      "id": 611,
      "type_id": 146,
      "from_id": 553,
      "to_id": 43,
      "value": {
        "id": 261,
        "value": "🎁",
        "link_id": 611
      }
    },
    {
      "id": 612,
      "type_id": 3,
      "from_id": 553,
      "to_id": 611,
      "value": {
        "id": 262,
        "value": "PackageNamespaceSymbol",
        "link_id": 612
      }
    },
    {
      "id": 613,
      "type_id": 146,
      "from_id": 553,
      "to_id": 34,
      "value": {
        "id": 263,
        "value": "🌿",
        "link_id": 613
      }
    },
    {
      "id": 614,
      "type_id": 3,
      "from_id": 553,
      "to_id": 613,
      "value": {
        "id": 264,
        "value": "TreeIncludeSymbol",
        "link_id": 614
      }
    },
    {
      "id": 615,
      "type_id": 146,
      "from_id": 553,
      "to_id": 36,
      "value": {
        "id": 265,
        "value": "🌲",
        "link_id": 615
      }
    },
    {
      "id": 616,
      "type_id": 3,
      "from_id": 553,
      "to_id": 615,
      "value": {
        "id": 266,
        "value": "TreeSymbol",
        "link_id": 616
      }
    },
    {
      "id": 617,
      "type_id": 146,
      "from_id": 553,
      "to_id": 35,
      "value": {
        "id": 267,
        "value": "💡",
        "link_id": 617
      }
    },
    {
      "id": 633,
      "type_id": 146,
      "from_id": 553,
      "to_id": 17,
      "value": {
        "id": 283,
        "value": "🔥",
        "link_id": 633
      }
    },
    {
      "id": 947,
      "type_id": 35,
      "from_id": 145,
      "to_id": 946
    },
    {
      "id": 948,
      "type_id": 794,
      "from_id": 0,
      "to_id": 0
    },
    {
      "id": 949,
      "type_id": 797,
      "from_id": 948,
      "to_id": 947
    },
    {
      "id": 950,
      "type_id": 2,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 402,
        "value": "@deep-foundation/finder",
        "link_id": 950
      }
    },
    {
      "id": 1076,
      "type_id": 164,
      "from_id": 1074,
      "to_id": 51
    },
    {
      "id": 1077,
      "type_id": 164,
      "from_id": 1074,
      "to_id": 50
    },
    {
      "id": 1101,
      "type_id": 4,
      "from_id": 1100,
      "to_id": 6
    },
    {
      "id": 1102,
      "type_id": 2,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 440,
        "value": "@deep-foundation/tokens",
        "link_id": 1102
      }
    },
    {
      "id": 1117,
      "type_id": 4,
      "from_id": 1116,
      "to_id": 5
    },
    {
      "id": 1135,
      "type_id": 3,
      "from_id": 1123,
      "to_id": 1120,
      "value": {
        "id": 453,
        "value": "messagingTree",
        "link_id": 1135
      }
    },
    {
      "id": 1169,
      "type_id": 3,
      "from_id": 1162,
      "to_id": 1158,
      "value": {
        "id": 463,
        "value": "MessageHandler",
        "link_id": 1169
      }
    },
    {
      "id": 1170,
      "type_id": 3,
      "from_id": 1162,
      "to_id": 1157,
      "value": {
        "id": 464,
        "value": "MessageUpdateHandlerCode",
        "link_id": 1170
      }
    },
    {
      "id": 1171,
      "type_id": 3,
      "from_id": 1162,
      "to_id": 1160,
      "value": {
        "id": 465,
        "value": "Dependency",
        "link_id": 1171
      }
    },
    {
      "id": 1212,
      "type_id": 35,
      "from_id": 145,
      "to_id": 1211
    },
    {
      "id": 1213,
      "type_id": 1118,
      "from_id": 1116,
      "to_id": 8
    },
    {
      "id": 1214,
      "type_id": 49,
      "from_id": 1213,
      "to_id": 1210
    },
    {
      "id": 1215,
      "type_id": 38,
      "from_id": 1120,
      "to_id": 1213
    },
    {
      "id": 1217,
      "type_id": 1,
      "from_id": 0,
      "to_id": 0
    },
    {
      "id": 1241,
      "type_id": 3,
      "from_id": 1225,
      "to_id": 1209,
      "value": {
        "id": 493,
        "value": "gpt4EncoderDependency",
        "link_id": 1241
      }
    },
    {
      "id": 1302,
      "type_id": 1100,
      "from_id": 1301,
      "to_id": 1301,
      "value": {
        "id": 1,
        "value": 32768,
        "link_id": 1302
      }
    },
    {
      "id": 1303,
      "type_id": 1221,
      "from_id": 1301,
      "to_id": 1298
    },
    {
      "id": 1304,
      "type_id": 1187,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 508,
        "value": "gpt-35-16k",
        "link_id": 1304
      }
    },
    {
      "id": 1305,
      "type_id": 1100,
      "from_id": 1304,
      "to_id": 1304,
      "value": {
        "id": 2,
        "value": 16384,
        "link_id": 1305
      }
    },
    {
      "id": 1310,
      "type_id": 1187,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 510,
        "value": "gpt-4o",
        "link_id": 1310
      }
    },
    {
      "id": 1315,
      "type_id": 1221,
      "from_id": 1313,
      "to_id": 1296
    },
    {
      "id": 1316,
      "type_id": 2,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 512,
        "value": "@deep-foundation/chatgpt-azure-deep",
        "link_id": 1316
      }
    },
    {
      "id": 1331,
      "type_id": 3,
      "from_id": 1316,
      "to_id": 1307,
      "value": {
        "id": 523,
        "value": "gpt-4-128k",
        "link_id": 1331
      }
    },
    {
      "id": 1410,
      "type_id": 49,
      "from_id": 1403,
      "to_id": 1409
    },
    {
      "id": 1462,
      "type_id": 16,
      "from_id": 1456,
      "to_id": 3
    },
    {
      "id": 1463,
      "type_id": 70,
      "from_id": 1462,
      "to_id": 40
    },
    {
      "id": 1464,
      "type_id": 15,
      "from_id": 0,
      "to_id": 0
    },
    {
      "id": 1465,
      "type_id": 20,
      "from_id": 1452,
      "to_id": 1464
    },
    {
      "id": 1468,
      "type_id": 77,
      "from_id": 0,
      "to_id": 0
    },
    {
      "id": 1480,
      "type_id": 146,
      "from_id": 1479,
      "to_id": 1479,
      "value": {
        "id": 563,
        "value": "🔑",
        "link_id": 1480
      }
    },
    {
      "id": 1481,
      "type_id": 4,
      "from_id": 1479,
      "to_id": 5
    },
    {
      "id": 1483,
      "type_id": 39,
      "from_id": 1120,
      "to_id": 1482
    },
    {
      "id": 1508,
      "type_id": 3,
      "from_id": 1495,
      "to_id": 1493,
      "value": {
        "id": 575,
        "value": "onActiveDeleteHandle",
        "link_id": 1508
      }
    },
    {
      "id": 1510,
      "type_id": 3,
      "from_id": 1495,
      "to_id": 1491,
      "value": {
        "id": 577,
        "value": "Active",
        "link_id": 1510
      }
    },
    {
      "id": 1511,
      "type_id": 3,
      "from_id": 1495,
      "to_id": 1480,
      "value": {
        "id": 578,
        "value": "tokenSymbol",
        "link_id": 1511
      }
    },
    {
      "id": 1512,
      "type_id": 3,
      "from_id": 1495,
      "to_id": 1481,
      "value": {
        "id": 579,
        "value": "tokenValue",
        "link_id": 1512
      }
    },
    {
      "id": 1513,
      "type_id": 3,
      "from_id": 1495,
      "to_id": 1479,
      "value": {
        "id": 580,
        "value": "Token",
        "link_id": 1513
      }
    },
    {
      "id": 119,
      "type_id": 34,
      "from_id": 36,
      "to_id": 8
    },
    {
      "id": 120,
      "type_id": 34,
      "from_id": 36,
      "to_id": 8
    },
    {
      "id": 121,
      "type_id": 34,
      "from_id": 36,
      "to_id": 8
    },
    {
      "id": 122,
      "type_id": 34,
      "from_id": 36,
      "to_id": 8
    },
    {
      "id": 123,
      "type_id": 34,
      "from_id": 36,
      "to_id": 8
    },
    {
      "id": 124,
      "type_id": 34,
      "from_id": 36,
      "to_id": 8
    },
    {
      "id": 125,
      "type_id": 23,
      "from_id": 0,
      "to_id": 0
    },
    {
      "id": 126,
      "type_id": 23,
      "from_id": 0,
      "to_id": 0
    },
    {
      "id": 127,
      "type_id": 23,
      "from_id": 0,
      "to_id": 0
    },
    {
      "id": 128,
      "type_id": 23,
      "from_id": 0,
      "to_id": 0
    },
    {
      "id": 129,
      "type_id": 36,
      "from_id": 0,
      "to_id": 0
    },
    {
      "id": 130,
      "type_id": 39,
      "from_id": 129,
      "to_id": 17
    },
    {
      "id": 566,
      "type_id": 3,
      "from_id": 553,
      "to_id": 565,
      "value": {
        "id": 216,
        "value": "RouterStringUseSymbol",
        "link_id": 566
      }
    },
    {
      "id": 597,
      "type_id": 146,
      "from_id": 553,
      "to_id": 58,
      "value": {
        "id": 247,
        "value": "🔎",
        "link_id": 597
      }
    },
    {
      "id": 598,
      "type_id": 3,
      "from_id": 553,
      "to_id": 597,
      "value": {
        "id": 248,
        "value": "QuerySymbol",
        "link_id": 598
      }
    },
    {
      "id": 599,
      "type_id": 146,
      "from_id": 553,
      "to_id": 55,
      "value": {
        "id": 249,
        "value": "📌",
        "link_id": 599
      }
    },
    {
      "id": 600,
      "type_id": 3,
      "from_id": 553,
      "to_id": 599,
      "value": {
        "id": 250,
        "value": "FocusSymbol",
        "link_id": 600
      }
    },
    {
      "id": 602,
      "type_id": 3,
      "from_id": 553,
      "to_id": 601,
      "value": {
        "id": 252,
        "value": "PromiseReasonSymbol",
        "link_id": 602
      }
    },
    {
      "id": 644,
      "type_id": 3,
      "from_id": 553,
      "to_id": 643,
      "value": {
        "id": 294,
        "value": "SelectorIncludeSymbol",
        "link_id": 644
      }
    },
    {
      "id": 645,
      "type_id": 146,
      "from_id": 553,
      "to_id": 15,
      "value": {
        "id": 295,
        "value": "🪢",
        "link_id": 645
      }
    },
    {
      "id": 715,
      "type_id": 30,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 314,
        "value": "\nasync ({ deep, require, gql, data: { newLink } }) => {\n    const ts = require('typescript');\n  const { data: [generatedFrom] } = await deep.select({\n      type_id: await deep.id('@deep-foundation/core', 'GeneratedFrom'),\n    to_id: newLink.id, \n  });\n  const value = newLink?.value?.value;\n  let compiledString = '';\n  if (value) {\n    const result = ts.transpileModule(value, {\n      \"compilerOptions\": {\n        \"allowSyntheticDefaultImports\": true,\n        \"experimentalDecorators\": true,\n        \"inlineSourceMap\": true,\n        inlineSources: true,\n        \"noImplicitAny\": false,\n        \"removeComments\": true,\n        \"jsx\": \"react\",\n        \"module\": \"ESNext\",\n        \"moduleResolution\": \"node\",\n        \"target\": \"ESNext\",\n        \"skipLibCheck\": true,\n        \"resolveJsonModule\": true,\n        \"esModuleInterop\": true,\n        \"isolatedModules\": true\n      }\n    });\n    if (!result.outputText) {\n      throw result;\n    }\n    compiledString = result.outputText || '';\n  }\n  if (!generatedFrom) {\n      await deep.insert({\n        type_id: await deep.id('@deep-foundation/core', 'GeneratedFrom'),\n      to_id: newLink.id,\n      in: { data: {\n          type_id: await deep.id('@deep-foundation/core', 'Contain'),\n        from_id: newLink.id,\n      } },\n      from: { data: {\n          type_id: await deep.id('@deep-foundation/core', 'SyncTextFile'),\n        string: { data: { value: compiledString } },\n        in: { data: {\n            type_id: await deep.id('@deep-foundation/core', 'Contain'),\n          from_id: newLink.id,\n          string: { data: { value: 'generated' } },\n        } },\n      } },\n    });\n  } else {\n      await deep.update({\n        link_id: { _eq: generatedFrom.from_id },\n    }, {\n        value: compiledString,\n    }, { table: 'strings' });\n  }\n}\n",
        "link_id": 715
      }
    },
    {
      "id": 956,
      "type_id": 3,
      "from_id": 950,
      "to_id": 949,
      "value": {
        "id": 404,
        "value": "context",
        "link_id": 956
      }
    },
    {
      "id": 957,
      "type_id": 3,
      "from_id": 950,
      "to_id": 947,
      "value": {
        "id": 405,
        "value": "handler",
        "link_id": 957
      }
    },
    {
      "id": 958,
      "type_id": 3,
      "from_id": 950,
      "to_id": 946,
      "value": {
        "id": 406,
        "value": "tsx",
        "link_id": 958
      }
    },
    {
      "id": 959,
      "type_id": 3,
      "from_id": 950,
      "to_id": 948,
      "value": {
        "id": 407,
        "value": "Finder",
        "link_id": 959
      }
    },
    {
      "id": 1078,
      "type_id": 2,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 431,
        "value": "@konard/python-docker-isolation-provider",
        "link_id": 1078
      }
    },
    {
      "id": 1085,
      "type_id": 3,
      "from_id": 1078,
      "to_id": 1076,
      "value": {
        "id": 434,
        "value": "dockerPythonSupportsCompatableHandleDelete",
        "link_id": 1085
      }
    },
    {
      "id": 1634,
      "type_id": 3,
      "from_id": 1616,
      "to_id": 1608,
      "value": {
        "id": 635,
        "value": "onTelegramInHandler",
        "link_id": 1634
      }
    },
    {
      "id": 1145,
      "type_id": 1,
      "from_id": 8,
      "to_id": 8
    },
    {
      "id": 1233,
      "type_id": 3,
      "from_id": 1225,
      "to_id": 1218,
      "value": {
        "id": 485,
        "value": "handlleManagerClient",
        "link_id": 1233
      }
    },
    {
      "id": 1236,
      "type_id": 3,
      "from_id": 1225,
      "to_id": 1221,
      "value": {
        "id": 488,
        "value": "ProvidedBy",
        "link_id": 1236
      }
    },
    {
      "id": 1237,
      "type_id": 3,
      "from_id": 1225,
      "to_id": 1219,
      "value": {
        "id": 489,
        "value": "Endpoint",
        "link_id": 1237
      }
    },
    {
      "id": 1242,
      "type_id": 3,
      "from_id": 1225,
      "to_id": 1212,
      "value": {
        "id": 494,
        "value": "managerClientHandler",
        "link_id": 1242
      }
    },
    {
      "id": 1243,
      "type_id": 3,
      "from_id": 1225,
      "to_id": 1211,
      "value": {
        "id": 495,
        "value": "managerClientHandlerCode",
        "link_id": 1243
      }
    },
    {
      "id": 1309,
      "type_id": 1221,
      "from_id": 1307,
      "to_id": 1300
    },
    {
      "id": 1322,
      "type_id": 3,
      "from_id": 1316,
      "to_id": 1314,
      "value": {
        "id": 514,
        "value": "gpt-4-max-tokens",
        "link_id": 1322
      }
    },
    {
      "id": 1323,
      "type_id": 3,
      "from_id": 1316,
      "to_id": 1302,
      "value": {
        "id": 515,
        "value": "gpt-4-32k-max-tokens",
        "link_id": 1323
      }
    },
    {
      "id": 1338,
      "type_id": 3,
      "from_id": 1316,
      "to_id": 1298,
      "value": {
        "id": 530,
        "value": "gpt-4-32k-endpoint",
        "link_id": 1338
      }
    },
    {
      "id": 1418,
      "type_id": 3,
      "from_id": 1411,
      "to_id": 1409,
      "value": {
        "id": 549,
        "value": "TemplateHandler",
        "link_id": 1418
      }
    },
    {
      "id": 1419,
      "type_id": 3,
      "from_id": 1411,
      "to_id": 1404,
      "value": {
        "id": 550,
        "value": "Result",
        "link_id": 1419
      }
    },
    {
      "id": 1420,
      "type_id": 3,
      "from_id": 1411,
      "to_id": 1405,
      "value": {
        "id": 551,
        "value": "Continue",
        "link_id": 1420
      }
    },
    {
      "id": 1421,
      "type_id": 3,
      "from_id": 1411,
      "to_id": 1403,
      "value": {
        "id": 552,
        "value": "Apply",
        "link_id": 1421
      }
    },
    {
      "id": 1422,
      "type_id": 3,
      "from_id": 1411,
      "to_id": 1406,
      "value": {
        "id": 553,
        "value": "TemplateString",
        "link_id": 1422
      }
    },
    {
      "id": 1423,
      "type_id": 3,
      "from_id": 1411,
      "to_id": 1402,
      "value": {
        "id": 554,
        "value": "Template",
        "link_id": 1423
      }
    },
    {
      "id": 1469,
      "type_id": 105,
      "from_id": 1468,
      "to_id": 1004
    },
    {
      "id": 1470,
      "type_id": 30,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 559,
        "value": "async ({ deep, data: { oldLink }, require }) => {\n    const axios = require('axios');\n    const router = await deep.id('@deep-foundation/telegram-bot', 'router');\n    const onTelegramInHandler = await deep.id('@deep-foundation/telegram-bot', 'onTelegramInHandler');\n\n    const containTree = deep.idLocal('@deep-foundation/core', 'containTree');\n    const Contain = deep.idLocal('@deep-foundation/core', 'Contain');\n\n    const { data: deletedLinks } = await deep.delete({\n        up: {\n            tree_id: containTree,\n            parent: {\n                type_id: Contain,\n                string: { value: { _in: [\n                    'route'+oldLink.from_id,\n                    'handle'+oldLink.from_id,\n                    'use'+oldLink.from_id,\n                    'include'+oldLink.from_id,\n                    'tree'+oldLink.from_id,\n                    'ruleInclude'+oldLink.from_id,\n                    'ruleTree'+oldLink.from_id,\n                ] } },\n            },\n        },\n    });\n\n    const { data: deletedWebhook } = await axios.get(`https://api.telegram.org/bot${token?.value?.value}/deleteWebhook`);\n\n    return {\n        deletedLinks,\n        deletedWebhook\n    };\n}",
        "link_id": 1470
      }
    },
    {
      "id": 1479,
      "type_id": 1,
      "from_id": 0,
      "to_id": 0
    },
    {
      "id": 794,
      "type_id": 1,
      "from_id": 0,
      "to_id": 0
    },
    {
      "id": 795,
      "type_id": 1,
      "from_id": 8,
      "to_id": 58
    },
    {
      "id": 1514,
      "type_id": 3,
      "from_id": 1495,
      "to_id": 1483,
      "value": {
        "id": 581,
        "value": "messagingTreeIncludeConversation",
        "link_id": 1514
      }
    },
    {
      "id": 1515,
      "type_id": 3,
      "from_id": 1495,
      "to_id": 1482,
      "value": {
        "id": 582,
        "value": "Conversation",
        "link_id": 1515
      }
    },
    {
      "id": 1516,
      "type_id": 3,
      "from_id": 1495,
      "to_id": 1455,
      "value": {
        "id": 583,
        "value": "tuaimRuleSubject",
        "link_id": 1516
      }
    },
    {
      "id": 1517,
      "type_id": 3,
      "from_id": 1495,
      "to_id": 1457,
      "value": {
        "id": 584,
        "value": "tuaimRuleObject",
        "link_id": 1517
      }
    },
    {
      "id": 1518,
      "type_id": 3,
      "from_id": 1495,
      "to_id": 1465,
      "value": {
        "id": 585,
        "value": "tuaimRuleAction",
        "link_id": 1518
      }
    },
    {
      "id": 1523,
      "type_id": 3,
      "from_id": 1495,
      "to_id": 1459,
      "value": {
        "id": 590,
        "value": "tuaimRuleObjectMessageTree",
        "link_id": 1523
      }
    },
    {
      "id": 1537,
      "type_id": 3,
      "from_id": 1495,
      "to_id": 1473,
      "value": {
        "id": 604,
        "value": "onReplyInsertHandler",
        "link_id": 1537
      }
    },
    {
      "id": 1596,
      "type_id": 1,
      "from_id": 1484,
      "to_id": 1484
    },
    {
      "id": 1612,
      "type_id": 35,
      "from_id": 83,
      "to_id": 1611
    },
    {
      "id": 1615,
      "type_id": 1402,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 620,
        "value": "${await (async () => {\n    const message = (await deep.select(linkId))?.data?.[0];\n    console.log('TEMPLATE', { message, linkId, value: message?.value?.value });\n    const user = message ? (await deep.select({\n        type_id: deep.idLocal('@deep-foundation/core', 'User'),\n        out: {\n            type_id: deep.idLocal('@deep-foundation/core', 'Contain'),\n            to_id: message?.id,\n        },\n    }))?.data?.[0] : undefined;\n    return `\n${user ? `\nuser: ${JSON.stringify(user)}\nname: ${await deep.name(user?.id)}\n` : ''}\nmessage: ${message?.value?.value}\n    `;\n})()}",
        "link_id": 1615
      }
    },
    {
      "id": 1616,
      "type_id": 2,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 621,
        "value": "@deep-foundation/deepmemorybot",
        "link_id": 1616
      }
    },
    {
      "id": 4621,
      "type_id": 30,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 1030,
        "value": "({ deep, data, require, go }) => {\n    const React = require('react');\n    const c = require('@chakra-ui/react');\n    const dpl = '@deep-foundation/perception-links';\n    const dc = '@deep-foundation/core';\n    return ({ go, linkId, containerId, disclosure: _disclosure, isActive, }, ref) => {\n        if (!linkId)\n            throw new Error('!linkId');\n        const __disclosure = c.useDisclosure();\n        const disclosure = _disclosure || __disclosure;\n        return React.createElement(go.On, { do: {\n                'exec': () => disclosure.onOpen(),\n            } },\n            React.createElement(c.Button, { ref: ref, variant: isActive ? 'active' : undefined, justifyContent: 'center', position: 'relative', onClick: () => go.do('exec') },\n                React.createElement(c.Box, { position: 'absolute', right: 1, top: 1 }, true ? '🔓' : '🔒'),\n                React.createElement(c.Text, { pr: 1 }, \"x\"),\n                \" delete\"),\n            React.createElement(go.Component, { path: [dpl, 'LinkDeleteModal'], disclosure: disclosure, linkId: linkId, containerId: containerId }));\n    };\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsibW9kdWxlLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxDQUFDLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRTtJQUM5QixNQUFNLEtBQUssR0FBRyxPQUFPLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDL0IsTUFBTSxDQUFDLEdBQUcsT0FBTyxDQUFDLGtCQUFrQixDQUFDLENBQUM7SUFFdEMsTUFBTSxHQUFHLEdBQUcsbUNBQW1DLENBQUM7SUFDaEQsTUFBTSxFQUFFLEdBQUcsdUJBQXVCLENBQUM7SUFFbkMsT0FBTyxDQUFDLEVBQ04sRUFBRSxFQUVGLE1BQU0sRUFDTixXQUFXLEVBRVgsVUFBVSxFQUFFLFdBQVcsRUFDdkIsUUFBUSxHQUNULEVBQUUsR0FBRyxFQUFFLEVBQUU7UUFDUixJQUFJLENBQUMsTUFBTTtZQUFFLE1BQU0sSUFBSSxLQUFLLENBQUMsU0FBUyxDQUFDLENBQUM7UUFFeEMsTUFBTSxZQUFZLEdBQUcsQ0FBQyxDQUFDLGFBQWEsRUFBRSxDQUFDO1FBQ3ZDLE1BQU0sVUFBVSxHQUFHLFdBQVcsSUFBSSxZQUFZLENBQUM7UUFFL0MsT0FBTyxvQkFBQyxFQUFFLENBQUMsRUFBRSxJQUFDLEVBQUUsRUFBRTtnQkFDaEIsTUFBTSxFQUFFLEdBQUcsRUFBRSxDQUFDLFVBQVUsQ0FBQyxNQUFNLEVBQUU7YUFDbEM7WUFDQyxvQkFBQyxDQUFDLENBQUMsTUFBTSxJQUNQLEdBQUcsRUFBRSxHQUFHLEVBQ1IsT0FBTyxFQUFFLFFBQVEsQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxTQUFTLEVBQUUsY0FBYyxFQUFDLFFBQVEsRUFBQyxRQUFRLEVBQUMsVUFBVSxFQUNyRixPQUFPLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUM7Z0JBRTVCLG9CQUFDLENBQUMsQ0FBQyxHQUFHLElBQUMsUUFBUSxFQUFDLFVBQVUsRUFBQyxLQUFLLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLElBQUcsSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBUztnQkFDekUsb0JBQUMsQ0FBQyxDQUFDLElBQUksSUFBQyxFQUFFLEVBQUUsQ0FBQyxRQUFZOzBCQUNoQjtZQUNYLG9CQUFDLEVBQUUsQ0FBQyxTQUFTLElBQUMsSUFBSSxFQUFFLENBQUMsR0FBRyxFQUFFLGlCQUFpQixDQUFDLEVBQUUsVUFBVSxFQUFFLFVBQVUsRUFBRSxNQUFNLEVBQUUsTUFBTSxFQUFFLFdBQVcsRUFBRSxXQUFXLEdBQUcsQ0FDckcsQ0FBQztJQUNqQixDQUFDLENBQUM7QUFDSixDQUFDLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyIoeyBkZWVwLCBkYXRhLCByZXF1aXJlLCBnbyB9KSA9PiB7XG4gIGNvbnN0IFJlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcbiAgY29uc3QgYyA9IHJlcXVpcmUoJ0BjaGFrcmEtdWkvcmVhY3QnKTtcblxuICBjb25zdCBkcGwgPSAnQGRlZXAtZm91bmRhdGlvbi9wZXJjZXB0aW9uLWxpbmtzJztcbiAgY29uc3QgZGMgPSAnQGRlZXAtZm91bmRhdGlvbi9jb3JlJztcblxuICByZXR1cm4gKHtcbiAgICBnbyxcblxuICAgIGxpbmtJZCxcbiAgICBjb250YWluZXJJZCxcblxuICAgIGRpc2Nsb3N1cmU6IF9kaXNjbG9zdXJlLFxuICAgIGlzQWN0aXZlLFxuICB9LCByZWYpID0+IHtcbiAgICBpZiAoIWxpbmtJZCkgdGhyb3cgbmV3IEVycm9yKCchbGlua0lkJyk7XG5cbiAgICBjb25zdCBfX2Rpc2Nsb3N1cmUgPSBjLnVzZURpc2Nsb3N1cmUoKTtcbiAgICBjb25zdCBkaXNjbG9zdXJlID0gX2Rpc2Nsb3N1cmUgfHwgX19kaXNjbG9zdXJlO1xuXG4gICAgcmV0dXJuIDxnby5PbiBkbz17e1xuICAgICAgJ2V4ZWMnOiAoKSA9PiBkaXNjbG9zdXJlLm9uT3BlbigpLFxuICAgIH19PlxuICAgICAgPGMuQnV0dG9uXG4gICAgICAgIHJlZj17cmVmfVxuICAgICAgICB2YXJpYW50PXtpc0FjdGl2ZSA/ICdhY3RpdmUnIDogdW5kZWZpbmVkfSBqdXN0aWZ5Q29udGVudD0nY2VudGVyJyBwb3NpdGlvbj0ncmVsYXRpdmUnXG4gICAgICAgIG9uQ2xpY2s9eygpID0+IGdvLmRvKCdleGVjJyl9XG4gICAgICA+XG4gICAgICAgIDxjLkJveCBwb3NpdGlvbj0nYWJzb2x1dGUnIHJpZ2h0PXsxfSB0b3A9ezF9Pnt0cnVlID8gJ/CflJMnIDogJ/CflJInfTwvYy5Cb3g+XG4gICAgICAgIDxjLlRleHQgcHI9ezF9Png8L2MuVGV4dD4gZGVsZXRlXG4gICAgICA8L2MuQnV0dG9uPlxuICAgICAgPGdvLkNvbXBvbmVudCBwYXRoPXtbZHBsLCAnTGlua0RlbGV0ZU1vZGFsJ119IGRpc2Nsb3N1cmU9e2Rpc2Nsb3N1cmV9IGxpbmtJZD17bGlua0lkfSBjb250YWluZXJJZD17Y29udGFpbmVySWR9Lz5cbiAgICA8L2dvLlByb3ZpZGVyPjtcbiAgfTtcbn0iXX0=",
        "link_id": 4621
      }
    },
    {
      "id": 4622,
      "type_id": 3,
      "from_id": 3983,
      "to_id": 4621,
      "value": {
        "id": 1029,
        "value": "generated",
        "link_id": 4622
      }
    },
    {
      "id": 4623,
      "type_id": 143,
      "from_id": 4621,
      "to_id": 3983
    },
    {
      "id": 4624,
      "type_id": 3,
      "from_id": 3983,
      "to_id": 4623
    },
    {
      "id": 139,
      "type_id": 78,
      "from_id": 0,
      "to_id": 0
    },
    {
      "id": 140,
      "type_id": 32,
      "from_id": 0,
      "to_id": 0
    },
    {
      "id": 141,
      "type_id": 82,
      "from_id": 139,
      "to_id": 140
    },
    {
      "id": 567,
      "type_id": 146,
      "from_id": 553,
      "to_id": 105,
      "value": {
        "id": 217,
        "value": "🔗",
        "link_id": 567
      }
    },
    {
      "id": 605,
      "type_id": 146,
      "from_id": 553,
      "to_id": 48,
      "value": {
        "id": 255,
        "value": "🛠",
        "link_id": 605
      }
    },
    {
      "id": 619,
      "type_id": 146,
      "from_id": 553,
      "to_id": 57,
      "value": {
        "id": 269,
        "value": "💽",
        "link_id": 619
      }
    },
    {
      "id": 1086,
      "type_id": 3,
      "from_id": 1078,
      "to_id": 1077,
      "value": {
        "id": 435,
        "value": "dockerPythonSupportsCompatableHandleUpdate",
        "link_id": 1086
      }
    },
    {
      "id": 1246,
      "type_id": 3,
      "from_id": 1225,
      "to_id": 1213,
      "value": {
        "id": 498,
        "value": "Reply",
        "link_id": 1246
      }
    },
    {
      "id": 1313,
      "type_id": 1187,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 511,
        "value": "gpt-4",
        "link_id": 1313
      }
    },
    {
      "id": 1314,
      "type_id": 1100,
      "from_id": 1313,
      "to_id": 1313,
      "value": {
        "id": 5,
        "value": 8192,
        "link_id": 1314
      }
    },
    {
      "id": 1360,
      "type_id": 1,
      "from_id": 8,
      "to_id": 8
    },
    {
      "id": 1424,
      "type_id": 3,
      "from_id": 1411,
      "to_id": 1407,
      "value": {
        "id": 555,
        "value": "DependsPackageChatgptFree",
        "link_id": 1424
      }
    },
    {
      "id": 1425,
      "type_id": 3,
      "from_id": 1411,
      "to_id": 1408,
      "value": {
        "id": 556,
        "value": "TemplateHandlerCode",
        "link_id": 1425
      }
    },
    {
      "id": 1473,
      "type_id": 35,
      "from_id": 83,
      "to_id": 1472
    },
    {
      "id": 1474,
      "type_id": 49,
      "from_id": 1453,
      "to_id": 1473
    },
    {
      "id": 1475,
      "type_id": 30,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 561,
        "value": "async (req, res, next, { deep, require, data: { baseUrl, originalUrl, path } }) => {\n    const { DeepClient } = await import('@deep-foundation/deeplinks/imports/client.js');\n\n    const User = deep.idLocal('@deep-foundation/core', 'User');\n    const Join = deep.idLocal('@deep-foundation/core', 'Join');\n    const Contain = deep.idLocal('@deep-foundation/core', 'Contain');\n    const Message = await deep.id('@deep-foundation/messaging', 'Message');\n    const Reply = await deep.id('@deep-foundation/messaging', 'Reply');\n    const Conversation = await deep.id('@deep-foundation/telegram-bot', 'Conversation');\n\n    const HandleTelegramBotIn = await deep.id('@deep-foundation/telegram-bot', 'HandleTelegramBotIn');\n\n    const m = req?.body?.message || req?.body?.callback_query?.message;\n    const _message_id = m?.message_id;\n    const _date = m?.date;\n    const _message = m?.text;\n    const _voice = m?.voice;\n    const _audio = m?.audio;\n    const _userId = m?.from?.id;\n    const _is_bot = m?.from?.is_bot;\n    const _username = m?.from?.username;\n    const _conversationId = m?.chat?.id;\n    const _replyId = m?.reply_to_message?.message_id;\n\n    const botId = +baseUrl.split('/').slice(-1)[0];\n    \n    // found or insert user based on telegram nick\n    let userId;\n    userId = (await deep.select({\n        type_id: User,\n        in: {\n            type_id: Contain, from_id: botId,\n            string: { value: `${_userId}` },\n        },\n    }))?.data?.[0]?.id;\n    if (!userId) {\n        userId = (await deep.insert({\n            type_id: User,\n            out: { data: [\n                {\n                    type_id: Join,\n                    to_id: await deep.id('deep', 'users'),\n                },\n                {\n                    type_id: Join,\n                    to_id: botId,\n                },\n            ] },\n            in: { data: {\n                type_id: Contain, from_id: botId,\n                string: { data: { value: `${_userId}` } }, // telegram nick\n            } },\n        }))?.data?.[0]?.id;\n    }\n\n    const udeep = new DeepClient({ deep, ...(await deep.jwt({ linkId: userId })) });\n\n    // found or insert user based on telegram nick\n    let conversationId;\n    conversationId = (await deep.select({\n        type_id: Conversation,\n        in: {\n            type_id: Contain, from_id: userId,\n            string: { value: `${_conversationId}` },\n        },\n    }))?.data?.[0]?.id;\n    if (!conversationId) {\n        conversationId = (await deep.insert({\n            type_id: Conversation,\n            in: { data: {\n                type_id: Contain, from_id: userId,\n                string: { data: { value: `${_conversationId}` } }, // telegram conversation id\n            } },\n            out: { data: {\n                type_id: Reply,\n                to_id: botId,\n                in: { data: {\n                    type_id: Contain, from_id: userId,\n                } },\n            } },\n        }))?.data?.[0]?.id;\n    }\n\n    const { data: handles } = await deep.select({\n        type_id: HandleTelegramBotIn,\n        from_id: botId,\n        order_by: { id: 'asc' },\n    });\n\n    const state = {\n        defaultHandling: true,\n    };\n    const handled = {};\n    for (let h in handles) {\n        const packageId = (await deep.select({\n            out: { type_id: Contain, to_id: handles[h].to_id },\n        }))?.data?.[0]?.id;\n        if (!packageId) {\n            handled[handles[h].to_id] = { error: `!packageId by handler(${handles[h].to_id}).in(Contain).from` };\n            continue;\n        }\n        const hdeep = new deep.DeepClient({\n            deep, ...(await deep.jwt({ linkId: packageId }))\n        });\n        handled[handles[h].to_id] = await hdeep.eval({\n            linkId: botId,\n            handlerId: handles[h].to_id,\n            input: {\n                data: {\n                    state,\n                    req, res,\n                    botId,\n                    userId,\n                    conversationId,\n                    handlerId: handles[h].to_id,\n                    udeep,\n                },\n            },\n        });\n    }\n\n    if (state.defaultHandling) {\n        // found or insert user based on telegram nick\n        let replyId = conversationId; // if not exists, then convers\n        if (_replyId) replyId = (await deep.select({ \n            type_id: Contain,\n            string: { value: `${_replyId}` },\n        }))?.data?.[0]?.to_id;\n        const messageInserted = await udeep.insert({\n            type_id: Message,\n            string: { data: { value: _message } },\n            in: { data: {\n                type_id: Contain, from_id: userId,\n                string: { data: { value: `${_message_id}` } },\n            } },\n            out: { data: {\n                type_id: Reply,\n                to_id: replyId,\n                in: { data: {\n                    type_id: Contain, from_id: userId,\n                } },\n            } },\n        });\n        const { data: messageId } = messageInserted;\n        res.send(JSON.stringify({\n            userId,\n            conversationId,\n            messageId,\n        }));\n    }\n}",
        "link_id": 1475
      }
    },
    {
      "id": 1476,
      "type_id": 35,
      "from_id": 83,
      "to_id": 1475
    },
    {
      "id": 1478,
      "type_id": 35,
      "from_id": 83,
      "to_id": 1477
    },
    {
      "id": 1482,
      "type_id": 1,
      "from_id": 0,
      "to_id": 0
    },
    {
      "id": 1520,
      "type_id": 3,
      "from_id": 1495,
      "to_id": 1474,
      "value": {
        "id": 587,
        "value": "onReplyInsertHandle",
        "link_id": 1520
      }
    },
    {
      "id": 1521,
      "type_id": 3,
      "from_id": 1495,
      "to_id": 1453,
      "value": {
        "id": 588,
        "value": "botSelector",
        "link_id": 1521
      }
    },
    {
      "id": 732,
      "type_id": 3,
      "from_id": 721,
      "to_id": 717,
      "value": {
        "id": 324,
        "value": "TSX",
        "link_id": 732
      }
    },
    {
      "id": 746,
      "type_id": 30,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 327,
        "value": "async ({ deep, gql, data: { triggeredByLinkId, newLink } }) => {\n  const deepFileName = 'deep.json';\n  const fs = await deep.import('fs');\n\n  const makeTempDirectory = async () => {\n    const os = await deep.import('os');\n    const { v4: uuid } = await deep.import('uuid');\n    \n    const baseTempDirectory = os.tmpdir();\n    const randomId = uuid();\n    const tempDirectory = [baseTempDirectory,randomId].join('/');\n    fs.mkdirSync(tempDirectory);\n    console.log(tempDirectory);\n    return tempDirectory;\n  };\n  const npmInstall = async (packageName, tempDirectory) => {\n    const execSync = (await deep.import('child_process')).execSync;\n\n    const command = `npm --prefix \"${tempDirectory}\" i ${packageName}`;\n    const output = execSync(command, { \n        encoding: 'utf-8',\n        cwd: tempDirectory\n    });\n    console.log(`${command}\\n`, output);\n    return output;\n  };\n  const npmLogin = async (token, tempDirectory) => {\n    const execSync = (await deep.import('child_process')).execSync;\n  \n    const command = `npm set \"//registry.npmjs.org/:_authToken\" ${token}`;\n    const output = execSync(command, { \n        encoding: 'utf-8',\n        cwd: tempDirectory\n    });\n    console.log(`${command}\\n`, output);\n    return output;\n  };\n  const makePackagePath = (tempDirectory, packageName) => [tempDirectory, 'node_modules', packageName].join('/');\n  const makeDeepJsonPath = (packagePath) => [packagePath, deepFileName].join('/');\n  const makePackageJsonPath = (packagePath) => [packagePath, 'package.json'].join('/');\n  const loadNpmToken = async () => {\n    const containTreeId = await deep.id('@deep-foundation/core', 'containTree');\n    const tokenTypeId = await deep.id('@deep-foundation/npm-packager', 'Token');\n    const { data: [{ value: { value: npmToken = undefined } = {}} = {}] = []} = await deep.select({\n      up: {\n        tree_id: { _eq: containTreeId },\n        parent: { id: { _eq: triggeredByLinkId } },\n        link: { type_id: { _eq: tokenTypeId } }\n      }\n    });\n    return npmToken;\n  };\n  const deepImport = async (deepJson, packageJson) => {\n    if (deepJson.package.name !== packageJson.name) {\n      throw new Error(`Package name is not synchronized between ${deepFileName} and package.json files.\n  ${deepFileName} package name: ${deepJson.package.name}.\n  package.json package name: ${packageJson.name}.`);\n    }\n    if (deepJson.package.version !== packageJson.version) {\n      throw new Error(`Package version is not synchronized between ${deepFileName} and package.json files.\n  ${deepFileName} package version: ${deepJson.package.version}.\n  package.json package version: ${packageJson.version}.`);\n    }\n    const packager = new (await deep.import('@deep-foundation/deeplinks/imports/packager.js')).Packager(deep);\n    const imported = await packager.import(deepJson);\n    console.log(imported);\n    if (imported?.errors?.length) throw imported;\n    return imported;\n  };\n  const getDeepPackagesList = async (rootPath) => {\n    const execSync = (await deep.import('child_process')).execSync;\n\n    const deepFileName = 'deep.json';\n    const deepFileNameLength = deepFileName.length;\n\n    const command = `find . -name ${deepFileName}`;\n    const output = execSync(command, { \n        encoding: 'utf-8',\n        cwd: rootPath\n    });\n    console.log('', `${command}\\n`, output);\n\n    const packages = output\n      .split(/\\r?\\n/)\n      .filter(line => line.trim())\n      .map(line => line.slice(2).slice(0, -deepFileNameLength - 1))\n      .map(line => line.split('/node_modules/'));\n    return packages;\n  };\n  const getDeepPackagesDependencies = async (rootPath, packages, packageName) => {\n    const dictionary = {};\n    for (const pkg of packages) {\n      const packagePath = [rootPath, pkg.join('/node_modules/')].join('/');\n      console.log('packagePath', packagePath);\n      const packageJsonPath = makePackageJsonPath(packagePath);\n      console.log('packageJsonPath', packageJsonPath);\n      if (!fs.existsSync(packageJsonPath)) {\n        throw new Error(`package.json for dependency ${pkg} is not found at ${packageJsonPath}. Looks like ${packageName} does not contain ${pkg} dependency in package.json.`);\n      }\n      const packageJson = await deep.import(packageJsonPath);\n      console.log('packageJson', packageJson);\n      const deepJsonPath = makeDeepJsonPath(packagePath);\n      console.log('deepJsonPath', deepJsonPath);\n      if (!fs.existsSync(deepJsonPath)) {\n        throw new Error(`deep.json for dependency ${pkg} is not found at ${deepJsonPath}. Looks like ${pkg} installed, but it does not contain deep.json. Make sure ${pkg} is a deep package.`);\n      }\n      const deepJson = await deep.import(deepJsonPath);\n      console.log('deepJson', deepJson);\n      const dependencies = packageJson.dependencies ?? {};\n      console.log('dependencies', dependencies);\n      const dependencyPackageName = pkg.at(-1);\n      console.log('dependencyPackageName', dependencyPackageName);\n      if (dictionary[dependencyPackageName]) {\n        if (packageJson.version === dictionary[dependencyPackageName].packageJson.version) {\n          console.log(`${dependencyPackageName}@${packageJson.version} was already added to a list of dependencies, no need to add it again.`)\n          continue;\n        } else {\n          throw new Error(`Multiple versions of the same package are not supported yet.\n${dependencyPackageName}@${dictionary[dependencyPackageName].packageJson.version} was already added to a list of dependencies from ${dictionary[dependencyPackageName].packagePath}.\nBut ${packageName} also contains ${dependencyPackageName}@${packageJson.version} dependency at ${packagePath}.`);\n        }\n      }\n      dictionary[dependencyPackageName] = { deepJson, packageJson, dependencies, packagePath };\n    }\n    for (const pkg in dictionary) {\n      const sourceDependencies = dictionary[pkg].dependencies;\n      const targetDependencies = [];\n      for (const dependency in sourceDependencies)\n      {\n        if (dictionary[dependency]) {\n          targetDependencies.push(dependency);\n        }\n      }\n      dictionary[pkg].dependencies = targetDependencies;\n    }\n    return dictionary;\n  }\n  const buildInstallationQueueCore = (deepPackagesDependencies, queue, set, packageName) => {\n    const dependencies = deepPackagesDependencies[packageName].dependencies;\n    for (const dependency of dependencies) {\n      if (!set[dependency]) {\n        buildInstallationQueueCore(deepPackagesDependencies, queue, set, dependency);\n      }\n    }\n    if(!set[packageName]) {\n      const deepJson = deepPackagesDependencies[packageName].deepJson;\n      const packageJson = deepPackagesDependencies[packageName].packageJson;\n      queue.push({ name: packageName, deepJson, packageJson });\n      set[packageName] = true;\n    }\n  }\n  const buildInstallationQueue = (deepPackagesDependencies, queue, set) => {\n    for (const packageName in deepPackagesDependencies) {\n      buildInstallationQueueCore(deepPackagesDependencies, queue, set, packageName);\n    }\n  }\n  const getExistingPackages = async (packageNames) => {\n    const packageTypeId = await deep.id('@deep-foundation/core', 'Package');\n    const packageVersionTypeId = await deep.id('@deep-foundation/core', 'PackageVersion');\n    const { data: packages } = await deep.select({\n      type_id: { _eq: packageTypeId },\n      string: { value: { _in: packageNames } }\n    }, {\n      name: 'GET_EXISTING_PACKAGES_WITH_VERSIONS',\n      returning: `\n        id\n        name: value\n        versions: in(where: {type_id: {_eq: ${packageVersionTypeId}}, string: {value: {_is_null: false}}}) {\n          id\n          version: value\n        }\n      `\n    })\n    console.log('packages', packages);\n    const existingPackages = packages.reduce(\n      (accumulator, currentValue) => {\n        const packageId = currentValue?.id;\n        const packageName = currentValue?.name?.value;\n        if (currentValue?.versions.length !== 1) {\n          throw new Error(`'${packageName}' package must have exactly one version. Now it has ${currentValue?.versions.length} versions.`);\n        }\n        if (accumulator[packageName]) {\n          throw new Error(`Multiple packages with name '${packageName}' exist.`)\n        }\n        const packageVersion = currentValue?.versions?.[0]?.version?.value;\n        accumulator[packageName] = { id: packageId, version: packageVersion };\n        return accumulator;\n      },\n      {}\n    );\n    console.log('existingPackages', existingPackages);\n    return existingPackages;\n  };\n\n  if (!triggeredByLinkId) {\n    throw new Error('Install link should be inserted using JWT token (role link), it cannot be inserted using hasura secret (role admin).');\n  }\n\n  const { data: [{ value: { value: packageQuery } }] } = await deep.select({ id: newLink.to_id });\n  const packageQueryParts = packageQuery.split('@');\n  if (packageQueryParts.length === 3) {\n    const packageVersion = packageQueryParts.pop();\n  }\n  const packageName = packageQueryParts.join('@');\n  if (!packageName) {\n    throw new Error('Package query value is empty.');\n  }\n  const tempDirectory = await makeTempDirectory();\n  let deepJson;\n  let packageJson;\n  const installationQueue = [];\n  const installationSet = {};\n  try {\n    const npmToken = await loadNpmToken();\n    if (npmToken) {\n      await npmLogin(npmToken, tempDirectory);\n    }\n    const nodeModulesPath = [tempDirectory, 'node_modules'].join('/');\n    await npmInstall(packageQuery, tempDirectory);\n    const packagePath = makePackagePath(tempDirectory, packageName);\n    const deepJsonPath = makeDeepJsonPath(packagePath);\n    const packageJsonPath = makePackageJsonPath(packagePath);\n    deepJson = await deep.import(deepJsonPath);\n    packageJson = await deep.import(packageJsonPath);\n\n    const packages = await getDeepPackagesList(nodeModulesPath);\n    console.log('packages', packages);\n    \n    const deepPackagesDependencies = await getDeepPackagesDependencies(nodeModulesPath, packages, packageName);\n    delete deepPackagesDependencies[packageName];\n    console.log('deepPackagesDependencies', deepPackagesDependencies);\n    \n    buildInstallationQueue(deepPackagesDependencies, installationQueue, installationSet);\n    \n    console.log('installationQueue', installationQueue);\n    console.log('installationSet', installationSet);\n  } finally {\n    fs.rmSync(tempDirectory, { recursive: true, force: true });\n  }\n  \n  const existingPackages = await getExistingPackages(installationQueue.map(e => e.name));\n  console.log('existingPackages', existingPackages);\n\n  for (const dependencyPackage of installationQueue) {\n    const dependencyPackageName = dependencyPackage.name;\n    const existingPackage = existingPackages[dependencyPackageName];\n    if (existingPackage) {\n      await deep.insert({\n        type_id: await deep.id('@deep-foundation/npm-packager', 'Used'),\n        from_id: newLink.id,\n        to_id: existingPackage.id,\n      });\n    } else {\n      const importedDependency = await deepImport(dependencyPackage.deepJson, dependencyPackage.packageJson);\n      if (importedDependency?.errors?.length > 0 || !importedDependency?.packageId) {\n        console.log(`Unable to install dependency ${dependencyPackageName}.`, importedDependency);\n        throw new Error(`Unable to install dependency ${dependencyPackageName}.`);\n      }\n      await deep.insert({\n        type_id: await deep.id('@deep-foundation/npm-packager', 'Installed'),\n        from_id: newLink.id,\n        to_id: importedDependency.packageId,\n      });\n      // TODO: Should it be inserted?\n      // await deep.insert({\n      //   type_id: await deep.id('@deep-foundation/core', 'Contain'),\n      //   from_id: newLink.from_id,\n      //   to_id: importedDependency.packageId,\n      // });\n    }\n  }\n\n  const imported = await deepImport(deepJson, packageJson);\n  await deep.insert({\n    type_id: await deep.id('@deep-foundation/core', 'Contain'),\n    from_id: newLink.from_id,\n    to_id: imported.packageId,\n  });\n  await deep.insert({\n    type_id: await deep.id('@deep-foundation/npm-packager', 'Installed'),\n    from_id: newLink.id,\n    to_id: imported.packageId,\n  });\n  return imported;\n}",
        "link_id": 746
      }
    },
    {
      "id": 747,
      "type_id": 35,
      "from_id": 83,
      "to_id": 746
    },
    {
      "id": 748,
      "type_id": 1,
      "from_id": 0,
      "to_id": 0
    },
    {
      "id": 749,
      "type_id": 4,
      "from_id": 748,
      "to_id": 5
    },
    {
      "id": 750,
      "type_id": 1,
      "from_id": 2,
      "to_id": 97
    },
    {
      "id": 796,
      "type_id": 146,
      "from_id": 795,
      "to_id": 795,
      "value": {
        "id": 344,
        "value": "🧳",
        "link_id": 796
      }
    },
    {
      "id": 1542,
      "type_id": 3,
      "from_id": 1495,
      "to_id": 1477,
      "value": {
        "id": 609,
        "value": "onActiveInsert",
        "link_id": 1542
      }
    },
    {
      "id": 1543,
      "type_id": 3,
      "from_id": 1495,
      "to_id": 1484,
      "value": {
        "id": 610,
        "value": "Bot",
        "link_id": 1543
      }
    },
    {
      "id": 1641,
      "type_id": 3,
      "from_id": 1616,
      "to_id": 1615,
      "value": {
        "id": 642,
        "value": "template",
        "link_id": 1641
      }
    },
    {
      "id": 1733,
      "type_id": 30,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 663,
        "value": "async (options) => {\n    const { deep, data: { newLink: parseItLink }, } = options;\n    const { default: ts } = await import(\"typescript\");\n    const { default: util } = await import(\"util\");\n    try {\n        const result = await main();\n        return {\n            result: util.inspect(result),\n        };\n    }\n    catch (error) {\n        throw {\n            error: util.inspect(error),\n        };\n    }\n    async function main() {\n        const { data: [rootLink], } = await deep.select({\n            id: parseItLink.from_id,\n        });\n        if (!rootLink) {\n            throw new Error(`parseIt.to does not exist: ##${parseItLink.from_id}`);\n        }\n        let obj;\n        if (typeof rootLink.value?.value === 'object') {\n            obj = rootLink.value?.value;\n        }\n        else if (typeof rootLink.value?.value === 'string') {\n            try {\n                obj = JSON.parse(rootLink.value?.value);\n            }\n            catch (error) {\n                throw new Error(`##${rootLink.id} must be valid JSON if it is a string`);\n            }\n        }\n        else {\n            throw new Error(`##${rootLink.id} must have value`);\n        }\n        if (!obj) {\n            throw new Error(`##${rootLink.id} must have value`);\n        }\n        const clientHandlerResult = await callClientHandler({\n            deep,\n            linkId: await deep.id(deep.linkId, \"clientHandler\"),\n            args: [\n                {\n                    deep: deep,\n                    obj: obj,\n                    rootLinkId: rootLink.id,\n                    resultLinkId: parseItLink.to_id,\n                },\n            ],\n        });\n        return clientHandlerResult;\n    }\n    async function callClientHandler(options) {\n        const { linkId, deep, args } = options;\n        const code = await deep\n            .select({\n            in: {\n                id: linkId,\n            },\n        })\n            .then((result) => {\n            const link = result.data[0];\n            if (!link)\n                throw new Error(`Unable to find SyncTextFile for ##${linkId}`);\n            const code = link.value?.value;\n            if (!code)\n                throw new Error(`##${link.id} must have value`);\n            return code;\n        });\n        const functionExpressionString = ts\n            .transpileModule(code, {\n            compilerOptions: {\n                module: ts.ModuleKind.ESNext,\n                sourceMap: true,\n                target: ts.ScriptTarget.ESNext,\n            },\n        })\n            .outputText.replace(\"export {}\", \"\");\n        const fn = eval(functionExpressionString);\n        const result = await fn(...args);\n        return result;\n    }\n};\n//# sourceMappingURL=module.js.map",
        "link_id": 1733
      }
    },
    {
      "id": 1734,
      "type_id": 30,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 664,
        "value": "async (options) => {\n    const { deep, data: { newLink: rootLink }, } = options;\n    const { default: ts } = await import(\"typescript\");\n    const { default: util } = await import(\"util\");\n    try {\n        const result = await main();\n        return {\n            result: util.inspect(result),\n        };\n    }\n    catch (error) {\n        throw {\n            error: util.inspect(error),\n        };\n    }\n    async function main() {\n        let obj;\n        if (typeof rootLink.value?.value === \"object\") {\n            obj = rootLink.value?.value;\n        }\n        else if (typeof rootLink.value?.value === \"string\") {\n            try {\n                obj = JSON.parse(rootLink.value?.value);\n            }\n            catch (error) {\n                throw new Error(`##${rootLink.id} must be valid JSON if it is a string`);\n            }\n        }\n        else {\n            throw new Error(`##${rootLink.id} must have value`);\n        }\n        if (!obj) {\n            throw new Error(`##${rootLink.id} must have value`);\n        }\n        const clientHandlerResult = await callClientHandler({\n            deep,\n            linkId: await deep.id(deep.linkId, \"clientHandler\"),\n            args: [\n                {\n                    deep: deep,\n                    obj: obj,\n                    rootLinkId: rootLink.id,\n                    resultLinkId: rootLink.to_id,\n                },\n            ],\n        });\n        return clientHandlerResult;\n    }\n    async function callClientHandler(options) {\n        const { linkId, deep, args } = options;\n        const code = await deep\n            .select({\n            in: {\n                id: linkId,\n            },\n        })\n            .then((result) => {\n            const link = result.data[0];\n            if (!link)\n                throw new Error(`Unable to find SyncTextFile for ##${linkId}`);\n            const code = link.value?.value;\n            if (!code)\n                throw new Error(`##${link.id} must have value`);\n            return code;\n        });\n        const functionExpressionString = ts\n            .transpileModule(code, {\n            compilerOptions: {\n                module: ts.ModuleKind.ESNext,\n                sourceMap: true,\n                target: ts.ScriptTarget.ESNext,\n            },\n        })\n            .outputText.replace(\"export {}\", \"\");\n        const fn = eval(functionExpressionString);\n        const result = await fn(...args);\n        return result;\n    }\n};\n//# sourceMappingURL=module.js.map",
        "link_id": 1734
      }
    },
    {
      "id": 1745,
      "type_id": 1,
      "from_id": 8,
      "to_id": 8
    },
    {
      "id": 1781,
      "type_id": 3,
      "from_id": 1758,
      "to_id": 1747,
      "value": {
        "id": 693,
        "value": "rootValue",
        "link_id": 1781
      }
    },
    {
      "id": 1782,
      "type_id": 3,
      "from_id": 1758,
      "to_id": 1746,
      "value": {
        "id": 694,
        "value": "Root",
        "link_id": 1782
      }
    },
    {
      "id": 1785,
      "type_id": 3,
      "from_id": 1758,
      "to_id": 1749,
      "value": {
        "id": 697,
        "value": "Boolean",
        "link_id": 1785
      }
    },
    {
      "id": 1786,
      "type_id": 3,
      "from_id": 1758,
      "to_id": 1750,
      "value": {
        "id": 698,
        "value": "dependency@deep-foundation/boolean",
        "link_id": 1786
      }
    },
    {
      "id": 1787,
      "type_id": 3,
      "from_id": 1758,
      "to_id": 1751,
      "value": {
        "id": 699,
        "value": "ParseIt",
        "link_id": 1787
      }
    },
    {
      "id": 1788,
      "type_id": 3,
      "from_id": 1758,
      "to_id": 1752,
      "value": {
        "id": 700,
        "value": "propertiesTree",
        "link_id": 1788
      }
    },
    {
      "id": 1836,
      "type_id": 77,
      "from_id": 0,
      "to_id": 0
    },
    {
      "id": 1837,
      "type_id": 105,
      "from_id": 1836,
      "to_id": 1004
    },
    {
      "id": 1838,
      "type_id": 104,
      "from_id": 0,
      "to_id": 0
    },
    {
      "id": 1841,
      "type_id": 106,
      "from_id": 1838,
      "to_id": 1836,
      "value": {
        "id": 705,
        "value": "/deepmemo-upload",
        "link_id": 1841
      }
    },
    {
      "id": 1842,
      "type_id": 50,
      "from_id": 57,
      "to_id": 1363
    },
    {
      "id": 1843,
      "type_id": 1,
      "from_id": 0,
      "to_id": 0
    },
    {
      "id": 1844,
      "type_id": 50,
      "from_id": 1843,
      "to_id": 1736
    },
    {
      "id": 1845,
      "type_id": 4,
      "from_id": 1843,
      "to_id": 7
    },
    {
      "id": 1858,
      "type_id": 3,
      "from_id": 1849,
      "to_id": 1845,
      "value": {
        "id": 711,
        "value": "deviceValue",
        "link_id": 1858
      }
    },
    {
      "id": 1859,
      "type_id": 3,
      "from_id": 1849,
      "to_id": 1843,
      "value": {
        "id": 712,
        "value": "Device",
        "link_id": 1859
      }
    },
    {
      "id": 1864,
      "type_id": 3,
      "from_id": 1849,
      "to_id": 1837,
      "value": {
        "id": 717,
        "value": "routerListening",
        "link_id": 1864
      }
    },
    {
      "id": 1865,
      "type_id": 3,
      "from_id": 1849,
      "to_id": 1841,
      "value": {
        "id": 718,
        "value": "routeUploadString",
        "link_id": 1865
      }
    },
    {
      "id": 1866,
      "type_id": 3,
      "from_id": 1849,
      "to_id": 1836,
      "value": {
        "id": 719,
        "value": "router",
        "link_id": 1866
      }
    },
    {
      "id": 1867,
      "type_id": 3,
      "from_id": 1849,
      "to_id": 1838,
      "value": {
        "id": 720,
        "value": "routeUpload",
        "link_id": 1867
      }
    },
    {
      "id": 1868,
      "type_id": 3,
      "from_id": 1849,
      "to_id": 1842,
      "value": {
        "id": 721,
        "value": "asyncFileHandleUpdate",
        "link_id": 1868
      }
    },
    {
      "id": 154,
      "type_id": 118,
      "from_id": 152,
      "to_id": 82
    },
    {
      "id": 155,
      "type_id": 38,
      "from_id": 152,
      "to_id": 48
    },
    {
      "id": 156,
      "type_id": 48,
      "from_id": 8,
      "to_id": 35
    },
    {
      "id": 157,
      "type_id": 1,
      "from_id": 0,
      "to_id": 0
    },
    {
      "id": 158,
      "type_id": 4,
      "from_id": 157,
      "to_id": 7
    },
    {
      "id": 159,
      "type_id": 1,
      "from_id": 157,
      "to_id": 8
    },
    {
      "id": 160,
      "type_id": 1,
      "from_id": 157,
      "to_id": 8
    },
    {
      "id": 198,
      "type_id": 3,
      "from_id": 184,
      "to_id": 14,
      "value": {
        "id": 20,
        "value": "packageValue",
        "link_id": 198
      }
    },
    {
      "id": 199,
      "type_id": 3,
      "from_id": 184,
      "to_id": 15,
      "value": {
        "id": 21,
        "value": "Selector",
        "link_id": 199
      }
    },
    {
      "id": 235,
      "type_id": 3,
      "from_id": 184,
      "to_id": 51,
      "value": {
        "id": 57,
        "value": "HandleDelete",
        "link_id": 235
      }
    },
    {
      "id": 236,
      "type_id": 3,
      "from_id": 184,
      "to_id": 52,
      "value": {
        "id": 58,
        "value": "PromiseResult",
        "link_id": 236
      }
    },
    {
      "id": 237,
      "type_id": 3,
      "from_id": 184,
      "to_id": 53,
      "value": {
        "id": 59,
        "value": "promiseResultValueRelationTable",
        "link_id": 237
      }
    },
    {
      "id": 238,
      "type_id": 3,
      "from_id": 184,
      "to_id": 54,
      "value": {
        "id": 60,
        "value": "PromiseReason",
        "link_id": 238
      }
    },
    {
      "id": 239,
      "type_id": 3,
      "from_id": 184,
      "to_id": 55,
      "value": {
        "id": 61,
        "value": "Focus",
        "link_id": 239
      }
    },
    {
      "id": 240,
      "type_id": 3,
      "from_id": 184,
      "to_id": 56,
      "value": {
        "id": 62,
        "value": "focusValue",
        "link_id": 240
      }
    },
    {
      "id": 241,
      "type_id": 3,
      "from_id": 184,
      "to_id": 57,
      "value": {
        "id": 63,
        "value": "AsyncFile",
        "link_id": 241
      }
    },
    {
      "id": 242,
      "type_id": 3,
      "from_id": 184,
      "to_id": 58,
      "value": {
        "id": 64,
        "value": "Query",
        "link_id": 242
      }
    },
    {
      "id": 243,
      "type_id": 3,
      "from_id": 184,
      "to_id": 59,
      "value": {
        "id": 65,
        "value": "queryValue",
        "link_id": 243
      }
    },
    {
      "id": 244,
      "type_id": 3,
      "from_id": 184,
      "to_id": 60,
      "value": {
        "id": 66,
        "value": "Fixed",
        "link_id": 244
      }
    },
    {
      "id": 245,
      "type_id": 3,
      "from_id": 184,
      "to_id": 61,
      "value": {
        "id": 67,
        "value": "fixedValue",
        "link_id": 245
      }
    },
    {
      "id": 246,
      "type_id": 3,
      "from_id": 184,
      "to_id": 62,
      "value": {
        "id": 68,
        "value": "Space",
        "link_id": 246
      }
    },
    {
      "id": 247,
      "type_id": 3,
      "from_id": 184,
      "to_id": 63,
      "value": {
        "id": 69,
        "value": "spaceValue",
        "link_id": 247
      }
    },
    {
      "id": 248,
      "type_id": 3,
      "from_id": 184,
      "to_id": 64,
      "value": {
        "id": 70,
        "value": "AllowLogin",
        "link_id": 248
      }
    },
    {
      "id": 249,
      "type_id": 3,
      "from_id": 184,
      "to_id": 65,
      "value": {
        "id": 71,
        "value": "guests",
        "link_id": 249
      }
    },
    {
      "id": 277,
      "type_id": 3,
      "from_id": 184,
      "to_id": 93,
      "value": {
        "id": 99,
        "value": "AllowPackageInstall",
        "link_id": 277
      }
    },
    {
      "id": 289,
      "type_id": 3,
      "from_id": 184,
      "to_id": 105,
      "value": {
        "id": 111,
        "value": "RouterListening",
        "link_id": 289
      }
    },
    {
      "id": 290,
      "type_id": 3,
      "from_id": 184,
      "to_id": 106,
      "value": {
        "id": 112,
        "value": "RouterStringUse",
        "link_id": 290
      }
    },
    {
      "id": 291,
      "type_id": 3,
      "from_id": 184,
      "to_id": 107,
      "value": {
        "id": 113,
        "value": "routerStringUseValue",
        "link_id": 291
      }
    },
    {
      "id": 292,
      "type_id": 3,
      "from_id": 184,
      "to_id": 108,
      "value": {
        "id": 114,
        "value": "HandleRoute",
        "link_id": 292
      }
    },
    {
      "id": 293,
      "type_id": 3,
      "from_id": 184,
      "to_id": 109,
      "value": {
        "id": 115,
        "value": "routeTree",
        "link_id": 293
      }
    },
    {
      "id": 302,
      "type_id": 3,
      "from_id": 184,
      "to_id": 118,
      "value": {
        "id": 124,
        "value": "TreeIncludeOut",
        "link_id": 302
      }
    },
    {
      "id": 303,
      "type_id": 3,
      "from_id": 184,
      "to_id": 119,
      "value": {
        "id": 125,
        "value": "TreeIncludeFromCurrent",
        "link_id": 303
      }
    },
    {
      "id": 304,
      "type_id": 3,
      "from_id": 184,
      "to_id": 120,
      "value": {
        "id": 126,
        "value": "TreeIncludeToCurrent",
        "link_id": 304
      }
    },
    {
      "id": 305,
      "type_id": 3,
      "from_id": 184,
      "to_id": 121,
      "value": {
        "id": 127,
        "value": "TreeIncludeCurrentFrom",
        "link_id": 305
      }
    },
    {
      "id": 306,
      "type_id": 3,
      "from_id": 184,
      "to_id": 122,
      "value": {
        "id": 128,
        "value": "TreeIncludeCurrentTo",
        "link_id": 306
      }
    },
    {
      "id": 307,
      "type_id": 3,
      "from_id": 184,
      "to_id": 123,
      "value": {
        "id": 129,
        "value": "TreeIncludeFromCurrentTo",
        "link_id": 307
      }
    },
    {
      "id": 308,
      "type_id": 3,
      "from_id": 184,
      "to_id": 124,
      "value": {
        "id": 130,
        "value": "TreeIncludeToCurrentFrom",
        "link_id": 308
      }
    },
    {
      "id": 309,
      "type_id": 3,
      "from_id": 184,
      "to_id": 125,
      "value": {
        "id": 131,
        "value": "AllowInsertType",
        "link_id": 309
      }
    },
    {
      "id": 310,
      "type_id": 3,
      "from_id": 184,
      "to_id": 126,
      "value": {
        "id": 132,
        "value": "AllowUpdateType",
        "link_id": 310
      }
    },
    {
      "id": 311,
      "type_id": 3,
      "from_id": 184,
      "to_id": 127,
      "value": {
        "id": 133,
        "value": "AllowDeleteType",
        "link_id": 311
      }
    },
    {
      "id": 312,
      "type_id": 3,
      "from_id": 184,
      "to_id": 128,
      "value": {
        "id": 134,
        "value": "AllowSelectType",
        "link_id": 312
      }
    },
    {
      "id": 366,
      "type_id": 3,
      "from_id": 184,
      "to_id": 182,
      "value": {
        "id": 188,
        "value": "MigrationsEnd",
        "link_id": 366
      }
    },
    {
      "id": 568,
      "type_id": 3,
      "from_id": 553,
      "to_id": 567,
      "value": {
        "id": 218,
        "value": "RouterListeningSymbol",
        "link_id": 568
      }
    },
    {
      "id": 618,
      "type_id": 3,
      "from_id": 553,
      "to_id": 617,
      "value": {
        "id": 268,
        "value": "HandlerSymbol",
        "link_id": 618
      }
    },
    {
      "id": 621,
      "type_id": 146,
      "from_id": 553,
      "to_id": 78,
      "value": {
        "id": 271,
        "value": "📡",
        "link_id": 621
      }
    },
    {
      "id": 622,
      "type_id": 3,
      "from_id": 553,
      "to_id": 621,
      "value": {
        "id": 272,
        "value": "IsolationProviderSymbol",
        "link_id": 622
      }
    },
    {
      "id": 623,
      "type_id": 146,
      "from_id": 553,
      "to_id": 32,
      "value": {
        "id": 273,
        "value": "🔌",
        "link_id": 623
      }
    },
    {
      "id": 624,
      "type_id": 3,
      "from_id": 553,
      "to_id": 623,
      "value": {
        "id": 274,
        "value": "ExecutionProviderSymbol",
        "link_id": 624
      }
    },
    {
      "id": 638,
      "type_id": 3,
      "from_id": 553,
      "to_id": 637,
      "value": {
        "id": 288,
        "value": "RuleSubjectSymbol",
        "link_id": 638
      }
    },
    {
      "id": 639,
      "type_id": 146,
      "from_id": 553,
      "to_id": 17,
      "value": {
        "id": 289,
        "value": "📜",
        "link_id": 639
      }
    },
    {
      "id": 640,
      "type_id": 3,
      "from_id": 553,
      "to_id": 639,
      "value": {
        "id": 290,
        "value": "RuleSymbol",
        "link_id": 640
      }
    },
    {
      "id": 642,
      "type_id": 3,
      "from_id": 553,
      "to_id": 641,
      "value": {
        "id": 292,
        "value": "SelectorExcludeSymbol",
        "link_id": 642
      }
    },
    {
      "id": 652,
      "type_id": 3,
      "from_id": 553,
      "to_id": 651,
      "value": {
        "id": 302,
        "value": "ThenSymbol",
        "link_id": 652
      }
    },
    {
      "id": 653,
      "type_id": 146,
      "from_id": 553,
      "to_id": 9,
      "value": {
        "id": 303,
        "value": "⏳",
        "link_id": 653
      }
    },
    {
      "id": 745,
      "type_id": 35,
      "from_id": 83,
      "to_id": 744
    },
    {
      "id": 797,
      "type_id": 1,
      "from_id": 794,
      "to_id": 35
    },
    {
      "id": 798,
      "type_id": 717,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 345,
        "value": "({ deep, require }) => {\n  const React = require('react');\n  const { useState } = React;\n  const json5 = require('json5');\n  const { useContainer, CytoEditorPreview } = require('@deep-foundation/deepcase');\n  const { Box, SimpleGrid } = require('@chakra-ui/react');\n  // Only objects editor.\n  return ({ fillSize, style, link }) => {\n    const currentValue = deep.stringify(link?.value?.value) || '';\n    const [value, setValue] = useState(currentValue);\n    const isSaved = value == currentValue;\n    const [container] = useContainer();\n    const { data } = deep.useDeepSubscription({\n      type_id: { _in: [\n        deep.idLocal('@deep-foundation/core', 'Active'),\n        deep.idLocal('@deep-foundation/core', 'Contain'),\n      ] },\n      to_id: { _eq: link.id },\n    });\n    const contain = data?.find(l => l.type_id === deep.idLocal('@deep-foundation/core', 'Contain'))\n    const active = data?.find(l => l.type_id === deep.idLocal('@deep-foundation/core', 'Active'))\n    return <div\n      style={{\n        width: 600,\n        height: 600,\n        ...style,\n        position: 'relative',\n      }}\n    >\n      <CytoEditorPreview link={link} compact/>\n    </div>;\n  }\n}",
        "link_id": 798
      }
    },
    {
      "id": 800,
      "type_id": 156,
      "from_id": 717,
      "to_id": 799,
      "value": {
        "id": 349,
        "value": "",
        "link_id": 800
      }
    },
    {
      "id": 801,
      "type_id": 156,
      "from_id": 30,
      "to_id": 799,
      "value": {
        "id": 350,
        "value": "",
        "link_id": 801
      }
    },
    {
      "id": 862,
      "type_id": 30,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 353,
        "value": "({ deep, require }) => {\n    const React = require('react');\n    const { useState, useEffect } = React;\n    const json5 = require('json5');\n    const { useContainer, Resize, CustomizableIcon } = require('@deep-foundation/deepcase');\n    const MonacoEditor = require('@monaco-editor/react');\n    const { Box, IconButton, useColorModeValue, useColorMode } = require('@chakra-ui/react');\n    const { BsCheck2, BsLightbulbFill, BsLightbulbOff } = require('react-icons/bs');\n    const { motion, useAnimation } = require('framer-motion');\n    const variants = {\n        view: {\n            opacity: 1,\n            scale: 1,\n            transition: {\n                duration: 1,\n                delay: 0.3,\n                scale: { delay: 0.5, }\n            }\n        },\n        hide: {\n            opacity: 0,\n            scale: 0,\n            transition: {\n                type: 'spring'\n            }\n        },\n        initial: {\n            originX: 1,\n            opacity: 1,\n            scale: 1,\n        }\n    };\n    const stackVariants = {\n        outside: {\n            x: '0%',\n            opacity: 1,\n            scale: 1,\n            originX: 0,\n            transition: {\n                type: 'spring',\n                duration: 0.5,\n                delay: 0.2,\n                scale: { delay: 0.3, }\n            }\n        },\n        nested: {\n            x: '-100%',\n            opacity: 1,\n            scale: 1,\n            originX: 1,\n            transition: {\n                type: 'spring',\n                duration: 0.5,\n                delay: 0.2,\n                scale: { delay: 0.3, }\n            }\n        },\n        initial: {\n            x: '0%',\n            opacity: 0,\n            scale: 0,\n        }\n    };\n    return ({ fillSize, style, link }) => {\n        const currentValue = deep.stringify(link?.value?.value) || '';\n        const [value, setValue] = useState(currentValue);\n        const isSaved = value == currentValue;\n        const [container] = useContainer();\n        const { data } = deep.useDeepSubscription({\n            type_id: { _in: [\n                    deep.idLocal('@deep-foundation/core', 'Active'),\n                    deep.idLocal('@deep-foundation/core', 'Contain'),\n                ] },\n            to_id: { _eq: link.id },\n        });\n        const contain = data?.find(l => l.type_id === deep.idLocal('@deep-foundation/core', 'Contain'));\n        const active = data?.find(l => l.type_id === deep.idLocal('@deep-foundation/core', 'Active'));\n        const [viewSize, setViewSize] = useState({ width: 300, height: 300 });\n        const terminalBorderWidth = viewSize.width - 1;\n        const terminalBorderHeight = viewSize.height - 1;\n        const control = useAnimation();\n        const controlStack = useAnimation();\n        useEffect(() => {\n            if (value) {\n                control.start('view');\n            }\n            else {\n                control.start('hide');\n            }\n            ;\n            if (fillSize === true) {\n                controlStack.start('nested');\n            }\n            else {\n                controlStack.start('outside');\n            }\n            ;\n        }, [control, controlStack, value, fillSize]);\n        const { colorMode } = useColorMode();\n        const body = React.createElement(\"div\", { style: {\n                width: viewSize.width,\n                height: viewSize.height,\n                ...style,\n                position: 'relative',\n            } },\n            React.createElement(Box, { position: 'relative', display: 'grid', gridTemplateColumns: '1fr max-content', height: 'inherit' },\n                React.createElement(Box, { position: 'relative', overflow: 'hidden', sx: { borderRadius: 5 }, border: '1px dashed #605c60' },\n                    React.createElement(MonacoEditor, { options: {\n                            minimap: {\n                                enabled: false\n                            },\n                            lineNumbers: 'off',\n                            wordWrap: true,\n                        }, height: \"100%\", width: \"100%\", theme: colorMode === 'light' ? 'light' : \"vs-dark\", defaultLanguage: \"json\", defaultValue: value || '', onChange: (value) => setValue(value) })),\n                React.createElement(Box, { as: motion.div, animate: controlStack, variants: stackVariants, initial: 'initial', height: fillSize ? '100%' : viewSize.height, display: 'flex', justifyContent: 'space-between', flexDirection: 'column', ml: fillSize ? 0 : '0.2rem' },\n                    React.createElement(IconButton, { as: motion.div, variants: variants, initial: 'initial', animate: 'view', \"aria-label\": 'activate/inactivate button', bg: active && colorMode === 'dark' ? 'gray.700' : 'blue.50', _hover: {\n                            bg: 'blue.100'\n                        }, isRound: true, variant: 'outline', sx: { borderColor: active ? '#111' : 'rgb(0, 128, 255)' }, mr: fillSize ? '0.2rem' : 0, mt: fillSize ? '0.2rem' : 0, size: 'xs', onClick: async () => {\n                            if (active) {\n                                await deep.delete({\n                                    _or: [{\n                                            id: { _eq: active?.id },\n                                        }, {\n                                            type_id: deep.idLocal('@deep-foundation/core', 'Contain'),\n                                            from_id: link.id,\n                                            to_id: active.id,\n                                        }],\n                                });\n                            }\n                            else {\n                                await deep.insert({\n                                    type_id: deep.idLocal('@deep-foundation/core', 'Active'),\n                                    from_id: contain.from_id,\n                                    to_id: contain.to_id,\n                                    in: { data: {\n                                            type_id: deep.idLocal('@deep-foundation/core', 'Contain'),\n                                            from_id: link.id,\n                                        } },\n                                });\n                            }\n                        }, icon: active ? React.createElement(BsLightbulbOff, null) : React.createElement(CustomizableIcon, { Component: BsLightbulbFill, value: { color: 'rgb(0, 128, 255)' } }) }),\n                    React.createElement(IconButton, { as: motion.div, variants: variants, initial: 'initial', animate: control, whileInView: 'view', \"aria-label\": 'save button', isRound: true, bg: 'blue.50', _hover: {\n                            bg: 'blue.100'\n                        }, variant: 'outline', sx: { borderColor: 'rgb(0, 128, 255)' }, mr: fillSize ? '0.2rem' : 0, mb: fillSize ? '0.2rem' : 0, size: 'xs', icon: React.createElement(CustomizableIcon, { Component: BsCheck2, value: { color: 'rgb(0, 128, 255)' } }), onClick: () => {\n                            try {\n                                const _value = json5.parse(value);\n                                if (!link.value)\n                                    deep.insert({\n                                        link_id: link.id, value: _value,\n                                    }, { table: 'objects' });\n                                deep.update({ link_id: link.id }, { value: _value }, { table: 'objects' });\n                            }\n                            catch (error) { }\n                        } }))));\n        return React.createElement(React.Fragment, null, fillSize\n            ? body\n            : React.createElement(Resize, { onChangeSize: (viewSize) => setViewSize(viewSize), style: {\n                    borderRadius: 5,\n                    border: 'none',\n                } }, body));\n    };\n};\n//# sourceMappingURL=data:application/json;base64,",
        "link_id": 862
      }
    },
    {
      "id": 863,
      "type_id": 3,
      "from_id": 802,
      "to_id": 862,
      "value": {
        "id": 352,
        "value": "generated",
        "link_id": 863
      }
    },
    {
      "id": 864,
      "type_id": 143,
      "from_id": 862,
      "to_id": 802
    },
    {
      "id": 865,
      "type_id": 3,
      "from_id": 802,
      "to_id": 864
    },
    {
      "id": 803,
      "type_id": 35,
      "from_id": 145,
      "to_id": 802,
      "value": {
        "id": 354,
        "value": "",
        "link_id": 803
      }
    },
    {
      "id": 804,
      "type_id": 156,
      "from_id": 58,
      "to_id": 803,
      "value": {
        "id": 355,
        "value": "",
        "link_id": 804
      }
    },
    {
      "id": 805,
      "type_id": 717,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 356,
        "value": "({ deep, require }) => {\n      const React = require('react');\n    const { useState, useEffect } = React;\n    const json5 = require('json5');\n    const { Input, useColorModeValue } = require('@chakra-ui/react');\n    const { useHotkeys } = require('react-hotkeys-hook');\n    const { useDebounceCallback } = require('@react-hook/debounce');\n    const { useContainer } = require('@deep-foundation/deepcase');\n    // Only string editor.\n    return ({ fillSize, style, link, onClose }) => {\n      \n      \n      const currentValue = deep.stringify(link?.value?.value) || '';\n      const [value, setValue] = useState(currentValue);\n      const save = async (value) => {\n          if (!link.value) await deep.insert({\n            link_id: link.id, value: value,\n        }, { table: 'strings' });\n        deep.update({ link_id: link.id }, { value: value }, { table: 'strings' });\n        \n      };\n      const ref = useHotkeys('enter', async () => {\n        await save(value);\n        onClose && onClose();\n      }, { enableOnTags: [\"INPUT\"] });\n      \n      const setValuesDebounced = useDebounceCallback(async(value) => {await save(value)}, 500);\n\n      useEffect(() => {\n        setValuesDebounced(value);\n      }, [value])\n\n      const bg = useColorModeValue('#eeeeee', '#434343');\n      const hover = useColorModeValue('white', '#1e1e1e');\n      const borderColor = useColorModeValue('#434343', '#eeeeee');\n      const color = useColorModeValue('#1e1e1e', 'white');\n\n    return <div\n        style={{\n          width: 300,\n          ...style,\n          position: 'relative', \n          // background: 'red'\n        }}\n      >\n        <Input\n          ref={ref}\n          autoFocus\n          type=\"text\"\n          variant='filled'\n          variant='filled'\n          bg={bg}\n          color={color}\n          borderWidth='thin'\n          borderColor={borderColor}\n          _hover={{bg: hover}}\n          _focus={{bg: bg}}\n          sx={{\n            width: '100%',\n          }}\n          onChange={(e) => setValue(e.target.value)}\n          value={value}\n        />\n      </div>;\n    }\n  }",
        "link_id": 805
      }
    },
    {
      "id": 1735,
      "type_id": 35,
      "from_id": 83,
      "to_id": 1733
    },
    {
      "id": 988,
      "type_id": 3,
      "from_id": 982,
      "to_id": 981,
      "value": {
        "id": 412,
        "value": "OpenedHandler",
        "link_id": 988
      }
    },
    {
      "id": 989,
      "type_id": 3,
      "from_id": 982,
      "to_id": 980,
      "value": {
        "id": 413,
        "value": "Opened",
        "link_id": 989
      }
    },
    {
      "id": 1087,
      "type_id": 3,
      "from_id": 1078,
      "to_id": 1074,
      "value": {
        "id": 436,
        "value": "dockerSupportsPython",
        "link_id": 1087
      }
    },
    {
      "id": 1247,
      "type_id": 3,
      "from_id": 1225,
      "to_id": 1223,
      "value": {
        "id": 499,
        "value": "Conversation",
        "link_id": 1247
      }
    },
    {
      "id": 1742,
      "type_id": 143,
      "from_id": 1733,
      "to_id": 1741
    },
    {
      "id": 1743,
      "type_id": 1,
      "from_id": 8,
      "to_id": 8
    },
    {
      "id": 1744,
      "type_id": 1,
      "from_id": 8,
      "to_id": 8
    },
    {
      "id": 1771,
      "type_id": 3,
      "from_id": 1758,
      "to_id": 1738,
      "value": {
        "id": 683,
        "value": "clientHandler",
        "link_id": 1771
      }
    },
    {
      "id": 1772,
      "type_id": 3,
      "from_id": 1758,
      "to_id": 1737,
      "value": {
        "id": 684,
        "value": "clientHandlerCode",
        "link_id": 1772
      }
    },
    {
      "id": 1773,
      "type_id": 3,
      "from_id": 1758,
      "to_id": 1739,
      "value": {
        "id": 685,
        "value": "updateHandlerCode",
        "link_id": 1773
      }
    },
    {
      "id": 1778,
      "type_id": 3,
      "from_id": 1758,
      "to_id": 1744,
      "value": {
        "id": 690,
        "value": "Number",
        "link_id": 1778
      }
    },
    {
      "id": 1783,
      "type_id": 3,
      "from_id": 1758,
      "to_id": 1757,
      "value": {
        "id": 695,
        "value": "treeIncludeDownHasResult",
        "link_id": 1783
      }
    },
    {
      "id": 1846,
      "type_id": 1,
      "from_id": 0,
      "to_id": 0
    },
    {
      "id": 1847,
      "type_id": 4,
      "from_id": 1846,
      "to_id": 7
    },
    {
      "id": 1848,
      "type_id": 50,
      "from_id": 1846,
      "to_id": 1736
    },
    {
      "id": 1361,
      "type_id": 4,
      "from_id": 5,
      "to_id": 1360
    },
    {
      "id": 1364,
      "type_id": 2,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 537,
        "value": "@deep-foundation/voice-to-sync-text-file",
        "link_id": 1364
      }
    },
    {
      "id": 1372,
      "type_id": 3,
      "from_id": 1364,
      "to_id": 1360,
      "value": {
        "id": 541,
        "value": "Text",
        "link_id": 1372
      }
    },
    {
      "id": 200,
      "type_id": 3,
      "from_id": 184,
      "to_id": 16,
      "value": {
        "id": 22,
        "value": "SelectorInclude",
        "link_id": 200
      }
    },
    {
      "id": 202,
      "type_id": 3,
      "from_id": 184,
      "to_id": 18,
      "value": {
        "id": 24,
        "value": "RuleSubject",
        "link_id": 202
      }
    },
    {
      "id": 203,
      "type_id": 3,
      "from_id": 184,
      "to_id": 19,
      "value": {
        "id": 25,
        "value": "RuleObject",
        "link_id": 203
      }
    },
    {
      "id": 204,
      "type_id": 3,
      "from_id": 184,
      "to_id": 20,
      "value": {
        "id": 26,
        "value": "RuleAction",
        "link_id": 204
      }
    },
    {
      "id": 205,
      "type_id": 3,
      "from_id": 184,
      "to_id": 21,
      "value": {
        "id": 27,
        "value": "containValue",
        "link_id": 205
      }
    },
    {
      "id": 206,
      "type_id": 3,
      "from_id": 184,
      "to_id": 22,
      "value": {
        "id": 28,
        "value": "User",
        "link_id": 206
      }
    },
    {
      "id": 207,
      "type_id": 3,
      "from_id": 184,
      "to_id": 23,
      "value": {
        "id": 29,
        "value": "Operation",
        "link_id": 207
      }
    },
    {
      "id": 208,
      "type_id": 3,
      "from_id": 184,
      "to_id": 24,
      "value": {
        "id": 30,
        "value": "operationValue",
        "link_id": 208
      }
    },
    {
      "id": 209,
      "type_id": 3,
      "from_id": 184,
      "to_id": 25,
      "value": {
        "id": 31,
        "value": "AllowInsert",
        "link_id": 209
      }
    },
    {
      "id": 210,
      "type_id": 3,
      "from_id": 184,
      "to_id": 26,
      "value": {
        "id": 32,
        "value": "AllowUpdate",
        "link_id": 210
      }
    },
    {
      "id": 211,
      "type_id": 3,
      "from_id": 184,
      "to_id": 27,
      "value": {
        "id": 33,
        "value": "AllowDelete",
        "link_id": 211
      }
    },
    {
      "id": 212,
      "type_id": 3,
      "from_id": 184,
      "to_id": 28,
      "value": {
        "id": 34,
        "value": "AllowSelect",
        "link_id": 212
      }
    },
    {
      "id": 213,
      "type_id": 3,
      "from_id": 184,
      "to_id": 29,
      "value": {
        "id": 35,
        "value": "File",
        "link_id": 213
      }
    },
    {
      "id": 214,
      "type_id": 3,
      "from_id": 184,
      "to_id": 30,
      "value": {
        "id": 36,
        "value": "SyncTextFile",
        "link_id": 214
      }
    },
    {
      "id": 215,
      "type_id": 3,
      "from_id": 184,
      "to_id": 31,
      "value": {
        "id": 37,
        "value": "syncTextFileValue",
        "link_id": 215
      }
    },
    {
      "id": 216,
      "type_id": 3,
      "from_id": 184,
      "to_id": 32,
      "value": {
        "id": 38,
        "value": "ExecutionProvider",
        "link_id": 216
      }
    },
    {
      "id": 217,
      "type_id": 3,
      "from_id": 184,
      "to_id": 33,
      "value": {
        "id": 39,
        "value": "JSExecutionProvider",
        "link_id": 217
      }
    },
    {
      "id": 218,
      "type_id": 3,
      "from_id": 184,
      "to_id": 34,
      "value": {
        "id": 40,
        "value": "TreeInclude",
        "link_id": 218
      }
    },
    {
      "id": 219,
      "type_id": 3,
      "from_id": 184,
      "to_id": 35,
      "value": {
        "id": 41,
        "value": "Handler",
        "link_id": 219
      }
    },
    {
      "id": 220,
      "type_id": 3,
      "from_id": 184,
      "to_id": 36,
      "value": {
        "id": 42,
        "value": "Tree",
        "link_id": 220
      }
    },
    {
      "id": 221,
      "type_id": 3,
      "from_id": 184,
      "to_id": 37,
      "value": {
        "id": 43,
        "value": "TreeIncludeDown",
        "link_id": 221
      }
    },
    {
      "id": 222,
      "type_id": 3,
      "from_id": 184,
      "to_id": 38,
      "value": {
        "id": 44,
        "value": "TreeIncludeUp",
        "link_id": 222
      }
    },
    {
      "id": 262,
      "type_id": 3,
      "from_id": 184,
      "to_id": 78,
      "value": {
        "id": 84,
        "value": "IsolationProvider",
        "link_id": 262
      }
    },
    {
      "id": 263,
      "type_id": 3,
      "from_id": 184,
      "to_id": 79,
      "value": {
        "id": 85,
        "value": "DockerIsolationProvider",
        "link_id": 263
      }
    },
    {
      "id": 264,
      "type_id": 3,
      "from_id": 184,
      "to_id": 80,
      "value": {
        "id": 86,
        "value": "dockerIsolationProviderValue",
        "link_id": 264
      }
    },
    {
      "id": 265,
      "type_id": 3,
      "from_id": 184,
      "to_id": 81,
      "value": {
        "id": 87,
        "value": "JSDockerIsolationProvider",
        "link_id": 265
      }
    },
    {
      "id": 266,
      "type_id": 3,
      "from_id": 184,
      "to_id": 82,
      "value": {
        "id": 88,
        "value": "Supports",
        "link_id": 266
      }
    },
    {
      "id": 267,
      "type_id": 3,
      "from_id": 184,
      "to_id": 83,
      "value": {
        "id": 89,
        "value": "dockerSupportsJs",
        "link_id": 267
      }
    },
    {
      "id": 268,
      "type_id": 3,
      "from_id": 184,
      "to_id": 84,
      "value": {
        "id": 90,
        "value": "PackageInstall",
        "link_id": 268
      }
    },
    {
      "id": 269,
      "type_id": 3,
      "from_id": 184,
      "to_id": 85,
      "value": {
        "id": 91,
        "value": "PackagePublish",
        "link_id": 269
      }
    },
    {
      "id": 270,
      "type_id": 3,
      "from_id": 184,
      "to_id": 86,
      "value": {
        "id": 92,
        "value": "packageInstallCode",
        "link_id": 270
      }
    },
    {
      "id": 329,
      "type_id": 3,
      "from_id": 184,
      "to_id": 145,
      "value": {
        "id": 151,
        "value": "clientSupportsJs",
        "link_id": 329
      }
    },
    {
      "id": 330,
      "type_id": 3,
      "from_id": 184,
      "to_id": 146,
      "value": {
        "id": 152,
        "value": "Symbol",
        "link_id": 330
      }
    },
    {
      "id": 350,
      "type_id": 3,
      "from_id": 184,
      "to_id": 166,
      "value": {
        "id": 172,
        "value": "plv8JSSupportsCompatableHandleUpdate",
        "link_id": 350
      }
    },
    {
      "id": 367,
      "type_id": 3,
      "from_id": 184,
      "to_id": 183,
      "value": {
        "id": 189,
        "value": "typesTree",
        "link_id": 367
      }
    },
    {
      "id": 569,
      "type_id": 146,
      "from_id": 553,
      "to_id": 104,
      "value": {
        "id": 219,
        "value": "🚏",
        "link_id": 569
      }
    },
    {
      "id": 620,
      "type_id": 3,
      "from_id": 553,
      "to_id": 619,
      "value": {
        "id": 270,
        "value": "AsyncFileSymbol",
        "link_id": 620
      }
    },
    {
      "id": 634,
      "type_id": 3,
      "from_id": 553,
      "to_id": 633,
      "value": {
        "id": 284,
        "value": "RuleActionSymbol",
        "link_id": 634
      }
    },
    {
      "id": 635,
      "type_id": 146,
      "from_id": 553,
      "to_id": 19,
      "value": {
        "id": 285,
        "value": "🍏",
        "link_id": 635
      }
    },
    {
      "id": 636,
      "type_id": 3,
      "from_id": 553,
      "to_id": 635,
      "value": {
        "id": 286,
        "value": "RuleObjectSymbol",
        "link_id": 636
      }
    },
    {
      "id": 643,
      "type_id": 146,
      "from_id": 553,
      "to_id": 16,
      "value": {
        "id": 293,
        "value": "🪡",
        "link_id": 643
      }
    },
    {
      "id": 646,
      "type_id": 3,
      "from_id": 553,
      "to_id": 645,
      "value": {
        "id": 296,
        "value": "SelectorSymbol",
        "link_id": 646
      }
    },
    {
      "id": 647,
      "type_id": 146,
      "from_id": 553,
      "to_id": 12,
      "value": {
        "id": 297,
        "value": "🔴",
        "link_id": 647
      }
    },
    {
      "id": 648,
      "type_id": 3,
      "from_id": 553,
      "to_id": 647,
      "value": {
        "id": 298,
        "value": "RejectedSymbol",
        "link_id": 648
      }
    },
    {
      "id": 649,
      "type_id": 146,
      "from_id": 553,
      "to_id": 11,
      "value": {
        "id": 299,
        "value": "🟢",
        "link_id": 649
      }
    },
    {
      "id": 650,
      "type_id": 3,
      "from_id": 553,
      "to_id": 649,
      "value": {
        "id": 300,
        "value": "ResolvedSymbol",
        "link_id": 650
      }
    },
    {
      "id": 654,
      "type_id": 3,
      "from_id": 553,
      "to_id": 653,
      "value": {
        "id": 304,
        "value": "PromiseSymbol",
        "link_id": 654
      }
    },
    {
      "id": 655,
      "type_id": 146,
      "from_id": 553,
      "to_id": 4,
      "value": {
        "id": 305,
        "value": "📎",
        "link_id": 655
      }
    },
    {
      "id": 853,
      "type_id": 30,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 347,
        "value": "({ deep, require }) => {\n    const React = require('react');\n    const { useState } = React;\n    const json5 = require('json5');\n    const { useContainer, CytoEditorPreview } = require('@deep-foundation/deepcase');\n    const { Box, SimpleGrid } = require('@chakra-ui/react');\n    return ({ fillSize, style, link }) => {\n        const currentValue = deep.stringify(link?.value?.value) || '';\n        const [value, setValue] = useState(currentValue);\n        const isSaved = value == currentValue;\n        const [container] = useContainer();\n        const { data } = deep.useDeepSubscription({\n            type_id: { _in: [\n                    deep.idLocal('@deep-foundation/core', 'Active'),\n                    deep.idLocal('@deep-foundation/core', 'Contain'),\n                ] },\n            to_id: { _eq: link.id },\n        });\n        const contain = data?.find(l => l.type_id === deep.idLocal('@deep-foundation/core', 'Contain'));\n        const active = data?.find(l => l.type_id === deep.idLocal('@deep-foundation/core', 'Active'));\n        return React.createElement(\"div\", { style: {\n                width: 600,\n                height: 600,\n                ...style,\n                position: 'relative',\n            } },\n            React.createElement(CytoEditorPreview, { link: link, compact: true }));\n    };\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsibW9kdWxlLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxDQUFDLEVBQUUsSUFBSSxFQUFFLE9BQU8sRUFBRSxFQUFFLEVBQUU7SUFDcEIsTUFBTSxLQUFLLEdBQUcsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQy9CLE1BQU0sRUFBRSxRQUFRLEVBQUUsR0FBRyxLQUFLLENBQUM7SUFDM0IsTUFBTSxLQUFLLEdBQUcsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQy9CLE1BQU0sRUFBRSxZQUFZLEVBQUUsaUJBQWlCLEVBQUUsR0FBRyxPQUFPLENBQUMsMkJBQTJCLENBQUMsQ0FBQztJQUNqRixNQUFNLEVBQUUsR0FBRyxFQUFFLFVBQVUsRUFBRSxHQUFHLE9BQU8sQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDO0lBRXhELE9BQU8sQ0FBQyxFQUFFLFFBQVEsRUFBRSxLQUFLLEVBQUUsSUFBSSxFQUFFLEVBQUUsRUFBRTtRQUNuQyxNQUFNLFlBQVksR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksRUFBRSxLQUFLLEVBQUUsS0FBSyxDQUFDLElBQUksRUFBRSxDQUFDO1FBQzlELE1BQU0sQ0FBQyxLQUFLLEVBQUUsUUFBUSxDQUFDLEdBQUcsUUFBUSxDQUFDLFlBQVksQ0FBQyxDQUFDO1FBQ2pELE1BQU0sT0FBTyxHQUFHLEtBQUssSUFBSSxZQUFZLENBQUM7UUFDdEMsTUFBTSxDQUFDLFNBQVMsQ0FBQyxHQUFHLFlBQVksRUFBRSxDQUFDO1FBQ25DLE1BQU0sRUFBRSxJQUFJLEVBQUUsR0FBRyxJQUFJLENBQUMsbUJBQW1CLENBQUM7WUFDeEMsT0FBTyxFQUFFLEVBQUUsR0FBRyxFQUFFO29CQUNkLElBQUksQ0FBQyxPQUFPLENBQUMsdUJBQXVCLEVBQUUsUUFBUSxDQUFDO29CQUMvQyxJQUFJLENBQUMsT0FBTyxDQUFDLHVCQUF1QixFQUFFLFNBQVMsQ0FBQztpQkFDakQsRUFBRTtZQUNILEtBQUssRUFBRSxFQUFFLEdBQUcsRUFBRSxJQUFJLENBQUMsRUFBRSxFQUFFO1NBQ3hCLENBQUMsQ0FBQztRQUNILE1BQU0sT0FBTyxHQUFHLElBQUksRUFBRSxJQUFJLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsT0FBTyxLQUFLLElBQUksQ0FBQyxPQUFPLENBQUMsdUJBQXVCLEVBQUUsU0FBUyxDQUFDLENBQUMsQ0FBQTtRQUMvRixNQUFNLE1BQU0sR0FBRyxJQUFJLEVBQUUsSUFBSSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLE9BQU8sS0FBSyxJQUFJLENBQUMsT0FBTyxDQUFDLHVCQUF1QixFQUFFLFFBQVEsQ0FBQyxDQUFDLENBQUE7UUFDN0YsT0FBTyw2QkFDTCxLQUFLLEVBQUU7Z0JBQ0wsS0FBSyxFQUFFLEdBQUc7Z0JBQ1YsTUFBTSxFQUFFLEdBQUc7Z0JBQ1gsR0FBRyxLQUFLO2dCQUNSLFFBQVEsRUFBRSxVQUFVO2FBQ3JCO1lBRUQsb0JBQUMsaUJBQWlCLElBQUMsSUFBSSxFQUFFLElBQUksRUFBRSxPQUFPLFNBQUUsQ0FDcEMsQ0FBQztJQUNULENBQUMsQ0FBQTtBQUNILENBQUMsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbIih7IGRlZXAsIHJlcXVpcmUgfSkgPT4ge1xuICBjb25zdCBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XG4gIGNvbnN0IHsgdXNlU3RhdGUgfSA9IFJlYWN0O1xuICBjb25zdCBqc29uNSA9IHJlcXVpcmUoJ2pzb241Jyk7XG4gIGNvbnN0IHsgdXNlQ29udGFpbmVyLCBDeXRvRWRpdG9yUHJldmlldyB9ID0gcmVxdWlyZSgnQGRlZXAtZm91bmRhdGlvbi9kZWVwY2FzZScpO1xuICBjb25zdCB7IEJveCwgU2ltcGxlR3JpZCB9ID0gcmVxdWlyZSgnQGNoYWtyYS11aS9yZWFjdCcpO1xuICAvLyBPbmx5IG9iamVjdHMgZWRpdG9yLlxuICByZXR1cm4gKHsgZmlsbFNpemUsIHN0eWxlLCBsaW5rIH0pID0+IHtcbiAgICBjb25zdCBjdXJyZW50VmFsdWUgPSBkZWVwLnN0cmluZ2lmeShsaW5rPy52YWx1ZT8udmFsdWUpIHx8ICcnO1xuICAgIGNvbnN0IFt2YWx1ZSwgc2V0VmFsdWVdID0gdXNlU3RhdGUoY3VycmVudFZhbHVlKTtcbiAgICBjb25zdCBpc1NhdmVkID0gdmFsdWUgPT0gY3VycmVudFZhbHVlO1xuICAgIGNvbnN0IFtjb250YWluZXJdID0gdXNlQ29udGFpbmVyKCk7XG4gICAgY29uc3QgeyBkYXRhIH0gPSBkZWVwLnVzZURlZXBTdWJzY3JpcHRpb24oe1xuICAgICAgdHlwZV9pZDogeyBfaW46IFtcbiAgICAgICAgZGVlcC5pZExvY2FsKCdAZGVlcC1mb3VuZGF0aW9uL2NvcmUnLCAnQWN0aXZlJyksXG4gICAgICAgIGRlZXAuaWRMb2NhbCgnQGRlZXAtZm91bmRhdGlvbi9jb3JlJywgJ0NvbnRhaW4nKSxcbiAgICAgIF0gfSxcbiAgICAgIHRvX2lkOiB7IF9lcTogbGluay5pZCB9LFxuICAgIH0pO1xuICAgIGNvbnN0IGNvbnRhaW4gPSBkYXRhPy5maW5kKGwgPT4gbC50eXBlX2lkID09PSBkZWVwLmlkTG9jYWwoJ0BkZWVwLWZvdW5kYXRpb24vY29yZScsICdDb250YWluJykpXG4gICAgY29uc3QgYWN0aXZlID0gZGF0YT8uZmluZChsID0+IGwudHlwZV9pZCA9PT0gZGVlcC5pZExvY2FsKCdAZGVlcC1mb3VuZGF0aW9uL2NvcmUnLCAnQWN0aXZlJykpXG4gICAgcmV0dXJuIDxkaXZcbiAgICAgIHN0eWxlPXt7XG4gICAgICAgIHdpZHRoOiA2MDAsXG4gICAgICAgIGhlaWdodDogNjAwLFxuICAgICAgICAuLi5zdHlsZSxcbiAgICAgICAgcG9zaXRpb246ICdyZWxhdGl2ZScsXG4gICAgICB9fVxuICAgID5cbiAgICAgIDxDeXRvRWRpdG9yUHJldmlldyBsaW5rPXtsaW5rfSBjb21wYWN0Lz5cbiAgICA8L2Rpdj47XG4gIH1cbn0iXX0=",
        "link_id": 853
      }
    },
    {
      "id": 854,
      "type_id": 3,
      "from_id": 798,
      "to_id": 853,
      "value": {
        "id": 346,
        "value": "generated",
        "link_id": 854
      }
    },
    {
      "id": 855,
      "type_id": 143,
      "from_id": 853,
      "to_id": 798
    },
    {
      "id": 856,
      "type_id": 3,
      "from_id": 798,
      "to_id": 855
    },
    {
      "id": 799,
      "type_id": 35,
      "from_id": 145,
      "to_id": 798,
      "value": {
        "id": 348,
        "value": "",
        "link_id": 799
      }
    },
    {
      "id": 807,
      "type_id": 156,
      "from_id": 3,
      "to_id": 806,
      "value": {
        "id": 360,
        "value": "",
        "link_id": 807
      }
    },
    {
      "id": 808,
      "type_id": 156,
      "from_id": 97,
      "to_id": 806,
      "value": {
        "id": 361,
        "value": "",
        "link_id": 808
      }
    },
    {
      "id": 809,
      "type_id": 156,
      "from_id": 66,
      "to_id": 806,
      "value": {
        "id": 362,
        "value": "",
        "link_id": 809
      }
    },
    {
      "id": 810,
      "type_id": 717,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 363,
        "value": "({ deep, require }) => {\n  const React = require('react');\n  const { useState } = require('react');\n  const axiosHooks = require(\"axios-hooks\");\n  const axios = require(\"axios\");\n  const useAxios = axiosHooks.makeUseAxios({ axios: axios.create() });\n\n  return ({ fillSize, style, link }) => {\n\n    const ssl = deep.apolloClient.ssl;\n    const path = deep.apolloClient.path.slice(0, -4);\n    const url = `${ssl ? \"https://\" : \"http://\"}${path}/file?linkId=${link.id}`;\n\n    const [{ data, loading, error }, refetch] = useAxios({ \n      method: 'get',\n      url,\n      headers: {\n        'Authorization': `Bearer ${deep.token}`\n      },\n      \n      responseType: \"blob\",\n    });\n\n    const [src, setSrc] = useState(\"test\");\n    if (!loading && data) {\n      const reader = new window.FileReader();\n      reader.onload = () => {\n        setSrc(reader.result);\n      }\n      reader.readAsDataURL(data);\n    }\n\n    const renderMedia = () => {\n      if (src.startsWith('data:image')) {\n        return <img src={src} alt=\"An image from Deep file storage.\" style={style}></img>;\n      } else if (src.startsWith('data:audio')) {\n        return <audio src={src} controls style={style}>Your browser does not support the audio element.</audio>;\n      } else {\n        return <div>Unsupported file type.</div>;\n      }\n    } \n\n    return renderMedia();\n  }\n}\n",
        "link_id": 810
      }
    },
    {
      "id": 820,
      "type_id": 3,
      "from_id": 813,
      "to_id": 801,
      "value": {
        "id": 369,
        "value": "editorHandleClientTSX",
        "link_id": 820
      }
    },
    {
      "id": 821,
      "type_id": 3,
      "from_id": 813,
      "to_id": 799,
      "value": {
        "id": 370,
        "value": "editorHandler",
        "link_id": 821
      }
    },
    {
      "id": 822,
      "type_id": 3,
      "from_id": 813,
      "to_id": 798,
      "value": {
        "id": 371,
        "value": "editorClientHandler",
        "link_id": 822
      }
    },
    {
      "id": 823,
      "type_id": 3,
      "from_id": 813,
      "to_id": 804,
      "value": {
        "id": 372,
        "value": "queryHandleClient",
        "link_id": 823
      }
    },
    {
      "id": 824,
      "type_id": 3,
      "from_id": 813,
      "to_id": 803,
      "value": {
        "id": 373,
        "value": "queryHandler",
        "link_id": 824
      }
    },
    {
      "id": 825,
      "type_id": 3,
      "from_id": 813,
      "to_id": 802,
      "value": {
        "id": 374,
        "value": "queryClientHandler",
        "link_id": 825
      }
    },
    {
      "id": 830,
      "type_id": 3,
      "from_id": 813,
      "to_id": 805,
      "value": {
        "id": 379,
        "value": "stringClientHandler",
        "link_id": 830
      }
    },
    {
      "id": 1736,
      "type_id": 35,
      "from_id": 83,
      "to_id": 1734
    },
    {
      "id": 1004,
      "type_id": 99,
      "from_id": 0,
      "to_id": 0
    },
    {
      "id": 1005,
      "type_id": 2,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 416,
        "value": "@deep-foundation/main-port",
        "link_id": 1005
      }
    },
    {
      "id": 1011,
      "type_id": 3,
      "from_id": 1005,
      "to_id": 1004,
      "value": {
        "id": 418,
        "value": "port",
        "link_id": 1011
      }
    },
    {
      "id": 1108,
      "type_id": 3,
      "from_id": 1102,
      "to_id": 1101,
      "value": {
        "id": 442,
        "value": "TokensValue",
        "link_id": 1108
      }
    },
    {
      "id": 1109,
      "type_id": 3,
      "from_id": 1102,
      "to_id": 1100,
      "value": {
        "id": 443,
        "value": "Tokens",
        "link_id": 1109
      }
    },
    {
      "id": 1168,
      "type_id": 3,
      "from_id": 1162,
      "to_id": 1159,
      "value": {
        "id": 462,
        "value": "MessageHandleUpdate",
        "link_id": 1168
      }
    },
    {
      "id": 1184,
      "type_id": 1,
      "from_id": 0,
      "to_id": 0
    },
    {
      "id": 1209,
      "type_id": 1145,
      "from_id": 1161,
      "to_id": 1161
    },
    {
      "id": 1210,
      "type_id": 35,
      "from_id": 83,
      "to_id": 1208
    },
    {
      "id": 1211,
      "type_id": 717,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 478,
        "value": "async ({ deep, require }) => {\n  const PACKAGE_NAME = \"@deep-foundation/chatgpt-azure-discord-bot\";\n  const logsPrefix = \"@chatgpt-azure\" + \" \" + \"manager\" + \"ClientHandler\";\n  const React = await deep.import(\"react\");\n  const { useState, useMemo, useRef } = React;\n  const Chakra = await deep.import(\"@chakra-ui/react\");\n  console.log(logsPrefix, { Chakra });\n  const {\n    Input,\n    InputGroup,\n    InputRightElement,\n    IconButton,\n    Popover,\n    PopoverTrigger,\n    PopoverContent,\n    PopoverArrow,\n    PopoverBody,\n    FormControl,\n    FormLabel,\n    Box,\n    PopoverHeader,\n    PopoverCloseButton,\n    HStack,\n    Stack,\n    Text,\n    Link,\n    Select,\n    Tooltip,\n    Button,\n    NumberInput,\n    NumberInputField,\n    FormHelperText,\n    FormErrorMessage,\n    Divider,\n  } = Chakra;\n  const ChakraIcons = await deep.import(\"@chakra-ui/icons\");\n  const { InfoOutlineIcon } = ChakraIcons;\n  console.log(logsPrefix, ChakraIcons);\n  const DeepCase = await deep.import(\"@deep-foundation/deepcase\");\n  const { FinderPopover } = await deep.import(\"./cyto/hooks\");\n  const { ClientHandler } = DeepCase;\n  console.log(logsPrefix, { DeepCase });\n  console.log(logsPrefix, { FinderPopover });\n  const ReactHookForm = await deep.import(\"react-hook-form\");\n  console.log(logsPrefix, { ReactHookForm });\n  const { useForm, Controller } = ReactHookForm;\n  const containTypeLinkId = await deep.id(\"@deep-foundation/core\", \"Contain\");\n\n  const chatGPTAzureClientHandlerLinkId = await deep.id(\n    \"@deep-foundation/chatgpt-azure\",\n    \"managerClientHandler\"\n  );\n\n  return ({ fillSize, style, link }) => {\n    const {\n      handleSubmit,\n      register,\n      formState: { errors, isSubmitting },\n      control,\n      setValue,\n      setError,\n    } = useForm();\n\n    async function onSubmit(values: {\n      apiKey: string;\n      chatGPTModelLinkId: string;\n      userLinkId: string;\n      containerLinkId: string;\n    }) {\n      const { apiKey, chatGPTModelLinkId, userLinkId, containerLinkId } =\n        values;\n\n      const containTypeLinkId = await deep.id(\n        \"@deep-foundation/core\",\n        \"Contain\"\n      );\n      const reservedLinkIds = await deep.reserve(6);\n      const apiKeyLinkId = reservedLinkIds.pop();\n      const containForApiKeyLinkId = reservedLinkIds.pop();\n      const usesApiKeyLinkId = reservedLinkIds.pop();\n      const containForUsesApiKeyLinkId = reservedLinkIds.pop();\n      const usesModelLinkId = reservedLinkIds.pop();\n      const containForUsesModelLinkId = reservedLinkIds.pop();\n\n      await deep\n        .serial({\n          operations: [\n            {\n              type: \"insert\",\n              table: \"links\",\n              objects: {\n                id: apiKeyLinkId,\n                type_id: await deep.id(\"@deep-foundation/openai\", \"ApiKey\"),\n              },\n            },\n            {\n              type: \"insert\",\n              table: \"strings\",\n              objects: {\n                link_id: apiKeyLinkId,\n                value: apiKey,\n              },\n            },\n            {\n              type: \"insert\",\n              table: \"links\",\n              objects: {\n                id: containForApiKeyLinkId,\n                type_id: containTypeLinkId,\n                from_id: containerLinkId,\n                to_id: apiKeyLinkId,\n              },\n            },\n            {\n              type: \"insert\",\n              table: \"links\",\n              objects: {\n                id: usesApiKeyLinkId,\n                type_id: await deep.id(\"@deep-foundation/openai\", \"UsesApiKey\"),\n                from_id: userLinkId,\n                to_id: apiKeyLinkId,\n              },\n            },\n            {\n              type: \"insert\",\n              table: \"links\",\n              objects: {\n                id: containForUsesApiKeyLinkId,\n                type_id: containTypeLinkId,\n                from_id: containerLinkId,\n                to_id: usesApiKeyLinkId,\n              },\n            },\n            {\n              type: \"insert\",\n              table: \"links\",\n              objects: {\n                id: usesModelLinkId,\n                type_id: await deep.id(\"@deep-foundation/openai\", \"UsesModel\"),\n                from_id: userLinkId,\n                to_id: chatGPTModelLinkId,\n              },\n            },\n            {\n              type: \"insert\",\n              table: \"links\",\n              objects: {\n                id: containForUsesModelLinkId,\n                type_id: containTypeLinkId,\n                from_id: containerLinkId,\n                to_id: usesModelLinkId,\n              },\n            },\n          ],\n        })\n        .catch(setError);\n    }\n\n    return (\n      <Box\n        style={{ minWidth: 450, ...style }}\n        bg={\"bgColor\"}\n        color={\"text\"}\n        borderColor={\"borderColor\"}\n        borderWidth=\"1px\"\n        borderRadius=\"lg\"\n        padding={4}\n      >\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <FormControl isInvalid={errors.root}>\n            <Stack\n              spacing={6}\n              divider={<Divider />}\n              display=\"flex\"\n              justifyContent=\"center\"\n            >\n              <ApiKeyTextField\n                register={register}\n                error={errors.apiKey && errors.apiKey.message}\n              />\n              <ModelLinkIdSelect\n                register={register}\n                error={\n                  errors.chatGPTModelLinkId && errors.chatGPTModelLinkId.message\n                }\n              />\n              <UserLinkIdTextField\n                control={control}\n                error={errors.userLinkId && errors.userLinkId.message}\n                setValue={setValue}\n              />\n              <ContainerLinkIdTextField\n                control={control}\n                setValue={setValue}\n                error={errors.containerLinkId && errors.containerLinkId.message}\n              />\n              {errors.root && <FormErrorMessage>\n                {JSON.stringify(errors.root, null, 2)}\n              </FormErrorMessage>}\n              <Button isLoading={isSubmitting} type=\"submit\">\n                Submit\n              </Button>\n            </Stack>\n          </FormControl>\n        </form>\n      </Box>\n    );\n  };\n\n  function ModelLinkIdSelect(options: { register: Function; error: string }) {\n    const { register, error } = options;\n    const { data: modelLinks } = deep.useDeepSubscription({\n      type_id: {\n        _id: [\"@deep-foundation/openai\", \"Model\"],\n      },\n    });\n\n    const modelOptions = useMemo(() => {\n      if (!modelLinks || modelLinks.length === 0) return null;\n      return modelLinks.map((link) => {\n        const name = link.value.value;\n        return <option value={link.id}>{name}</option>;\n      });\n    }, [modelLinks]);\n    console.log({ modelOptions });\n\n    return (\n      <Tooltip\n        label={`No model links of type [\"@deep-foundation/openai\", \"Model\"] available to choose from. You can install \"@deep-foundation/chatgpt-azure-deep\" for already configured chatgpt models`}\n        isDisabled={modelLinks.length > 0}\n      >\n        <FormControl isInvalid={error}>\n          <FormLabel htmlFor=\"chatGPTModelLinkId\">\n            ChatGPT Model Link ID\n          </FormLabel>\n          <Select\n            placeholder=\"ChatGPT Model link ID\"\n            {...register(\"chatGPTModelLinkId\", {\n              required: \"ChatGPT Model link ID is required\",\n            })}\n            isDisabled={modelLinks.length === 0}\n          >\n            {modelOptions}\n          </Select>\n          <FormErrorMessage>{error}</FormErrorMessage>\n          <FormHelperText>\n            ChatGPT model is required to know which model should be used for\n            requests\n          </FormHelperText>\n        </FormControl>\n      </Tooltip>\n    );\n  }\n\n  // function ApiKeyTextField(options: {\n  //   apiKey: string;\n  //   handleApiKeyChange: (apiKey: string) => void;\n  // }) {\n  //   const { apiKey: apiKey, handleApiKeyChange: handleApiKeyChange } = options;\n\n  //   const helpContent = (\n  //     <Stack>\n  //       <Text>\n  //         Api Key is required to make requests to discord on your behalf\n  //       </Text>\n  //       <Link\n  //         isExternal\n  //         href=\"https://discord.com/developers/docs/getting-started#configuring-your-bot\"\n  //       >\n  //         Obtain Api Key\n  //       </Link>\n  //     </Stack>\n  //   );\n\n  //   return (\n  //     <Stack>\n  //       <HStack>\n  //         <Input\n  //           placeholder=\"Enter Api Key\"\n  //           variant=\"outlined\"\n  //           value={apiKey}\n  //           onChange={(event) => {\n  //             handleApiKeyChange(event.target.value);\n  //           }}\n  //         />\n  //         <Popover>\n  //           <PopoverTrigger>\n  //             <IconButton aria-label=\"help\" icon={<InfoOutlineIcon />} />\n  //           </PopoverTrigger>\n  //           <PopoverContent>\n  //             <PopoverArrow />\n  //             <PopoverCloseButton />\n  //             <PopoverBody>{helpContent}</PopoverBody>\n  //           </PopoverContent>\n  //         </Popover>\n  //       </HStack>\n  //     </Stack>\n  //   );\n  // }\n\n  // function UserLinkIdTextField(options: {\n  //   userLinkId: number;\n  //   handleUserLinkIdChange: (value: number) => void;\n  // }) {\n  //   const { userLinkId, handleUserLinkIdChange } = options;\n  //   const [isPopoverOpen, setIsPopoverOpen] = useState(false);\n\n  //   const handleHelpClick = () => {\n  //     setIsPopoverOpen(!isPopoverOpen);\n  //   };\n\n  //   const helpContent = `User link is a link that is considered as a user of ApiKey. User link will be \"from\" for UsesApiKey`;\n\n  //   return (\n  //     <HStack>\n  //       <FormControl>\n  //         <InputGroup>\n  //           <Input\n  //             placeholder=\"User Link ID\"\n  //             type=\"text\"\n  //             variant=\"outline\"\n  //             value={userLinkId}\n  //             onChange={(event) => {\n  //               handleUserLinkIdChange(event.target.value);\n  //             }}\n  //             required\n  //           />\n  //         </InputGroup>\n  //       </FormControl>\n  //       <Popover>\n  //         <PopoverTrigger>\n  //           <IconButton aria-label=\"help\" icon={<InfoOutlineIcon />} />\n  //         </PopoverTrigger>\n  //         <PopoverContent>\n  //           <PopoverArrow />\n  //           <PopoverCloseButton />\n  //           <PopoverBody>{helpContent}</PopoverBody>\n  //         </PopoverContent>\n  //       </Popover>\n  //       <FinderPopover\n  //         link={deep.linkId}\n  //         onSubmit={async (link) => {\n  //           handleUserLinkIdChange(link.id);\n  //         }}\n  //       >\n  //         <IconButton aria-label=\"finder\" icon={<>🪬</>} />\n  //       </FinderPopover>\n  //     </HStack>\n  //   );\n  // }\n\n  function ApiKeyTextField(options: { error: string; register: Function }) {\n    const { error, register } = options;\n\n    return (\n      <HStack>\n        <FormControl isInvalid={error}>\n          <FormLabel htmlFor=\"apiKey\">ApiKey Link ID</FormLabel>\n          <Input\n            {...register(\"apiKey\", {\n              required: \"Api Key is required\",\n            })}\n          />\n          <FormErrorMessage>{error}</FormErrorMessage>\n          <FormHelperText>\n            <Stack>\n              <Text>\n                Api Key is required to make requests to openai on your behalf\n              </Text>\n              <Link\n                isExternal\n                href=\"https://platform.openai.com/api-keys\"\n              >\n                Obtain Api Key\n              </Link>\n            </Stack>\n          </FormHelperText>\n        </FormControl>\n      </HStack>\n    );\n  }\n\n  function UserLinkIdTextField(options: {\n    setValue: any;\n    error: string;\n    control: any;\n  }) {\n    const { setValue, error, control } = options;\n\n    return (\n      <FormControl isInvalid={error}>\n        <FormLabel htmlFor=\"userLinkId\">User Link ID</FormLabel>\n        <Controller\n          name=\"userLinkId\"\n          control={control}\n          defaultValue={undefined}\n          rules={{\n            required: {\n              value: true,\n              message: \"User link ID is required\",\n            },\n            validate: async (value) => {\n              const valueNumber = parseInt(value);\n              if (isNaN(valueNumber)) {\n                return \"User link ID must be a number\";\n              }\n              const {\n                data: [link],\n              } = await deep.select({ id: valueNumber });\n              if (!link) {\n                return `Link ${valueNumber} does not exist`;\n              } else {\n                return true;\n              }\n            },\n          }}\n          render={({ field }) => (\n            <HStack>\n              <NumberInput {...field} min={0}>\n                <NumberInputField ref={field.ref} name={field.name} />\n              </NumberInput>\n              <FinderPopover\n                link={deep.linkId}\n                onSubmit={async (link) => {\n                  setValue(\"containerLinkId\", link.id);\n                }}\n              >\n                <IconButton aria-label=\"finder\" icon={<>🪬</>} />\n              </FinderPopover>\n            </HStack>\n          )}\n        />\n        <FormErrorMessage>{error}</FormErrorMessage>\n        <FormHelperText>\n          User link is a link that is considered as a user of ApiKey. User link\n          will be \"from\" for UsesApiKey\n        </FormHelperText>\n      </FormControl>\n    );\n  }\n\n  function ContainerLinkIdTextField(options: {\n    setValue: any;\n    error: string;\n    control: any;\n  }) {\n    const { setValue, error, control } = options;\n\n    const helpContent = `Container link is a link that will contain newly created ApiKey, UsesApiKey`;\n\n    return (\n      <FormControl isInvalid={error}>\n        <FormLabel htmlFor=\"containerLinkId\">Container Link ID</FormLabel>\n        <HStack>\n          <Controller\n            name=\"containerLinkId\"\n            control={control}\n            defaultValue={undefined}\n            rules={{\n              required: {\n                value: true,\n                message: \"Container link id is required\",\n              },\n              validate: async (value) => {\n                const valueNumber = parseInt(value);\n                if (isNaN(valueNumber)) {\n                  return \"Container link id must be a number\";\n                }\n                const {\n                  data: [link],\n                } = await deep.select({ id: valueNumber });\n                if (!link) {\n                  return `Link ${valueNumber} does not exist`;\n                } else {\n                  return true;\n                }\n              },\n            }}\n            render={({ field }) => (\n              <NumberInput {...field} min={0}>\n                <NumberInputField ref={field.ref} name={field.name} />\n              </NumberInput>\n            )}\n          />\n          <FinderPopover\n            link={deep.linkId}\n            onSubmit={async (link) => {\n              setValue(\"containerLinkId\", link.id);\n            }}\n          >\n            <IconButton aria-label=\"finder\" icon={<>🪬</>} />\n          </FinderPopover>\n        </HStack>\n        <FormErrorMessage>{error}</FormErrorMessage>\n        <FormHelperText>\n          Container link is a link that will contain newly created ApiKey,\n          UsesApiKey\n        </FormHelperText>\n      </FormControl>\n    );\n  }\n};\n",
        "link_id": 1211
      }
    },
    {
      "id": 1298,
      "type_id": 1219,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 504,
        "value": "https://deep-ai.openai.azure.com/openai/deployments/gpt-4-32k/chat/completions?api-version=2023-03-15-preview",
        "link_id": 1298
      }
    },
    {
      "id": 1324,
      "type_id": 3,
      "from_id": 1316,
      "to_id": 1303,
      "value": {
        "id": 516,
        "value": "gpt-4-32k-providedBy",
        "link_id": 1324
      }
    },
    {
      "id": 224,
      "type_id": 3,
      "from_id": 184,
      "to_id": 40,
      "value": {
        "id": 46,
        "value": "containTree",
        "link_id": 224
      }
    },
    {
      "id": 225,
      "type_id": 3,
      "from_id": 184,
      "to_id": 41,
      "value": {
        "id": 47,
        "value": "containTreeContain",
        "link_id": 225
      }
    },
    {
      "id": 226,
      "type_id": 3,
      "from_id": 184,
      "to_id": 42,
      "value": {
        "id": 48,
        "value": "containTreeAny",
        "link_id": 226
      }
    },
    {
      "id": 228,
      "type_id": 3,
      "from_id": 184,
      "to_id": 44,
      "value": {
        "id": 50,
        "value": "packageNamespaceValue",
        "link_id": 228
      }
    },
    {
      "id": 229,
      "type_id": 3,
      "from_id": 184,
      "to_id": 45,
      "value": {
        "id": 51,
        "value": "PackageActive",
        "link_id": 229
      }
    },
    {
      "id": 230,
      "type_id": 3,
      "from_id": 184,
      "to_id": 46,
      "value": {
        "id": 52,
        "value": "PackageVersion",
        "link_id": 230
      }
    },
    {
      "id": 231,
      "type_id": 3,
      "from_id": 184,
      "to_id": 47,
      "value": {
        "id": 53,
        "value": "packageVersionValue",
        "link_id": 231
      }
    },
    {
      "id": 232,
      "type_id": 3,
      "from_id": 184,
      "to_id": 48,
      "value": {
        "id": 54,
        "value": "HandleOperation",
        "link_id": 232
      }
    },
    {
      "id": 570,
      "type_id": 3,
      "from_id": 553,
      "to_id": 569,
      "value": {
        "id": 220,
        "value": "RouteSymbol",
        "link_id": 570
      }
    },
    {
      "id": 583,
      "type_id": 146,
      "from_id": 553,
      "to_id": 82,
      "value": {
        "id": 233,
        "value": "🔋",
        "link_id": 583
      }
    },
    {
      "id": 625,
      "type_id": 146,
      "from_id": 553,
      "to_id": 30,
      "value": {
        "id": 275,
        "value": "📄",
        "link_id": 625
      }
    },
    {
      "id": 626,
      "type_id": 3,
      "from_id": 553,
      "to_id": 625,
      "value": {
        "id": 276,
        "value": "SyncTextFileSymbol",
        "link_id": 626
      }
    },
    {
      "id": 637,
      "type_id": 146,
      "from_id": 553,
      "to_id": 18,
      "value": {
        "id": 287,
        "value": "👤",
        "link_id": 637
      }
    },
    {
      "id": 651,
      "type_id": 146,
      "from_id": 553,
      "to_id": 10,
      "value": {
        "id": 301,
        "value": "🔗",
        "link_id": 651
      }
    },
    {
      "id": 802,
      "type_id": 717,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 351,
        "value": "({ deep, require }) => {\n    const React = require('react');\n    const { useState, useEffect } = React;\n    const json5 = require('json5');\n    const { useContainer, Resize, CustomizableIcon } = require('@deep-foundation/deepcase');\n    const MonacoEditor = require('@monaco-editor/react');\n    const { Box, IconButton, useColorModeValue, useColorMode } = require('@chakra-ui/react');\n    const { BsCheck2, BsLightbulbFill, BsLightbulbOff } = require('react-icons/bs');\n    const { motion, useAnimation } = require('framer-motion');\n\n    const variants = {\n      view: {\n        opacity: 1,\n        scale: 1,\n        transition: {\n          duration: 1,\n          delay: 0.3,\n          scale: { delay: 0.5, } \n        }\n      },\n      hide: {\n        opacity: 0, \n        scale: 0,\n        transition: {\n          type: 'spring'\n        }\n      },\n      initial: {\n        originX: 1,\n        opacity: 1,\n        scale: 1,\n      }\n    };\n  \n    const stackVariants = {\n      outside: {\n        x: '0%',\n        opacity: 1,\n        scale: 1,\n        originX: 0,\n        transition: {\n          type: 'spring',\n\n          duration: 0.5,\n          delay: 0.2,\n          scale: { delay: 0.3, }\n        }\n      },\n      nested: {\n        x: '-100%',\n        opacity: 1,\n        scale: 1,\n        originX: 1,\n        transition: {\n          type: 'spring',\n          duration: 0.5,\n          delay: 0.2,\n          scale: { delay: 0.3, }\n        }\n      },\n      initial: {\n        x: '0%',\n        opacity: 0,\n        scale: 0,\n      }\n    };\n    \n    // Only objects editor.\n    return ({ fillSize, style, link }) => {\n      const currentValue = deep.stringify(link?.value?.value) || '';\n      const [value, setValue] = useState(currentValue);\n      const isSaved = value == currentValue;\n      const [container] = useContainer();\n      const { data } = deep.useDeepSubscription({\n        type_id: { _in: [\n          deep.idLocal('@deep-foundation/core', 'Active'),\n          deep.idLocal('@deep-foundation/core', 'Contain'),\n        ] },\n        to_id: { _eq: link.id },\n      });\n      const contain = data?.find(l => l.type_id === deep.idLocal('@deep-foundation/core', 'Contain'))\n      const active = data?.find(l => l.type_id === deep.idLocal('@deep-foundation/core', 'Active'))\n\n      const [viewSize, setViewSize] = useState({width: 300, height: 300});\n      const terminalBorderWidth = viewSize.width - 1;\n      const terminalBorderHeight = viewSize.height - 1;\n\n      const control = useAnimation();\n      const controlStack = useAnimation();\n\n      useEffect(() => {\n        if (value) {\n          control.start('view')\n        } else {\n          control.start('hide')\n        };\n        if (fillSize === true) {\n          controlStack.start('nested')\n        } else {\n          // controlStack.start('initial')\n          controlStack.start('outside')\n        };\n\n      }, [control, controlStack, value, fillSize])\n\n      const { colorMode } = useColorMode();\n\n      const body = <div\n          style={{\n            width: viewSize.width,\n            height: viewSize.height,\n            ...style,\n            position: 'relative',\n          }}\n        >\n          <Box \n            position='relative'\n            display='grid' \n            gridTemplateColumns='1fr max-content' \n            height='inherit'\n          >\n            <Box\n              position='relative'\n              overflow='hidden' sx={{ borderRadius: 5 }}\n              border='1px dashed #605c60'\n            > \n              <MonacoEditor\n                options={{\n                  minimap: {\n                    enabled: false\n                  },\n                  lineNumbers: 'off',\n                  wordWrap: true,\n                }}\n                height=\"100%\"\n                width=\"100%\"\n                theme={colorMode === 'light' ? 'light' : \"vs-dark\"}\n                defaultLanguage=\"json\"\n                defaultValue={value || ''}\n                onChange={(value) => setValue(value)}\n                // onMount={handleEditorDidMount}\n              />\n            </Box>\n            <Box\n              as={motion.div}\n              animate={controlStack}\n              variants={stackVariants}\n              initial='initial'\n              // height={stackHeight}\n              height={fillSize ? '100%' : viewSize.height}\n              display='flex'\n              justifyContent='space-between'\n              flexDirection='column'\n              ml={fillSize ? 0 : '0.2rem'}\n            >\n              <IconButton \n                as={motion.div}\n                variants={variants}\n                initial='initial'\n                // whileInView='view'\n                animate='view'\n                aria-label='activate/inactivate button' \n                bg={active && colorMode === 'dark' ? 'gray.700' : 'blue.50'}\n                _hover={{\n                  bg: 'blue.100'\n                }}\n                isRound\n                variant='outline'\n                sx={{ borderColor: active ? '#111' : 'rgb(0, 128, 255)' }}\n                mr={fillSize ? '0.2rem' : 0}\n                mt={fillSize ? '0.2rem' : 0}\n                size='xs'\n                onClick={async () => {\n                    if (active) {\n                      await deep.delete({\n                        _or: [{\n                          id: { _eq: active?.id },\n                      }, {\n                          type_id: deep.idLocal('@deep-foundation/core', 'Contain'),\n                        from_id: link.id,\n                        to_id: active.id,\n                      }],\n                    });\n                  } else {\n                      await deep.insert({\n                        type_id: deep.idLocal('@deep-foundation/core', 'Active'),\n                      from_id: contain.from_id,\n                      to_id: contain.to_id,\n                      in: { data: {\n                          type_id: deep.idLocal('@deep-foundation/core', 'Contain'),\n                        from_id: link.id,\n                      } },\n                    });\n                  }\n                }}\n                icon={active ? <BsLightbulbOff /> : <CustomizableIcon Component={BsLightbulbFill} value={{ color: 'rgb(0, 128, 255)' }} />}\n              />\n              <IconButton \n                as={motion.div}\n                variants={variants}\n                initial='initial'\n                animate={control}\n                whileInView='view'\n                // isDisabled={isSaved}\n                aria-label='save button' \n                isRound\n                bg='blue.50'\n                _hover={{\n                  bg: 'blue.100'\n                }}\n                variant='outline'\n                sx={{ borderColor: 'rgb(0, 128, 255)' }}\n                mr={fillSize ? '0.2rem' : 0}\n                mb={fillSize ? '0.2rem' : 0}\n                // isLoading={!isSaved}\n                size='xs'\n                icon={<CustomizableIcon Component={BsCheck2} value={{ color: 'rgb(0, 128, 255)' }} />}\n                onClick={() => {\n                  try {\n                    const _value = json5.parse(value);\n                    if (!link.value) deep.insert({\n                      link_id: link.id, value: _value,\n                    }, { table: 'objects' });\n                    deep.update({ link_id: link.id }, { value: _value }, { table: 'objects' });\n                  } catch(error) {}\n                }}\n              />\n            </Box>\n          </Box>\n        </div>;\n\n      return  <>\n        {fillSize \n        ? body \n        : <Resize\n            onChangeSize={(viewSize) => setViewSize(viewSize)} \n            style={{\n            // position: 'relative',\n            // overflow: nested ? 'hidden' : 'inherit',\n            borderRadius: 5,\n            border: 'none',\n          }}\n        >{body}</Resize>}\n      </>;\n    }\n  }\n",
        "link_id": 802
      }
    },
    {
      "id": 871,
      "type_id": 30,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 358,
        "value": "({ deep, require }) => {\n    const React = require('react');\n    const { useState, useEffect } = React;\n    const json5 = require('json5');\n    const { Input, useColorModeValue } = require('@chakra-ui/react');\n    const { useHotkeys } = require('react-hotkeys-hook');\n    const { useDebounceCallback } = require('@react-hook/debounce');\n    const { useContainer } = require('@deep-foundation/deepcase');\n    return ({ fillSize, style, link, onClose }) => {\n        const currentValue = deep.stringify(link?.value?.value) || '';\n        const [value, setValue] = useState(currentValue);\n        const save = async (value) => {\n            if (!link.value)\n                await deep.insert({\n                    link_id: link.id, value: value,\n                }, { table: 'strings' });\n            deep.update({ link_id: link.id }, { value: value }, { table: 'strings' });\n        };\n        const ref = useHotkeys('enter', async () => {\n            await save(value);\n            onClose && onClose();\n        }, { enableOnTags: [\"INPUT\"] });\n        const setValuesDebounced = useDebounceCallback(async (value) => { await save(value); }, 500);\n        useEffect(() => {\n            setValuesDebounced(value);\n        }, [value]);\n        const bg = useColorModeValue('#eeeeee', '#434343');\n        const hover = useColorModeValue('white', '#1e1e1e');\n        const borderColor = useColorModeValue('#434343', '#eeeeee');\n        const color = useColorModeValue('#1e1e1e', 'white');\n        return React.createElement(\"div\", { style: {\n                width: 300,\n                ...style,\n                position: 'relative',\n            } },\n            React.createElement(Input, { ref: ref, autoFocus: true, type: \"text\", variant: 'filled', variant: 'filled', bg: bg, color: color, borderWidth: 'thin', borderColor: borderColor, _hover: { bg: hover }, _focus: { bg: bg }, sx: {\n                    width: '100%',\n                }, onChange: (e) => setValue(e.target.value), value: value }));\n    };\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsibW9kdWxlLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxDQUFDLEVBQUUsSUFBSSxFQUFFLE9BQU8sRUFBRSxFQUFFLEVBQUU7SUFDaEIsTUFBTSxLQUFLLEdBQUcsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQ2pDLE1BQU0sRUFBRSxRQUFRLEVBQUUsU0FBUyxFQUFFLEdBQUcsS0FBSyxDQUFDO0lBQ3RDLE1BQU0sS0FBSyxHQUFHLE9BQU8sQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUMvQixNQUFNLEVBQUUsS0FBSyxFQUFFLGlCQUFpQixFQUFFLEdBQUcsT0FBTyxDQUFDLGtCQUFrQixDQUFDLENBQUM7SUFDakUsTUFBTSxFQUFFLFVBQVUsRUFBRSxHQUFHLE9BQU8sQ0FBQyxvQkFBb0IsQ0FBQyxDQUFDO0lBQ3JELE1BQU0sRUFBRSxtQkFBbUIsRUFBRSxHQUFHLE9BQU8sQ0FBQyxzQkFBc0IsQ0FBQyxDQUFDO0lBQ2hFLE1BQU0sRUFBRSxZQUFZLEVBQUUsR0FBRyxPQUFPLENBQUMsMkJBQTJCLENBQUMsQ0FBQztJQUU5RCxPQUFPLENBQUMsRUFBRSxRQUFRLEVBQUUsS0FBSyxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUUsRUFBRSxFQUFFO1FBRzVDLE1BQU0sWUFBWSxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxFQUFFLEtBQUssRUFBRSxLQUFLLENBQUMsSUFBSSxFQUFFLENBQUM7UUFDOUQsTUFBTSxDQUFDLEtBQUssRUFBRSxRQUFRLENBQUMsR0FBRyxRQUFRLENBQUMsWUFBWSxDQUFDLENBQUM7UUFDakQsTUFBTSxJQUFJLEdBQUcsS0FBSyxFQUFFLEtBQUssRUFBRSxFQUFFO1lBQ3pCLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSztnQkFBRSxNQUFNLElBQUksQ0FBQyxNQUFNLENBQUM7b0JBQ2pDLE9BQU8sRUFBRSxJQUFJLENBQUMsRUFBRSxFQUFFLEtBQUssRUFBRSxLQUFLO2lCQUNqQyxFQUFFLEVBQUUsS0FBSyxFQUFFLFNBQVMsRUFBRSxDQUFDLENBQUM7WUFDekIsSUFBSSxDQUFDLE1BQU0sQ0FBQyxFQUFFLE9BQU8sRUFBRSxJQUFJLENBQUMsRUFBRSxFQUFFLEVBQUUsRUFBRSxLQUFLLEVBQUUsS0FBSyxFQUFFLEVBQUUsRUFBRSxLQUFLLEVBQUUsU0FBUyxFQUFFLENBQUMsQ0FBQztRQUU1RSxDQUFDLENBQUM7UUFDRixNQUFNLEdBQUcsR0FBRyxVQUFVLENBQUMsT0FBTyxFQUFFLEtBQUssSUFBSSxFQUFFO1lBQ3pDLE1BQU0sSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO1lBQ2xCLE9BQU8sSUFBSSxPQUFPLEVBQUUsQ0FBQztRQUN2QixDQUFDLEVBQUUsRUFBRSxZQUFZLEVBQUUsQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUFDLENBQUM7UUFFaEMsTUFBTSxrQkFBa0IsR0FBRyxtQkFBbUIsQ0FBQyxLQUFLLEVBQUMsS0FBSyxFQUFFLEVBQUUsR0FBRSxNQUFNLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQSxDQUFBLENBQUMsRUFBRSxHQUFHLENBQUMsQ0FBQztRQUV6RixTQUFTLENBQUMsR0FBRyxFQUFFO1lBQ2Isa0JBQWtCLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDNUIsQ0FBQyxFQUFFLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQTtRQUVYLE1BQU0sRUFBRSxHQUFHLGlCQUFpQixDQUFDLFNBQVMsRUFBRSxTQUFTLENBQUMsQ0FBQztRQUNuRCxNQUFNLEtBQUssR0FBRyxpQkFBaUIsQ0FBQyxPQUFPLEVBQUUsU0FBUyxDQUFDLENBQUM7UUFDcEQsTUFBTSxXQUFXLEdBQUcsaUJBQWlCLENBQUMsU0FBUyxFQUFFLFNBQVMsQ0FBQyxDQUFDO1FBQzVELE1BQU0sS0FBSyxHQUFHLGlCQUFpQixDQUFDLFNBQVMsRUFBRSxPQUFPLENBQUMsQ0FBQztRQUV0RCxPQUFPLDZCQUNILEtBQUssRUFBRTtnQkFDTCxLQUFLLEVBQUUsR0FBRztnQkFDVixHQUFHLEtBQUs7Z0JBQ1IsUUFBUSxFQUFFLFVBQVU7YUFFckI7WUFFRCxvQkFBQyxLQUFLLElBQ0osR0FBRyxFQUFFLEdBQUcsRUFDUixTQUFTLFFBQ1QsSUFBSSxFQUFDLE1BQU0sRUFDWCxPQUFPLEVBQUMsUUFBUSxFQUNoQixPQUFPLEVBQUMsUUFBUSxFQUNoQixFQUFFLEVBQUUsRUFBRSxFQUNOLEtBQUssRUFBRSxLQUFLLEVBQ1osV0FBVyxFQUFDLE1BQU0sRUFDbEIsV0FBVyxFQUFFLFdBQVcsRUFDeEIsTUFBTSxFQUFFLEVBQUMsRUFBRSxFQUFFLEtBQUssRUFBQyxFQUNuQixNQUFNLEVBQUUsRUFBQyxFQUFFLEVBQUUsRUFBRSxFQUFDLEVBQ2hCLEVBQUUsRUFBRTtvQkFDRixLQUFLLEVBQUUsTUFBTTtpQkFDZCxFQUNELFFBQVEsRUFBRSxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLEVBQ3pDLEtBQUssRUFBRSxLQUFLLEdBQ1osQ0FDRSxDQUFDO0lBQ1QsQ0FBQyxDQUFBO0FBQ0gsQ0FBQyxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiKHsgZGVlcCwgcmVxdWlyZSB9KSA9PiB7XG4gICAgICBjb25zdCBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XG4gICAgY29uc3QgeyB1c2VTdGF0ZSwgdXNlRWZmZWN0IH0gPSBSZWFjdDtcbiAgICBjb25zdCBqc29uNSA9IHJlcXVpcmUoJ2pzb241Jyk7XG4gICAgY29uc3QgeyBJbnB1dCwgdXNlQ29sb3JNb2RlVmFsdWUgfSA9IHJlcXVpcmUoJ0BjaGFrcmEtdWkvcmVhY3QnKTtcbiAgICBjb25zdCB7IHVzZUhvdGtleXMgfSA9IHJlcXVpcmUoJ3JlYWN0LWhvdGtleXMtaG9vaycpO1xuICAgIGNvbnN0IHsgdXNlRGVib3VuY2VDYWxsYmFjayB9ID0gcmVxdWlyZSgnQHJlYWN0LWhvb2svZGVib3VuY2UnKTtcbiAgICBjb25zdCB7IHVzZUNvbnRhaW5lciB9ID0gcmVxdWlyZSgnQGRlZXAtZm91bmRhdGlvbi9kZWVwY2FzZScpO1xuICAgIC8vIE9ubHkgc3RyaW5nIGVkaXRvci5cbiAgICByZXR1cm4gKHsgZmlsbFNpemUsIHN0eWxlLCBsaW5rLCBvbkNsb3NlIH0pID0+IHtcbiAgICAgIFxuICAgICAgXG4gICAgICBjb25zdCBjdXJyZW50VmFsdWUgPSBkZWVwLnN0cmluZ2lmeShsaW5rPy52YWx1ZT8udmFsdWUpIHx8ICcnO1xuICAgICAgY29uc3QgW3ZhbHVlLCBzZXRWYWx1ZV0gPSB1c2VTdGF0ZShjdXJyZW50VmFsdWUpO1xuICAgICAgY29uc3Qgc2F2ZSA9IGFzeW5jICh2YWx1ZSkgPT4ge1xuICAgICAgICAgIGlmICghbGluay52YWx1ZSkgYXdhaXQgZGVlcC5pbnNlcnQoe1xuICAgICAgICAgICAgbGlua19pZDogbGluay5pZCwgdmFsdWU6IHZhbHVlLFxuICAgICAgICB9LCB7IHRhYmxlOiAnc3RyaW5ncycgfSk7XG4gICAgICAgIGRlZXAudXBkYXRlKHsgbGlua19pZDogbGluay5pZCB9LCB7IHZhbHVlOiB2YWx1ZSB9LCB7IHRhYmxlOiAnc3RyaW5ncycgfSk7XG4gICAgICAgIFxuICAgICAgfTtcbiAgICAgIGNvbnN0IHJlZiA9IHVzZUhvdGtleXMoJ2VudGVyJywgYXN5bmMgKCkgPT4ge1xuICAgICAgICBhd2FpdCBzYXZlKHZhbHVlKTtcbiAgICAgICAgb25DbG9zZSAmJiBvbkNsb3NlKCk7XG4gICAgICB9LCB7IGVuYWJsZU9uVGFnczogW1wiSU5QVVRcIl0gfSk7XG4gICAgICBcbiAgICAgIGNvbnN0IHNldFZhbHVlc0RlYm91bmNlZCA9IHVzZURlYm91bmNlQ2FsbGJhY2soYXN5bmModmFsdWUpID0+IHthd2FpdCBzYXZlKHZhbHVlKX0sIDUwMCk7XG5cbiAgICAgIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgICAgIHNldFZhbHVlc0RlYm91bmNlZCh2YWx1ZSk7XG4gICAgICB9LCBbdmFsdWVdKVxuXG4gICAgICBjb25zdCBiZyA9IHVzZUNvbG9yTW9kZVZhbHVlKCcjZWVlZWVlJywgJyM0MzQzNDMnKTtcbiAgICAgIGNvbnN0IGhvdmVyID0gdXNlQ29sb3JNb2RlVmFsdWUoJ3doaXRlJywgJyMxZTFlMWUnKTtcbiAgICAgIGNvbnN0IGJvcmRlckNvbG9yID0gdXNlQ29sb3JNb2RlVmFsdWUoJyM0MzQzNDMnLCAnI2VlZWVlZScpO1xuICAgICAgY29uc3QgY29sb3IgPSB1c2VDb2xvck1vZGVWYWx1ZSgnIzFlMWUxZScsICd3aGl0ZScpO1xuXG4gICAgcmV0dXJuIDxkaXZcbiAgICAgICAgc3R5bGU9e3tcbiAgICAgICAgICB3aWR0aDogMzAwLFxuICAgICAgICAgIC4uLnN0eWxlLFxuICAgICAgICAgIHBvc2l0aW9uOiAncmVsYXRpdmUnLCBcbiAgICAgICAgICAvLyBiYWNrZ3JvdW5kOiAncmVkJ1xuICAgICAgICB9fVxuICAgICAgPlxuICAgICAgICA8SW5wdXRcbiAgICAgICAgICByZWY9e3JlZn1cbiAgICAgICAgICBhdXRvRm9jdXNcbiAgICAgICAgICB0eXBlPVwidGV4dFwiXG4gICAgICAgICAgdmFyaWFudD0nZmlsbGVkJ1xuICAgICAgICAgIHZhcmlhbnQ9J2ZpbGxlZCdcbiAgICAgICAgICBiZz17Ymd9XG4gICAgICAgICAgY29sb3I9e2NvbG9yfVxuICAgICAgICAgIGJvcmRlcldpZHRoPSd0aGluJ1xuICAgICAgICAgIGJvcmRlckNvbG9yPXtib3JkZXJDb2xvcn1cbiAgICAgICAgICBfaG92ZXI9e3tiZzogaG92ZXJ9fVxuICAgICAgICAgIF9mb2N1cz17e2JnOiBiZ319XG4gICAgICAgICAgc3g9e3tcbiAgICAgICAgICAgIHdpZHRoOiAnMTAwJScsXG4gICAgICAgICAgfX1cbiAgICAgICAgICBvbkNoYW5nZT17KGUpID0+IHNldFZhbHVlKGUudGFyZ2V0LnZhbHVlKX1cbiAgICAgICAgICB2YWx1ZT17dmFsdWV9XG4gICAgICAgIC8+XG4gICAgICA8L2Rpdj47XG4gICAgfVxuICB9Il19",
        "link_id": 871
      }
    },
    {
      "id": 872,
      "type_id": 3,
      "from_id": 805,
      "to_id": 871,
      "value": {
        "id": 357,
        "value": "generated",
        "link_id": 872
      }
    },
    {
      "id": 873,
      "type_id": 143,
      "from_id": 871,
      "to_id": 805
    },
    {
      "id": 874,
      "type_id": 3,
      "from_id": 805,
      "to_id": 873
    },
    {
      "id": 811,
      "type_id": 35,
      "from_id": 145,
      "to_id": 810
    },
    {
      "id": 812,
      "type_id": 156,
      "from_id": 57,
      "to_id": 811
    },
    {
      "id": 813,
      "type_id": 2,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 366,
        "value": "@deep-foundation/deepcase",
        "link_id": 813
      }
    },
    {
      "id": 1100,
      "type_id": 1,
      "from_id": 8,
      "to_id": 8
    },
    {
      "id": 1737,
      "type_id": 717,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 665,
        "value": "import {\r\n  DeepClient,\r\n  DeepClientResult,\r\n  SerialOperation,\r\n  Table,\r\n} from \"@deep-foundation/deeplinks/imports/client.js\";\r\nimport { BoolExpLink } from \"@deep-foundation/deeplinks/imports/client_types.js\";\r\nimport {\r\n  Link,\r\n  MinilinksResult,\r\n} from \"@deep-foundation/deeplinks/imports/minilinks.js\";\r\n\r\nasync (options: {\r\n  deep: DeepClient;\r\n  rootLinkId?: number;\r\n  obj: Obj;\r\n  customMethods?: Record<string, Function>;\r\n  resultLinkId?: number;\r\n}) => {\r\n  const { deep, rootLinkId, obj, customMethods, resultLinkId } = options;\r\n  const { createSerialOperation } = await import(\r\n    \"@deep-foundation/deeplinks/imports/gql/index.js\"\r\n  );\r\n  const { pascalCase } = await import(\"case-anything\");\r\n  const { default: debug } = await import(\"debug\");\r\n  const { default: util } = await import(\"util\");\r\n  const logs: Array<any> = [];\r\n  const packageLog = debug(\"@deep-foundation/object-to-links-async-converter\");\r\n  packageLog({ options });\r\n\r\n  class ObjectToLinksConverter {\r\n    reservedLinkIds: Array<number>;\r\n    rootLink: Link<number>;\r\n    obj: Obj;\r\n    resultLink: Link<number>;\r\n    deep = deep;\r\n    static requiredPackageNames = {\r\n      core: \"@deep-foundation/core\",\r\n      boolean: \"@deep-foundation/boolean\",\r\n    };\r\n    static requiredPackagesInMinilinks = {\r\n      ...this.requiredPackageNames,\r\n      objectToLinksConverter:\r\n        \"@deep-foundation/object-to-links-async-converter\",\r\n    };\r\n\r\n    constructor(options: ObjectToLinksConverterOptions) {\r\n      this.rootLink = options.rootLink;\r\n      this.reservedLinkIds = options.reservedLinkIds;\r\n      this.obj = options.obj;\r\n      this.resultLink = options.resultLink;\r\n    }\r\n\r\n    static getLogger(namespace: string) {\r\n      const getLoggerLogger = debug(this.getLogger.name);\r\n      getLoggerLogger({ options });\r\n      const resultLogger = packageLog.extend(\r\n        `${ObjectToLinksConverter.name}${namespace ? `:${namespace}` : \"\"}`,\r\n      );\r\n      resultLogger.enabled = true;\r\n      resultLogger.log = (...content: Array<any>) => {\r\n        logs.push(...content);\r\n      };\r\n      return resultLogger;\r\n    }\r\n\r\n    static async applyContainTreeLinksDownToParentToMinilinks(\r\n      options: ApplyContainTreeLinksDownToParentToMinilinksOptions,\r\n    ) {\r\n      const log = ObjectToLinksConverter.getLogger(\r\n        ObjectToLinksConverter.applyContainTreeLinksDownToParentToMinilinks\r\n          .name,\r\n      );\r\n      const links = (await this.getContainTreeLinksDownToParent({\r\n        linkExp: options.linkExp,\r\n      })) as DeepClientResult<Link<number>[]>;\r\n      log({ links });\r\n      const minilinksApplyResult = options.minilinks.apply(links.data);\r\n      log({ minilinksApplyResult });\r\n      return minilinksApplyResult;\r\n    }\r\n\r\n    static async getContainTreeLinksDownToParent(\r\n      options: GetContainTreeLinksDownToLinkOptions,\r\n    ) {\r\n      const log = ObjectToLinksConverter.getLogger(\r\n        ObjectToLinksConverter.getContainTreeLinksDownToParent.name,\r\n      );\r\n      const { linkExp } = options;\r\n      const query: BoolExpLink = {\r\n        up: {\r\n          tree_id: await deep.id(\"@deep-foundation/core\", \"containTree\"),\r\n          parent: linkExp,\r\n        },\r\n      };\r\n      log({ query });\r\n      const result = await deep.select(query);\r\n      log({ result });\r\n      return result;\r\n    }\r\n\r\n    /**\r\n     * Undefined is returned of root object is empty\r\n     */\r\n    static async init(\r\n      options: ObjectToLinksConverterInitOptions,\r\n    ): Promise<ObjectToLinksConverter> {\r\n      const log = ObjectToLinksConverter.getLogger(\r\n        ObjectToLinksConverter.init.name,\r\n      );\r\n      const { obj } = options;\r\n      const containTreeLinksDownToCoreAndThisPackageLinkApplyMinilinksResult =\r\n        await this.applyContainTreeLinksDownToParentToMinilinks({\r\n          linkExp: {\r\n            _or: Object.values(\r\n              ObjectToLinksConverter.requiredPackagesInMinilinks,\r\n            ).map((packageName) => ({\r\n              id: {\r\n                _id: [packageName],\r\n              },\r\n            })),\r\n          },\r\n          minilinks: deep.minilinks,\r\n        });\r\n      log({ containTreeLinksDownToCoreAndThisPackageLinkApplyMinilinksResult });\r\n      const rootLink: Link<number> = options.rootLinkId\r\n        ? await deep.select(options.rootLinkId).then((result) => result.data[0])\r\n        : await deep\r\n            .insert(\r\n              {\r\n                // TODO: Replace id with idLocal when it work properly\r\n                type_id: await deep.id(deep.linkId!, \"Root\"),\r\n              },\r\n              {\r\n                returning: deep.linksSelectReturning,\r\n              },\r\n            )\r\n            .then((result) => result.data[0] as Link<number>);\r\n      log({ rootLink });\r\n      const containTreeLinksDownToRootLinkApplyMinilinksResult =\r\n        await this.applyContainTreeLinksDownToParentToMinilinks({\r\n          linkExp: {\r\n            id: rootLink.id,\r\n          },\r\n          minilinks: deep.minilinks,\r\n        });\r\n      log({ containTreeLinksDownToRootLinkApplyMinilinksResult });\r\n      const linkIdsToReserveCount = this.getLinksToReserveCount({ value: obj });\r\n      log({ linkIdsToReserveCount });\r\n      const reservedLinkIds = await deep.reserve(linkIdsToReserveCount);\r\n      log({ reservedLinkIds });\r\n      const resultLink = options.resultLinkId\r\n        ? await deep\r\n            .select(options.resultLinkId)\r\n            .then((result) => result.data[0])\r\n        : rootLink;\r\n      if (options.resultLinkId && !resultLink) {\r\n        throw new Error(\r\n          `Result link with id ${options.resultLinkId} not found`,\r\n        );\r\n      }\r\n      const converter = new this({\r\n        reservedLinkIds,\r\n        rootLink,\r\n        obj,\r\n        resultLink,\r\n      });\r\n      log({ converter });\r\n      return converter;\r\n    }\r\n\r\n    async convert() {\r\n      const log = ObjectToLinksConverter.getLogger(\"convert\");\r\n\r\n      const operations = await this.makeUpdateOperationsForObjectValue({\r\n        link: this.resultLink,\r\n        value: this.obj,\r\n      });\r\n      log({ operations });\r\n\r\n      const hasResultTypeLinkId = await deep.id(deep.linkId!, \"HasResult\");\r\n      const {\r\n        data: [hasResultLink],\r\n      } = await deep.select({\r\n        type_id: hasResultTypeLinkId,\r\n        from_id: this.rootLink.id,\r\n      });\r\n      if (hasResultLink) {\r\n        operations.push(\r\n          createSerialOperation({\r\n            type: \"update\",\r\n            table: \"links\",\r\n            exp: {\r\n              type_id: hasResultTypeLinkId,\r\n              from_id: this.rootLink.id,\r\n            },\r\n            value: {\r\n              to_id: this.resultLink.id,\r\n            },\r\n          }),\r\n        );\r\n      } else {\r\n        operations.push(\r\n          createSerialOperation({\r\n            type: \"insert\",\r\n            table: \"links\",\r\n            objects: {\r\n              type_id: hasResultTypeLinkId,\r\n              from_id: this.rootLink.id,\r\n              to_id: this.resultLink.id,\r\n            },\r\n          }),\r\n        );\r\n      }\r\n\r\n      const serialResult = await deep.serial({\r\n        operations,\r\n      });\r\n      log({ serialResult });\r\n\r\n      return {\r\n        serialResult,\r\n        rootLinkId: this.rootLink.id,\r\n        resultLinkId: this.resultLink.id,\r\n      };\r\n    }\r\n\r\n    static getLinksToReserveCount(options: {\r\n      value: string | number | boolean | object;\r\n    }): number {\r\n      const { value } = options;\r\n      const log = ObjectToLinksConverter.getLogger(\r\n        ObjectToLinksConverter.getLinksToReserveCount.name,\r\n      );\r\n      let count = 0;\r\n      const typeOfValue = typeof value;\r\n      log({ typeOfValue });\r\n      const reservedLinksCountForOneLink =\r\n        1 + // Type\r\n        1; // Contain for type\r\n      if (typeOfValue === \"string\") {\r\n        count = reservedLinksCountForOneLink;\r\n      } else if (typeOfValue === \"number\") {\r\n        count = reservedLinksCountForOneLink;\r\n      } else if (typeOfValue === \"boolean\") {\r\n        count = reservedLinksCountForOneLink;\r\n      } else if (Array.isArray(value)) {\r\n        const array = value as Array<any>;\r\n        for (const arrayValue of array) {\r\n          if (!arrayValue) return count;\r\n          count += this.getLinksToReserveCount({ value: arrayValue });\r\n        }\r\n      } else if (typeOfValue === \"object\") {\r\n        count += reservedLinksCountForOneLink;\r\n        for (const [propertyKey, propertyValue] of Object.entries(value)) {\r\n          if (!value) return count;\r\n          count += this.getLinksToReserveCount({ value: propertyValue });\r\n        }\r\n      }\r\n      log({ count });\r\n      return count;\r\n    }\r\n\r\n    async makeUpdateOperationsForBooleanValue(\r\n      options: MakeUpdateOperationsForBooleanValueOptions,\r\n    ) {\r\n      const log = ObjectToLinksConverter.getLogger(\r\n        this.makeUpdateOperationsForBooleanValue.name,\r\n      );\r\n      log({ options });\r\n      const { link, value } = options;\r\n      const operations: Array<SerialOperation> = [];\r\n      operations.push(\r\n        createSerialOperation({\r\n          type: \"update\",\r\n          table: \"links\",\r\n          exp: {\r\n            id: link.id,\r\n          },\r\n          value: {\r\n            to_id: await deep.id(\r\n              ObjectToLinksConverter.requiredPackageNames.boolean,\r\n              value.toString(),\r\n            ),\r\n          },\r\n        }),\r\n      );\r\n      log({ operations });\r\n      return operations;\r\n    }\r\n\r\n    async makeUpdateOperationsForStringValue(\r\n      options: MakeUpdateOperationsForStringValueOptions,\r\n    ) {\r\n      const log = ObjectToLinksConverter.getLogger(\r\n        this.makeUpdateOperationsForStringValue.name,\r\n      );\r\n      log({ options });\r\n      const { link, value } = options;\r\n      const operations: Array<SerialOperation> = [];\r\n      operations.push(\r\n        createSerialOperation({\r\n          type: \"update\",\r\n          table: `strings` as Table<\"update\">,\r\n          exp: {\r\n            link_id: link.id,\r\n          },\r\n          value: {\r\n            value: value,\r\n          },\r\n        }),\r\n      );\r\n      log({ operations });\r\n      return operations;\r\n    }\r\n\r\n    async makeUpdateOperationsForNumberValue(\r\n      options: MakeUpdateOperationsForNumberValueOptions,\r\n    ) {\r\n      const log = ObjectToLinksConverter.getLogger(\r\n        this.makeUpdateOperationsForNumberValue.name,\r\n      );\r\n      log({ options });\r\n      const { link, value } = options;\r\n      const operations: Array<SerialOperation> = [];\r\n      operations.push(\r\n        createSerialOperation({\r\n          type: \"update\",\r\n          table: `numbers` as Table<\"update\">,\r\n          exp: {\r\n            link_id: link.id,\r\n          },\r\n          value: {\r\n            value: value,\r\n          },\r\n        }),\r\n      );\r\n      log({ operations });\r\n      return operations;\r\n    }\r\n\r\n    async makeUpdateOperationsForArrayValue<TValue extends AllowedArray>(\r\n      options: MakeUpdateOperationsForAnyValueOptions<TValue>,\r\n    ) {\r\n      const log = ObjectToLinksConverter.getLogger(\r\n        this.makeUpdateOperationsForAnyValue.name,\r\n      );\r\n      const { link, value } = options;\r\n      const operations: Array<SerialOperation> = [];\r\n\r\n      await deep.delete({\r\n        up: {\r\n          tree_id: await deep.id(\r\n            ObjectToLinksConverter.requiredPackagesInMinilinks.core,\r\n            \"ContainTree\",\r\n          ),\r\n          parent_id: link.id,\r\n        },\r\n      });\r\n\r\n      for (let i = 0; i < value.length; i++) {\r\n        const element = value[i];\r\n        operations.push(\r\n          ...(await this.makeInsertOperationsForAnyValue({\r\n            value: element,\r\n            linkId: this.reservedLinkIds.pop()!,\r\n            name: i.toString(0),\r\n            parentLinkId: link.id,\r\n          })),\r\n        );\r\n      }\r\n\r\n      return operations;\r\n    }\r\n\r\n    async makeUpdateOperationsForAnyValue<TValue extends AllowedValue>(\r\n      options: MakeUpdateOperationsForAnyValueOptions<TValue>,\r\n    ) {\r\n      const log = ObjectToLinksConverter.getLogger(\r\n        this.makeUpdateOperationsForAnyValue.name,\r\n      );\r\n      const { link, value } = options;\r\n      const operations: Array<SerialOperation> = [];\r\n      if (typeof value === \"boolean\") {\r\n        operations.push(\r\n          ...(await this.makeUpdateOperationsForBooleanValue({\r\n            ...options,\r\n            value,\r\n          })),\r\n        );\r\n      } else if (typeof value === \"string\") {\r\n        operations.push(\r\n          ...(await this.makeUpdateOperationsForStringValue({\r\n            ...options,\r\n            value,\r\n          })),\r\n        );\r\n      } else if (typeof value === \"number\") {\r\n        operations.push(\r\n          ...(await this.makeUpdateOperationsForNumberValue({\r\n            ...options,\r\n            value,\r\n          })),\r\n        );\r\n      } else if (Array.isArray(value)) {\r\n        operations.push(\r\n          ...(await this.makeUpdateOperationsForArrayValue({\r\n            ...options,\r\n            value,\r\n          })),\r\n        );\r\n      } else if (typeof value === \"object\") {\r\n        operations.push(\r\n          ...(await this.makeUpdateOperationsForObjectValue({\r\n            ...options,\r\n            value,\r\n          })),\r\n        );\r\n      } else {\r\n        throw new Error(`Type of value ${typeof value} is not supported`);\r\n      }\r\n\r\n      return operations;\r\n    }\r\n\r\n    async makeUpdateOperationsForObjectValue(\r\n      options: MakeUpdateOperationsForObjectValueOptions,\r\n    ) {\r\n      const log = ObjectToLinksConverter.getLogger(\r\n        this.makeUpdateOperationsForObjectValue.name,\r\n      );\r\n      const { link, value } = options;\r\n      log({ options });\r\n      const operations: Array<SerialOperation> = [];\r\n\r\n      for (const [propertyKey, propertyValue] of Object.entries(value)) {\r\n        log({ propertyKey, propertyValue });\r\n        const [propertyLink] = deep.minilinks.query({\r\n          id: {\r\n            _id: [link.id, propertyKey],\r\n          },\r\n        });\r\n        log({ propertyLink });\r\n        if (propertyLink) {\r\n          let propertyUpdateOperations: Array<SerialOperation> = [];\r\n          propertyUpdateOperations = await this.makeUpdateOperationsForAnyValue(\r\n            {\r\n              link: propertyLink,\r\n              value: propertyValue,\r\n            },\r\n          );\r\n          log({ propertyUpdateOperations });\r\n          operations.push(...propertyUpdateOperations);\r\n        } else {\r\n          if (\r\n            typeof propertyValue !== \"string\" &&\r\n            typeof propertyValue !== \"number\" &&\r\n            typeof propertyValue !== \"boolean\" &&\r\n            !Array.isArray(propertyValue) &&\r\n            typeof propertyValue !== \"object\"\r\n          ) {\r\n            log(\r\n              `Skipping property ${propertyKey} because its type ${typeof value} is not supported`,\r\n            );\r\n            continue;\r\n          }\r\n\r\n          log(\"TEMPORARY! REMOVE THIS!\");\r\n          log(`minilinks.links`, deep.minilinks.links);\r\n          log(\r\n            `package link`,\r\n            deep.minilinks.query({\r\n              id: deep.linkId!,\r\n            }),\r\n          );\r\n          log(\r\n            `contain to string`,\r\n            deep.minilinks.query({\r\n              // TODO: Replace id with idLocal when it work properly\r\n              type_id: await deep.id(\"@deep-foundation/core\", \"Contain\"),\r\n              string: {\r\n                value: \"String\",\r\n              },\r\n              from_id: deep.linkId!,\r\n            }),\r\n          );\r\n          log(\r\n            `contain to string`,\r\n            deep.minilinks.query({\r\n              id: {\r\n                _id: [deep.linkId!, \"String\"],\r\n              },\r\n            }),\r\n          );\r\n\r\n          const propertyLinkId = this.reservedLinkIds.pop();\r\n          log({ propertyLinkId });\r\n          if (!propertyLinkId) {\r\n            throw new Error(`Not enough reserved link ids`);\r\n          }\r\n          const propertyInsertOperations =\r\n            await this.makeInsertOperationsForAnyValue({\r\n              linkId: propertyLinkId,\r\n              parentLinkId: link.id,\r\n              value: propertyValue,\r\n              name: propertyKey,\r\n            });\r\n          log({ propertyInsertOperations });\r\n          operations.push(...propertyInsertOperations);\r\n        }\r\n\r\n        log({ operations });\r\n      }\r\n\r\n      return operations;\r\n    }\r\n\r\n    async makeInsertOperationsForBooleanValue(\r\n      options: MakeInsertOperationsForBooleanOptions,\r\n    ) {\r\n      const operations: Array<SerialOperation> = [];\r\n      const { value, parentLinkId, linkId, name } = options;\r\n      const log = ObjectToLinksConverter.getLogger(\r\n        this.makeInsertOperationsForBooleanValue.name,\r\n      );\r\n\r\n      const linkInsertSerialOperation = createSerialOperation({\r\n        type: \"insert\",\r\n        table: \"links\",\r\n        objects: {\r\n          id: linkId,\r\n          type_id: await deep.id(deep.linkId!, pascalCase(typeof value)),\r\n          from_id: parentLinkId,\r\n          to_id: await deep.id(\r\n            ObjectToLinksConverter.requiredPackageNames.boolean,\r\n            value.toString(),\r\n          ),\r\n        },\r\n      });\r\n      log({ linkInsertSerialOperation });\r\n      operations.push(linkInsertSerialOperation);\r\n\r\n      const containInsertSerialOperation = createSerialOperation({\r\n        type: \"insert\",\r\n        table: \"links\",\r\n        objects: {\r\n          // TODO: Replace id with idLocal when it work properly\r\n          type_id: await deep.id(\"@deep-foundation/core\", \"Contain\"),\r\n          from_id: parentLinkId,\r\n          to_id: linkId,\r\n          string: {\r\n            data: {\r\n              value: name,\r\n            },\r\n          },\r\n        },\r\n      });\r\n      log({ containInsertSerialOperation });\r\n      operations.push(containInsertSerialOperation);\r\n\r\n      log({ operations });\r\n      return operations;\r\n    }\r\n    async makeInsertOperationsForStringValue(\r\n      options: MakeInsertOperationsForStringOptions,\r\n    ) {\r\n      const operations: Array<SerialOperation> = [];\r\n      const { value, parentLinkId, linkId, name } = options;\r\n      const log = ObjectToLinksConverter.getLogger(\r\n        \"makeInsertOperationsForStringValue\",\r\n      );\r\n      const linkInsertSerialOperation = createSerialOperation({\r\n        type: \"insert\",\r\n        table: \"links\",\r\n        objects: {\r\n          id: linkId,\r\n          from_id: parentLinkId,\r\n          to_id: parentLinkId,\r\n          type_id: await deep.id(deep.linkId!, pascalCase(typeof value)),\r\n        },\r\n      });\r\n      log({ linkInsertSerialOperation });\r\n      operations.push(linkInsertSerialOperation);\r\n\r\n      const stringValueInsertSerialOperation = createSerialOperation({\r\n        type: \"insert\",\r\n        table: `${typeof value}s` as Table<\"insert\">,\r\n        objects: {\r\n          link_id: linkId,\r\n          value: value,\r\n        },\r\n      });\r\n      log({ stringValueInsertSerialOperation });\r\n      operations.push(stringValueInsertSerialOperation);\r\n\r\n      const containInsertSerialOperation = createSerialOperation({\r\n        type: \"insert\",\r\n        table: \"links\",\r\n        objects: {\r\n          // TODO: Replace id with idLocal when it work properly\r\n          type_id: await deep.id(\"@deep-foundation/core\", \"Contain\"),\r\n          from_id: parentLinkId,\r\n          to_id: linkId,\r\n          string: {\r\n            data: {\r\n              value: name,\r\n            },\r\n          },\r\n        },\r\n      });\r\n      log({ containInsertSerialOperation });\r\n      operations.push(containInsertSerialOperation);\r\n\r\n      log({ operations });\r\n      return operations;\r\n    }\r\n\r\n    async makeInsertOperationsForNumberValue(\r\n      options: MakeInsertOperationsForNumberOptions,\r\n    ) {\r\n      const operations: Array<SerialOperation> = [];\r\n      const { value, parentLinkId, linkId, name } = options;\r\n      const log = ObjectToLinksConverter.getLogger(\r\n        \"makeInsertOperationsForStringValue\",\r\n      );\r\n      const linkInsertSerialOperation = createSerialOperation({\r\n        type: \"insert\",\r\n        table: \"links\",\r\n        objects: {\r\n          id: linkId,\r\n          from_id: parentLinkId,\r\n          to_id: parentLinkId,\r\n          type_id: await deep.id(deep.linkId!, pascalCase(typeof value)),\r\n        },\r\n      });\r\n      log({ linkInsertSerialOperation });\r\n      operations.push(linkInsertSerialOperation);\r\n\r\n      const stringValueInsertSerialOperation = createSerialOperation({\r\n        type: \"insert\",\r\n        table: `${typeof value}s` as Table<\"insert\">,\r\n        objects: {\r\n          link_id: linkId,\r\n          value: value,\r\n        },\r\n      });\r\n      log({ stringValueInsertSerialOperation });\r\n      operations.push(stringValueInsertSerialOperation);\r\n\r\n      const containInsertSerialOperation = createSerialOperation({\r\n        type: \"insert\",\r\n        table: \"links\",\r\n        objects: {\r\n          // TODO: Replace id with idLocal when it work properly\r\n          type_id: await deep.id(\"@deep-foundation/core\", \"Contain\"),\r\n          from_id: parentLinkId,\r\n          to_id: linkId,\r\n          string: {\r\n            data: {\r\n              value: name,\r\n            },\r\n          },\r\n        },\r\n      });\r\n      log({ containInsertSerialOperation });\r\n      operations.push(containInsertSerialOperation);\r\n\r\n      log({ operations });\r\n      return operations;\r\n    }\r\n\r\n    async makeInsertOperationsForArrayValue(\r\n      options: MakeInsertOperationsForArrayValueOptions,\r\n    ) {\r\n      const operations: Array<SerialOperation> = [];\r\n      const { value, linkId, name, parentLinkId } = options;\r\n      const log = ObjectToLinksConverter.getLogger(\r\n        \"makeInsertOperationsForStringValue\",\r\n      );\r\n\r\n      const linkInsertSerialOperation = createSerialOperation({\r\n        type: \"insert\",\r\n        table: \"links\",\r\n        objects: {\r\n          id: linkId,\r\n          type_id: await deep.id(deep.linkId!, pascalCase(typeof value)),\r\n          from_id: parentLinkId,\r\n          to_id: parentLinkId,\r\n        },\r\n      });\r\n      log({ linkInsertSerialOperation });\r\n      operations.push(linkInsertSerialOperation);\r\n\r\n      const containInsertSerialOperation = createSerialOperation({\r\n        type: \"insert\",\r\n        table: \"links\",\r\n        objects: {\r\n          // TODO: Replace id with idLocal when it work properly\r\n          type_id: await deep.id(\"@deep-foundation/core\", \"Contain\"),\r\n          from_id: parentLinkId,\r\n          to_id: linkId,\r\n          string: {\r\n            data: {\r\n              value: name,\r\n            },\r\n          },\r\n        },\r\n      });\r\n      log({ containInsertSerialOperation });\r\n      operations.push(containInsertSerialOperation);\r\n\r\n      for (let i = 0; i < value.length; i++) {\r\n        const element = value[i];\r\n        operations.push(\r\n          ...(await this.makeInsertOperationsForAnyValue({\r\n            value: element,\r\n            parentLinkId: linkId,\r\n            linkId: this.reservedLinkIds.pop()!,\r\n            name: i.toString(),\r\n          })),\r\n        );\r\n      }\r\n\r\n      return operations;\r\n    }\r\n\r\n    async makeInsertOperationsForPrimitiveValue(\r\n      options: MakeInsertOperationsForPrimitiveValueOptions,\r\n    ) {\r\n      const operations: Array<SerialOperation> = [];\r\n      const { value } = options;\r\n      if (typeof value === \"string\") {\r\n        operations.push(\r\n          ...(await this.makeInsertOperationsForStringValue({\r\n            ...options,\r\n            value,\r\n          })),\r\n        );\r\n      } else if (typeof value === \"number\") {\r\n        operations.push(\r\n          ...(await this.makeInsertOperationsForNumberValue({\r\n            ...options,\r\n            value,\r\n          })),\r\n        );\r\n      } else if (typeof value === \"boolean\") {\r\n        operations.push(\r\n          ...(await this.makeInsertOperationsForBooleanValue({\r\n            ...options,\r\n            value,\r\n          })),\r\n        );\r\n      }\r\n      return operations;\r\n    }\r\n\r\n    async makeInsertOperationsForObjectValue(\r\n      options: MakeInsertOperationsForObjectValue,\r\n    ) {\r\n      const operations: Array<SerialOperation> = [];\r\n      const { value, linkId, name, parentLinkId } = options;\r\n      const log = ObjectToLinksConverter.getLogger(\r\n        this.makeInsertOperationsForObjectValue.name,\r\n      );\r\n\r\n      const linkInsertSerialOperation = createSerialOperation({\r\n        type: \"insert\",\r\n        table: \"links\",\r\n        objects: {\r\n          id: linkId,\r\n          type_id: await deep.id(deep.linkId!, pascalCase(typeof value)),\r\n          from_id: parentLinkId,\r\n          to_id: parentLinkId,\r\n        },\r\n      });\r\n      log({ linkInsertSerialOperation });\r\n      operations.push(linkInsertSerialOperation);\r\n\r\n      const containInsertSerialOperation = createSerialOperation({\r\n        type: \"insert\",\r\n        table: \"links\",\r\n        objects: {\r\n          // TODO: Replace id with idLocal when it work properly\r\n          type_id: await deep.id(\"@deep-foundation/core\", \"Contain\"),\r\n          from_id: parentLinkId,\r\n          to_id: linkId,\r\n          string: {\r\n            data: {\r\n              value: name,\r\n            },\r\n          },\r\n        },\r\n      });\r\n      log({ containInsertSerialOperation });\r\n      operations.push(containInsertSerialOperation);\r\n\r\n      for (const [propertyKey, propertyValue] of Object.entries(value)) {\r\n        if (\r\n          typeof propertyValue !== \"string\" &&\r\n          typeof propertyValue !== \"number\" &&\r\n          typeof propertyValue !== \"boolean\" &&\r\n          !Array.isArray(propertyValue) &&\r\n          typeof propertyValue !== \"object\"\r\n        ) {\r\n          log(\r\n            `Skipping property ${propertyKey} because its type ${typeof value} is not supported`,\r\n          );\r\n          continue;\r\n        }\r\n        const propertyLinkId = this.reservedLinkIds.pop();\r\n        log({ propertyLinkId });\r\n        if (!propertyLinkId) {\r\n          throw new Error(`Not enough reserved link ids`);\r\n        }\r\n        const propertyInsertOperations =\r\n          await this.makeInsertOperationsForAnyValue({\r\n            linkId: propertyLinkId,\r\n            parentLinkId: linkId,\r\n            value: propertyValue,\r\n            name: propertyKey,\r\n          });\r\n        operations.push(...propertyInsertOperations);\r\n      }\r\n\r\n      return operations;\r\n    }\r\n\r\n    async makeInsertOperationsForAnyValue(\r\n      options: MakeInsertOperationsForAnyValueOptions,\r\n    ) {\r\n      const operations: Array<SerialOperation> = [];\r\n      const { value } = options;\r\n      const log = ObjectToLinksConverter.getLogger(\r\n        this.makeInsertOperationsForAnyValue.name,\r\n      );\r\n\r\n      if (\r\n        typeof value === \"string\" ||\r\n        typeof value === \"number\" ||\r\n        typeof value === \"boolean\"\r\n      ) {\r\n        operations.push(\r\n          ...(await this.makeInsertOperationsForPrimitiveValue({\r\n            ...options,\r\n            value,\r\n          })),\r\n        );\r\n      } else if (Array.isArray(value)) {\r\n        operations.push(\r\n          ...(await this.makeInsertOperationsForArrayValue({\r\n            ...options,\r\n            value,\r\n          })),\r\n        );\r\n      } else if (typeof value === \"object\") {\r\n        operations.push(\r\n          ...(await this.makeInsertOperationsForObjectValue({\r\n            ...options,\r\n            value,\r\n          })),\r\n        );\r\n      } else {\r\n        throw new Error(`Type of value ${typeof value} is not supported`);\r\n      }\r\n\r\n      log({ operations });\r\n      return operations;\r\n    }\r\n  }\r\n\r\n  function getObjectToLinksConverterProxy(options: {\r\n    target: ObjectToLinksConverter;\r\n    customMethods?: Record<string, Function>;\r\n  }): ObjectToLinksConverter {\r\n    const { target, customMethods } = options;\r\n\r\n    return new Proxy(target, {\r\n      get: function (obj: ObjectToLinksConverter, prop: string | symbol) {\r\n        if (customMethods && prop in customMethods) {\r\n          // If the property is in the customMethods object, return that.\r\n          return customMethods[prop as string];\r\n        }\r\n\r\n        // Otherwise, return the property from the original object.\r\n        return obj[prop as keyof ObjectToLinksConverter];\r\n      },\r\n    }) as ObjectToLinksConverter;\r\n  }\r\n\r\n  try {\r\n    const result = await main();\r\n    return {\r\n      result,\r\n      logs: logs,\r\n    };\r\n  } catch (error) {\r\n    throw {\r\n      error: util.inspect(error),\r\n      logs: logs,\r\n    };\r\n  }\r\n\r\n  async function main() {\r\n    const log = ObjectToLinksConverter.getLogger(main.name);\r\n\r\n    if (Object.keys(obj).length === 0) {\r\n      return;\r\n    }\r\n\r\n    const objectToLinksConverter = await ObjectToLinksConverter.init({\r\n      obj,\r\n      rootLinkId,\r\n      resultLinkId,\r\n    });\r\n    log({ objectToLinksConverter });\r\n\r\n    const proxiedObjectToLinksConverter = getObjectToLinksConverterProxy({\r\n      target: objectToLinksConverter,\r\n      customMethods,\r\n    });\r\n    log({ proxiedObjectToLinksConverter });\r\n\r\n    const convertResult = await proxiedObjectToLinksConverter.convert();\r\n    log({ convertResult });\r\n\r\n    return convertResult;\r\n  }\r\n\r\n  type ApplyContainTreeLinksDownToParentToMinilinksOptions = Omit<\r\n    GetContainTreeLinksDownToLinkOptions,\r\n    \"useMinilinks\"\r\n  > & {\r\n    minilinks: MinilinksResult<Link<number>>;\r\n  };\r\n\r\n  interface GetContainTreeLinksDownToLinkOptions {\r\n    linkExp: BoolExpLink;\r\n  }\r\n\r\n  type CustomMethods = {\r\n    convert: typeof ObjectToLinksConverter.prototype.convert;\r\n    makeInsertOperationsForAnyValue: typeof ObjectToLinksConverter.prototype.makeInsertOperationsForAnyValue;\r\n    makeUpdateOperationsForAnyValue: typeof ObjectToLinksConverter.prototype.makeUpdateOperationsForAnyValue;\r\n    makeInsertOperationsForPrimitiveValue: typeof ObjectToLinksConverter.prototype.makeInsertOperationsForPrimitiveValue;\r\n    makeInsertOperationsForArrayValue: typeof ObjectToLinksConverter.prototype.makeInsertOperationsForArrayValue;\r\n    makeInsertOperationsForObjectValue: typeof ObjectToLinksConverter.prototype.makeInsertOperationsForObjectValue;\r\n    makeInsertOperationsForStringValue: typeof ObjectToLinksConverter.prototype.makeInsertOperationsForStringValue;\r\n    makeInsertOperationsForNumberValue: typeof ObjectToLinksConverter.prototype.makeInsertOperationsForNumberValue;\r\n    makeInsertOperationsForBooleanValue: typeof ObjectToLinksConverter.prototype.makeInsertOperationsForBooleanValue;\r\n    makeUpdateOperationsForBooleanValue: typeof ObjectToLinksConverter.prototype.makeUpdateOperationsForBooleanValue;\r\n    makeUpdateOperationsForStringOrNumberValue: typeof ObjectToLinksConverter.prototype.makeUpdateOperationsForStringValue;\r\n    makeUpdateOperationsForArrayValue: typeof ObjectToLinksConverter.prototype.makeUpdateOperationsForArrayValue;\r\n    makeUpdateOperationsForObjectValue: typeof ObjectToLinksConverter.prototype.makeUpdateOperationsForObjectValue;\r\n    applyContainTreeLinksDownToParentToMinilinks: typeof ObjectToLinksConverter.applyContainTreeLinksDownToParentToMinilinks;\r\n    getContainTreeLinksDownToParent: typeof ObjectToLinksConverter.getContainTreeLinksDownToParent;\r\n    getLinksToReserveCount: typeof ObjectToLinksConverter.getLinksToReserveCount;\r\n    init: typeof ObjectToLinksConverter.init;\r\n  };\r\n\r\n  interface ObjectToLinksConverterOptions {\r\n    rootLink: Link<number>;\r\n    reservedLinkIds: Array<number>;\r\n    obj: Obj;\r\n    customMethods?: CustomMethods;\r\n    resultLink: Link<number>;\r\n  }\r\n\r\n  interface ObjectToLinksConverterInitOptions {\r\n    obj: Obj;\r\n    rootLinkId?: number;\r\n    customMethods?: CustomMethods;\r\n    resultLinkId?: number;\r\n  }\r\n\r\n  type AllowedPrimitive = string | number | boolean;\r\n\r\n  interface AllowedObject {\r\n    [key: string]: AllowedValue;\r\n  }\r\n\r\n  type AllowedArray = Array<AllowedValue>;\r\n\r\n  type AllowedValue = AllowedPrimitive | AllowedObject | AllowedArray;\r\n\r\n  type MakeInsertOperationsForStringOptions =\r\n    MakeInsertOperationsForValueOptions<string>;\r\n\r\n  type MakeInsertOperationsForNumberOptions =\r\n    MakeInsertOperationsForValueOptions<number>;\r\n\r\n  type MakeInsertOperationsForBooleanOptions =\r\n    MakeInsertOperationsForValueOptions<boolean>;\r\n\r\n  type MakeInsertOperationsForObjectValue =\r\n    MakeInsertOperationsForValueOptions<AllowedObject>;\r\n\r\n  type MakeInsertOperationsForArrayValueOptions =\r\n    MakeInsertOperationsForValueOptions<AllowedArray>;\r\n\r\n  type MakeInsertOperationsForPrimitiveValueOptions =\r\n    MakeInsertOperationsForValueOptions<AllowedPrimitive>;\r\n\r\n  type MakeInsertOperationsForAnyValueOptions = Omit<\r\n    MakeInsertOperationsForValueOptions<AllowedValue>,\r\n    \"typeLinkId\"\r\n  >;\r\n\r\n  type MakeInsertOperationsForValueOptions<TValue extends AllowedValue> = {\r\n    parentLinkId: number;\r\n    linkId: number;\r\n    value: TValue;\r\n    name: string;\r\n  };\r\n\r\n  interface MakeUpdateOperationsForValueOptions<TValue extends AllowedValue> {\r\n    link: Link<number>;\r\n    value: TValue;\r\n  }\r\n\r\n  type MakeUpdateOperationsForAnyValueOptions<TValue extends AllowedValue> =\r\n    MakeUpdateOperationsForValueOptions<TValue>;\r\n\r\n  type MakeUpdateOperationsForObjectValueOptions =\r\n    MakeUpdateOperationsForValueOptions<AllowedObject>;\r\n\r\n  type MakeUpdateOperationsForStringValueOptions =\r\n    MakeUpdateOperationsForValueOptions<string>;\r\n\r\n  type MakeUpdateOperationsForArrayValueOptions =\r\n    MakeUpdateOperationsForValueOptions<AllowedArray>;\r\n\r\n  type MakeUpdateOperationsForBooleanValueOptions =\r\n    MakeUpdateOperationsForValueOptions<boolean>;\r\n\r\n  type MakeUpdateOperationsForNumberValueOptions =\r\n    MakeUpdateOperationsForValueOptions<number>;\r\n};\r\n\r\ninterface Obj {\r\n  [key: string]: string | number | Obj | boolean;\r\n}\r\n",
        "link_id": 1737
      }
    },
    {
      "id": 1755,
      "type_id": 119,
      "from_id": 1752,
      "to_id": 1744
    },
    {
      "id": 1756,
      "type_id": 119,
      "from_id": 1752,
      "to_id": 1745
    },
    {
      "id": 1757,
      "type_id": 37,
      "from_id": 1752,
      "to_id": 1748
    },
    {
      "id": 1758,
      "type_id": 2,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 674,
        "value": "@deep-foundation/object-to-links-async-converter",
        "link_id": 1758
      }
    },
    {
      "id": 1770,
      "type_id": 3,
      "from_id": 1758,
      "to_id": 1734,
      "value": {
        "id": 682,
        "value": "updateHandlerTranspiledCode",
        "link_id": 1770
      }
    },
    {
      "id": 1774,
      "type_id": 3,
      "from_id": 1758,
      "to_id": 1741,
      "value": {
        "id": 686,
        "value": "parseItInsertHandlerCode",
        "link_id": 1774
      }
    },
    {
      "id": 1775,
      "type_id": 3,
      "from_id": 1758,
      "to_id": 1754,
      "value": {
        "id": 687,
        "value": "treeIncludeFromCurrentString",
        "link_id": 1775
      }
    },
    {
      "id": 1776,
      "type_id": 3,
      "from_id": 1758,
      "to_id": 1743,
      "value": {
        "id": 688,
        "value": "String",
        "link_id": 1776
      }
    },
    {
      "id": 1777,
      "type_id": 3,
      "from_id": 1758,
      "to_id": 1755,
      "value": {
        "id": 689,
        "value": "treeIncludeFromCurrentNumber",
        "link_id": 1777
      }
    },
    {
      "id": 1779,
      "type_id": 3,
      "from_id": 1758,
      "to_id": 1756,
      "value": {
        "id": 691,
        "value": "treeIncludeFromCurrentObject",
        "link_id": 1779
      }
    },
    {
      "id": 1784,
      "type_id": 3,
      "from_id": 1758,
      "to_id": 1748,
      "value": {
        "id": 696,
        "value": "HasResult",
        "link_id": 1784
      }
    },
    {
      "id": 1116,
      "type_id": 1,
      "from_id": 0,
      "to_id": 0
    },
    {
      "id": 1186,
      "type_id": 4,
      "from_id": 1184,
      "to_id": 5
    },
    {
      "id": 1187,
      "type_id": 1,
      "from_id": 0,
      "to_id": 0
    },
    {
      "id": 1189,
      "type_id": 4,
      "from_id": 1187,
      "to_id": 5
    },
    {
      "id": 1218,
      "type_id": 156,
      "from_id": 1217,
      "to_id": 1212
    },
    {
      "id": 1219,
      "type_id": 1,
      "from_id": 0,
      "to_id": 0
    },
    {
      "id": 1223,
      "type_id": 1,
      "from_id": 0,
      "to_id": 0
    },
    {
      "id": 1224,
      "type_id": 4,
      "from_id": 1223,
      "to_id": 5
    },
    {
      "id": 1240,
      "type_id": 3,
      "from_id": 1225,
      "to_id": 1208,
      "value": {
        "id": 492,
        "value": "replyInsertHandlerCode",
        "link_id": 1240
      }
    },
    {
      "id": 3986,
      "type_id": 3,
      "from_id": 2586,
      "to_id": 3983,
      "value": {
        "id": 961,
        "value": "TreeLinkDeleteComponent",
        "link_id": 3986
      }
    },
    {
      "id": 3983,
      "type_id": 717,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 1028,
        "value": "({ deep, data, require, go }) => {\n  const React = require('react');\n  const c = require('@chakra-ui/react');\n\n  const dpl = '@deep-foundation/perception-links';\n  const dc = '@deep-foundation/core';\n\n  return ({\n    go,\n\n    linkId,\n    containerId,\n\n    disclosure: _disclosure,\n    isActive,\n  }, ref) => {\n    if (!linkId) throw new Error('!linkId');\n\n    const __disclosure = c.useDisclosure();\n    const disclosure = _disclosure || __disclosure;\n\n    return <go.On do={{\n      'exec': () => disclosure.onOpen(),\n    }}>\n      <c.Button\n        ref={ref}\n        variant={isActive ? 'active' : undefined} justifyContent='center' position='relative'\n        onClick={() => go.do('exec')}\n      >\n        <c.Box position='absolute' right={1} top={1}>{true ? '🔓' : '🔒'}</c.Box>\n        <c.Text pr={1}>x</c.Text> delete\n      </c.Button>\n      <go.Component path={[dpl, 'LinkDeleteModal']} disclosure={disclosure} linkId={linkId} containerId={containerId}/>\n    </go.Provider>;\n  };\n}",
        "link_id": 3983
      }
    },
    {
      "id": 4001,
      "type_id": 717,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 1024,
        "value": "({ deep, data, require, go }) => {\n  const React = require('react');\n  const c = require('@chakra-ui/react');\n\n  const dpl = '@deep-foundation/perception-links';\n  const dc = '@deep-foundation/core';\n\n  return ({\n    go,\n\n    disclosure: _disclosure,\n\n    defaultContainerId,\n    defaultTypeId,\n    defaultFromId,\n    defaultToId,\n\n    isActive,\n  }, ref) => {\n    const __disclosure = c.useDisclosure();\n    const disclosure = _disclosure || __disclosure;\n\n    return <go.On do={{\n      'exec': () => disclosure.onOpen(),\n    }}>\n      <c.Button\n        ref={ref}\n        variant={isActive ? 'active' : undefined} justifyContent='center' position='relative'\n        onClick={() => go.do('exec')}\n      >\n        <c.Box position='absolute' right={1} top={1}>{true ? '🔓' : '🔒'}</c.Box>\n        <c.Text pr={1}>+</c.Text> insert\n      </c.Button>\n      <go.Component path={[dpl, 'LinkInsertModal']} disclosure={disclosure}\n        defaultContainerId={defaultContainerId}\n        defaultTypeId={defaultTypeId}\n        defaultFromId={defaultFromId}\n        defaultToId={defaultToId}\n      />\n    </go.On>;\n  };\n}",
        "link_id": 4001
      }
    },
    {
      "id": 4004,
      "type_id": 3,
      "from_id": 2586,
      "to_id": 4001,
      "value": {
        "id": 967,
        "value": "TreeLinkInsertComponent",
        "link_id": 4004
      }
    },
    {
      "id": 4005,
      "type_id": 35,
      "from_id": 145,
      "to_id": 4001
    },
    {
      "id": 4006,
      "type_id": 3,
      "from_id": 2586,
      "to_id": 4005,
      "value": {
        "id": 968,
        "value": "TreeLinkInsert",
        "link_id": 4006
      }
    },
    {
      "id": 1328,
      "type_id": 3,
      "from_id": 1316,
      "to_id": 1304,
      "value": {
        "id": 520,
        "value": "gpt-35-16k",
        "link_id": 1328
      }
    },
    {
      "id": 1329,
      "type_id": 3,
      "from_id": 1316,
      "to_id": 1308,
      "value": {
        "id": 521,
        "value": "gpt-4-128k-max-tokens",
        "link_id": 1329
      }
    },
    {
      "id": 1330,
      "type_id": 3,
      "from_id": 1316,
      "to_id": 1309,
      "value": {
        "id": 522,
        "value": "gpt-4-128k-providedBy",
        "link_id": 1330
      }
    },
    {
      "id": 1333,
      "type_id": 3,
      "from_id": 1316,
      "to_id": 1312,
      "value": {
        "id": 525,
        "value": "gpt-4o-providedBy",
        "link_id": 1333
      }
    },
    {
      "id": 1335,
      "type_id": 3,
      "from_id": 1316,
      "to_id": 1315,
      "value": {
        "id": 527,
        "value": "gpt-4-providedBy",
        "link_id": 1335
      }
    },
    {
      "id": 1336,
      "type_id": 3,
      "from_id": 1316,
      "to_id": 1296,
      "value": {
        "id": 528,
        "value": "gpt-4-endpoint",
        "link_id": 1336
      }
    },
    {
      "id": 1362,
      "type_id": 30,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 536,
        "value": "import librosa\r\nfrom transformers import pipeline\r\nimport requests\r\nimport io\r\nimport torch\r\nasync def fn(arg):\r\n  deep = arg['deep']\r\n  data = arg['data']\r\n\r\n  AsyncFile = await deep.id(\"@deep-foundation/core\", \"AsyncFile\")\r\n\r\n  newLink = data['newLink']\r\n\r\n  if newLink['type_id'] != AsyncFile:\r\n    return None\r\n\r\n  SyncTextFile = await deep.id(\"@deep-foundation/core\", \"SyncTextFile\")\r\n  Contain = await deep.id(\"@deep-foundation/core\", \"Contain\")\r\n\r\n  url = f\"https://{GQL_URN[:-4]}/file?linkId={newLink['id']}\" if bool(int(GQL_SSL)) else f\"http://{GQL_URN[:-4]}/file?linkId={newLink['id']}\"\r\n  print(url)\r\n  headers = {\r\n    \"Authorization\": deep.client.transport.headers['Authorization'],\r\n    \"Accept\": \"audio/\"\r\n  }\r\n\r\n  response = requests.get(url, headers=headers)\r\n  response.raise_for_status()\r\n  buffer = io.BytesIO(response.content)\r\n  audio_array, _ = librosa.load(buffer, sr=16000)\r\n\r\n  device = \"cuda:0\" if torch.cuda.is_available() else \"cpu\"\r\n  pipe = pipeline(\r\n    \"automatic-speech-recognition\",\r\n    model=\"openai/whisper-medium\",\r\n    chunk_length_s=30,\r\n    device=device,\r\n    generate_kwargs = {\"language\":\"<|ru|>\",\"task\": \"transcribe\"}\r\n  )\r\n\r\n  prediction = pipe(audio_array.copy(), batch_size=8)[\"text\"]\r\n  result = await deep.insert({\r\n    'type_id': SyncTextFile,\r\n    'string': {'data': { 'value': prediction } },\r\n    'in': { 'data': {\r\n      'type_id': Contain,\r\n      'from_id': newLink['id'],\r\n    } }\r\n  })\r\n  return result",
        "link_id": 1362
      }
    },
    {
      "id": 1363,
      "type_id": 35,
      "from_id": 1074,
      "to_id": 1362
    },
    {
      "id": 250,
      "type_id": 3,
      "from_id": 184,
      "to_id": 66,
      "value": {
        "id": 72,
        "value": "Join",
        "link_id": 250
      }
    },
    {
      "id": 251,
      "type_id": 3,
      "from_id": 184,
      "to_id": 67,
      "value": {
        "id": 73,
        "value": "joinTree",
        "link_id": 251
      }
    },
    {
      "id": 252,
      "type_id": 3,
      "from_id": 184,
      "to_id": 68,
      "value": {
        "id": 74,
        "value": "joinTreeJoin",
        "link_id": 252
      }
    },
    {
      "id": 253,
      "type_id": 3,
      "from_id": 184,
      "to_id": 69,
      "value": {
        "id": 75,
        "value": "joinTreeAny",
        "link_id": 253
      }
    },
    {
      "id": 254,
      "type_id": 3,
      "from_id": 184,
      "to_id": 70,
      "value": {
        "id": 76,
        "value": "SelectorTree",
        "link_id": 254
      }
    },
    {
      "id": 255,
      "type_id": 3,
      "from_id": 184,
      "to_id": 71,
      "value": {
        "id": 77,
        "value": "AllowAdmin",
        "link_id": 255
      }
    },
    {
      "id": 273,
      "type_id": 3,
      "from_id": 184,
      "to_id": 89,
      "value": {
        "id": 95,
        "value": "packagePublishCode",
        "link_id": 273
      }
    },
    {
      "id": 274,
      "type_id": 3,
      "from_id": 184,
      "to_id": 90,
      "value": {
        "id": 96,
        "value": "packagePublishCodeHandler",
        "link_id": 274
      }
    },
    {
      "id": 275,
      "type_id": 3,
      "from_id": 184,
      "to_id": 91,
      "value": {
        "id": 97,
        "value": "packagePublishCodeHandleInsert",
        "link_id": 275
      }
    },
    {
      "id": 276,
      "type_id": 3,
      "from_id": 184,
      "to_id": 92,
      "value": {
        "id": 98,
        "value": "Active",
        "link_id": 276
      }
    },
    {
      "id": 288,
      "type_id": 3,
      "from_id": 184,
      "to_id": 104,
      "value": {
        "id": 110,
        "value": "Route",
        "link_id": 288
      }
    },
    {
      "id": 294,
      "type_id": 3,
      "from_id": 184,
      "to_id": 110,
      "value": {
        "id": 116,
        "value": "routeTreePort",
        "link_id": 294
      }
    },
    {
      "id": 301,
      "type_id": 3,
      "from_id": 184,
      "to_id": 117,
      "value": {
        "id": 123,
        "value": "TreeIncludeIn",
        "link_id": 301
      }
    },
    {
      "id": 313,
      "type_id": 3,
      "from_id": 184,
      "to_id": 129,
      "value": {
        "id": 135,
        "value": "ruleTree",
        "link_id": 313
      }
    },
    {
      "id": 314,
      "type_id": 3,
      "from_id": 184,
      "to_id": 130,
      "value": {
        "id": 136,
        "value": "ruleTreeRule",
        "link_id": 314
      }
    },
    {
      "id": 315,
      "type_id": 3,
      "from_id": 184,
      "to_id": 131,
      "value": {
        "id": 137,
        "value": "ruleTreeRuleAction",
        "link_id": 315
      }
    },
    {
      "id": 320,
      "type_id": 3,
      "from_id": 184,
      "to_id": 136,
      "value": {
        "id": 142,
        "value": "ruleTreeRuleSelectorInclude",
        "link_id": 320
      }
    },
    {
      "id": 321,
      "type_id": 3,
      "from_id": 184,
      "to_id": 137,
      "value": {
        "id": 143,
        "value": "ruleTreeRuleSelectorExclude",
        "link_id": 321
      }
    },
    {
      "id": 322,
      "type_id": 3,
      "from_id": 184,
      "to_id": 138,
      "value": {
        "id": 144,
        "value": "ruleTreeRuleSelectorFilter",
        "link_id": 322
      }
    },
    {
      "id": 323,
      "type_id": 3,
      "from_id": 184,
      "to_id": 139,
      "value": {
        "id": 145,
        "value": "Plv8IsolationProvider",
        "link_id": 323
      }
    },
    {
      "id": 324,
      "type_id": 3,
      "from_id": 184,
      "to_id": 140,
      "value": {
        "id": 146,
        "value": "JSminiExecutionProvider",
        "link_id": 324
      }
    },
    {
      "id": 325,
      "type_id": 3,
      "from_id": 184,
      "to_id": 141,
      "value": {
        "id": 147,
        "value": "plv8SupportsJs",
        "link_id": 325
      }
    },
    {
      "id": 326,
      "type_id": 3,
      "from_id": 184,
      "to_id": 142,
      "value": {
        "id": 148,
        "value": "Authorization",
        "link_id": 326
      }
    },
    {
      "id": 327,
      "type_id": 3,
      "from_id": 184,
      "to_id": 143,
      "value": {
        "id": 149,
        "value": "GeneratedFrom",
        "link_id": 327
      }
    },
    {
      "id": 328,
      "type_id": 3,
      "from_id": 184,
      "to_id": 144,
      "value": {
        "id": 150,
        "value": "ClientJSIsolationProvider",
        "link_id": 328
      }
    },
    {
      "id": 331,
      "type_id": 3,
      "from_id": 184,
      "to_id": 147,
      "value": {
        "id": 153,
        "value": "symbolValue",
        "link_id": 331
      }
    },
    {
      "id": 339,
      "type_id": 3,
      "from_id": 184,
      "to_id": 155,
      "value": {
        "id": 161,
        "value": "handlersTreeHandleOperation",
        "link_id": 339
      }
    },
    {
      "id": 340,
      "type_id": 3,
      "from_id": 184,
      "to_id": 156,
      "value": {
        "id": 162,
        "value": "HandleClient",
        "link_id": 340
      }
    },
    {
      "id": 341,
      "type_id": 3,
      "from_id": 184,
      "to_id": 157,
      "value": {
        "id": 163,
        "value": "HandlingError",
        "link_id": 341
      }
    },
    {
      "id": 342,
      "type_id": 3,
      "from_id": 184,
      "to_id": 158,
      "value": {
        "id": 164,
        "value": "handlingErrorValue",
        "link_id": 342
      }
    },
    {
      "id": 343,
      "type_id": 3,
      "from_id": 184,
      "to_id": 159,
      "value": {
        "id": 165,
        "value": "HandlingErrorReason",
        "link_id": 343
      }
    },
    {
      "id": 344,
      "type_id": 3,
      "from_id": 184,
      "to_id": 160,
      "value": {
        "id": 166,
        "value": "HandlingErrorLink",
        "link_id": 344
      }
    },
    {
      "id": 345,
      "type_id": 3,
      "from_id": 184,
      "to_id": 161,
      "value": {
        "id": 167,
        "value": "GqlEndpoint",
        "link_id": 345
      }
    },
    {
      "id": 346,
      "type_id": 3,
      "from_id": 184,
      "to_id": 162,
      "value": {
        "id": 168,
        "value": "MainGqlEndpoint",
        "link_id": 346
      }
    },
    {
      "id": 347,
      "type_id": 3,
      "from_id": 184,
      "to_id": 163,
      "value": {
        "id": 169,
        "value": "HandleGql",
        "link_id": 347
      }
    },
    {
      "id": 365,
      "type_id": 3,
      "from_id": 184,
      "to_id": 181,
      "value": {
        "id": 187,
        "value": "promiseTreePromiseResult",
        "link_id": 365
      }
    },
    {
      "id": 572,
      "type_id": 3,
      "from_id": 553,
      "to_id": 571,
      "value": {
        "id": 222,
        "value": "PortSymbol",
        "link_id": 572
      }
    },
    {
      "id": 627,
      "type_id": 146,
      "from_id": 553,
      "to_id": 29,
      "value": {
        "id": 277,
        "value": "💾",
        "link_id": 627
      }
    },
    {
      "id": 628,
      "type_id": 3,
      "from_id": 553,
      "to_id": 627,
      "value": {
        "id": 278,
        "value": "FileSymbol",
        "link_id": 628
      }
    },
    {
      "id": 629,
      "type_id": 146,
      "from_id": 553,
      "to_id": 23,
      "value": {
        "id": 279,
        "value": "🔥",
        "link_id": 629
      }
    },
    {
      "id": 630,
      "type_id": 3,
      "from_id": 553,
      "to_id": 629,
      "value": {
        "id": 280,
        "value": "OperationSymbol",
        "link_id": 630
      }
    },
    {
      "id": 631,
      "type_id": 146,
      "from_id": 553,
      "to_id": 22,
      "value": {
        "id": 281,
        "value": "👤",
        "link_id": 631
      }
    },
    {
      "id": 632,
      "type_id": 3,
      "from_id": 553,
      "to_id": 631,
      "value": {
        "id": 282,
        "value": "UserSymbol",
        "link_id": 632
      }
    },
    {
      "id": 641,
      "type_id": 146,
      "from_id": 553,
      "to_id": 72,
      "value": {
        "id": 291,
        "value": "🪡",
        "link_id": 641
      }
    },
    {
      "id": 806,
      "type_id": 35,
      "from_id": 145,
      "to_id": 805,
      "value": {
        "id": 359,
        "value": "",
        "link_id": 806
      }
    },
    {
      "id": 834,
      "type_id": 3,
      "from_id": 813,
      "to_id": 795,
      "value": {
        "id": 383,
        "value": "Traveler",
        "link_id": 834
      }
    },
    {
      "id": 1118,
      "type_id": 1,
      "from_id": 8,
      "to_id": 8
    },
    {
      "id": 1119,
      "type_id": 1,
      "from_id": 8,
      "to_id": 8
    },
    {
      "id": 1120,
      "type_id": 36,
      "from_id": 0,
      "to_id": 0
    },
    {
      "id": 1121,
      "type_id": 39,
      "from_id": 1120,
      "to_id": 8
    },
    {
      "id": 1122,
      "type_id": 38,
      "from_id": 1120,
      "to_id": 1118
    },
    {
      "id": 1123,
      "type_id": 2,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 445,
        "value": "@deep-foundation/messaging",
        "link_id": 1123
      }
    },
    {
      "id": 1158,
      "type_id": 35,
      "from_id": 1074,
      "to_id": 1157
    },
    {
      "id": 1159,
      "type_id": 50,
      "from_id": 1116,
      "to_id": 1158
    },
    {
      "id": 1160,
      "type_id": 1145,
      "from_id": 1100,
      "to_id": 1100
    },
    {
      "id": 1161,
      "type_id": 1,
      "from_id": 8,
      "to_id": 8
    },
    {
      "id": 1231,
      "type_id": 3,
      "from_id": 1225,
      "to_id": 1224,
      "value": {
        "id": 483,
        "value": "conversationValue",
        "link_id": 1231
      }
    },
    {
      "id": 1232,
      "type_id": 3,
      "from_id": 1225,
      "to_id": 1216,
      "value": {
        "id": 484,
        "value": "ChatGPT",
        "link_id": 1232
      }
    },
    {
      "id": 1234,
      "type_id": 3,
      "from_id": 1225,
      "to_id": 1217,
      "value": {
        "id": 486,
        "value": "manager",
        "link_id": 1234
      }
    },
    {
      "id": 1235,
      "type_id": 3,
      "from_id": 1225,
      "to_id": 1220,
      "value": {
        "id": 487,
        "value": "endpointValue",
        "link_id": 1235
      }
    },
    {
      "id": 1339,
      "type_id": 3,
      "from_id": 1316,
      "to_id": 1299,
      "value": {
        "id": 531,
        "value": "gpt-4o-endpoint",
        "link_id": 1339
      }
    },
    {
      "id": 1340,
      "type_id": 3,
      "from_id": 1316,
      "to_id": 1300,
      "value": {
        "id": 532,
        "value": "gpt-4-128k-endpoint",
        "link_id": 1340
      }
    },
    {
      "id": 1341,
      "type_id": 3,
      "from_id": 1316,
      "to_id": 1313,
      "value": {
        "id": 533,
        "value": "gpt-4",
        "link_id": 1341
      }
    },
    {
      "id": 1805,
      "type_id": 30,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 667,
        "value": "async (options) => {\n    const { deep, rootLinkId, obj, customMethods, resultLinkId } = options;\n    const { createSerialOperation } = await import(\"@deep-foundation/deeplinks/imports/gql/index.js\");\n    const { pascalCase } = await import(\"case-anything\");\n    const { default: debug } = await import(\"debug\");\n    const { default: util } = await import(\"util\");\n    const logs = [];\n    const packageLog = debug(\"@deep-foundation/object-to-links-async-converter\");\n    packageLog({ options });\n    class ObjectToLinksConverter {\n        reservedLinkIds;\n        rootLink;\n        obj;\n        resultLink;\n        deep = deep;\n        static requiredPackageNames = {\n            core: \"@deep-foundation/core\",\n            boolean: \"@deep-foundation/boolean\",\n        };\n        static requiredPackagesInMinilinks = {\n            ...this.requiredPackageNames,\n            objectToLinksConverter: \"@deep-foundation/object-to-links-async-converter\",\n        };\n        constructor(options) {\n            this.rootLink = options.rootLink;\n            this.reservedLinkIds = options.reservedLinkIds;\n            this.obj = options.obj;\n            this.resultLink = options.resultLink;\n        }\n        static getLogger(namespace) {\n            const getLoggerLogger = debug(this.getLogger.name);\n            getLoggerLogger({ options });\n            const resultLogger = packageLog.extend(`${ObjectToLinksConverter.name}${namespace ? `:${namespace}` : \"\"}`);\n            resultLogger.enabled = true;\n            resultLogger.log = (...content) => {\n                logs.push(...content);\n            };\n            return resultLogger;\n        }\n        static async applyContainTreeLinksDownToParentToMinilinks(options) {\n            const log = ObjectToLinksConverter.getLogger(ObjectToLinksConverter.applyContainTreeLinksDownToParentToMinilinks\n                .name);\n            const links = (await this.getContainTreeLinksDownToParent({\n                linkExp: options.linkExp,\n            }));\n            log({ links });\n            const minilinksApplyResult = options.minilinks.apply(links.data);\n            log({ minilinksApplyResult });\n            return minilinksApplyResult;\n        }\n        static async getContainTreeLinksDownToParent(options) {\n            const log = ObjectToLinksConverter.getLogger(ObjectToLinksConverter.getContainTreeLinksDownToParent.name);\n            const { linkExp } = options;\n            const query = {\n                up: {\n                    tree_id: await deep.id(\"@deep-foundation/core\", \"containTree\"),\n                    parent: linkExp,\n                },\n            };\n            log({ query });\n            const result = await deep.select(query);\n            log({ result });\n            return result;\n        }\n        static async init(options) {\n            const log = ObjectToLinksConverter.getLogger(ObjectToLinksConverter.init.name);\n            const { obj } = options;\n            const containTreeLinksDownToCoreAndThisPackageLinkApplyMinilinksResult = await this.applyContainTreeLinksDownToParentToMinilinks({\n                linkExp: {\n                    _or: Object.values(ObjectToLinksConverter.requiredPackagesInMinilinks).map((packageName) => ({\n                        id: {\n                            _id: [packageName],\n                        },\n                    })),\n                },\n                minilinks: deep.minilinks,\n            });\n            log({ containTreeLinksDownToCoreAndThisPackageLinkApplyMinilinksResult });\n            const rootLink = options.rootLinkId\n                ? await deep.select(options.rootLinkId).then((result) => result.data[0])\n                : await deep\n                    .insert({\n                    type_id: await deep.id(deep.linkId, \"Root\"),\n                }, {\n                    returning: deep.linksSelectReturning,\n                })\n                    .then((result) => result.data[0]);\n            log({ rootLink });\n            const containTreeLinksDownToRootLinkApplyMinilinksResult = await this.applyContainTreeLinksDownToParentToMinilinks({\n                linkExp: {\n                    id: rootLink.id,\n                },\n                minilinks: deep.minilinks,\n            });\n            log({ containTreeLinksDownToRootLinkApplyMinilinksResult });\n            const linkIdsToReserveCount = this.getLinksToReserveCount({ value: obj });\n            log({ linkIdsToReserveCount });\n            const reservedLinkIds = await deep.reserve(linkIdsToReserveCount);\n            log({ reservedLinkIds });\n            const resultLink = options.resultLinkId\n                ? await deep\n                    .select(options.resultLinkId)\n                    .then((result) => result.data[0])\n                : rootLink;\n            if (options.resultLinkId && !resultLink) {\n                throw new Error(`Result link with id ${options.resultLinkId} not found`);\n            }\n            const converter = new this({\n                reservedLinkIds,\n                rootLink,\n                obj,\n                resultLink,\n            });\n            log({ converter });\n            return converter;\n        }\n        async convert() {\n            const log = ObjectToLinksConverter.getLogger(\"convert\");\n            const operations = await this.makeUpdateOperationsForObjectValue({\n                link: this.resultLink,\n                value: this.obj,\n            });\n            log({ operations });\n            const hasResultTypeLinkId = await deep.id(deep.linkId, \"HasResult\");\n            const { data: [hasResultLink], } = await deep.select({\n                type_id: hasResultTypeLinkId,\n                from_id: this.rootLink.id,\n            });\n            if (hasResultLink) {\n                operations.push(createSerialOperation({\n                    type: \"update\",\n                    table: \"links\",\n                    exp: {\n                        type_id: hasResultTypeLinkId,\n                        from_id: this.rootLink.id,\n                    },\n                    value: {\n                        to_id: this.resultLink.id,\n                    },\n                }));\n            }\n            else {\n                operations.push(createSerialOperation({\n                    type: \"insert\",\n                    table: \"links\",\n                    objects: {\n                        type_id: hasResultTypeLinkId,\n                        from_id: this.rootLink.id,\n                        to_id: this.resultLink.id,\n                    },\n                }));\n            }\n            const serialResult = await deep.serial({\n                operations,\n            });\n            log({ serialResult });\n            return {\n                serialResult,\n                rootLinkId: this.rootLink.id,\n                resultLinkId: this.resultLink.id,\n            };\n        }\n        static getLinksToReserveCount(options) {\n            const { value } = options;\n            const log = ObjectToLinksConverter.getLogger(ObjectToLinksConverter.getLinksToReserveCount.name);\n            let count = 0;\n            const typeOfValue = typeof value;\n            log({ typeOfValue });\n            const reservedLinksCountForOneLink = 1 +\n                1;\n            if (typeOfValue === \"string\") {\n                count = reservedLinksCountForOneLink;\n            }\n            else if (typeOfValue === \"number\") {\n                count = reservedLinksCountForOneLink;\n            }\n            else if (typeOfValue === \"boolean\") {\n                count = reservedLinksCountForOneLink;\n            }\n            else if (Array.isArray(value)) {\n                const array = value;\n                for (const arrayValue of array) {\n                    if (!arrayValue)\n                        return count;\n                    count += this.getLinksToReserveCount({ value: arrayValue });\n                }\n            }\n            else if (typeOfValue === \"object\") {\n                count += reservedLinksCountForOneLink;\n                for (const [propertyKey, propertyValue] of Object.entries(value)) {\n                    if (!value)\n                        return count;\n                    count += this.getLinksToReserveCount({ value: propertyValue });\n                }\n            }\n            log({ count });\n            return count;\n        }\n        async makeUpdateOperationsForBooleanValue(options) {\n            const log = ObjectToLinksConverter.getLogger(this.makeUpdateOperationsForBooleanValue.name);\n            log({ options });\n            const { link, value } = options;\n            const operations = [];\n            operations.push(createSerialOperation({\n                type: \"update\",\n                table: \"links\",\n                exp: {\n                    id: link.id,\n                },\n                value: {\n                    to_id: await deep.id(ObjectToLinksConverter.requiredPackageNames.boolean, value.toString()),\n                },\n            }));\n            log({ operations });\n            return operations;\n        }\n        async makeUpdateOperationsForStringValue(options) {\n            const log = ObjectToLinksConverter.getLogger(this.makeUpdateOperationsForStringValue.name);\n            log({ options });\n            const { link, value } = options;\n            const operations = [];\n            operations.push(createSerialOperation({\n                type: \"update\",\n                table: `strings`,\n                exp: {\n                    link_id: link.id,\n                },\n                value: {\n                    value: value,\n                },\n            }));\n            log({ operations });\n            return operations;\n        }\n        async makeUpdateOperationsForNumberValue(options) {\n            const log = ObjectToLinksConverter.getLogger(this.makeUpdateOperationsForNumberValue.name);\n            log({ options });\n            const { link, value } = options;\n            const operations = [];\n            operations.push(createSerialOperation({\n                type: \"update\",\n                table: `numbers`,\n                exp: {\n                    link_id: link.id,\n                },\n                value: {\n                    value: value,\n                },\n            }));\n            log({ operations });\n            return operations;\n        }\n        async makeUpdateOperationsForArrayValue(options) {\n            const log = ObjectToLinksConverter.getLogger(this.makeUpdateOperationsForAnyValue.name);\n            const { link, value } = options;\n            const operations = [];\n            await deep.delete({\n                up: {\n                    tree_id: await deep.id(ObjectToLinksConverter.requiredPackagesInMinilinks.core, \"ContainTree\"),\n                    parent_id: link.id,\n                },\n            });\n            for (let i = 0; i < value.length; i++) {\n                const element = value[i];\n                operations.push(...(await this.makeInsertOperationsForAnyValue({\n                    value: element,\n                    linkId: this.reservedLinkIds.pop(),\n                    name: i.toString(0),\n                    parentLinkId: link.id,\n                })));\n            }\n            return operations;\n        }\n        async makeUpdateOperationsForAnyValue(options) {\n            const log = ObjectToLinksConverter.getLogger(this.makeUpdateOperationsForAnyValue.name);\n            const { link, value } = options;\n            const operations = [];\n            if (typeof value === \"boolean\") {\n                operations.push(...(await this.makeUpdateOperationsForBooleanValue({\n                    ...options,\n                    value,\n                })));\n            }\n            else if (typeof value === \"string\") {\n                operations.push(...(await this.makeUpdateOperationsForStringValue({\n                    ...options,\n                    value,\n                })));\n            }\n            else if (typeof value === \"number\") {\n                operations.push(...(await this.makeUpdateOperationsForNumberValue({\n                    ...options,\n                    value,\n                })));\n            }\n            else if (Array.isArray(value)) {\n                operations.push(...(await this.makeUpdateOperationsForArrayValue({\n                    ...options,\n                    value,\n                })));\n            }\n            else if (typeof value === \"object\") {\n                operations.push(...(await this.makeUpdateOperationsForObjectValue({\n                    ...options,\n                    value,\n                })));\n            }\n            else {\n                throw new Error(`Type of value ${typeof value} is not supported`);\n            }\n            return operations;\n        }\n        async makeUpdateOperationsForObjectValue(options) {\n            const log = ObjectToLinksConverter.getLogger(this.makeUpdateOperationsForObjectValue.name);\n            const { link, value } = options;\n            log({ options });\n            const operations = [];\n            for (const [propertyKey, propertyValue] of Object.entries(value)) {\n                log({ propertyKey, propertyValue });\n                const [propertyLink] = deep.minilinks.query({\n                    id: {\n                        _id: [link.id, propertyKey],\n                    },\n                });\n                log({ propertyLink });\n                if (propertyLink) {\n                    let propertyUpdateOperations = [];\n                    propertyUpdateOperations = await this.makeUpdateOperationsForAnyValue({\n                        link: propertyLink,\n                        value: propertyValue,\n                    });\n                    log({ propertyUpdateOperations });\n                    operations.push(...propertyUpdateOperations);\n                }\n                else {\n                    if (typeof propertyValue !== \"string\" &&\n                        typeof propertyValue !== \"number\" &&\n                        typeof propertyValue !== \"boolean\" &&\n                        !Array.isArray(propertyValue) &&\n                        typeof propertyValue !== \"object\") {\n                        log(`Skipping property ${propertyKey} because its type ${typeof value} is not supported`);\n                        continue;\n                    }\n                    log(\"TEMPORARY! REMOVE THIS!\");\n                    log(`minilinks.links`, deep.minilinks.links);\n                    log(`package link`, deep.minilinks.query({\n                        id: deep.linkId,\n                    }));\n                    log(`contain to string`, deep.minilinks.query({\n                        type_id: await deep.id(\"@deep-foundation/core\", \"Contain\"),\n                        string: {\n                            value: \"String\",\n                        },\n                        from_id: deep.linkId,\n                    }));\n                    log(`contain to string`, deep.minilinks.query({\n                        id: {\n                            _id: [deep.linkId, \"String\"],\n                        },\n                    }));\n                    const propertyLinkId = this.reservedLinkIds.pop();\n                    log({ propertyLinkId });\n                    if (!propertyLinkId) {\n                        throw new Error(`Not enough reserved link ids`);\n                    }\n                    const propertyInsertOperations = await this.makeInsertOperationsForAnyValue({\n                        linkId: propertyLinkId,\n                        parentLinkId: link.id,\n                        value: propertyValue,\n                        name: propertyKey,\n                    });\n                    log({ propertyInsertOperations });\n                    operations.push(...propertyInsertOperations);\n                }\n                log({ operations });\n            }\n            return operations;\n        }\n        async makeInsertOperationsForBooleanValue(options) {\n            const operations = [];\n            const { value, parentLinkId, linkId, name } = options;\n            const log = ObjectToLinksConverter.getLogger(this.makeInsertOperationsForBooleanValue.name);\n            const linkInsertSerialOperation = createSerialOperation({\n                type: \"insert\",\n                table: \"links\",\n                objects: {\n                    id: linkId,\n                    type_id: await deep.id(deep.linkId, pascalCase(typeof value)),\n                    from_id: parentLinkId,\n                    to_id: await deep.id(ObjectToLinksConverter.requiredPackageNames.boolean, value.toString()),\n                },\n            });\n            log({ linkInsertSerialOperation });\n            operations.push(linkInsertSerialOperation);\n            const containInsertSerialOperation = createSerialOperation({\n                type: \"insert\",\n                table: \"links\",\n                objects: {\n                    type_id: await deep.id(\"@deep-foundation/core\", \"Contain\"),\n                    from_id: parentLinkId,\n                    to_id: linkId,\n                    string: {\n                        data: {\n                            value: name,\n                        },\n                    },\n                },\n            });\n            log({ containInsertSerialOperation });\n            operations.push(containInsertSerialOperation);\n            log({ operations });\n            return operations;\n        }\n        async makeInsertOperationsForStringValue(options) {\n            const operations = [];\n            const { value, parentLinkId, linkId, name } = options;\n            const log = ObjectToLinksConverter.getLogger(\"makeInsertOperationsForStringValue\");\n            const linkInsertSerialOperation = createSerialOperation({\n                type: \"insert\",\n                table: \"links\",\n                objects: {\n                    id: linkId,\n                    from_id: parentLinkId,\n                    to_id: parentLinkId,\n                    type_id: await deep.id(deep.linkId, pascalCase(typeof value)),\n                },\n            });\n            log({ linkInsertSerialOperation });\n            operations.push(linkInsertSerialOperation);\n            const stringValueInsertSerialOperation = createSerialOperation({\n                type: \"insert\",\n                table: `${typeof value}s`,\n                objects: {\n                    link_id: linkId,\n                    value: value,\n                },\n            });\n            log({ stringValueInsertSerialOperation });\n            operations.push(stringValueInsertSerialOperation);\n            const containInsertSerialOperation = createSerialOperation({\n                type: \"insert\",\n                table: \"links\",\n                objects: {\n                    type_id: await deep.id(\"@deep-foundation/core\", \"Contain\"),\n                    from_id: parentLinkId,\n                    to_id: linkId,\n                    string: {\n                        data: {\n                            value: name,\n                        },\n                    },\n                },\n            });\n            log({ containInsertSerialOperation });\n            operations.push(containInsertSerialOperation);\n            log({ operations });\n            return operations;\n        }\n        async makeInsertOperationsForNumberValue(options) {\n            const operations = [];\n            const { value, parentLinkId, linkId, name } = options;\n            const log = ObjectToLinksConverter.getLogger(\"makeInsertOperationsForStringValue\");\n            const linkInsertSerialOperation = createSerialOperation({\n                type: \"insert\",\n                table: \"links\",\n                objects: {\n                    id: linkId,\n                    from_id: parentLinkId,\n                    to_id: parentLinkId,\n                    type_id: await deep.id(deep.linkId, pascalCase(typeof value)),\n                },\n            });\n            log({ linkInsertSerialOperation });\n            operations.push(linkInsertSerialOperation);\n            const stringValueInsertSerialOperation = createSerialOperation({\n                type: \"insert\",\n                table: `${typeof value}s`,\n                objects: {\n                    link_id: linkId,\n                    value: value,\n                },\n            });\n            log({ stringValueInsertSerialOperation });\n            operations.push(stringValueInsertSerialOperation);\n            const containInsertSerialOperation = createSerialOperation({\n                type: \"insert\",\n                table: \"links\",\n                objects: {\n                    type_id: await deep.id(\"@deep-foundation/core\", \"Contain\"),\n                    from_id: parentLinkId,\n                    to_id: linkId,\n                    string: {\n                        data: {\n                            value: name,\n                        },\n                    },\n                },\n            });\n            log({ containInsertSerialOperation });\n            operations.push(containInsertSerialOperation);\n            log({ operations });\n            return operations;\n        }\n        async makeInsertOperationsForArrayValue(options) {\n            const operations = [];\n            const { value, linkId, name, parentLinkId } = options;\n            const log = ObjectToLinksConverter.getLogger(\"makeInsertOperationsForStringValue\");\n            const linkInsertSerialOperation = createSerialOperation({\n                type: \"insert\",\n                table: \"links\",\n                objects: {\n                    id: linkId,\n                    type_id: await deep.id(deep.linkId, pascalCase(typeof value)),\n                    from_id: parentLinkId,\n                    to_id: parentLinkId,\n                },\n            });\n            log({ linkInsertSerialOperation });\n            operations.push(linkInsertSerialOperation);\n            const containInsertSerialOperation = createSerialOperation({\n                type: \"insert\",\n                table: \"links\",\n                objects: {\n                    type_id: await deep.id(\"@deep-foundation/core\", \"Contain\"),\n                    from_id: parentLinkId,\n                    to_id: linkId,\n                    string: {\n                        data: {\n                            value: name,\n                        },\n                    },\n                },\n            });\n            log({ containInsertSerialOperation });\n            operations.push(containInsertSerialOperation);\n            for (let i = 0; i < value.length; i++) {\n                const element = value[i];\n                operations.push(...(await this.makeInsertOperationsForAnyValue({\n                    value: element,\n                    parentLinkId: linkId,\n                    linkId: this.reservedLinkIds.pop(),\n                    name: i.toString(),\n                })));\n            }\n            return operations;\n        }\n        async makeInsertOperationsForPrimitiveValue(options) {\n            const operations = [];\n            const { value } = options;\n            if (typeof value === \"string\") {\n                operations.push(...(await this.makeInsertOperationsForStringValue({\n                    ...options,\n                    value,\n                })));\n            }\n            else if (typeof value === \"number\") {\n                operations.push(...(await this.makeInsertOperationsForNumberValue({\n                    ...options,\n                    value,\n                })));\n            }\n            else if (typeof value === \"boolean\") {\n                operations.push(...(await this.makeInsertOperationsForBooleanValue({\n                    ...options,\n                    value,\n                })));\n            }\n            return operations;\n        }\n        async makeInsertOperationsForObjectValue(options) {\n            const operations = [];\n            const { value, linkId, name, parentLinkId } = options;\n            const log = ObjectToLinksConverter.getLogger(this.makeInsertOperationsForObjectValue.name);\n            const linkInsertSerialOperation = createSerialOperation({\n                type: \"insert\",\n                table: \"links\",\n                objects: {\n                    id: linkId,\n                    type_id: await deep.id(deep.linkId, pascalCase(typeof value)),\n                    from_id: parentLinkId,\n                    to_id: parentLinkId,\n                },\n            });\n            log({ linkInsertSerialOperation });\n            operations.push(linkInsertSerialOperation);\n            const containInsertSerialOperation = createSerialOperation({\n                type: \"insert\",\n                table: \"links\",\n                objects: {\n                    type_id: await deep.id(\"@deep-foundation/core\", \"Contain\"),\n                    from_id: parentLinkId,\n                    to_id: linkId,\n                    string: {\n                        data: {\n                            value: name,\n                        },\n                    },\n                },\n            });\n            log({ containInsertSerialOperation });\n            operations.push(containInsertSerialOperation);\n            for (const [propertyKey, propertyValue] of Object.entries(value)) {\n                if (typeof propertyValue !== \"string\" &&\n                    typeof propertyValue !== \"number\" &&\n                    typeof propertyValue !== \"boolean\" &&\n                    !Array.isArray(propertyValue) &&\n                    typeof propertyValue !== \"object\") {\n                    log(`Skipping property ${propertyKey} because its type ${typeof value} is not supported`);\n                    continue;\n                }\n                const propertyLinkId = this.reservedLinkIds.pop();\n                log({ propertyLinkId });\n                if (!propertyLinkId) {\n                    throw new Error(`Not enough reserved link ids`);\n                }\n                const propertyInsertOperations = await this.makeInsertOperationsForAnyValue({\n                    linkId: propertyLinkId,\n                    parentLinkId: linkId,\n                    value: propertyValue,\n                    name: propertyKey,\n                });\n                operations.push(...propertyInsertOperations);\n            }\n            return operations;\n        }\n        async makeInsertOperationsForAnyValue(options) {\n            const operations = [];\n            const { value } = options;\n            const log = ObjectToLinksConverter.getLogger(this.makeInsertOperationsForAnyValue.name);\n            if (typeof value === \"string\" ||\n                typeof value === \"number\" ||\n                typeof value === \"boolean\") {\n                operations.push(...(await this.makeInsertOperationsForPrimitiveValue({\n                    ...options,\n                    value,\n                })));\n            }\n            else if (Array.isArray(value)) {\n                operations.push(...(await this.makeInsertOperationsForArrayValue({\n                    ...options,\n                    value,\n                })));\n            }\n            else if (typeof value === \"object\") {\n                operations.push(...(await this.makeInsertOperationsForObjectValue({\n                    ...options,\n                    value,\n                })));\n            }\n            else {\n                throw new Error(`Type of value ${typeof value} is not supported`);\n            }\n            log({ operations });\n            return operations;\n        }\n    }\n    function getObjectToLinksConverterProxy(options) {\n        const { target, customMethods } = options;\n        return new Proxy(target, {\n            get: function (obj, prop) {\n                if (customMethods && prop in customMethods) {\n                    return customMethods[prop];\n                }\n                return obj[prop];\n            },\n        });\n    }\n    try {\n        const result = await main();\n        return {\n            result,\n            logs: logs,\n        };\n    }\n    catch (error) {\n        throw {\n            error: util.inspect(error),\n            logs: logs,\n        };\n    }\n    async function main() {\n        const log = ObjectToLinksConverter.getLogger(main.name);\n        if (Object.keys(obj).length === 0) {\n            return;\n        }\n        const objectToLinksConverter = await ObjectToLinksConverter.init({\n            obj,\n            rootLinkId,\n            resultLinkId,\n        });\n        log({ objectToLinksConverter });\n        const proxiedObjectToLinksConverter = getObjectToLinksConverterProxy({\n            target: objectToLinksConverter,\n            customMethods,\n        });\n        log({ proxiedObjectToLinksConverter });\n        const convertResult = await proxiedObjectToLinksConverter.convert();\n        log({ convertResult });\n        return convertResult;\n    }\n};\nexport {};\n//# sourceMappingURL=data:application/json;base64,",
        "link_id": 1805
      }
    },
    {
      "id": 1806,
      "type_id": 3,
      "from_id": 1737,
      "to_id": 1805,
      "value": {
        "id": 666,
        "value": "generated",
        "link_id": 1806
      }
    },
    {
      "id": 1807,
      "type_id": 143,
      "from_id": 1805,
      "to_id": 1737
    },
    {
      "id": 1808,
      "type_id": 3,
      "from_id": 1737,
      "to_id": 1807
    },
    {
      "id": 1764,
      "type_id": 3,
      "from_id": 1758,
      "to_id": 1753,
      "value": {
        "id": 676,
        "value": "treeIncludeFromCurrentBoolean",
        "link_id": 1764
      }
    },
    {
      "id": 1911,
      "type_id": 717,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 725,
        "value": "async ({ deep, data: { newLink, oldLink } }) => {\n    await deep.unsafe.hasura.query({\n        type: 'untrack_table',\n        args: {\n            table: {\n                schema: 'public',\n                name: `semantic`,\n            },\n            cascade: true,\n        },\n    });\n    await deep.unsafe.hasura.sql(`\ndrop view semantic;\ndrop view semantic_types;\n    `);\n}",
        "link_id": 1911
      }
    },
    {
      "id": 1943,
      "type_id": 30,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 727,
        "value": "async ({ deep, data: { newLink, oldLink } }) => {\n    await deep.unsafe.hasura.query({\n        type: 'untrack_table',\n        args: {\n            table: {\n                schema: 'public',\n                name: `semantic`,\n            },\n            cascade: true,\n        },\n    });\n    await deep.unsafe.hasura.sql(`\ndrop view semantic;\ndrop view semantic_types;\n    `);\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsibW9kdWxlLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxLQUFLLEVBQUUsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLEVBQUUsT0FBTyxFQUFFLE9BQU8sRUFBRSxFQUFFLEVBQUUsRUFBRTtJQUMzQyxNQUFNLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQztRQUMzQixJQUFJLEVBQUUsZUFBZTtRQUNyQixJQUFJLEVBQUU7WUFDRixLQUFLLEVBQUU7Z0JBQ0gsTUFBTSxFQUFFLFFBQVE7Z0JBQ2hCLElBQUksRUFBRSxVQUFVO2FBQ25CO1lBQ0QsT0FBTyxFQUFFLElBQUk7U0FDaEI7S0FDSixDQUFDLENBQUM7SUFDSCxNQUFNLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQzs7O0tBRzVCLENBQUMsQ0FBQztBQUNQLENBQUMsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbImFzeW5jICh7IGRlZXAsIGRhdGE6IHsgbmV3TGluaywgb2xkTGluayB9IH0pID0+IHtcbiAgICBhd2FpdCBkZWVwLnVuc2FmZS5oYXN1cmEucXVlcnkoe1xuICAgICAgICB0eXBlOiAndW50cmFja190YWJsZScsXG4gICAgICAgIGFyZ3M6IHtcbiAgICAgICAgICAgIHRhYmxlOiB7XG4gICAgICAgICAgICAgICAgc2NoZW1hOiAncHVibGljJyxcbiAgICAgICAgICAgICAgICBuYW1lOiBgc2VtYW50aWNgLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGNhc2NhZGU6IHRydWUsXG4gICAgICAgIH0sXG4gICAgfSk7XG4gICAgYXdhaXQgZGVlcC51bnNhZmUuaGFzdXJhLnNxbChgXG5kcm9wIHZpZXcgc2VtYW50aWM7XG5kcm9wIHZpZXcgc2VtYW50aWNfdHlwZXM7XG4gICAgYCk7XG59Il19",
        "link_id": 1943
      }
    },
    {
      "id": 1944,
      "type_id": 3,
      "from_id": 1911,
      "to_id": 1943,
      "value": {
        "id": 726,
        "value": "generated",
        "link_id": 1944
      }
    },
    {
      "id": 1945,
      "type_id": 143,
      "from_id": 1943,
      "to_id": 1911
    },
    {
      "id": 1946,
      "type_id": 3,
      "from_id": 1911,
      "to_id": 1945
    },
    {
      "id": 1912,
      "type_id": 35,
      "from_id": 83,
      "to_id": 1911
    },
    {
      "id": 1913,
      "type_id": 717,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 728,
        "value": "async ({ deep, data: { newLink, oldLink } }) => {\n    await deep.unsafe.hasura.sql(`\nCREATE OR REPLACE VIEW \"public\".\"semantic_types\" AS \n  SELECT\n    instance.id AS id,\n    instance.type_id AS type_id,\n    instance.from_id AS from_id,\n    (CASE WHEN instance.from_id = 0 THEN 0 ELSE (\n      SELECT type_id FROM links WHERE id = instance.from_id\n    ) END) as type_from_id,\n    instance.to_id AS to_id,\n    (CASE WHEN instance.from_id = 0 THEN 0 ELSE (\n      SELECT type_id FROM links WHERE id = instance.to_id\n    ) END) as type_to_id\n  FROM\n    links instance\n  WHERE instance.type_id != 0\n ;\n    `);\n    await deep.unsafe.hasura.sql(`\nCREATE OR REPLACE VIEW \"public\".\"semantic\" AS \n  SELECT DISTINCT ON (cst.type_id, cst.type_from_id, cst.type_to_id)\n    cst.type_id as type_id, cst.type_from_id as type_from_id, cst.type_to_id as type_to_id,\n    (\n      SELECT count(*) FROM semantic_types as st WHERE\n      st.type_id = cst.type_id AND\n      st.type_from_id = cst.type_from_id AND\n      st.type_to_id = cst.type_to_id\n    ) AS count\n  FROM semantic_types as cst\n;\n    `);\n    await deep.unsafe.hasura.query({\n        type: 'track_table',\n        args: {\n            schema: 'public',\n            name: `semantic`,\n        },\n    });\n    return 'ok';\n}",
        "link_id": 1913
      }
    },
    {
      "id": 1952,
      "type_id": 30,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 730,
        "value": "async ({ deep, data: { newLink, oldLink } }) => {\n    await deep.unsafe.hasura.sql(`\nCREATE OR REPLACE VIEW \"public\".\"semantic_types\" AS \n  SELECT\n    instance.id AS id,\n    instance.type_id AS type_id,\n    instance.from_id AS from_id,\n    (CASE WHEN instance.from_id = 0 THEN 0 ELSE (\n      SELECT type_id FROM links WHERE id = instance.from_id\n    ) END) as type_from_id,\n    instance.to_id AS to_id,\n    (CASE WHEN instance.from_id = 0 THEN 0 ELSE (\n      SELECT type_id FROM links WHERE id = instance.to_id\n    ) END) as type_to_id\n  FROM\n    links instance\n  WHERE instance.type_id != 0\n ;\n    `);\n    await deep.unsafe.hasura.sql(`\nCREATE OR REPLACE VIEW \"public\".\"semantic\" AS \n  SELECT DISTINCT ON (cst.type_id, cst.type_from_id, cst.type_to_id)\n    cst.type_id as type_id, cst.type_from_id as type_from_id, cst.type_to_id as type_to_id,\n    (\n      SELECT count(*) FROM semantic_types as st WHERE\n      st.type_id = cst.type_id AND\n      st.type_from_id = cst.type_from_id AND\n      st.type_to_id = cst.type_to_id\n    ) AS count\n  FROM semantic_types as cst\n;\n    `);\n    await deep.unsafe.hasura.query({\n        type: 'track_table',\n        args: {\n            schema: 'public',\n            name: `semantic`,\n        },\n    });\n    return 'ok';\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsibW9kdWxlLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxLQUFLLEVBQUUsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLEVBQUUsT0FBTyxFQUFFLE9BQU8sRUFBRSxFQUFFLEVBQUUsRUFBRTtJQUMzQyxNQUFNLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7Ozs7S0FpQjVCLENBQUMsQ0FBQztJQUNILE1BQU0sSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDOzs7Ozs7Ozs7Ozs7S0FZNUIsQ0FBQyxDQUFDO0lBQ0gsTUFBTSxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUM7UUFDM0IsSUFBSSxFQUFFLGFBQWE7UUFDbkIsSUFBSSxFQUFFO1lBQ0YsTUFBTSxFQUFFLFFBQVE7WUFDaEIsSUFBSSxFQUFFLFVBQVU7U0FDbkI7S0FDSixDQUFDLENBQUM7SUFDSCxPQUFPLElBQUksQ0FBQztBQUNoQixDQUFDLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJhc3luYyAoeyBkZWVwLCBkYXRhOiB7IG5ld0xpbmssIG9sZExpbmsgfSB9KSA9PiB7XG4gICAgYXdhaXQgZGVlcC51bnNhZmUuaGFzdXJhLnNxbChgXG5DUkVBVEUgT1IgUkVQTEFDRSBWSUVXIFwicHVibGljXCIuXCJzZW1hbnRpY190eXBlc1wiIEFTIFxuICBTRUxFQ1RcbiAgICBpbnN0YW5jZS5pZCBBUyBpZCxcbiAgICBpbnN0YW5jZS50eXBlX2lkIEFTIHR5cGVfaWQsXG4gICAgaW5zdGFuY2UuZnJvbV9pZCBBUyBmcm9tX2lkLFxuICAgIChDQVNFIFdIRU4gaW5zdGFuY2UuZnJvbV9pZCA9IDAgVEhFTiAwIEVMU0UgKFxuICAgICAgU0VMRUNUIHR5cGVfaWQgRlJPTSBsaW5rcyBXSEVSRSBpZCA9IGluc3RhbmNlLmZyb21faWRcbiAgICApIEVORCkgYXMgdHlwZV9mcm9tX2lkLFxuICAgIGluc3RhbmNlLnRvX2lkIEFTIHRvX2lkLFxuICAgIChDQVNFIFdIRU4gaW5zdGFuY2UuZnJvbV9pZCA9IDAgVEhFTiAwIEVMU0UgKFxuICAgICAgU0VMRUNUIHR5cGVfaWQgRlJPTSBsaW5rcyBXSEVSRSBpZCA9IGluc3RhbmNlLnRvX2lkXG4gICAgKSBFTkQpIGFzIHR5cGVfdG9faWRcbiAgRlJPTVxuICAgIGxpbmtzIGluc3RhbmNlXG4gIFdIRVJFIGluc3RhbmNlLnR5cGVfaWQgIT0gMFxuIDtcbiAgICBgKTtcbiAgICBhd2FpdCBkZWVwLnVuc2FmZS5oYXN1cmEuc3FsKGBcbkNSRUFURSBPUiBSRVBMQUNFIFZJRVcgXCJwdWJsaWNcIi5cInNlbWFudGljXCIgQVMgXG4gIFNFTEVDVCBESVNUSU5DVCBPTiAoY3N0LnR5cGVfaWQsIGNzdC50eXBlX2Zyb21faWQsIGNzdC50eXBlX3RvX2lkKVxuICAgIGNzdC50eXBlX2lkIGFzIHR5cGVfaWQsIGNzdC50eXBlX2Zyb21faWQgYXMgdHlwZV9mcm9tX2lkLCBjc3QudHlwZV90b19pZCBhcyB0eXBlX3RvX2lkLFxuICAgIChcbiAgICAgIFNFTEVDVCBjb3VudCgqKSBGUk9NIHNlbWFudGljX3R5cGVzIGFzIHN0IFdIRVJFXG4gICAgICBzdC50eXBlX2lkID0gY3N0LnR5cGVfaWQgQU5EXG4gICAgICBzdC50eXBlX2Zyb21faWQgPSBjc3QudHlwZV9mcm9tX2lkIEFORFxuICAgICAgc3QudHlwZV90b19pZCA9IGNzdC50eXBlX3RvX2lkXG4gICAgKSBBUyBjb3VudFxuICBGUk9NIHNlbWFudGljX3R5cGVzIGFzIGNzdFxuO1xuICAgIGApO1xuICAgIGF3YWl0IGRlZXAudW5zYWZlLmhhc3VyYS5xdWVyeSh7XG4gICAgICAgIHR5cGU6ICd0cmFja190YWJsZScsXG4gICAgICAgIGFyZ3M6IHtcbiAgICAgICAgICAgIHNjaGVtYTogJ3B1YmxpYycsXG4gICAgICAgICAgICBuYW1lOiBgc2VtYW50aWNgLFxuICAgICAgICB9LFxuICAgIH0pO1xuICAgIHJldHVybiAnb2snO1xufSJdfQ==",
        "link_id": 1952
      }
    },
    {
      "id": 1953,
      "type_id": 3,
      "from_id": 1913,
      "to_id": 1952,
      "value": {
        "id": 729,
        "value": "generated",
        "link_id": 1953
      }
    },
    {
      "id": 1954,
      "type_id": 143,
      "from_id": 1952,
      "to_id": 1913
    },
    {
      "id": 1955,
      "type_id": 3,
      "from_id": 1913,
      "to_id": 1954
    },
    {
      "id": 1916,
      "type_id": 1,
      "from_id": 0,
      "to_id": 0
    },
    {
      "id": 1917,
      "type_id": 1,
      "from_id": 0,
      "to_id": 0
    },
    {
      "id": 1918,
      "type_id": 51,
      "from_id": 1917,
      "to_id": 1912
    },
    {
      "id": 1919,
      "type_id": 49,
      "from_id": 1917,
      "to_id": 1914
    },
    {
      "id": 1920,
      "type_id": 2,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 731,
        "value": "@deep-foundation/semantic",
        "link_id": 1920
      }
    },
    {
      "id": 1931,
      "type_id": 3,
      "from_id": 1920,
      "to_id": 1919,
      "value": {
        "id": 738,
        "value": "HandleInsert",
        "link_id": 1931
      }
    },
    {
      "id": 1932,
      "type_id": 3,
      "from_id": 1920,
      "to_id": 1914,
      "value": {
        "id": 739,
        "value": "InsertHandler",
        "link_id": 1932
      }
    },
    {
      "id": 1933,
      "type_id": 3,
      "from_id": 1920,
      "to_id": 1913,
      "value": {
        "id": 740,
        "value": "onInsert",
        "link_id": 1933
      }
    },
    {
      "id": 1914,
      "type_id": 35,
      "from_id": 83,
      "to_id": 1913
    },
    {
      "id": 1915,
      "type_id": 1,
      "from_id": 0,
      "to_id": 0
    },
    {
      "id": 5646,
      "type_id": 717,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 1357,
        "value": "async ({ deep, data, Go, require }) => {\n  const { GrClear } = require(\"react-icons/gr\");\n  const React = require('react');\n  const c = require('@chakra-ui/react');\n  const _ = require('lodash');\n  const { useDebounceCallback } = require('@react-hook/debounce');\n\n  const dpl = '@deep-foundation/perception-links';\n  const dc = '@deep-foundation/core';\n\n  const Contain = deep.idLocal(dc, 'Contain');\n  const containTree = deep.idLocal(dc, 'containTree');\n  const TreeLinkButton = deep.idLocal(dpl, 'TreeLinkButton');\n  const History = deep.idLocal(dpl, 'History');\n  const HistoryHandler = deep.idLocal(dpl, 'HistoryHandler');\n  const Menu = deep.idLocal(dpl, 'Menu');\n  const Stack = deep.idLocal(dpl, 'Stack');\n  const FinderButton = deep.idLocal(dpl, 'FinderButton');\n  \n  const Item = ({ link, isActive, isConcentrated }) => {\n    const go = Go.useGo();\n    return <Go.Handler\n      handlerId={TreeLinkButton}\n      linkId={link.id}\n      isActive={isActive}\n      minW={isConcentrated === false ? '3em' : '8em'} h='100%' maxH='100%' variant='short'\n      isConcentrated={isConcentrated}\n    />;\n  };\n  \n  return ({\n    go,\n\n    using = false,\n  }, ref) => {\n    const { data: history } = deep.useSubscription({\n      type_id: History,\n      from_id: deep.linkId,\n      order_by: { id: 'desc' },\n      limit: 30,\n      return: {\n        item: { relation: 'to' },\n      },\n    });\n\n    const [concentrate, setConcentrate] = React.useState('');\n    const concetrateDebounce = useDebounceCallback((concentrate) => {\n      go.root().do('concentrate', { value: concentrate });\n    }, 500);\n    React.useEffect(() => {\n      concetrateDebounce(concentrate);\n    }, [concentrate]);\n\n    const { data: items, ids } = React.useMemo(() => {\n      const _ids = [];\n      const filtered = _.uniqBy(history.map(h => h?.to), (l) => l?.id).filter(l => {\n        if (!!l?.id) _ids.push(l?.id);\n        return !!l?.id;\n      });\n      return { data: filtered, ids: _ids };\n    }, [history];\n\n    const nav = go.useNav();\n    nav(FinderButton, FinderButton, FinderButton, Stack, 'down');\n    nav(Stack, FinderButton, Stack, 'clear', 'down');\n    nav('clear', Stack, 'clear', 'clear', 'down');\n\n    const { ids: concentrated } = deep.useSearch(concentrate, {\n      db: false, sort: false,\n      query: { id: { _in: ids } },\n      skip: !!concentrate,\n    });\n\n    console.log({concentrated});\n\n    return <go.On do={{\n      exec: (g,v,o) => o?.id || go.value == Stack || !go.value ? go.root().do('open', { id: o?.id || go(Stack).value, focus: true }) : go.do(go.value),\n      use: (g,v,o) => go(Stack) && go(Stack).do('use',o),\n      focus: (g,v,linkId,o) => {\n        !go.value && go.focus(Stack);\n        o?.id && go(Stack).focus(o?.id);\n      },\n      right: (g,v,o) => go.focus(nav.get(go.value || Stack, 'right')),\n      left: (g,v,o) => go.focus(nav.get(go.value || Stack, 'left')),\n\n      finder: (g,v,o) => go(FinderButton).do('exec'),\n      clear: (g,v,o) => deep.delete({\n        up: {\n          tree_id: containTree,\n          parent: {\n            type_id: Contain,\n            to: { type_id: { _in: [History, HistoryHandler] } },\n          },\n        },\n      }),\n    }}>\n      <c.Flex ref={ref} w='100%'>\n        <go.Provider linkId={FinderButton}>\n          <go.Handler handlerId={FinderButton} isActive={go.value === FinderButton}/>\n        </go.Provider>\n        <c.Box w='12em' h='100%' position='relative'>\n          <go.Editor value={concentrate} onChange={setConcentrate} fillSize lineNumbers={false}/>\n        </c.Box>\n        <go.Provider linkId={Stack}>\n          <go.Component path={[dpl, 'Stack']}\n            links={items} direction='horizontal' Item={Item} flex='1' using={using}\n            concentrated={!!concentrate && concentrated}\n          />\n        </go.Provider>\n        <c.Button\n          h='3em' w='3em' variant={go.value === 'clear' ? 'active' : undefined}\n          onClick={() => go.focus('clear').go.do('clear')}\n        ><GrClear/></c.Button>\n      </c.Flex>\n    </go.On>;\n  };\n}",
        "link_id": 5646
      }
    },
    {
      "id": 5649,
      "type_id": 3,
      "from_id": 2586,
      "to_id": 5646,
      "value": {
        "id": 1234,
        "value": "HeaderComponent",
        "link_id": 5649
      }
    },
    {
      "id": 5650,
      "type_id": 35,
      "from_id": 145,
      "to_id": 5646
    },
    {
      "id": 5651,
      "type_id": 3,
      "from_id": 2586,
      "to_id": 5650,
      "value": {
        "id": 1236,
        "value": "Header",
        "link_id": 5651
      }
    },
    {
      "id": 1926,
      "type_id": 3,
      "from_id": 1920,
      "to_id": 1915,
      "value": {
        "id": 733,
        "value": "TypedCount",
        "link_id": 1926
      }
    },
    {
      "id": 1927,
      "type_id": 3,
      "from_id": 1920,
      "to_id": 1916,
      "value": {
        "id": 734,
        "value": "FromCount",
        "link_id": 1927
      }
    },
    {
      "id": 1928,
      "type_id": 3,
      "from_id": 1920,
      "to_id": 1918,
      "value": {
        "id": 735,
        "value": "HandleDelete",
        "link_id": 1928
      }
    },
    {
      "id": 1929,
      "type_id": 3,
      "from_id": 1920,
      "to_id": 1912,
      "value": {
        "id": 736,
        "value": "DeleteHandler",
        "link_id": 1929
      }
    },
    {
      "id": 1930,
      "type_id": 3,
      "from_id": 1920,
      "to_id": 1911,
      "value": {
        "id": 737,
        "value": "onDelete",
        "link_id": 1930
      }
    },
    {
      "id": 1934,
      "type_id": 3,
      "from_id": 1920,
      "to_id": 1917,
      "value": {
        "id": 741,
        "value": "Semantic",
        "link_id": 1934
      }
    },
    {
      "id": 2011,
      "type_id": 16,
      "from_id": 1454,
      "to_id": 1665
    },
    {
      "id": 2012,
      "type_id": 3,
      "from_id": 1454,
      "to_id": 2011,
      "value": {
        "id": 745,
        "value": "ruleInclude1665",
        "link_id": 2012
      }
    },
    {
      "id": 2013,
      "type_id": 70,
      "from_id": 2011,
      "to_id": 67
    },
    {
      "id": 2014,
      "type_id": 3,
      "from_id": 1454,
      "to_id": 2013,
      "value": {
        "id": 746,
        "value": "ruleTree1665",
        "link_id": 2014
      }
    },
    {
      "id": 2015,
      "type_id": 16,
      "from_id": 1453,
      "to_id": 1665
    },
    {
      "id": 2016,
      "type_id": 3,
      "from_id": 1453,
      "to_id": 2015,
      "value": {
        "id": 747,
        "value": "include1665",
        "link_id": 2016
      }
    },
    {
      "id": 2017,
      "type_id": 70,
      "from_id": 2015,
      "to_id": 1120
    },
    {
      "id": 2018,
      "type_id": 3,
      "from_id": 1453,
      "to_id": 2017,
      "value": {
        "id": 748,
        "value": "tree1665",
        "link_id": 2018
      }
    },
    {
      "id": 2019,
      "type_id": 104,
      "from_id": 0,
      "to_id": 0
    },
    {
      "id": 2020,
      "type_id": 3,
      "from_id": 1468,
      "to_id": 2019,
      "value": {
        "id": 749,
        "value": "route1665",
        "link_id": 2020
      }
    },
    {
      "id": 2021,
      "type_id": 108,
      "from_id": 2019,
      "to_id": 1476
    },
    {
      "id": 2022,
      "type_id": 3,
      "from_id": 1468,
      "to_id": 2021,
      "value": {
        "id": 750,
        "value": "handle1665",
        "link_id": 2022
      }
    },
    {
      "id": 2023,
      "type_id": 106,
      "from_id": 2019,
      "to_id": 1468,
      "value": {
        "id": 752,
        "value": "/packages/deep-foundation/telegram-bot/1665",
        "link_id": 2023
      }
    },
    {
      "id": 2024,
      "type_id": 3,
      "from_id": 1468,
      "to_id": 2023,
      "value": {
        "id": 751,
        "value": "use1665",
        "link_id": 2024
      }
    },
    {
      "id": 2586,
      "type_id": 2,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 777,
        "value": "@deep-foundation/perception-links",
        "link_id": 2586
      }
    },
    {
      "id": 2608,
      "type_id": 3,
      "from_id": 2586,
      "to_id": 2607,
      "value": {
        "id": 779,
        "value": "History",
        "link_id": 2608
      }
    },
    {
      "id": 2609,
      "type_id": 146,
      "from_id": 2607,
      "to_id": 2607,
      "value": {
        "id": 781,
        "value": "⏱️",
        "link_id": 2609
      }
    },
    {
      "id": 2610,
      "type_id": 3,
      "from_id": 2586,
      "to_id": 2609,
      "value": {
        "id": 782,
        "value": "historySymbol",
        "link_id": 2610
      }
    },
    {
      "id": 5258,
      "type_id": 1,
      "from_id": 35,
      "to_id": 35
    },
    {
      "id": 5259,
      "type_id": 3,
      "from_id": 2586,
      "to_id": 5258,
      "value": {
        "id": 1150,
        "value": "Compatable",
        "link_id": 5259
      }
    },
    {
      "id": 2619,
      "type_id": 4,
      "from_id": 2607,
      "to_id": 5
    },
    {
      "id": 2620,
      "type_id": 3,
      "from_id": 2586,
      "to_id": 2619,
      "value": {
        "id": 786,
        "value": "historyValue",
        "link_id": 2620
      }
    },
    {
      "id": 2624,
      "type_id": 3,
      "from_id": 2586,
      "to_id": 2621,
      "value": {
        "id": 783,
        "value": "HistoryHandler",
        "link_id": 2624
      }
    },
    {
      "id": 2621,
      "type_id": 1,
      "from_id": 2607,
      "to_id": 35
    },
    {
      "id": 2635,
      "type_id": 146,
      "from_id": 2621,
      "to_id": 2621,
      "value": {
        "id": 784,
        "value": "👁️",
        "link_id": 2635
      }
    },
    {
      "id": 2636,
      "type_id": 3,
      "from_id": 2586,
      "to_id": 2635,
      "value": {
        "id": 785,
        "value": "viewHistoryHandler",
        "link_id": 2636
      }
    },
    {
      "id": 2637,
      "type_id": 717,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 815,
        "value": "async ({ deep, data, Go, require }) => {\n  const React = require('react');\n  const c = require('@chakra-ui/react');\n\n  const dpl = '@deep-foundation/perception-links';\n  const dc = '@deep-foundation/core';\n\n  const Stack = deep.idLocal(dpl, 'Stack');\n  const Any = deep.idLocal(dc, 'Any');\n  const Query = deep.idLocal(dc, 'Query');\n  const TreeList = deep.idLocal(dpl, 'TreeList');\n  const TreeLink = deep.idLocal(dpl, 'TreeLink');\n  const TreeQuery = deep.idLocal(dpl, 'TreeQuery');\n  const Menu = deep.idLocal(dpl, 'Menu');\n  const Layer = deep.idLocal(dpl, 'Layer');\n  const Header = deep.idLocal(dpl, 'Header');\n  const History = deep.idLocal(dpl, 'History');\n  const HistoryHandler = deep.idLocal(dpl, 'HistoryHandler');\n\n  interface ColumnI {\n    id: any;\n    handlerId: any;\n    focus?: boolean;\n  }\n\n  const handlers = {\n    [Any]: TreeLink,\n    [Query]: TreeQuery,\n  };\n\n  const getHandlerId = (linkId) => {\n    const l = deep.get(linkId);\n    console.log('getHandlerId', l);\n    return l?.type_id === Query ? TreeList : TreeLink;\n  }\n\n  function useStore(queryField, defaultValue) {\n    // return (queryField ? Go.useQueryStore(queryField, defaultValue) : React.useState(defaultValue));\n    return React.useState(defaultValue);\n  }\n\n  return ({\n    go,\n\n    using = false,\n    queryField = '',\n    saveHistory = false,\n    fullWidth = null,\n    initialId = deep.linkId,\n    initialHandlerId,\n    startProps = {},\n  }, ref) => {\n    const initialColumns = React.useMemo(() => {\n      if (!initialId) return [];\n      return [[initialId, initialHandlerId || getHandlerId(initialId)]]\n    }, []);\n    const [columns, setColumns] = useStore(queryField, initialColumns);\n    // const [test, setTest] = go.useQueryStore('test', 0);\n    \n    const Item = React.useCallback(({ link, isActive, ...props }) => {\n      const go = Go.useGo();\n      return <>\n        {!!saveHistory && !!isActive && <go.Save handlerId={link.handlerId}/>}\n        <go.Handler linkId={link.id} handlerId={link.handlerId}\n          isActive={isActive} fullWidth={fullWidth} saveHistory={saveHistory}\n          {...props}\n        />\n      </>;\n    }, [saveHistory, fullWidth]);\n    console.log({ columns });\n\n    const { data: list, ids } = React.useMemo(() => {\n      const ids = [];\n      const data = columns.map(c => {\n        ids.push(c[0]);\n        return { id: c[0], handlerId: c[1] };\n      });\n      return { data, ids };\n    }, [columns]);\n\n    const [concentrate, setConcentrate] = React.useState();\n    const { ids: concentrated } = deep.useSearch(concentrate, {\n      db: false, sort: false,\n      query: { id: { _in: ids } },\n      skip: !!concentrate,\n    });\n\n    return <go.On do={{\n      focus: (g,v,linkId,o) => {\n        !go.value && go.focus(Stack);\n        o?.id && go.do('open', o);\n      },\n      use: (g,v,o) => go(Stack).do('use',o),\n      open: (g,v,{ id, prevId, handlerId, focus } = {}) => {\n        if (!id) throw new Error(`open options must contains id ({ id, prevId?, handlerId? })`);\n        const founded = columns.find(c => c[0] === id);\n        const _prevId = prevId || columns[columns.length - 1][0];\n        if (founded) go.do('use',{ id });\n        else {\n          const prevI = columns.findIndex(c => c[0] === _prevId);\n          setColumns([\n            ...(!!~prevI ? columns.slice(0, prevI+1) : []),\n            [id, handlerId || getHandlerId(id)],\n            ...(!!~prevI ? columns.slice(prevI+1) : []),\n          ]);\n        }\n        if (focus) go(Stack).awaitRef(id).then(g => go(Stack).focus(id).go(id).scroll());\n      },\n      close: (g,v,o) => {\n        if (!o.id) throw new Error(`close options must contains id ({ id })`);\n        setColumns(columns.filter(c => c[0] !== o.id));\n      },\n      concentrate: (g,v,o) => {\n        setConcentrate(o?.value);\n      },\n    }}>\n      <go.Provider linkId={Stack}>\n        <go.Component path={[dpl, 'Stack']} concentrated={!!concentrate && concentrated} links={list} direction='horizontal' Item={Item} using={using} saveHistory={saveHistory} startProps={startProps}/>\n      </go.Provider>\n    </go.On>;\n  };\n}",
        "link_id": 2637
      }
    },
    {
      "id": 2638,
      "type_id": 3,
      "from_id": 2586,
      "to_id": 2637,
      "value": {
        "id": 787,
        "value": "TreeComponent",
        "link_id": 2638
      }
    },
    {
      "id": 2639,
      "type_id": 717,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 789,
        "value": "({ deep, data, require, Go }) => {\n  const { MdEdit, MdPreview, MdSaveAlt } = require(\"react-icons/md\");\n  const React = require('react');\n\n  const {\n    TypedIcon, DownIcon, UpIcon, TypeIcon, InIcon, OutIcon, FromIcon, ToIcon,\n  } = require('@deep-foundation/perception-app');\n\n  const c = require('@chakra-ui/react');\n\n  const dpl = '@deep-foundation/perception-links';\n  const dc = '@deep-foundation/core';\n\n  const Stack = deep.idLocal(dpl, 'Stack');\n  const Selector = deep.idLocal(dc, 'Selector');\n  const Promise = deep.idLocal(dc, 'Promise');\n  const Rejected = deep.idLocal(dc, 'Rejected');\n  const promiseTree = deep.idLocal(dc, 'promiseTree');\n  const Value = deep.idLocal(dc, 'Value');\n  const String = deep.idLocal(dc, 'String');\n  const Number = deep.idLocal(dc, 'Number');\n  const Object = deep.idLocal(dc, 'Object');\n  const File = deep.idLocal(dc, 'File');\n  const Query = deep.idLocal(dc, 'Query');\n  const Contain = deep.idLocal(dc, 'Contain');\n  const History = deep.idLocal(dpl, 'History');\n  const Header = deep.idLocal(dpl, 'Header');\n  const TreeLink = deep.idLocal(dpl, 'TreeLink');\n  const TreeList = deep.idLocal(dpl, 'TreeList');\n  const TreeEditor = deep.idLocal(dpl, 'TreeEditor');\n  const TreeQuery = deep.idLocal(dpl, 'TreeQuery');\n  const TreeLinkInsert = deep.idLocal(dpl, 'TreeLinkInsert');\n  const TreeLinkDelete = deep.idLocal(dpl, 'TreeLinkDelete');\n  const TreeLinkButton = deep.idLocal(dpl, 'TreeLinkButton');\n\n  return ({\n    go,\n    handlerId,\n\n    isActive,\n    isConcentrated,\n\n    operations = true,\n    fullWidth = null,\n  }, ref) => {\n    const valueType = React.useMemo(() => go.link?.type?.outByType[Value]?.[0]?.to_id, [go]);\n    \n    const fromDisclosure = c.useDisclosure();\n    const toDisclosure = c.useDisclosure();\n\n    const queries = React.useMemo(() => ({\n      'parents': ({ out: { type_id: Contain, to_id: go.linkId }, order_by: { id: 'desc' } }),\n      'contains': ({ in: { type_id: Contain, from_id: go.linkId }, order_by: { id: 'desc' } }),\n      'out': ({ from_id: go.linkId, order_by: { id: 'desc' } }),\n      'typed': ({ type_id: go.linkId, order_by: { id: 'desc' } }),\n      'in': ({ to_id: go.linkId, order_by: { id: 'desc' } }),\n      'selectors': ({ type_id: Selector, selected: { item_id: { _eq: go.linkId } }, order_by: { id: 'desc' } }),\n      'selected': ({ selected: { selector_id: { _eq: go.linkId } }, order_by: { id: 'desc' } }),\n      'promises': ({ type_id: Promise, up: { tree_id: { _eq: promiseTree }, parent_id: { _eq: go.linkId } }, order_by: { id: 'desc' } }),\n      'rejects': ({ type_id: Rejected, up: { tree_id: { _eq: promiseTree }, parent_id: { _eq: go.linkId } }, order_by: { id: 'desc' } }),\n    }), []);\n\n    const [query, setQuery] = React.useState(null);\n    const { data: links } = deep.useQuery(query || {}, { skip: !query });\n    // const [links, setLinks] = React.useState([]);\n    // React.useEffect(() => setLinks([]), [query]);\n\n    const column = <c.VStack\n      position='relative' minW={fullWidth || '30em'} maxW={fullWidth || '30em'} h='100%' spacing={1}\n      bg={isActive ? 'deepBgDark' : null}\n    >\n      <c.Flex w='100%'>\n        <go.Handler\n          handlerId={TreeLinkButton} linkId={go.linkId} flex='1'\n          onClick={() => go.focus('current').go.do('exec')}\n          needParent={false} isActive={go.value === 'current'}\n        />\n        <c.Button\n          minW='3e,' w='3em' h='100%' minH='3em' p='0'\n          onClick={() => go.focus('close').go.do('close')}\n          variant={go.value === 'close' ? 'active' : null}\n        >x</c.Button>\n      </c.Flex>\n      <c.SimpleGrid spacing={1} w='100%' columns={2 + (operations ? 2 : 0)}>\n        <c.Button\n          variant={go.value === 'parents' ? 'active' : null}\n          justifyContent='center'\n          onClick={() => go.focus('parents').go.do('parents')}\n        >\n          <c.Text pr={1}>🗂️</c.Text> parents\n        </c.Button>\n        <c.Button\n          variant={go.value === 'contains' ? 'active' : null}\n          justifyContent='center'\n          onClick={() => go.focus('contains').go.do('contains')}\n        >\n          <c.Text pr={1}>🗂️</c.Text> contains\n        </c.Button>\n        {operations && <>\n          <go.Provider linkId={TreeLinkInsert}>\n            <go.Handler\n              isActive={go.value === 'insert' ? go.ref : null}\n              handlerId={TreeLinkInsert}\n              defaultContainerId={go.linkId} defaultTypeId={1}\n            />\n          </go.Provider>\n          <go.Provider linkId={TreeLinkDelete}>\n            <go.Handler\n              isActive={go.value === 'delete' ? go.ref : null}\n              handlerId={TreeLinkDelete}\n              linkId={go.linkId}\n            />\n          </go.Provider>\n        </>}\n      </c.SimpleGrid>\n      {(!!go.link.type_id === 1 || !!go.link.from_id) && <go.Component path={[dpl, 'Finder']}\n        disclosure={fromDisclosure} initialId={go.link.from_id} initialHandlerId={TreeList}\n        onSubmit={(id) => {\n          deep.update(go.linkId, { from_id: id });\n          fromDisclosure.onClose();\n        }}\n      />}\n      {(!!go.link.type_id === 1 || !!go.link.to_id) && <go.Component path={[dpl, 'Finder']}\n        disclosure={toDisclosure} initialId={go.link.to_id} initialHandlerId={TreeList}\n        onSubmit={(id) => {\n          deep.update(go.linkId, { to_id: id });\n          toDisclosure.onClose();\n        }}\n      />}\n      {[<go.Query key={`${fromDisclosure.isOpen}${toDisclosure.isOpen}`} query={{ id: go.linkId }}/>]}\n      <c.SimpleGrid spacing={1} w='100%' columns={3}>\n        <c.Flex>\n          <c.Button\n            variant={go.value === 'edit-from' ? 'active' : undefined}\n            justifyContent='right' textAlign='right' h='3em' disabled={!go.link?.from_id}\n            onClick={() => go.focus('edit-from').go.do('edit-from')}\n          ><c.Box>\n              <MdEdit />\n            </c.Box></c.Button>\n          <c.Button\n            variant={go.value === 'from' ? 'active' : undefined}\n            justifyContent='right' textAlign='right'\n            flex='1' h='3em'\n            onClick={() => go.focus('from').go.do('from')}\n            rightIcon={<FromIcon />}\n            overflow='hidden'\n          ><c.Box>\n              <c.Text>from</c.Text>\n              <c.Box><c.Text fontSize='xs'>{go.link?.from?.symbol} {!!go.link?.from && go.link.from.name} {go.link?.from_id}</c.Text></c.Box>\n            </c.Box></c.Button>\n        </c.Flex>\n        <c.Button\n          variant={go.value === 'type' ? 'active' : undefined}\n          disabled={!go.link?.type_id} leftIcon={<TypeIcon />}\n          onClick={() => go.focus('type').go.do('type')}\n          h='3em' overflow='hidden'\n        ><c.Box>\n            <c.Text>type</c.Text>\n            <c.Box><c.Text fontSize='xs'>{go.link?.type?.symbol} {!!go.link?.type && go.link.type.name} {go.link?.type_id}</c.Text></c.Box>\n          </c.Box></c.Button>\n        <c.Flex>\n          <c.Button\n            variant={go.value === 'to' ? 'active' : undefined}\n            justifyContent='left' textAlign='left' flex='1' h='3em' rightIcon={<ToIcon />}\n            onClick={() => go.focus('to').go.do('to')}\n            overflow='hidden'\n          ><c.Box>\n              <c.Text>to</c.Text>\n              <c.Box><c.Text fontSize='xs'>{go.link?.to?.symbol} {!!go.link?.to && go.link.to.name} {go.link?.to_id}</c.Text></c.Box>\n            </c.Box></c.Button>\n          <c.Button\n            variant={go.value === 'edit-to' ? 'active' : undefined}\n            justifyContent='right' textAlign='right' h='3em' disabled={!go.link?.to_id}\n            onClick={() => go.focus('edit-to').go.do('edit-to')}\n          ><c.Box>\n              <MdEdit />\n            </c.Box></c.Button>\n        </c.Flex>\n      </c.SimpleGrid>\n      <c.SimpleGrid spacing={1} w='100%' columns={5}>\n        <c.Button\n          variant={go.value === 'up-tree' ? 'active' : undefined} justifyContent='center'\n          onClick={() => go.focus('up-tree').go.do('up-tree')}\n          leftIcon={<UpIcon />}\n        >\n          <c.Text>up</c.Text>\n        </c.Button>\n        <c.Button\n          variant={go.value === 'out' ? 'active' : undefined} justifyContent='left' textAlign='left'\n          onClick={() => go.focus('out').go.do('out')}\n          leftIcon={<OutIcon />}\n        >\n          <c.Text>out</c.Text>\n        </c.Button>\n        {/* <IconButton aria-label='typed' icon={<TypedIcon />} /> */}\n        <c.Button\n          variant={go.value === 'typed' ? 'active' : undefined}\n          onClick={() => go.focus('typed').go.do('typed')}\n          leftIcon={<TypedIcon />}\n        >\n          <c.Text>typed</c.Text>\n        </c.Button>\n        <c.Button\n          variant={go.value === 'in' ? 'active' : undefined} justifyContent='right' textAlign='right'\n          onClick={() => go.focus('in').go.do('in')}\n          rightIcon={<InIcon />}\n        >\n          <c.Text>in</c.Text>\n        </c.Button>\n        <c.Button\n          variant={go.value === 'down-tree' ? 'active' : undefined} justifyContent='center'\n          onClick={() => go.focus('down-tree').go.do('down-tree')}\n          leftIcon={<DownIcon />}\n        >\n          <c.Text>down</c.Text>\n        </c.Button>\n      </c.SimpleGrid>\n      <c.SimpleGrid spacing={1} w='100%' columns={4}>\n        <c.Button\n          variant={go.value === 'selectors' ? 'active' : undefined} justifyContent='center'\n          onClick={() => go.focus('selectors').go.do('selectors')}\n        >\n          <c.Text pr={1}>🪡</c.Text> selectors\n        </c.Button>\n        <c.Button\n          variant={go.value === 'selected' ? 'active' : undefined} justifyContent='center'\n          onClick={() => go.focus('selected').go.do('selected')}\n        >\n          <c.Text pr={1}>🪡</c.Text> selected\n        </c.Button>\n        <c.Button\n          variant={go.value === 'promises' ? 'active' : undefined} justifyContent='center'\n          onClick={() => go.focus('promises').go.do('promises')}\n        >\n          <c.Text pr={1}>🤞</c.Text> promises\n        </c.Button>\n        <c.Button\n          variant={go.value === 'rejects' ? 'active' : undefined} justifyContent='center'\n          onClick={() => go.focus('rejects').go.do('rejects')}\n        >\n          <c.Text pr={1}>🔴</c.Text> rejects\n        </c.Button>\n      </c.SimpleGrid>\n      <c.SimpleGrid spacing={1} w='100%'>\n        {!valueType && <>\n          <c.Button\n            variant={go.value === 'value' ? 'active' : undefined} bg={go.value === TreeEditor ? 'deepBgDark' : null} justifyContent='center'\n            disabled\n          >\n            type can't have Value\n          </c.Button>\n        </>}\n        {valueType === String && <>\n          <c.Button\n            variant={go.value === 'value' ? 'active' : undefined} bg={go.value === TreeEditor ? 'deepBgDark' : null} justifyContent='center'\n            onClick={() => go.focus('value').go.do('value')}\n          >\n            <c.Text pr={1}>\"\".length === {go.link?.value?.value?.length || 0}</c.Text> string\n          </c.Button>\n        </>}\n        {valueType === Number && <>\n          <c.Button\n            variant={go.value === 'value' ? 'active' : undefined} bg={go.value === TreeEditor ? 'deepBgDark' : null} justifyContent='center'\n            onClick={() => go.focus('value').go.do('value')}\n          >\n            <c.Text pr={1}>{+go.link?.value?.value}</c.Text> number\n          </c.Button>\n        </>}\n        {valueType === Object && <>\n          <c.Button\n            variant={go.value === 'value' ? 'active' : undefined} bg={go.value === TreeEditor ? 'deepBgDark' : null} justifyContent='center'\n            onClick={() => go.focus('value').go.do('value')}\n          >\n            <c.Text pr={1}>{`{...}`}</c.Text> object\n          </c.Button>\n        </>}\n      </c.SimpleGrid>\n      {go.value === TreeEditor && <c.Box minW={fullWidth || '30em'} maxW={fullWidth || '30em'} flex='1' position='relative'>\n        <go.Handler handlerId={TreeEditor} linkId={go.linkId} fillSize autoFocus />\n      </c.Box>}\n      {!!links?.length && <go.Provider linkId={Stack}>\n        <go.Component path={[dpl, 'Stack']} links={links} direction='vertical' flex='1' />\n      </go.Provider>}\n    </c.VStack>;\n\n    const nav = go.useNav();\n    nav('current', 'left', 'up', 'close', 'contains');\n    \n    if (isConcentrated !== false) {\n      nav('close', 'current', 'up', 'right', 'contains');\n  \n      nav('parents', 'left', 'current', 'contains', 'type');\n      nav('contains', 'parents', 'current', 'insert', 'type');\n      nav('insert', 'contains', 'current', 'delete', 'type');\n      nav('delete', 'insert', 'close', 'right', 'type');\n  \n      nav('edit-from', 'left', 'contains', 'from', 'up-tree');\n      nav('from', 'edit-from', 'contains', 'to', 'out');\n      nav('type', 'from', 'contains', 'to', 'typed');\n      nav('to', 'type', 'contains', 'edit-to', 'in');\n      nav('edit-to', 'to', 'contains', 'right', 'down-tree');\n  \n      nav('up-tree', 'left', 'edit-from', 'out', 'selectors');\n      nav('out', 'up-tree', 'from', 'typed', 'selected');\n      nav('typed', 'out', 'type', 'in', 'promises');\n      nav('in', 'typed', 'to', 'down-tree', 'promises');\n      nav('down-tree', 'in', 'edit-to', 'right', 'rejects');\n  \n      nav('selectors', 'left', 'up-tree', 'selected', 'value');\n      nav('selected', 'selectors', 'out', 'promises', 'value');\n      nav('promises', 'selected', 'in', 'rejects', 'value');\n      nav('rejects', 'promises', 'down-tree', 'right', 'value');\n  \n      nav('value', 'left', 'promises', 'right', Stack);\n  \n      nav(Stack, 'left', 'value', 'right', 'down');\n    }\n\n    const openLink = async (id) => {\n      !!id && go.go.do('open', { handlerId: TreeLink, id: id, prevId: go.linkId })\n      await go.go.await(id);\n      go.go.focus(id);\n    };\n\n    const deconcentrated = <c.Button\n      h='100%' w='3em' pt='1em' variant={isActive ? 'active' : undefined}\n      alignItems='flex-start'\n    >\n      {go?.link?.symbol}\n    </c.Button>\n\n    const content = isConcentrated === false ? deconcentrated : column;\n\n    return <go.On\n      do={{\n        focus: (g, v, linkId, o) => !go.value && go.focus('current'),\n        use: (g, v, o) => o?.id && go.value === Stack ? (go(Stack).do('use', o)) : (go.set('current')),\n        close: (g, v, o) => go.go.do('close', { id: go.linkId }),\n        exec: (g, v, o) => o?.id ? go.go.do('open', { id: o.id, prevId: go.linkId, focus: true }) : go.value && go.do(go.value, o),\n\n        left: (g, v, o) => go.focus(nav.get(go.value || 'current', 'left'), { prev: go.value }),\n        up: (g, v, o) => go.focus(nav.get(go.value || 'current', 'up'), { prev: go.value }),\n        right: (g, v, o) => go.focus(nav.get(go.value || 'current', 'right'), { prev: go.value }),\n        down: (g, v, o) => go.focus(nav.get(go.value || 'current', 'down'), { prev: go.value }),\n\n        'current': () => { },\n        'parents': () => setQuery({ ...queries.parents, limit: 100 }),\n        'contains': () => setQuery({ ...queries.contains, limit: 100 }),\n\n        'edit-from': () => fromDisclosure.onOpen(),\n        'from': () => openLink(go.link.from_id),\n        'type': () => openLink(go.link.type_id),\n        'to': () => openLink(go.link.to_id),\n        'edit-to': () => toDisclosure.onOpen(),\n\n        'up-tree': () => { },\n        'out': () => setQuery({ ...queries.out, limit: 100 }),\n        'typed': () => setQuery({ ...queries.typed, limit: 100 }),\n        'in': () => setQuery({ ...queries.in, limit: 100 }),\n        'down-tree': () => { },\n\n        'selectors': () => setQuery({ ...queries.selectors, limit: 100 }),\n        'selected': () => setQuery({ ...queries.selected, limit: 100 }),\n        'promises': () => setQuery({ ...queries.promises, limit: 100 }),\n        'rejects': () => setQuery({ ...queries.rejects, limit: 100 }),\n\n        'value': () => {\n          setQuery(null);\n          go.focus(go.value === TreeEditor ? 'value' : TreeEditor);\n        },\n\n        [Stack]: (g, v, o) => openLink(o?.id),\n      }}\n      focus={{\n        up: (q, v, o) => go.set().go?.go?.do('up'),\n        down: (q, v, o) => go.set().go?.go?.do('down'),\n        left: (q, v, o) => go.set(o?.left).go?.go?.do('left'),\n        right: (q, v, o) => go.set(o?.right).go?.go?.do('right'),\n      }}\n    >\n      <c.HStack ref={ref} h='100%' overflow='hidden'>\n        {content}\n      </c.HStack>\n      {/* {!!query && <go.Query query={query} onChange={({ data }) => setLinks(data)} />} */}\n    </go.On>\n  };\n}\n",
        "link_id": 2639
      }
    },
    {
      "id": 2640,
      "type_id": 3,
      "from_id": 2586,
      "to_id": 2639,
      "value": {
        "id": 788,
        "value": "TreeLinkComponent",
        "link_id": 2640
      }
    },
    {
      "id": 2643,
      "type_id": 30,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 791,
        "value": "({ deep, data, require, Go }) => {\n    const { MdEdit, MdPreview, MdSaveAlt } = require(\"react-icons/md\");\n    const React = require('react');\n    const { TypedIcon, DownIcon, UpIcon, TypeIcon, InIcon, OutIcon, FromIcon, ToIcon, } = require('@deep-foundation/perception-app');\n    const c = require('@chakra-ui/react');\n    const dpl = '@deep-foundation/perception-links';\n    const dc = '@deep-foundation/core';\n    const Stack = deep.idLocal(dpl, 'Stack');\n    const Selector = deep.idLocal(dc, 'Selector');\n    const Promise = deep.idLocal(dc, 'Promise');\n    const Rejected = deep.idLocal(dc, 'Rejected');\n    const promiseTree = deep.idLocal(dc, 'promiseTree');\n    const Value = deep.idLocal(dc, 'Value');\n    const String = deep.idLocal(dc, 'String');\n    const Number = deep.idLocal(dc, 'Number');\n    const Object = deep.idLocal(dc, 'Object');\n    const File = deep.idLocal(dc, 'File');\n    const Query = deep.idLocal(dc, 'Query');\n    const Contain = deep.idLocal(dc, 'Contain');\n    const History = deep.idLocal(dpl, 'History');\n    const Header = deep.idLocal(dpl, 'Header');\n    const TreeLink = deep.idLocal(dpl, 'TreeLink');\n    const TreeList = deep.idLocal(dpl, 'TreeList');\n    const TreeEditor = deep.idLocal(dpl, 'TreeEditor');\n    const TreeQuery = deep.idLocal(dpl, 'TreeQuery');\n    const TreeLinkInsert = deep.idLocal(dpl, 'TreeLinkInsert');\n    const TreeLinkDelete = deep.idLocal(dpl, 'TreeLinkDelete');\n    const TreeLinkButton = deep.idLocal(dpl, 'TreeLinkButton');\n    return ({ go, handlerId, isActive, isConcentrated, operations = true, fullWidth = null, }, ref) => {\n        const valueType = React.useMemo(() => go.link?.type?.outByType[Value]?.[0]?.to_id, [go]);\n        const fromDisclosure = c.useDisclosure();\n        const toDisclosure = c.useDisclosure();\n        const queries = React.useMemo(() => ({\n            'parents': ({ out: { type_id: Contain, to_id: go.linkId }, order_by: { id: 'desc' } }),\n            'contains': ({ in: { type_id: Contain, from_id: go.linkId }, order_by: { id: 'desc' } }),\n            'out': ({ from_id: go.linkId, order_by: { id: 'desc' } }),\n            'typed': ({ type_id: go.linkId, order_by: { id: 'desc' } }),\n            'in': ({ to_id: go.linkId, order_by: { id: 'desc' } }),\n            'selectors': ({ type_id: Selector, selected: { item_id: { _eq: go.linkId } }, order_by: { id: 'desc' } }),\n            'selected': ({ selected: { selector_id: { _eq: go.linkId } }, order_by: { id: 'desc' } }),\n            'promises': ({ type_id: Promise, up: { tree_id: { _eq: promiseTree }, parent_id: { _eq: go.linkId } }, order_by: { id: 'desc' } }),\n            'rejects': ({ type_id: Rejected, up: { tree_id: { _eq: promiseTree }, parent_id: { _eq: go.linkId } }, order_by: { id: 'desc' } }),\n        }), []);\n        const [query, setQuery] = React.useState(null);\n        const { data: links } = deep.useQuery(query || {}, { skip: !query });\n        const column = React.createElement(c.VStack, { position: 'relative', minW: fullWidth || '30em', maxW: fullWidth || '30em', h: '100%', spacing: 1, bg: isActive ? 'deepBgDark' : null },\n            React.createElement(c.Flex, { w: '100%' },\n                React.createElement(go.Handler, { handlerId: TreeLinkButton, linkId: go.linkId, flex: '1', onClick: () => go.focus('current').go.do('exec'), needParent: false, isActive: go.value === 'current' }),\n                React.createElement(c.Button, { minW: '3e,', w: '3em', h: '100%', minH: '3em', p: '0', onClick: () => go.focus('close').go.do('close'), variant: go.value === 'close' ? 'active' : null }, \"x\")),\n            React.createElement(c.SimpleGrid, { spacing: 1, w: '100%', columns: 2 + (operations ? 2 : 0) },\n                React.createElement(c.Button, { variant: go.value === 'parents' ? 'active' : null, justifyContent: 'center', onClick: () => go.focus('parents').go.do('parents') },\n                    React.createElement(c.Text, { pr: 1 }, \"\\uD83D\\uDDC2\\uFE0F\"),\n                    \" parents\"),\n                React.createElement(c.Button, { variant: go.value === 'contains' ? 'active' : null, justifyContent: 'center', onClick: () => go.focus('contains').go.do('contains') },\n                    React.createElement(c.Text, { pr: 1 }, \"\\uD83D\\uDDC2\\uFE0F\"),\n                    \" contains\"),\n                operations && React.createElement(React.Fragment, null,\n                    React.createElement(go.Provider, { linkId: TreeLinkInsert },\n                        React.createElement(go.Handler, { isActive: go.value === 'insert' ? go.ref : null, handlerId: TreeLinkInsert, defaultContainerId: go.linkId, defaultTypeId: 1 })),\n                    React.createElement(go.Provider, { linkId: TreeLinkDelete },\n                        React.createElement(go.Handler, { isActive: go.value === 'delete' ? go.ref : null, handlerId: TreeLinkDelete, linkId: go.linkId })))),\n            (!!go.link.type_id === 1 || !!go.link.from_id) && React.createElement(go.Component, { path: [dpl, 'Finder'], disclosure: fromDisclosure, initialId: go.link.from_id, initialHandlerId: TreeList, onSubmit: (id) => {\n                    deep.update(go.linkId, { from_id: id });\n                    fromDisclosure.onClose();\n                } }),\n            (!!go.link.type_id === 1 || !!go.link.to_id) && React.createElement(go.Component, { path: [dpl, 'Finder'], disclosure: toDisclosure, initialId: go.link.to_id, initialHandlerId: TreeList, onSubmit: (id) => {\n                    deep.update(go.linkId, { to_id: id });\n                    toDisclosure.onClose();\n                } }),\n            [React.createElement(go.Query, { key: `${fromDisclosure.isOpen}${toDisclosure.isOpen}`, query: { id: go.linkId } })],\n            React.createElement(c.SimpleGrid, { spacing: 1, w: '100%', columns: 3 },\n                React.createElement(c.Flex, null,\n                    React.createElement(c.Button, { variant: go.value === 'edit-from' ? 'active' : undefined, justifyContent: 'right', textAlign: 'right', h: '3em', disabled: !go.link?.from_id, onClick: () => go.focus('edit-from').go.do('edit-from') },\n                        React.createElement(c.Box, null,\n                            React.createElement(MdEdit, null))),\n                    React.createElement(c.Button, { variant: go.value === 'from' ? 'active' : undefined, justifyContent: 'right', textAlign: 'right', flex: '1', h: '3em', onClick: () => go.focus('from').go.do('from'), rightIcon: React.createElement(FromIcon, null), overflow: 'hidden' },\n                        React.createElement(c.Box, null,\n                            React.createElement(c.Text, null, \"from\"),\n                            React.createElement(c.Box, null,\n                                React.createElement(c.Text, { fontSize: 'xs' },\n                                    go.link?.from?.symbol,\n                                    \" \",\n                                    !!go.link?.from && go.link.from.name,\n                                    \" \",\n                                    go.link?.from_id))))),\n                React.createElement(c.Button, { variant: go.value === 'type' ? 'active' : undefined, disabled: !go.link?.type_id, leftIcon: React.createElement(TypeIcon, null), onClick: () => go.focus('type').go.do('type'), h: '3em', overflow: 'hidden' },\n                    React.createElement(c.Box, null,\n                        React.createElement(c.Text, null, \"type\"),\n                        React.createElement(c.Box, null,\n                            React.createElement(c.Text, { fontSize: 'xs' },\n                                go.link?.type?.symbol,\n                                \" \",\n                                !!go.link?.type && go.link.type.name,\n                                \" \",\n                                go.link?.type_id)))),\n                React.createElement(c.Flex, null,\n                    React.createElement(c.Button, { variant: go.value === 'to' ? 'active' : undefined, justifyContent: 'left', textAlign: 'left', flex: '1', h: '3em', rightIcon: React.createElement(ToIcon, null), onClick: () => go.focus('to').go.do('to'), overflow: 'hidden' },\n                        React.createElement(c.Box, null,\n                            React.createElement(c.Text, null, \"to\"),\n                            React.createElement(c.Box, null,\n                                React.createElement(c.Text, { fontSize: 'xs' },\n                                    go.link?.to?.symbol,\n                                    \" \",\n                                    !!go.link?.to && go.link.to.name,\n                                    \" \",\n                                    go.link?.to_id)))),\n                    React.createElement(c.Button, { variant: go.value === 'edit-to' ? 'active' : undefined, justifyContent: 'right', textAlign: 'right', h: '3em', disabled: !go.link?.to_id, onClick: () => go.focus('edit-to').go.do('edit-to') },\n                        React.createElement(c.Box, null,\n                            React.createElement(MdEdit, null))))),\n            React.createElement(c.SimpleGrid, { spacing: 1, w: '100%', columns: 5 },\n                React.createElement(c.Button, { variant: go.value === 'up-tree' ? 'active' : undefined, justifyContent: 'center', onClick: () => go.focus('up-tree').go.do('up-tree'), leftIcon: React.createElement(UpIcon, null) },\n                    React.createElement(c.Text, null, \"up\")),\n                React.createElement(c.Button, { variant: go.value === 'out' ? 'active' : undefined, justifyContent: 'left', textAlign: 'left', onClick: () => go.focus('out').go.do('out'), leftIcon: React.createElement(OutIcon, null) },\n                    React.createElement(c.Text, null, \"out\")),\n                React.createElement(c.Button, { variant: go.value === 'typed' ? 'active' : undefined, onClick: () => go.focus('typed').go.do('typed'), leftIcon: React.createElement(TypedIcon, null) },\n                    React.createElement(c.Text, null, \"typed\")),\n                React.createElement(c.Button, { variant: go.value === 'in' ? 'active' : undefined, justifyContent: 'right', textAlign: 'right', onClick: () => go.focus('in').go.do('in'), rightIcon: React.createElement(InIcon, null) },\n                    React.createElement(c.Text, null, \"in\")),\n                React.createElement(c.Button, { variant: go.value === 'down-tree' ? 'active' : undefined, justifyContent: 'center', onClick: () => go.focus('down-tree').go.do('down-tree'), leftIcon: React.createElement(DownIcon, null) },\n                    React.createElement(c.Text, null, \"down\"))),\n            React.createElement(c.SimpleGrid, { spacing: 1, w: '100%', columns: 4 },\n                React.createElement(c.Button, { variant: go.value === 'selectors' ? 'active' : undefined, justifyContent: 'center', onClick: () => go.focus('selectors').go.do('selectors') },\n                    React.createElement(c.Text, { pr: 1 }, \"\\uD83E\\uDEA1\"),\n                    \" selectors\"),\n                React.createElement(c.Button, { variant: go.value === 'selected' ? 'active' : undefined, justifyContent: 'center', onClick: () => go.focus('selected').go.do('selected') },\n                    React.createElement(c.Text, { pr: 1 }, \"\\uD83E\\uDEA1\"),\n                    \" selected\"),\n                React.createElement(c.Button, { variant: go.value === 'promises' ? 'active' : undefined, justifyContent: 'center', onClick: () => go.focus('promises').go.do('promises') },\n                    React.createElement(c.Text, { pr: 1 }, \"\\uD83E\\uDD1E\"),\n                    \" promises\"),\n                React.createElement(c.Button, { variant: go.value === 'rejects' ? 'active' : undefined, justifyContent: 'center', onClick: () => go.focus('rejects').go.do('rejects') },\n                    React.createElement(c.Text, { pr: 1 }, \"\\uD83D\\uDD34\"),\n                    \" rejects\")),\n            React.createElement(c.SimpleGrid, { spacing: 1, w: '100%' },\n                !valueType && React.createElement(React.Fragment, null,\n                    React.createElement(c.Button, { variant: go.value === 'value' ? 'active' : undefined, bg: go.value === TreeEditor ? 'deepBgDark' : null, justifyContent: 'center', disabled: true }, \"type can't have Value\")),\n                valueType === String && React.createElement(React.Fragment, null,\n                    React.createElement(c.Button, { variant: go.value === 'value' ? 'active' : undefined, bg: go.value === TreeEditor ? 'deepBgDark' : null, justifyContent: 'center', onClick: () => go.focus('value').go.do('value') },\n                        React.createElement(c.Text, { pr: 1 },\n                            \"\\\"\\\".length === \",\n                            go.link?.value?.value?.length || 0),\n                        \" string\")),\n                valueType === Number && React.createElement(React.Fragment, null,\n                    React.createElement(c.Button, { variant: go.value === 'value' ? 'active' : undefined, bg: go.value === TreeEditor ? 'deepBgDark' : null, justifyContent: 'center', onClick: () => go.focus('value').go.do('value') },\n                        React.createElement(c.Text, { pr: 1 }, +go.link?.value?.value),\n                        \" number\")),\n                valueType === Object && React.createElement(React.Fragment, null,\n                    React.createElement(c.Button, { variant: go.value === 'value' ? 'active' : undefined, bg: go.value === TreeEditor ? 'deepBgDark' : null, justifyContent: 'center', onClick: () => go.focus('value').go.do('value') },\n                        React.createElement(c.Text, { pr: 1 }, `{...}`),\n                        \" object\"))),\n            go.value === TreeEditor && React.createElement(c.Box, { minW: fullWidth || '30em', maxW: fullWidth || '30em', flex: '1', position: 'relative' },\n                React.createElement(go.Handler, { handlerId: TreeEditor, linkId: go.linkId, fillSize: true, autoFocus: true })),\n            !!links?.length && React.createElement(go.Provider, { linkId: Stack },\n                React.createElement(go.Component, { path: [dpl, 'Stack'], links: links, direction: 'vertical', flex: '1' })));\n        const nav = go.useNav();\n        nav('current', 'left', 'up', 'close', 'contains');\n        if (isConcentrated !== false) {\n            nav('close', 'current', 'up', 'right', 'contains');\n            nav('parents', 'left', 'current', 'contains', 'type');\n            nav('contains', 'parents', 'current', 'insert', 'type');\n            nav('insert', 'contains', 'current', 'delete', 'type');\n            nav('delete', 'insert', 'close', 'right', 'type');\n            nav('edit-from', 'left', 'contains', 'from', 'up-tree');\n            nav('from', 'edit-from', 'contains', 'to', 'out');\n            nav('type', 'from', 'contains', 'to', 'typed');\n            nav('to', 'type', 'contains', 'edit-to', 'in');\n            nav('edit-to', 'to', 'contains', 'right', 'down-tree');\n            nav('up-tree', 'left', 'edit-from', 'out', 'selectors');\n            nav('out', 'up-tree', 'from', 'typed', 'selected');\n            nav('typed', 'out', 'type', 'in', 'promises');\n            nav('in', 'typed', 'to', 'down-tree', 'promises');\n            nav('down-tree', 'in', 'edit-to', 'right', 'rejects');\n            nav('selectors', 'left', 'up-tree', 'selected', 'value');\n            nav('selected', 'selectors', 'out', 'promises', 'value');\n            nav('promises', 'selected', 'in', 'rejects', 'value');\n            nav('rejects', 'promises', 'down-tree', 'right', 'value');\n            nav('value', 'left', 'promises', 'right', Stack);\n            nav(Stack, 'left', 'value', 'right', 'down');\n        }\n        const openLink = async (id) => {\n            !!id && go.go.do('open', { handlerId: TreeLink, id: id, prevId: go.linkId });\n            await go.go.await(id);\n            go.go.focus(id);\n        };\n        const deconcentrated = React.createElement(c.Button, { h: '100%', w: '3em', pt: '1em', variant: isActive ? 'active' : undefined, alignItems: 'flex-start' }, go?.link?.symbol);\n        const content = isConcentrated === false ? deconcentrated : column;\n        return React.createElement(go.On, { do: {\n                focus: (g, v, linkId, o) => !go.value && go.focus('current'),\n                use: (g, v, o) => o?.id && go.value === Stack ? (go(Stack).do('use', o)) : (go.set('current')),\n                close: (g, v, o) => go.go.do('close', { id: go.linkId }),\n                exec: (g, v, o) => o?.id ? go.go.do('open', { id: o.id, prevId: go.linkId, focus: true }) : go.value && go.do(go.value, o),\n                left: (g, v, o) => go.focus(nav.get(go.value || 'current', 'left'), { prev: go.value }),\n                up: (g, v, o) => go.focus(nav.get(go.value || 'current', 'up'), { prev: go.value }),\n                right: (g, v, o) => go.focus(nav.get(go.value || 'current', 'right'), { prev: go.value }),\n                down: (g, v, o) => go.focus(nav.get(go.value || 'current', 'down'), { prev: go.value }),\n                'current': () => { },\n                'parents': () => setQuery({ ...queries.parents, limit: 100 }),\n                'contains': () => setQuery({ ...queries.contains, limit: 100 }),\n                'edit-from': () => fromDisclosure.onOpen(),\n                'from': () => openLink(go.link.from_id),\n                'type': () => openLink(go.link.type_id),\n                'to': () => openLink(go.link.to_id),\n                'edit-to': () => toDisclosure.onOpen(),\n                'up-tree': () => { },\n                'out': () => setQuery({ ...queries.out, limit: 100 }),\n                'typed': () => setQuery({ ...queries.typed, limit: 100 }),\n                'in': () => setQuery({ ...queries.in, limit: 100 }),\n                'down-tree': () => { },\n                'selectors': () => setQuery({ ...queries.selectors, limit: 100 }),\n                'selected': () => setQuery({ ...queries.selected, limit: 100 }),\n                'promises': () => setQuery({ ...queries.promises, limit: 100 }),\n                'rejects': () => setQuery({ ...queries.rejects, limit: 100 }),\n                'value': () => {\n                    setQuery(null);\n                    go.focus(go.value === TreeEditor ? 'value' : TreeEditor);\n                },\n                [Stack]: (g, v, o) => openLink(o?.id),\n            }, focus: {\n                up: (q, v, o) => go.set().go?.go?.do('up'),\n                down: (q, v, o) => go.set().go?.go?.do('down'),\n                left: (q, v, o) => go.set(o?.left).go?.go?.do('left'),\n                right: (q, v, o) => go.set(o?.right).go?.go?.do('right'),\n            } },\n            React.createElement(c.HStack, { ref: ref, h: '100%', overflow: 'hidden' }, content));\n    };\n};\n//# sourceMappingURL=data:application/json;base64,",
        "link_id": 2643
      }
    },
    {
      "id": 2644,
      "type_id": 3,
      "from_id": 2639,
      "to_id": 2643,
      "value": {
        "id": 790,
        "value": "generated",
        "link_id": 2644
      }
    },
    {
      "id": 2645,
      "type_id": 143,
      "from_id": 2643,
      "to_id": 2639
    },
    {
      "id": 2646,
      "type_id": 3,
      "from_id": 2639,
      "to_id": 2645
    },
    {
      "id": 2650,
      "type_id": 717,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 821,
        "value": "({ deep, data, require, Go }) => {\n  const { MdEdit, MdPreview, MdSaveAlt } = require(\"react-icons/md\");\n  const React = require('react');\n\n  const {\n    TypedIcon, DownIcon, UpIcon, TypeIcon, InIcon, OutIcon, FromIcon, ToIcon,\n    useSymbol,\n  } = require('@deep-foundation/perception-app');\n  \n  const c = require('@chakra-ui/react');\n\n  const dpl = '@deep-foundation/perception-links';\n  const dc = '@deep-foundation/core';\n  \n  const History = deep.idLocal(dpl, 'History');\n  const Header = deep.idLocal(dpl, 'Header');\n  const Search = deep.idLocal(dpl, 'Search');\n  const TreeQuery = deep.idLocal(dpl, 'TreeQuery');\n  const TreeList = deep.idLocal(dpl, 'TreeList');\n  const TreeLink = deep.idLocal(dpl, 'TreeLink');\n  const TreeLinkInsert = deep.idLocal(dpl, 'TreeLinkInsert');\n  const TreeLinkDelete = deep.idLocal(dpl, 'TreeLinkDelete');\n  const TreeLinkButton = deep.idLocal(dpl, 'TreeLinkButton');\n\n  const Item = ({ l, isActive }) => {\n    const go = Go.useGo();\n    return <c.Box ref={go.ref} w='100%'>\n      <go.Handler\n        handlerId={TreeLinkButton} linkId={l.id}\n        onClick={() => go.go.focus(l.id).go.do(l.id)} variant='full'\n        isActive={isActive} w='100%'\n      />\n    </c.Box>;\n  }\n\n  return ({\n    go,\n    handlerId,\n\n    isActive,\n    operations = true,\n    saveHistory = false,\n\n    children,\n  }, ref) => {\n    const [results, setResults] = React.useState([]);\n\n    const content = <c.Flex ref={ref} direction='column'\n      position='relative' minW='30em' maxW='30em' h='100%'\n      bg={isActive ? 'deepBg' : 'deepBgDark'}\n    >\n      <c.VStack ref={ref}\n        flex={1}\n        w='100%' h='100%'\n      >\n        <go.Handler\n          handlerId={TreeLinkButton} linkId={go.linkId}\n          onClick={() => go.focus('current').go.do('current')} needParent={false}\n          isActive={go.value === 'current'} w='100%'\n        />\n        <c.Box w='100%'>\n          <go.Provider linkId={Search}>\n            <go.Handler\n              handlerId={Search} linkId={go.linkId}\n              isActive={go.value === Search} w='100%'\n              onSearch={(results) => setResults(results)}\n            />\n          </go.Provider>\n        </c.Box>\n        <go.Provider linkId={TreeList}>\n          <go.Handler\n            handlerId={TreeList} linkId={TreeList} links={results}\n            isActive={go.value === TreeList} w='100%' flex='1'\n          />\n        </go.Provider>\n      </c.VStack>\n      {children}\n    </c.Flex>;\n\n    React.useEffect(() => {\n      if (go?.current) go?.current.scroll();\n    }, [go.value]);\n\n    const nav = go.useNav();\n    nav('current', 'prev', 'up', 'next', Search);\n    nav(Search, 'prev', 'current', 'next', TreeList);\n    nav(TreeList, 'prev', Search, 'next', TreeList);\n\n    return <go.Provider\n      onDo={{\n        current: () => go.do('next', { linkId: go.linkId, handlerId: TreeLink }),\n        focus: () => go.focus('current').go.scroll();\n        up: () =>  go.focus(nav.get(go.value, 'up')),\n        down: () => go.focus(nav.get(go.value, 'down')),\n        space: () => go.go.do('next', {\n          linkId: go.value === 'current' ? go.linkId : go.value === TreeList ? go(TreeList).linkId : go.linkId,\n          handlerId: TreeLink\n        }),\n      }}\n      onFocus={{\n        current: () => go.save(handlerId),\n        up: () => go?.go.do('up'),\n        down: () => go?.go.do('down'),\n      }}\n    >\n      {content}\n    </go.Provider>\n  };\n}\n",
        "link_id": 2650
      }
    },
    {
      "id": 2651,
      "type_id": 3,
      "from_id": 2586,
      "to_id": 2650,
      "value": {
        "id": 792,
        "value": "TreeQueryComponent",
        "link_id": 2651
      }
    },
    {
      "id": 2652,
      "type_id": 717,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 794,
        "value": "async ({ deep, data, Go, require }) => {\n  const React = require('react');\n  const { PiGraphBold } = require(\"react-icons/pi\");\n  const c = require('@chakra-ui/react');\n  const _ = require('lodash');\n\n  const dpl = '@deep-foundation/perception-links';\n  const dc = '@deep-foundation/core';\n\n  const Dpl = deep.idLocal(dpl);\n  const Focus = deep.idLocal(dc, 'Focus');\n  const Active = deep.idLocal(dc, 'Active');\n  const History = deep.idLocal(dpl, 'History');\n  const Layer = deep.idLocal(dpl, 'Layer');\n  const Graph = deep.idLocal(dpl, 'Graph');\n  const GraphLink = deep.idLocal(dpl, 'GraphLink');\n  const containTree = deep.idLocal(dc, 'containTree');\n\n  const Link = React.memo(({ isActive, ...props }) => {\n    const go = Go.useGo();\n    return <>\n      <go.Handler handlerId={GraphLink} isActive={isActive} {...props} />\n    </>;\n  }, _.isEqual);\n\n  return ({\n    go,\n    using = false,\n    initialId = deep.linkId,\n  }, ref) => {\n    const initialOpened = React.useMemo(() => {\n      if (!initialId) return [];\n      return [{ link: deep.get(initialId) }];\n    }, []);\n    const [opened, setOpened] = React.useState(initialOpened);\n    const parental = React.useMemo(() => {\n      const byParent = {};\n      for (let i = 0; i < opened.length; i++) {\n        if (opened[i]?.parentId) {\n          byParent[opened[i].parentId] = byParent[opened[i]?.parentId] || [];\n          byParent[opened[i].parentId].push(opened[i]);\n        }\n      }\n      return byParent;\n    }, [opened]);\n    React.useEffect(() => {\n      if (initialId) go.do('use', { id: initialId });\n    }, []);\n    // deep.useSubscription({\n    //   type_id: { _in: [History, Focus, Active] },\n    //   from_id: deep.linkId,\n    //   order_by: { id: 'desc' },\n    //   return: {\n    //     item: { relation: 'to' },\n    //   },\n    // });\n    // const history = deep.useLocalSubscription({\n    //   type_id: History,\n    //   from_id: deep.linkId,\n    //   order_by: { id: 'desc' },\n    // });\n\n    React.useEffect(() => {\n      if (go?.current) {\n        if (using && go.root()?.data?.usedId != go.value) go.root().do('use', { id: go.value });\n        go.do('changed', { id: go.value });\n        go?.current?.do('scroll');\n      }\n    }, [go.value]);\n\n    const mapOpened = (opened, i) => <go.Provider key={opened.link.id} linkId={opened.link.id}>\n      {/* <Link position={{ y: 0, x: 0-(i * 90) }} locked/> */}\n      <Link isActive={go.value === opened.link.id}>\n        {!!parental[opened.link?.id] && parental[opened.link.id].map(mapOpened)}\n      </Link>\n    </go.Provider>;\n\n    return <go.On do={{\n      focus: (g, v, o) => o?.id ? go.focus(o?.id) : initialId && !go.value ? go.focus(initialId) : undefined,\n      use: (g, v, o) => {\n        o?.id && o?.id != go.value && go(o?.id) && go.set(o.id).go(o?.id).go?.do('scroll').go?.do('use')\n      },\n      open: (g, v, { id, ids: _ids, parentId, focus } = {}) => {\n        const ids = id ? [id] : _ids;\n        if (ids?.length) {\n          const toAdd = [];\n          for (let i in ids) {\n            const id = ids[i];\n            if (!opened.find(o => o?.link?.id === id)) toAdd.push({ link: deep.get(id), parentId });\n          }\n          if (toAdd.length) setOpened([...opened, ...toAdd]);\n          if (focus && ids[0]) go.awaitRef(ids[0]).then(g => {\n            go.focus(ids[0]).go(ids[0]).do('scroll');\n          });\n        }\n      },\n    }}>\n      <c.Box\n        w='100%' h='100%'\n        ref={ref}\n      >\n        <go.Graph onLoaded={cy => {\n          window.cy = cy;\n        }}>\n          {<go.Provider linkId={deep.linkId}>\n            <Link />\n          </go.Provider>}\n          <go.GraphStyle stylesheet={[\n            {\n              selector: '.link-children',\n              style: {\n                'background-opacity': 0.05,\n                'background-color': 'deepBgGraphChildren',\n                opacity: 1,\n                'background-fit': 'cover',\n                'border-width': 0,\n              }\n            },\n            {\n              selector: '.link-file',\n              style: {\n                color: 'deepColor',\n                width: 30,\n                height: 30,\n                'font-size': 16,\n                'text-margin-y': 23, // -4\n                'text-margin-x': -2,\n                label: 'data(label)',\n                \"text-wrap\": \"wrap\",\n                'background-image': 'data(image)',\n                'background-fit': 'cover',\n              }\n            },\n            {\n              selector: '.link-ghost',\n              style: {\n                color: 'deepLinkNodeColor',\n                'background-opacity': 0,\n                'background-color': 'deepLinkNodeBg',\n                width: 30,\n                height: 30,\n                'font-size': 16,\n                'text-margin-y': 23, // -4\n                'text-margin-x': 1,\n                'label': 'data(label)',\n                \"text-wrap\": \"wrap\",\n                'background-fit': 'cover',\n                'border-color': 'deepLinkNodeColor',\n                'border-width': 3,\n              }\n            },\n            {\n              selector: '.link-node',\n              style: {\n                color: 'deepLinkNodeColor',\n                'background-opacity': 1,\n                'background-color': 'deepLinkNodeBg',\n                opacity: 1,\n                width: 30,\n                height: 30,\n                'font-size': 16,\n                'text-margin-y': 23, // -4\n                'text-margin-x': 1,\n                'label': 'data(label)',\n                \"text-wrap\": \"wrap\",\n                'background-fit': 'cover',\n              }\n            },\n            {\n              selector: '.link-node-active',\n              style: {\n                \"border-color\": \"deepColorActive\",\n                'border-width': '3',\n              }\n            },\n            {\n              selector: '.link-edge',\n              style: {\n                width: 1,\n                'curve-style': 'bezier',\n                'target-distance-from-node': 8,\n                'source-distance-from-node': 1,\n              }\n            },\n            {\n              selector: '.link-edge-active',\n              style: {\n                \"line-color\": \"deepColorActive\",\n              }\n            },\n            {\n              selector: '.link-to',\n              style: {\n                'target-arrow-shape': 'triangle',\n              }\n            },\n            {\n              selector: '.link-from',\n              style: {\n                'target-arrow-shape': 'tee',\n              }\n            },\n            {\n              selector: '.link-type',\n              style: {\n                'target-arrow-shape': 'triangle',\n                'line-style': 'dashed',\n                'line-dash-pattern': [5, 5]\n              }\n            },\n          ]} />\n          {opened.map(mapOpened)}\n        </go.Graph>\n      </c.Box>\n    </go.On>;\n  };\n}",
        "link_id": 2652
      }
    },
    {
      "id": 2653,
      "type_id": 3,
      "from_id": 2586,
      "to_id": 2652,
      "value": {
        "id": 793,
        "value": "GraphComponent",
        "link_id": 2653
      }
    },
    {
      "id": 2656,
      "type_id": 30,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 796,
        "value": "async ({ deep, data, Go, require }) => {\n    const React = require('react');\n    const { PiGraphBold } = require(\"react-icons/pi\");\n    const c = require('@chakra-ui/react');\n    const _ = require('lodash');\n    const dpl = '@deep-foundation/perception-links';\n    const dc = '@deep-foundation/core';\n    const Dpl = deep.idLocal(dpl);\n    const Focus = deep.idLocal(dc, 'Focus');\n    const Active = deep.idLocal(dc, 'Active');\n    const History = deep.idLocal(dpl, 'History');\n    const Layer = deep.idLocal(dpl, 'Layer');\n    const Graph = deep.idLocal(dpl, 'Graph');\n    const GraphLink = deep.idLocal(dpl, 'GraphLink');\n    const containTree = deep.idLocal(dc, 'containTree');\n    const Link = React.memo(({ isActive, ...props }) => {\n        const go = Go.useGo();\n        return React.createElement(React.Fragment, null,\n            React.createElement(go.Handler, { handlerId: GraphLink, isActive: isActive, ...props }));\n    }, _.isEqual);\n    return ({ go, using = false, initialId = deep.linkId, }, ref) => {\n        const initialOpened = React.useMemo(() => {\n            if (!initialId)\n                return [];\n            return [{ link: deep.get(initialId) }];\n        }, []);\n        const [opened, setOpened] = React.useState(initialOpened);\n        const parental = React.useMemo(() => {\n            const byParent = {};\n            for (let i = 0; i < opened.length; i++) {\n                if (opened[i]?.parentId) {\n                    byParent[opened[i].parentId] = byParent[opened[i]?.parentId] || [];\n                    byParent[opened[i].parentId].push(opened[i]);\n                }\n            }\n            return byParent;\n        }, [opened]);\n        React.useEffect(() => {\n            if (initialId)\n                go.do('use', { id: initialId });\n        }, []);\n        React.useEffect(() => {\n            if (go?.current) {\n                if (using && go.root()?.data?.usedId != go.value)\n                    go.root().do('use', { id: go.value });\n                go.do('changed', { id: go.value });\n                go?.current?.do('scroll');\n            }\n        }, [go.value]);\n        const mapOpened = (opened, i) => React.createElement(go.Provider, { key: opened.link.id, linkId: opened.link.id },\n            React.createElement(Link, { isActive: go.value === opened.link.id }, !!parental[opened.link?.id] && parental[opened.link.id].map(mapOpened)));\n        return React.createElement(go.On, { do: {\n                focus: (g, v, o) => o?.id ? go.focus(o?.id) : initialId && !go.value ? go.focus(initialId) : undefined,\n                use: (g, v, o) => {\n                    o?.id && o?.id != go.value && go(o?.id) && go.set(o.id).go(o?.id).go?.do('scroll').go?.do('use');\n                },\n                open: (g, v, { id, ids: _ids, parentId, focus } = {}) => {\n                    const ids = id ? [id] : _ids;\n                    if (ids?.length) {\n                        const toAdd = [];\n                        for (let i in ids) {\n                            const id = ids[i];\n                            if (!opened.find(o => o?.link?.id === id))\n                                toAdd.push({ link: deep.get(id), parentId });\n                        }\n                        if (toAdd.length)\n                            setOpened([...opened, ...toAdd]);\n                        if (focus && ids[0])\n                            go.awaitRef(ids[0]).then(g => {\n                                go.focus(ids[0]).go(ids[0]).do('scroll');\n                            });\n                    }\n                },\n            } },\n            React.createElement(c.Box, { w: '100%', h: '100%', ref: ref },\n                React.createElement(go.Graph, { onLoaded: cy => {\n                        window.cy = cy;\n                    } },\n                    React.createElement(go.Provider, { linkId: deep.linkId },\n                        React.createElement(Link, null)),\n                    React.createElement(go.GraphStyle, { stylesheet: [\n                            {\n                                selector: '.link-children',\n                                style: {\n                                    'background-opacity': 0.05,\n                                    'background-color': 'deepBgGraphChildren',\n                                    opacity: 1,\n                                    'background-fit': 'cover',\n                                    'border-width': 0,\n                                }\n                            },\n                            {\n                                selector: '.link-file',\n                                style: {\n                                    color: 'deepColor',\n                                    width: 30,\n                                    height: 30,\n                                    'font-size': 16,\n                                    'text-margin-y': 23,\n                                    'text-margin-x': -2,\n                                    label: 'data(label)',\n                                    \"text-wrap\": \"wrap\",\n                                    'background-image': 'data(image)',\n                                    'background-fit': 'cover',\n                                }\n                            },\n                            {\n                                selector: '.link-ghost',\n                                style: {\n                                    color: 'deepLinkNodeColor',\n                                    'background-opacity': 0,\n                                    'background-color': 'deepLinkNodeBg',\n                                    width: 30,\n                                    height: 30,\n                                    'font-size': 16,\n                                    'text-margin-y': 23,\n                                    'text-margin-x': 1,\n                                    'label': 'data(label)',\n                                    \"text-wrap\": \"wrap\",\n                                    'background-fit': 'cover',\n                                    'border-color': 'deepLinkNodeColor',\n                                    'border-width': 3,\n                                }\n                            },\n                            {\n                                selector: '.link-node',\n                                style: {\n                                    color: 'deepLinkNodeColor',\n                                    'background-opacity': 1,\n                                    'background-color': 'deepLinkNodeBg',\n                                    opacity: 1,\n                                    width: 30,\n                                    height: 30,\n                                    'font-size': 16,\n                                    'text-margin-y': 23,\n                                    'text-margin-x': 1,\n                                    'label': 'data(label)',\n                                    \"text-wrap\": \"wrap\",\n                                    'background-fit': 'cover',\n                                }\n                            },\n                            {\n                                selector: '.link-node-active',\n                                style: {\n                                    \"border-color\": \"deepColorActive\",\n                                    'border-width': '3',\n                                }\n                            },\n                            {\n                                selector: '.link-edge',\n                                style: {\n                                    width: 1,\n                                    'curve-style': 'bezier',\n                                    'target-distance-from-node': 8,\n                                    'source-distance-from-node': 1,\n                                }\n                            },\n                            {\n                                selector: '.link-edge-active',\n                                style: {\n                                    \"line-color\": \"deepColorActive\",\n                                }\n                            },\n                            {\n                                selector: '.link-to',\n                                style: {\n                                    'target-arrow-shape': 'triangle',\n                                }\n                            },\n                            {\n                                selector: '.link-from',\n                                style: {\n                                    'target-arrow-shape': 'tee',\n                                }\n                            },\n                            {\n                                selector: '.link-type',\n                                style: {\n                                    'target-arrow-shape': 'triangle',\n                                    'line-style': 'dashed',\n                                    'line-dash-pattern': [5, 5]\n                                }\n                            },\n                        ] }),\n                    opened.map(mapOpened))));\n    };\n};\n//# sourceMappingURL=data:application/json;base64,",
        "link_id": 2656
      }
    },
    {
      "id": 2657,
      "type_id": 3,
      "from_id": 2652,
      "to_id": 2656,
      "value": {
        "id": 795,
        "value": "generated",
        "link_id": 2657
      }
    },
    {
      "id": 2658,
      "type_id": 143,
      "from_id": 2656,
      "to_id": 2652
    },
    {
      "id": 2659,
      "type_id": 3,
      "from_id": 2652,
      "to_id": 2658
    },
    {
      "id": 2607,
      "type_id": 1,
      "from_id": 8,
      "to_id": 8,
      "value": {
        "id": 780,
        "value": "",
        "link_id": 2607
      }
    },
    {
      "id": 2710,
      "type_id": 30,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 817,
        "value": "async ({ deep, data, Go, require }) => {\n    const React = require('react');\n    const c = require('@chakra-ui/react');\n    const dpl = '@deep-foundation/perception-links';\n    const dc = '@deep-foundation/core';\n    const Stack = deep.idLocal(dpl, 'Stack');\n    const Any = deep.idLocal(dc, 'Any');\n    const Query = deep.idLocal(dc, 'Query');\n    const TreeList = deep.idLocal(dpl, 'TreeList');\n    const TreeLink = deep.idLocal(dpl, 'TreeLink');\n    const TreeQuery = deep.idLocal(dpl, 'TreeQuery');\n    const Menu = deep.idLocal(dpl, 'Menu');\n    const Layer = deep.idLocal(dpl, 'Layer');\n    const Header = deep.idLocal(dpl, 'Header');\n    const History = deep.idLocal(dpl, 'History');\n    const HistoryHandler = deep.idLocal(dpl, 'HistoryHandler');\n    const handlers = {\n        [Any]: TreeLink,\n        [Query]: TreeQuery,\n    };\n    const getHandlerId = (linkId) => {\n        const l = deep.get(linkId);\n        console.log('getHandlerId', l);\n        return l?.type_id === Query ? TreeList : TreeLink;\n    };\n    function useStore(queryField, defaultValue) {\n        return React.useState(defaultValue);\n    }\n    return ({ go, using = false, queryField = '', saveHistory = false, fullWidth = null, initialId = deep.linkId, initialHandlerId, startProps = {}, }, ref) => {\n        const initialColumns = React.useMemo(() => {\n            if (!initialId)\n                return [];\n            return [[initialId, initialHandlerId || getHandlerId(initialId)]];\n        }, []);\n        const [columns, setColumns] = useStore(queryField, initialColumns);\n        const Item = React.useCallback(({ link, isActive, ...props }) => {\n            const go = Go.useGo();\n            return React.createElement(React.Fragment, null,\n                !!saveHistory && !!isActive && React.createElement(go.Save, { handlerId: link.handlerId }),\n                React.createElement(go.Handler, { linkId: link.id, handlerId: link.handlerId, isActive: isActive, fullWidth: fullWidth, saveHistory: saveHistory, ...props }));\n        }, [saveHistory, fullWidth]);\n        console.log({ columns });\n        const { data: list, ids } = React.useMemo(() => {\n            const ids = [];\n            const data = columns.map(c => {\n                ids.push(c[0]);\n                return { id: c[0], handlerId: c[1] };\n            });\n            return { data, ids };\n        }, [columns]);\n        const [concentrate, setConcentrate] = React.useState();\n        const { ids: concentrated } = deep.useSearch(concentrate, {\n            db: false, sort: false,\n            query: { id: { _in: ids } },\n            skip: !!concentrate,\n        });\n        return React.createElement(go.On, { do: {\n                focus: (g, v, linkId, o) => {\n                    !go.value && go.focus(Stack);\n                    o?.id && go.do('open', o);\n                },\n                use: (g, v, o) => go(Stack).do('use', o),\n                open: (g, v, { id, prevId, handlerId, focus } = {}) => {\n                    if (!id)\n                        throw new Error(`open options must contains id ({ id, prevId?, handlerId? })`);\n                    const founded = columns.find(c => c[0] === id);\n                    const _prevId = prevId || columns[columns.length - 1][0];\n                    if (founded)\n                        go.do('use', { id });\n                    else {\n                        const prevI = columns.findIndex(c => c[0] === _prevId);\n                        setColumns([\n                            ...(!!~prevI ? columns.slice(0, prevI + 1) : []),\n                            [id, handlerId || getHandlerId(id)],\n                            ...(!!~prevI ? columns.slice(prevI + 1) : []),\n                        ]);\n                    }\n                    if (focus)\n                        go(Stack).awaitRef(id).then(g => go(Stack).focus(id).go(id).scroll());\n                },\n                close: (g, v, o) => {\n                    if (!o.id)\n                        throw new Error(`close options must contains id ({ id })`);\n                    setColumns(columns.filter(c => c[0] !== o.id));\n                },\n                concentrate: (g, v, o) => {\n                    setConcentrate(o?.value);\n                },\n            } },\n            React.createElement(go.Provider, { linkId: Stack },\n                React.createElement(go.Component, { path: [dpl, 'Stack'], concentrated: !!concentrate && concentrated, links: list, direction: 'horizontal', Item: Item, using: using, saveHistory: saveHistory, startProps: startProps })));\n    };\n};\n//# sourceMappingURL=data:application/json;base64,",
        "link_id": 2710
      }
    },
    {
      "id": 2711,
      "type_id": 3,
      "from_id": 2637,
      "to_id": 2710,
      "value": {
        "id": 816,
        "value": "generated",
        "link_id": 2711
      }
    },
    {
      "id": 2712,
      "type_id": 143,
      "from_id": 2710,
      "to_id": 2637
    },
    {
      "id": 2713,
      "type_id": 3,
      "from_id": 2637,
      "to_id": 2712
    },
    {
      "id": 2739,
      "type_id": 35,
      "from_id": 145,
      "to_id": 2637
    },
    {
      "id": 2740,
      "type_id": 3,
      "from_id": 2586,
      "to_id": 2739,
      "value": {
        "id": 818,
        "value": "Tree",
        "link_id": 2740
      }
    },
    {
      "id": 2759,
      "type_id": 35,
      "from_id": 145,
      "to_id": 2639
    },
    {
      "id": 2760,
      "type_id": 3,
      "from_id": 2586,
      "to_id": 2759,
      "value": {
        "id": 820,
        "value": "TreeLink",
        "link_id": 2760
      }
    },
    {
      "id": 2773,
      "type_id": 30,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 823,
        "value": "({ deep, data, require, Go }) => {\n    const { MdEdit, MdPreview, MdSaveAlt } = require(\"react-icons/md\");\n    const React = require('react');\n    const { TypedIcon, DownIcon, UpIcon, TypeIcon, InIcon, OutIcon, FromIcon, ToIcon, useSymbol, } = require('@deep-foundation/perception-app');\n    const c = require('@chakra-ui/react');\n    const dpl = '@deep-foundation/perception-links';\n    const dc = '@deep-foundation/core';\n    const History = deep.idLocal(dpl, 'History');\n    const Header = deep.idLocal(dpl, 'Header');\n    const Search = deep.idLocal(dpl, 'Search');\n    const TreeQuery = deep.idLocal(dpl, 'TreeQuery');\n    const TreeList = deep.idLocal(dpl, 'TreeList');\n    const TreeLink = deep.idLocal(dpl, 'TreeLink');\n    const TreeLinkInsert = deep.idLocal(dpl, 'TreeLinkInsert');\n    const TreeLinkDelete = deep.idLocal(dpl, 'TreeLinkDelete');\n    const TreeLinkButton = deep.idLocal(dpl, 'TreeLinkButton');\n    const Item = ({ l, isActive }) => {\n        const go = Go.useGo();\n        return React.createElement(c.Box, { ref: go.ref, w: '100%' },\n            React.createElement(go.Handler, { handlerId: TreeLinkButton, linkId: l.id, onClick: () => go.go.focus(l.id).go.do(l.id), variant: 'full', isActive: isActive, w: '100%' }));\n    };\n    return ({ go, handlerId, isActive, operations = true, saveHistory = false, children, }, ref) => {\n        const [results, setResults] = React.useState([]);\n        const content = React.createElement(c.Flex, { ref: ref, direction: 'column', position: 'relative', minW: '30em', maxW: '30em', h: '100%', bg: isActive ? 'deepBg' : 'deepBgDark' },\n            React.createElement(c.VStack, { ref: ref, flex: 1, w: '100%', h: '100%' },\n                React.createElement(go.Handler, { handlerId: TreeLinkButton, linkId: go.linkId, onClick: () => go.focus('current').go.do('current'), needParent: false, isActive: go.value === 'current', w: '100%' }),\n                React.createElement(c.Box, { w: '100%' },\n                    React.createElement(go.Provider, { linkId: Search },\n                        React.createElement(go.Handler, { handlerId: Search, linkId: go.linkId, isActive: go.value === Search, w: '100%', onSearch: (results) => setResults(results) }))),\n                React.createElement(go.Provider, { linkId: TreeList },\n                    React.createElement(go.Handler, { handlerId: TreeList, linkId: TreeList, links: results, isActive: go.value === TreeList, w: '100%', flex: '1' }))),\n            children);\n        React.useEffect(() => {\n            if (go?.current)\n                go?.current.scroll();\n        }, [go.value]);\n        const nav = go.useNav();\n        nav('current', 'prev', 'up', 'next', Search);\n        nav(Search, 'prev', 'current', 'next', TreeList);\n        nav(TreeList, 'prev', Search, 'next', TreeList);\n        return React.createElement(go.Provider, { onDo: {\n                current: () => go.do('next', { linkId: go.linkId, handlerId: TreeLink }),\n                focus: () => go.focus('current').go.scroll(),\n                up: () => go.focus(nav.get(go.value, 'up')),\n                down: () => go.focus(nav.get(go.value, 'down')),\n                space: () => go.go.do('next', {\n                    linkId: go.value === 'current' ? go.linkId : go.value === TreeList ? go(TreeList).linkId : go.linkId,\n                    handlerId: TreeLink\n                }),\n            }, onFocus: {\n                current: () => go.save(handlerId),\n                up: () => go?.go.do('up'),\n                down: () => go?.go.do('down'),\n            } }, content);\n    };\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsibW9kdWxlLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxDQUFDLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRTtJQUM5QixNQUFNLEVBQUUsTUFBTSxFQUFFLFNBQVMsRUFBRSxTQUFTLEVBQUUsR0FBRyxPQUFPLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztJQUNuRSxNQUFNLEtBQUssR0FBRyxPQUFPLENBQUMsT0FBTyxDQUFDLENBQUM7SUFFL0IsTUFBTSxFQUNKLFNBQVMsRUFBRSxRQUFRLEVBQUUsTUFBTSxFQUFFLFFBQVEsRUFBRSxNQUFNLEVBQUUsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLEVBQ3hFLFNBQVMsR0FDVixHQUFHLE9BQU8sQ0FBQyxpQ0FBaUMsQ0FBQyxDQUFDO0lBRS9DLE1BQU0sQ0FBQyxHQUFHLE9BQU8sQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDO0lBRXRDLE1BQU0sR0FBRyxHQUFHLG1DQUFtQyxDQUFDO0lBQ2hELE1BQU0sRUFBRSxHQUFHLHVCQUF1QixDQUFDO0lBRW5DLE1BQU0sT0FBTyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLFNBQVMsQ0FBQyxDQUFDO0lBQzdDLE1BQU0sTUFBTSxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLFFBQVEsQ0FBQyxDQUFDO0lBQzNDLE1BQU0sTUFBTSxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLFFBQVEsQ0FBQyxDQUFDO0lBQzNDLE1BQU0sU0FBUyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLFdBQVcsQ0FBQyxDQUFDO0lBQ2pELE1BQU0sUUFBUSxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLFVBQVUsQ0FBQyxDQUFDO0lBQy9DLE1BQU0sUUFBUSxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLFVBQVUsQ0FBQyxDQUFDO0lBQy9DLE1BQU0sY0FBYyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLGdCQUFnQixDQUFDLENBQUM7SUFDM0QsTUFBTSxjQUFjLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxHQUFHLEVBQUUsZ0JBQWdCLENBQUMsQ0FBQztJQUMzRCxNQUFNLGNBQWMsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsQ0FBQyxDQUFDO0lBRTNELE1BQU0sSUFBSSxHQUFHLENBQUMsRUFBRSxDQUFDLEVBQUUsUUFBUSxFQUFFLEVBQUUsRUFBRTtRQUMvQixNQUFNLEVBQUUsR0FBRyxFQUFFLENBQUMsS0FBSyxFQUFFLENBQUM7UUFDdEIsT0FBTyxvQkFBQyxDQUFDLENBQUMsR0FBRyxJQUFDLEdBQUcsRUFBRSxFQUFFLENBQUMsR0FBRyxFQUFFLENBQUMsRUFBQyxNQUFNO1lBQ2pDLG9CQUFDLEVBQUUsQ0FBQyxPQUFPLElBQ1QsU0FBUyxFQUFFLGNBQWMsRUFBRSxNQUFNLEVBQUUsQ0FBQyxDQUFDLEVBQUUsRUFDdkMsT0FBTyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxPQUFPLEVBQUMsTUFBTSxFQUM1RCxRQUFRLEVBQUUsUUFBUSxFQUFFLENBQUMsRUFBQyxNQUFNLEdBQzVCLENBQ0ksQ0FBQztJQUNYLENBQUMsQ0FBQTtJQUVELE9BQU8sQ0FBQyxFQUNOLEVBQUUsRUFDRixTQUFTLEVBRVQsUUFBUSxFQUNSLFVBQVUsR0FBRyxJQUFJLEVBQ2pCLFdBQVcsR0FBRyxLQUFLLEVBRW5CLFFBQVEsR0FDVCxFQUFFLEdBQUcsRUFBRSxFQUFFO1FBQ1IsTUFBTSxDQUFDLE9BQU8sRUFBRSxVQUFVLENBQUMsR0FBRyxLQUFLLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxDQUFDO1FBRWpELE1BQU0sT0FBTyxHQUFHLG9CQUFDLENBQUMsQ0FBQyxJQUFJLElBQUMsR0FBRyxFQUFFLEdBQUcsRUFBRSxTQUFTLEVBQUMsUUFBUSxFQUNsRCxRQUFRLEVBQUMsVUFBVSxFQUFDLElBQUksRUFBQyxNQUFNLEVBQUMsSUFBSSxFQUFDLE1BQU0sRUFBQyxDQUFDLEVBQUMsTUFBTSxFQUNwRCxFQUFFLEVBQUUsUUFBUSxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLFlBQVk7WUFFdEMsb0JBQUMsQ0FBQyxDQUFDLE1BQU0sSUFBQyxHQUFHLEVBQUUsR0FBRyxFQUNoQixJQUFJLEVBQUUsQ0FBQyxFQUNQLENBQUMsRUFBQyxNQUFNLEVBQUMsQ0FBQyxFQUFDLE1BQU07Z0JBRWpCLG9CQUFDLEVBQUUsQ0FBQyxPQUFPLElBQ1QsU0FBUyxFQUFFLGNBQWMsRUFBRSxNQUFNLEVBQUUsRUFBRSxDQUFDLE1BQU0sRUFDNUMsT0FBTyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxLQUFLLENBQUMsU0FBUyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxTQUFTLENBQUMsRUFBRSxVQUFVLEVBQUUsS0FBSyxFQUN0RSxRQUFRLEVBQUUsRUFBRSxDQUFDLEtBQUssS0FBSyxTQUFTLEVBQUUsQ0FBQyxFQUFDLE1BQU0sR0FDMUM7Z0JBQ0Ysb0JBQUMsQ0FBQyxDQUFDLEdBQUcsSUFBQyxDQUFDLEVBQUMsTUFBTTtvQkFDYixvQkFBQyxFQUFFLENBQUMsUUFBUSxJQUFDLE1BQU0sRUFBRSxNQUFNO3dCQUN6QixvQkFBQyxFQUFFLENBQUMsT0FBTyxJQUNULFNBQVMsRUFBRSxNQUFNLEVBQUUsTUFBTSxFQUFFLEVBQUUsQ0FBQyxNQUFNLEVBQ3BDLFFBQVEsRUFBRSxFQUFFLENBQUMsS0FBSyxLQUFLLE1BQU0sRUFBRSxDQUFDLEVBQUMsTUFBTSxFQUN2QyxRQUFRLEVBQUUsQ0FBQyxPQUFPLEVBQUUsRUFBRSxDQUFDLFVBQVUsQ0FBQyxPQUFPLENBQUMsR0FDMUMsQ0FDVSxDQUNSO2dCQUNSLG9CQUFDLEVBQUUsQ0FBQyxRQUFRLElBQUMsTUFBTSxFQUFFLFFBQVE7b0JBQzNCLG9CQUFDLEVBQUUsQ0FBQyxPQUFPLElBQ1QsU0FBUyxFQUFFLFFBQVEsRUFBRSxNQUFNLEVBQUUsUUFBUSxFQUFFLEtBQUssRUFBRSxPQUFPLEVBQ3JELFFBQVEsRUFBRSxFQUFFLENBQUMsS0FBSyxLQUFLLFFBQVEsRUFBRSxDQUFDLEVBQUMsTUFBTSxFQUFDLElBQUksRUFBQyxHQUFHLEdBQ2xELENBQ1UsQ0FDTDtZQUNWLFFBQVEsQ0FDRixDQUFDO1FBRVYsS0FBSyxDQUFDLFNBQVMsQ0FBQyxHQUFHLEVBQUU7WUFDbkIsSUFBSSxFQUFFLEVBQUUsT0FBTztnQkFBRSxFQUFFLEVBQUUsT0FBTyxDQUFDLE1BQU0sRUFBRSxDQUFDO1FBQ3hDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO1FBRWYsTUFBTSxHQUFHLEdBQUcsRUFBRSxDQUFDLE1BQU0sRUFBRSxDQUFDO1FBQ3hCLEdBQUcsQ0FBQyxTQUFTLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRSxNQUFNLEVBQUUsTUFBTSxDQUFDLENBQUM7UUFDN0MsR0FBRyxDQUFDLE1BQU0sRUFBRSxNQUFNLEVBQUUsU0FBUyxFQUFFLE1BQU0sRUFBRSxRQUFRLENBQUMsQ0FBQztRQUNqRCxHQUFHLENBQUMsUUFBUSxFQUFFLE1BQU0sRUFBRSxNQUFNLEVBQUUsTUFBTSxFQUFFLFFBQVEsQ0FBQyxDQUFDO1FBRWhELE9BQU8sb0JBQUMsRUFBRSxDQUFDLFFBQVEsSUFDakIsSUFBSSxFQUFFO2dCQUNKLE9BQU8sRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLE1BQU0sRUFBRSxFQUFFLE1BQU0sRUFBRSxFQUFFLENBQUMsTUFBTSxFQUFFLFNBQVMsRUFBRSxRQUFRLEVBQUUsQ0FBQztnQkFDeEUsS0FBSyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxLQUFLLENBQUMsU0FBUyxDQUFDLENBQUMsRUFBRSxDQUFDLE1BQU0sRUFBRTtnQkFDNUMsRUFBRSxFQUFFLEdBQUcsRUFBRSxDQUFFLEVBQUUsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxDQUFDO2dCQUM1QyxJQUFJLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxLQUFLLEVBQUUsTUFBTSxDQUFDLENBQUM7Z0JBQy9DLEtBQUssRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxNQUFNLEVBQUU7b0JBQzVCLE1BQU0sRUFBRSxFQUFFLENBQUMsS0FBSyxLQUFLLFNBQVMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEtBQUssS0FBSyxRQUFRLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxRQUFRLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxNQUFNO29CQUNwRyxTQUFTLEVBQUUsUUFBUTtpQkFDcEIsQ0FBQzthQUNILEVBQ0QsT0FBTyxFQUFFO2dCQUNQLE9BQU8sRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQztnQkFDakMsRUFBRSxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQztnQkFDekIsSUFBSSxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLE1BQU0sQ0FBQzthQUM5QixJQUVBLE9BQU8sQ0FDSSxDQUFBO0lBQ2hCLENBQUMsQ0FBQztBQUNKLENBQUMsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbIih7IGRlZXAsIGRhdGEsIHJlcXVpcmUsIEdvIH0pID0+IHtcbiAgY29uc3QgeyBNZEVkaXQsIE1kUHJldmlldywgTWRTYXZlQWx0IH0gPSByZXF1aXJlKFwicmVhY3QtaWNvbnMvbWRcIik7XG4gIGNvbnN0IFJlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcblxuICBjb25zdCB7XG4gICAgVHlwZWRJY29uLCBEb3duSWNvbiwgVXBJY29uLCBUeXBlSWNvbiwgSW5JY29uLCBPdXRJY29uLCBGcm9tSWNvbiwgVG9JY29uLFxuICAgIHVzZVN5bWJvbCxcbiAgfSA9IHJlcXVpcmUoJ0BkZWVwLWZvdW5kYXRpb24vcGVyY2VwdGlvbi1hcHAnKTtcbiAgXG4gIGNvbnN0IGMgPSByZXF1aXJlKCdAY2hha3JhLXVpL3JlYWN0Jyk7XG5cbiAgY29uc3QgZHBsID0gJ0BkZWVwLWZvdW5kYXRpb24vcGVyY2VwdGlvbi1saW5rcyc7XG4gIGNvbnN0IGRjID0gJ0BkZWVwLWZvdW5kYXRpb24vY29yZSc7XG4gIFxuICBjb25zdCBIaXN0b3J5ID0gZGVlcC5pZExvY2FsKGRwbCwgJ0hpc3RvcnknKTtcbiAgY29uc3QgSGVhZGVyID0gZGVlcC5pZExvY2FsKGRwbCwgJ0hlYWRlcicpO1xuICBjb25zdCBTZWFyY2ggPSBkZWVwLmlkTG9jYWwoZHBsLCAnU2VhcmNoJyk7XG4gIGNvbnN0IFRyZWVRdWVyeSA9IGRlZXAuaWRMb2NhbChkcGwsICdUcmVlUXVlcnknKTtcbiAgY29uc3QgVHJlZUxpc3QgPSBkZWVwLmlkTG9jYWwoZHBsLCAnVHJlZUxpc3QnKTtcbiAgY29uc3QgVHJlZUxpbmsgPSBkZWVwLmlkTG9jYWwoZHBsLCAnVHJlZUxpbmsnKTtcbiAgY29uc3QgVHJlZUxpbmtJbnNlcnQgPSBkZWVwLmlkTG9jYWwoZHBsLCAnVHJlZUxpbmtJbnNlcnQnKTtcbiAgY29uc3QgVHJlZUxpbmtEZWxldGUgPSBkZWVwLmlkTG9jYWwoZHBsLCAnVHJlZUxpbmtEZWxldGUnKTtcbiAgY29uc3QgVHJlZUxpbmtCdXR0b24gPSBkZWVwLmlkTG9jYWwoZHBsLCAnVHJlZUxpbmtCdXR0b24nKTtcblxuICBjb25zdCBJdGVtID0gKHsgbCwgaXNBY3RpdmUgfSkgPT4ge1xuICAgIGNvbnN0IGdvID0gR28udXNlR28oKTtcbiAgICByZXR1cm4gPGMuQm94IHJlZj17Z28ucmVmfSB3PScxMDAlJz5cbiAgICAgIDxnby5IYW5kbGVyXG4gICAgICAgIGhhbmRsZXJJZD17VHJlZUxpbmtCdXR0b259IGxpbmtJZD17bC5pZH1cbiAgICAgICAgb25DbGljaz17KCkgPT4gZ28uZ28uZm9jdXMobC5pZCkuZ28uZG8obC5pZCl9IHZhcmlhbnQ9J2Z1bGwnXG4gICAgICAgIGlzQWN0aXZlPXtpc0FjdGl2ZX0gdz0nMTAwJSdcbiAgICAgIC8+XG4gICAgPC9jLkJveD47XG4gIH1cblxuICByZXR1cm4gKHtcbiAgICBnbyxcbiAgICBoYW5kbGVySWQsXG5cbiAgICBpc0FjdGl2ZSxcbiAgICBvcGVyYXRpb25zID0gdHJ1ZSxcbiAgICBzYXZlSGlzdG9yeSA9IGZhbHNlLFxuXG4gICAgY2hpbGRyZW4sXG4gIH0sIHJlZikgPT4ge1xuICAgIGNvbnN0IFtyZXN1bHRzLCBzZXRSZXN1bHRzXSA9IFJlYWN0LnVzZVN0YXRlKFtdKTtcblxuICAgIGNvbnN0IGNvbnRlbnQgPSA8Yy5GbGV4IHJlZj17cmVmfSBkaXJlY3Rpb249J2NvbHVtbidcbiAgICAgIHBvc2l0aW9uPSdyZWxhdGl2ZScgbWluVz0nMzBlbScgbWF4Vz0nMzBlbScgaD0nMTAwJSdcbiAgICAgIGJnPXtpc0FjdGl2ZSA/ICdkZWVwQmcnIDogJ2RlZXBCZ0RhcmsnfVxuICAgID5cbiAgICAgIDxjLlZTdGFjayByZWY9e3JlZn1cbiAgICAgICAgZmxleD17MX1cbiAgICAgICAgdz0nMTAwJScgaD0nMTAwJSdcbiAgICAgID5cbiAgICAgICAgPGdvLkhhbmRsZXJcbiAgICAgICAgICBoYW5kbGVySWQ9e1RyZWVMaW5rQnV0dG9ufSBsaW5rSWQ9e2dvLmxpbmtJZH1cbiAgICAgICAgICBvbkNsaWNrPXsoKSA9PiBnby5mb2N1cygnY3VycmVudCcpLmdvLmRvKCdjdXJyZW50Jyl9IG5lZWRQYXJlbnQ9e2ZhbHNlfVxuICAgICAgICAgIGlzQWN0aXZlPXtnby52YWx1ZSA9PT0gJ2N1cnJlbnQnfSB3PScxMDAlJ1xuICAgICAgICAvPlxuICAgICAgICA8Yy5Cb3ggdz0nMTAwJSc+XG4gICAgICAgICAgPGdvLlByb3ZpZGVyIGxpbmtJZD17U2VhcmNofT5cbiAgICAgICAgICAgIDxnby5IYW5kbGVyXG4gICAgICAgICAgICAgIGhhbmRsZXJJZD17U2VhcmNofSBsaW5rSWQ9e2dvLmxpbmtJZH1cbiAgICAgICAgICAgICAgaXNBY3RpdmU9e2dvLnZhbHVlID09PSBTZWFyY2h9IHc9JzEwMCUnXG4gICAgICAgICAgICAgIG9uU2VhcmNoPXsocmVzdWx0cykgPT4gc2V0UmVzdWx0cyhyZXN1bHRzKX1cbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgPC9nby5Qcm92aWRlcj5cbiAgICAgICAgPC9jLkJveD5cbiAgICAgICAgPGdvLlByb3ZpZGVyIGxpbmtJZD17VHJlZUxpc3R9PlxuICAgICAgICAgIDxnby5IYW5kbGVyXG4gICAgICAgICAgICBoYW5kbGVySWQ9e1RyZWVMaXN0fSBsaW5rSWQ9e1RyZWVMaXN0fSBsaW5rcz17cmVzdWx0c31cbiAgICAgICAgICAgIGlzQWN0aXZlPXtnby52YWx1ZSA9PT0gVHJlZUxpc3R9IHc9JzEwMCUnIGZsZXg9JzEnXG4gICAgICAgICAgLz5cbiAgICAgICAgPC9nby5Qcm92aWRlcj5cbiAgICAgIDwvYy5WU3RhY2s+XG4gICAgICB7Y2hpbGRyZW59XG4gICAgPC9jLkZsZXg+O1xuXG4gICAgUmVhY3QudXNlRWZmZWN0KCgpID0+IHtcbiAgICAgIGlmIChnbz8uY3VycmVudCkgZ28/LmN1cnJlbnQuc2Nyb2xsKCk7XG4gICAgfSwgW2dvLnZhbHVlXSk7XG5cbiAgICBjb25zdCBuYXYgPSBnby51c2VOYXYoKTtcbiAgICBuYXYoJ2N1cnJlbnQnLCAncHJldicsICd1cCcsICduZXh0JywgU2VhcmNoKTtcbiAgICBuYXYoU2VhcmNoLCAncHJldicsICdjdXJyZW50JywgJ25leHQnLCBUcmVlTGlzdCk7XG4gICAgbmF2KFRyZWVMaXN0LCAncHJldicsIFNlYXJjaCwgJ25leHQnLCBUcmVlTGlzdCk7XG5cbiAgICByZXR1cm4gPGdvLlByb3ZpZGVyXG4gICAgICBvbkRvPXt7XG4gICAgICAgIGN1cnJlbnQ6ICgpID0+IGdvLmRvKCduZXh0JywgeyBsaW5rSWQ6IGdvLmxpbmtJZCwgaGFuZGxlcklkOiBUcmVlTGluayB9KSxcbiAgICAgICAgZm9jdXM6ICgpID0+IGdvLmZvY3VzKCdjdXJyZW50JykuZ28uc2Nyb2xsKCk7XG4gICAgICAgIHVwOiAoKSA9PiAgZ28uZm9jdXMobmF2LmdldChnby52YWx1ZSwgJ3VwJykpLFxuICAgICAgICBkb3duOiAoKSA9PiBnby5mb2N1cyhuYXYuZ2V0KGdvLnZhbHVlLCAnZG93bicpKSxcbiAgICAgICAgc3BhY2U6ICgpID0+IGdvLmdvLmRvKCduZXh0Jywge1xuICAgICAgICAgIGxpbmtJZDogZ28udmFsdWUgPT09ICdjdXJyZW50JyA/IGdvLmxpbmtJZCA6IGdvLnZhbHVlID09PSBUcmVlTGlzdCA/IGdvKFRyZWVMaXN0KS5saW5rSWQgOiBnby5saW5rSWQsXG4gICAgICAgICAgaGFuZGxlcklkOiBUcmVlTGlua1xuICAgICAgICB9KSxcbiAgICAgIH19XG4gICAgICBvbkZvY3VzPXt7XG4gICAgICAgIGN1cnJlbnQ6ICgpID0+IGdvLnNhdmUoaGFuZGxlcklkKSxcbiAgICAgICAgdXA6ICgpID0+IGdvPy5nby5kbygndXAnKSxcbiAgICAgICAgZG93bjogKCkgPT4gZ28/LmdvLmRvKCdkb3duJyksXG4gICAgICB9fVxuICAgID5cbiAgICAgIHtjb250ZW50fVxuICAgIDwvZ28uUHJvdmlkZXI+XG4gIH07XG59XG4iXX0=",
        "link_id": 2773
      }
    },
    {
      "id": 2774,
      "type_id": 3,
      "from_id": 2650,
      "to_id": 2773,
      "value": {
        "id": 822,
        "value": "generated",
        "link_id": 2774
      }
    },
    {
      "id": 2775,
      "type_id": 143,
      "from_id": 2773,
      "to_id": 2650
    },
    {
      "id": 2776,
      "type_id": 3,
      "from_id": 2650,
      "to_id": 2775
    },
    {
      "id": 19408,
      "type_id": 30,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 1740,
        "value": "",
        "link_id": 19408
      }
    },
    {
      "id": 19409,
      "type_id": 3,
      "from_id": 19402,
      "to_id": 19408,
      "value": {
        "id": 1739,
        "value": "generated",
        "link_id": 19409
      }
    },
    {
      "id": 19410,
      "type_id": 143,
      "from_id": 19408,
      "to_id": 19402
    },
    {
      "id": 19411,
      "type_id": 3,
      "from_id": 19402,
      "to_id": 19410
    },
    {
      "id": 5266,
      "type_id": 1,
      "from_id": 8,
      "to_id": 35
    },
    {
      "id": 5267,
      "type_id": 3,
      "from_id": 2586,
      "to_id": 5266,
      "value": {
        "id": 1157,
        "value": "Children",
        "link_id": 5267
      }
    },
    {
      "id": 5276,
      "type_id": 1,
      "from_id": 5266,
      "to_id": 8
    },
    {
      "id": 5277,
      "type_id": 3,
      "from_id": 2586,
      "to_id": 5276,
      "value": {
        "id": 1161,
        "value": "Link",
        "link_id": 5277
      }
    },
    {
      "id": 5813,
      "type_id": 717,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 1577,
        "value": "async ({ deep, data, Go, require }) => {\n  const React = require('react');\n  const c = require('@chakra-ui/react');\n\n  const dpl = '@deep-foundation/perception-links';\n\n  const GraphLinkPlanet = await deep.id(dpl, 'GraphLinkPlanet');\n\n  return ({\n    go,\n\n    isActive,\n\n    position,\n    locked = false,\n\n    children,\n  }, ref) => {\n    const { cy } = go.useGraph();\n\n    const $inouts = cy.$(`.link-type[target=\"${go.linkId}\"],.link-from[target=\"${go.linkId}\"],.link-to[target=\"${go.linkId}\"]`);\n    const inouts = $inouts.map((e) => {\n      return { id: e.id(), linkId: e.data().linkId };\n    });\n\n    const nav = go.useNav();\n    nav('current', go?.link?.from_id ? 'from_id' : 'current', 'type_id', go?.link?.to_id ? 'to_id' : 'current', inouts?.length ? 'inout' : 'current');\n    nav('from_id', 'from', 'from_id', 'current', 'from_id');\n    nav('to_id', 'current', 'to_id', 'to', 'to_id');\n    nav('type_id', 'type_id', 'type', 'type_id', 'current');\n\n    const [inoutId, setInoutId] = React.useState();\n    nav('inout', 'inout', 'current', 'inout', 'inouted');\n    React.useEffect(() => {\n      $inouts.removeClass('link-edge-active');\n      if (go.value === 'inout' && inoutId) cy.$id(inoutId).addClass('link-edge-active');\n    }, [go.value, inoutId]);\n    React.useEffect(() => {\n      if (!isActive) go.set('current');\n    }, [isActive]);\n\n    return <go.On do={{\n      exec: (g,v,o) => {\n        if (!go.value || go.value === 'current') go.focus(GraphLinkPlanet);\n        if (go.value === GraphLinkPlanet) go.focus('current');\n      },\n      focus: (g,v,o) => {},\n      use: (g,v,o) => {},\n      position: (g,v,o) => {},\n      scroll: (g,v,o) => {\n        console.log(ref);\n        cy.center(ref.current);\n      },\n      ...(go.value === 'inout') ? {\n        left: (g,v,o) => {\n          if (o?.hotkeyEvent?.meta || o?.hotkeyEvent?.shift || o?.hotkeyEvent?.ctrl || o?.hotkeyEvent?.alt) {\n            setInoutId(inouts?.[0]);\n          } else setInoutId(go.prev(inouts, inoutId));\n        },\n        right: (g,v,o) => {\n          if (o?.hotkeyEvent?.meta || o?.hotkeyEvent?.shift || o?.hotkeyEvent?.ctrl || o?.hotkeyEvent?.alt) {\n            setInoutId(inouts?.[inouts.length - 1]?.id);\n          } else setInoutId(go.next(inouts, inoutId));\n        },\n      } : {\n        left: (g,v,o) => {\n          go.focus(nav.get(go.value || 'current', 'left'), { prev: go.value });\n        },\n        right: (g,v,o) => {\n          go.focus(nav.get(go.value || 'current', 'right'), { prev: go.value })\n        },\n      },\n      up: (g,v,o) => go.focus(nav.get(go.value || 'current', 'up'), { prev: go.value }),\n      down: (g,v,o) => go.focus(nav.get(go.value || 'current', 'down'), { prev: go.value }),\n    }} focus={{\n      type: (g,v,o) => go.set().go.go.do('open', { id: go.link.type_id, focus: true }),\n      from: (g,v,o) => go.set().go.go.do('open', { id: go.link.from_id, focus: true }),\n      to: (g,v,o) => go.set().go.go.do('open', { id: go.link.to_id, focus: true }),\n      inout: (g,v,o) => setInoutId(inouts?.[0]?.id),\n      inouted: (g,v,o) => {\n        setInoutId();\n        go.set().go.go.focus(cy.$id(inoutId)?.data()?.linkId);\n      }\n    }}>\n      <go.GraphNode element={{\n        data: { id: `${go.link.id}-children` },\n        classes: ['link-children'],\n      }}>\n        <go.GraphNode\n          ref={ref}\n          element={{\n            data: { id: go.link.id, label: `${go.linkId}: ${go.link.name !== go.linkId ? go.link.name : ''}\n  (${go.link.type_id}: ${go.link.type?.name !== go.link.type_id ? go.link.type?.name : ''})\n  \n  ${go.link.symbol}` },\n            classes: ['link-node', ...(isActive ? ['link-node-active'] : [])],\n          }}\n          onClick={(e) => {\n            go.go.focus(go.linkId);\n            go.do('exec');\n          }}\n        >\n          <c.Box w='0' h='0' position='relative' ref={go.ref}>\n            <go.Provider linkId={GraphLinkPlanet}>\n              <go.Component path={[dpl, 'GraphLinkPlanet']} linkId={go.linkId} isActive={isActive && go.value === GraphLinkPlanet}/>\n            </go.Provider>\n          </c.Box>\n        </go.GraphNode>\n        {!!go.link.type_id && <go.GraphEdge\n          element={{\n            data: { id: `${go.link.id}-type`, source: `${go.link.id}`, target: `${go.link.type_id}` },\n            classes: ['link-edge', 'link-type', ...(go.value === 'type_id' ? ['link-edge-active'] : [])],\n          }}/>}\n        {!!go.link.from_id && <go.GraphEdge\n          element={{\n            data: { id: `${go.link.id}-from`, source: `${go.link.id}`, target: `${go.link.from_id}` },\n            classes: ['link-edge', 'link-from', ...(go.value === 'from_id' ? ['link-edge-active'] : [])],\n          }}/>}\n        {!!go.link.to_id && <go.GraphEdge\n          element={{\n            data: { id: `${go.link.id}-to`, source: `${go.link.id}`, target: `${go.link.to_id}` },\n            classes: ['link-edge', 'link-to', ...(go.value === 'to_id' ? ['link-edge-active'] : [])],\n          }}/>}\n        {children}\n      </go.GraphNode>\n    </go.On>;\n  };\n}",
        "link_id": 5813
      }
    },
    {
      "id": 5816,
      "type_id": 3,
      "from_id": 2586,
      "to_id": 5813,
      "value": {
        "id": 1255,
        "value": "GraphLinkComponent",
        "link_id": 5816
      }
    },
    {
      "id": 6262,
      "type_id": 717,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 1316,
        "value": "async ({ deep, data, require }) => {\n  const React = require('react');\n  const { PiGraphBold } = require(\"react-icons/pi\");\n  const c = require('@chakra-ui/react');\n\n  const dpl = '@deep-foundation/perception-links';\n  const dc = '@deep-foundation/core';\n\n  const Graph = deep.idLocal(dpl, 'Graph');\n\n  return ({\n    go,\n    handlerId,\n\n    isActive,\n  }, ref) => {\n    return <go.On do={{\n      exec: (g,v,o) => go.go.do('right', { ...o, id: Graph })),\n      click: (g,v,o) => go.do('exec', o),\n      right: (g,v,o) => go.do('exec', o),\n    }}>\n      <c.Button\n        w='3em' h='3em'\n        variant={isActive ? 'active' : undefined}\n        onClick={() => go.do('exec')}\n        ref={ref}\n      >\n        <PiGraphBold/>\n      </c.Button>\n    </go.On>;\n  };\n}",
        "link_id": 6262
      }
    },
    {
      "id": 6265,
      "type_id": 3,
      "from_id": 2586,
      "to_id": 6262,
      "value": {
        "id": 1310,
        "value": "MenuGraphComponent",
        "link_id": 6265
      }
    },
    {
      "id": 5366,
      "type_id": 5258,
      "from_id": 5304,
      "to_id": 5240
    },
    {
      "id": 5367,
      "type_id": 3,
      "from_id": 2586,
      "to_id": 5366,
      "value": {
        "id": 1194,
        "value": "compatableMenuTree",
        "link_id": 5367
      }
    },
    {
      "id": 4553,
      "type_id": 35,
      "from_id": 145,
      "to_id": 4549
    },
    {
      "id": 4554,
      "type_id": 3,
      "from_id": 2586,
      "to_id": 4553,
      "value": {
        "id": 1014,
        "value": "TreeLinkFrom",
        "link_id": 4554
      }
    },
    {
      "id": 4556,
      "type_id": 35,
      "from_id": 145,
      "to_id": 4545
    },
    {
      "id": 4557,
      "type_id": 3,
      "from_id": 2586,
      "to_id": 4556,
      "value": {
        "id": 1023,
        "value": "TreeLinkTo",
        "link_id": 4557
      }
    },
    {
      "id": 6266,
      "type_id": 35,
      "from_id": 145,
      "to_id": 6262
    },
    {
      "id": 6267,
      "type_id": 3,
      "from_id": 2586,
      "to_id": 6266,
      "value": {
        "id": 1315,
        "value": "MenuGraph",
        "link_id": 6267
      }
    },
    {
      "id": 5286,
      "type_id": 146,
      "from_id": 5266,
      "to_id": 5266,
      "value": {
        "id": 1162,
        "value": "📁",
        "link_id": 5286
      }
    },
    {
      "id": 5287,
      "type_id": 3,
      "from_id": 2586,
      "to_id": 5286,
      "value": {
        "id": 1581,
        "value": "childrenSymbol",
        "link_id": 5287
      }
    },
    {
      "id": 5809,
      "type_id": 717,
      "from_id": 0,
      "to_id": 0
    },
    {
      "id": 5812,
      "type_id": 3,
      "from_id": 2586,
      "to_id": 5809,
      "value": {
        "id": 1257,
        "value": "GraphLinkActionsComponent",
        "link_id": 5812
      }
    },
    {
      "id": 5288,
      "type_id": 146,
      "from_id": 5258,
      "to_id": 5258,
      "value": {
        "id": 1163,
        "value": "📓",
        "link_id": 5288
      }
    },
    {
      "id": 5289,
      "type_id": 3,
      "from_id": 2586,
      "to_id": 5288,
      "value": {
        "id": 1582,
        "value": "compatableSymbol",
        "link_id": 5289
      }
    },
    {
      "id": 4545,
      "type_id": 717,
      "from_id": 0,
      "to_id": 0
    },
    {
      "id": 4548,
      "type_id": 3,
      "from_id": 2586,
      "to_id": 4545,
      "value": {
        "id": 1020,
        "value": "TreeLinkToComponent",
        "link_id": 4548
      }
    },
    {
      "id": 4549,
      "type_id": 717,
      "from_id": 0,
      "to_id": 0
    },
    {
      "id": 4552,
      "type_id": 3,
      "from_id": 2586,
      "to_id": 4549,
      "value": {
        "id": 1016,
        "value": "TreeLinkFromComponent",
        "link_id": 4552
      }
    },
    {
      "id": 5679,
      "type_id": 30,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 1239,
        "value": "async ({ deep, data, require }) => {\n    const React = require('react');\n    const c = require('@chakra-ui/react');\n    const dpl = '@deep-foundation/perception-links';\n    const dc = '@deep-foundation/core';\n    const Tree = deep.idLocal(dpl, 'Tree');\n    return ({ go, using = false, fullWidth = null, }, ref) => {\n        return React.createElement(go.On, { do: {\n                focus: (g, v, linkId, o) => o?.id && go.focus(o.id),\n                use: (g, v, o) => go.current && go.current.do('use', o),\n                open: async (g, v, o) => {\n                    if (!go.current)\n                        await (go.focus(Tree).go.awaitRef(Tree));\n                    if (o?.id)\n                        go.current.do('open', o);\n                },\n                concentrate: (g, v, o) => {\n                    go.current && go.current.do('concentrate', o);\n                },\n            } },\n            React.createElement(c.Box, { ref: ref, w: '100%', h: '100%' }, !!go.value && [React.createElement(go.Provider, { key: go.value, linkId: go.value },\n                    React.createElement(go.Handler, { initialId: deep?.linkId, handlerId: go.value, saveHistory: true, using: using, fullWidth: fullWidth, queryField: 'opened' }))]));\n    };\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsibW9kdWxlLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxLQUFLLEVBQUUsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLE9BQU8sRUFBRSxFQUFFLEVBQUU7SUFDaEMsTUFBTSxLQUFLLEdBQUcsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQy9CLE1BQU0sQ0FBQyxHQUFHLE9BQU8sQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDO0lBRXRDLE1BQU0sR0FBRyxHQUFHLG1DQUFtQyxDQUFDO0lBQ2hELE1BQU0sRUFBRSxHQUFHLHVCQUF1QixDQUFDO0lBRW5DLE1BQU0sSUFBSSxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLE1BQU0sQ0FBQyxDQUFDO0lBRXZDLE9BQU8sQ0FBQyxFQUNOLEVBQUUsRUFFRixLQUFLLEdBQUcsS0FBSyxFQUNiLFNBQVMsR0FBRyxJQUFJLEdBQ2pCLEVBQUUsR0FBRyxFQUFFLEVBQUU7UUFJUixPQUFPLG9CQUFDLEVBQUUsQ0FBQyxFQUFFLElBQUMsRUFBRSxFQUFFO2dCQUNoQixLQUFLLEVBQUUsQ0FBQyxDQUFDLEVBQUMsQ0FBQyxFQUFDLE1BQU0sRUFBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsRUFBRSxFQUFFLElBQUksRUFBRSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDO2dCQUNoRCxHQUFHLEVBQUUsQ0FBQyxDQUFDLEVBQUMsQ0FBQyxFQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLE9BQU8sSUFBSSxFQUFFLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQyxLQUFLLEVBQUMsQ0FBQyxDQUFDO2dCQUNwRCxJQUFJLEVBQUUsS0FBSyxFQUFFLENBQUMsRUFBQyxDQUFDLEVBQUMsQ0FBQyxFQUFFLEVBQUU7b0JBQ3BCLElBQUksQ0FBQyxFQUFFLENBQUMsT0FBTzt3QkFBRSxNQUFNLENBQUMsRUFBRSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQyxFQUFFLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7b0JBQzFELElBQUksQ0FBQyxFQUFFLEVBQUU7d0JBQUUsRUFBRSxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUMsTUFBTSxFQUFDLENBQUMsQ0FBQyxDQUFDO2dCQUNyQyxDQUFDO2dCQUNELFdBQVcsRUFBRSxDQUFDLENBQUMsRUFBQyxDQUFDLEVBQUMsQ0FBQyxFQUFFLEVBQUU7b0JBQ3JCLEVBQUUsQ0FBQyxPQUFPLElBQUksRUFBRSxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUMsYUFBYSxFQUFFLENBQUMsQ0FBQyxDQUFDO2dCQUNoRCxDQUFDO2FBQ0Y7WUFDQyxvQkFBQyxDQUFDLENBQUMsR0FBRyxJQUFDLEdBQUcsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFDLE1BQU0sRUFBQyxDQUFDLEVBQUMsTUFBTSxJQUMvQixDQUFDLENBQUMsRUFBRSxDQUFDLEtBQUssSUFBSSxDQUFDLG9CQUFDLEVBQUUsQ0FBQyxRQUFRLElBQUMsR0FBRyxFQUFFLEVBQUUsQ0FBQyxLQUFLLEVBQUUsTUFBTSxFQUFFLEVBQUUsQ0FBQyxLQUFLO29CQUMxRCxvQkFBQyxFQUFFLENBQUMsT0FBTyxJQUNULFNBQVMsRUFBRSxJQUFJLEVBQUUsTUFBTSxFQUN2QixTQUFTLEVBQUUsRUFBRSxDQUFDLEtBQUssRUFDbkIsV0FBVyxRQUNYLEtBQUssRUFBRSxLQUFLLEVBQ1osU0FBUyxFQUFFLFNBQVMsRUFDcEIsVUFBVSxFQUFDLFFBQVEsR0FDbkIsQ0FDVSxDQUFDLENBQ1QsQ0FDRixDQUFDO0lBQ1gsQ0FBQyxDQUFDO0FBQ0osQ0FBQyxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiYXN5bmMgKHsgZGVlcCwgZGF0YSwgcmVxdWlyZSB9KSA9PiB7XG4gIGNvbnN0IFJlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcbiAgY29uc3QgYyA9IHJlcXVpcmUoJ0BjaGFrcmEtdWkvcmVhY3QnKTtcblxuICBjb25zdCBkcGwgPSAnQGRlZXAtZm91bmRhdGlvbi9wZXJjZXB0aW9uLWxpbmtzJztcbiAgY29uc3QgZGMgPSAnQGRlZXAtZm91bmRhdGlvbi9jb3JlJztcblxuICBjb25zdCBUcmVlID0gZGVlcC5pZExvY2FsKGRwbCwgJ1RyZWUnKTtcblxuICByZXR1cm4gKHtcbiAgICBnbyxcblxuICAgIHVzaW5nID0gZmFsc2UsXG4gICAgZnVsbFdpZHRoID0gbnVsbCxcbiAgfSwgcmVmKSA9PiB7XG4gICAgLy8gY29uc3QgW2xheWVyLCBzZXRMYXllcl0gPSBnby51c2VRdWVyeVN0b3JlKGBsYXllcmAsIFRyZWUpO1xuICAgIC8vIFJlYWN0LnVzZUVmZmVjdCgoKSA9PiBnby52YWx1ZSAmJiBzZXRMYXllcihnby52YWx1ZSksIFtnby52YWx1ZV0pO1xuXG4gICAgcmV0dXJuIDxnby5PbiBkbz17e1xuICAgICAgZm9jdXM6IChnLHYsbGlua0lkLG8pID0+IG8/LmlkICYmIGdvLmZvY3VzKG8uaWQpLFxuICAgICAgdXNlOiAoZyx2LG8pID0+IGdvLmN1cnJlbnQgJiYgZ28uY3VycmVudC5kbygndXNlJyxvKSxcbiAgICAgIG9wZW46IGFzeW5jIChnLHYsbykgPT4ge1xuICAgICAgICBpZiAoIWdvLmN1cnJlbnQpIGF3YWl0IChnby5mb2N1cyhUcmVlKS5nby5hd2FpdFJlZihUcmVlKSk7XG4gICAgICAgIGlmIChvPy5pZCkgZ28uY3VycmVudC5kbygnb3Blbicsbyk7XG4gICAgICB9LFxuICAgICAgY29uY2VudHJhdGU6IChnLHYsbykgPT4ge1xuICAgICAgICBnby5jdXJyZW50ICYmIGdvLmN1cnJlbnQuZG8oJ2NvbmNlbnRyYXRlJywgbyk7XG4gICAgICB9LFxuICAgIH19PlxuICAgICAgPGMuQm94IHJlZj17cmVmfSB3PScxMDAlJyBoPScxMDAlJz5cbiAgICAgICAgeyEhZ28udmFsdWUgJiYgWzxnby5Qcm92aWRlciBrZXk9e2dvLnZhbHVlfSBsaW5rSWQ9e2dvLnZhbHVlfT5cbiAgICAgICAgICA8Z28uSGFuZGxlclxuICAgICAgICAgICAgaW5pdGlhbElkPXtkZWVwPy5saW5rSWR9XG4gICAgICAgICAgICBoYW5kbGVySWQ9e2dvLnZhbHVlfVxuICAgICAgICAgICAgc2F2ZUhpc3RvcnlcbiAgICAgICAgICAgIHVzaW5nPXt1c2luZ31cbiAgICAgICAgICAgIGZ1bGxXaWR0aD17ZnVsbFdpZHRofVxuICAgICAgICAgICAgcXVlcnlGaWVsZD0nb3BlbmVkJ1xuICAgICAgICAgIC8+XG4gICAgICAgIDwvZ28uUHJvdmlkZXI+XX1cbiAgICAgIDwvYy5Cb3g+XG4gICAgPC9nby5Pbj47XG4gIH07XG59Il19",
        "link_id": 5679
      }
    },
    {
      "id": 5680,
      "type_id": 3,
      "from_id": 5601,
      "to_id": 5679,
      "value": {
        "id": 1238,
        "value": "generated",
        "link_id": 5680
      }
    },
    {
      "id": 5681,
      "type_id": 143,
      "from_id": 5679,
      "to_id": 5601
    },
    {
      "id": 5682,
      "type_id": 3,
      "from_id": 5601,
      "to_id": 5681
    },
    {
      "id": 5821,
      "type_id": 35,
      "from_id": 145,
      "to_id": 5809
    },
    {
      "id": 5822,
      "type_id": 3,
      "from_id": 2586,
      "to_id": 5821,
      "value": {
        "id": 1258,
        "value": "GraphLinkActions",
        "link_id": 5822
      }
    },
    {
      "id": 5828,
      "type_id": 3,
      "from_id": 2586,
      "to_id": 5827,
      "value": {
        "id": 1248,
        "value": "Graph",
        "link_id": 5828
      }
    },
    {
      "id": 5827,
      "type_id": 35,
      "from_id": 145,
      "to_id": 2652
    },
    {
      "id": 5290,
      "type_id": 146,
      "from_id": 5276,
      "to_id": 5276,
      "value": {
        "id": 1164,
        "value": "🪄",
        "link_id": 5290
      }
    },
    {
      "id": 5291,
      "type_id": 3,
      "from_id": 2586,
      "to_id": 5290,
      "value": {
        "id": 1580,
        "value": "linkSymbol",
        "link_id": 5291
      }
    },
    {
      "id": 5823,
      "type_id": 35,
      "from_id": 145,
      "to_id": 5813
    },
    {
      "id": 5824,
      "type_id": 3,
      "from_id": 2586,
      "to_id": 5823,
      "value": {
        "id": 1256,
        "value": "GraphLink",
        "link_id": 5824
      }
    },
    {
      "id": 6065,
      "type_id": 30,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 1284,
        "value": "async ({ deep, data, Go, require }) => {\n    const React = require('react');\n    const { MoonIcon, SunIcon } = require('@chakra-ui/icons');\n    const { GrGraphQl } = require(\"react-icons/gr\");\n    const { IoReload } = require(\"react-icons/io\");\n    const c = require('@chakra-ui/react');\n    const dpl = '@deep-foundation/perception-links';\n    const dc = '@deep-foundation/core';\n    const Menu = deep.idLocal(dpl, 'Menu');\n    const Layer = deep.idLocal(dpl, 'Layer');\n    const Header = deep.idLocal(dpl, 'Header');\n    const Queries = deep.idLocal(dpl, 'Queries');\n    const Tree = deep.idLocal(dpl, 'Tree');\n    return ({ go, linkId, Status, Auth, ColorMode, children, }, ref) => {\n        const nav = go.useNav();\n        nav(Menu, Menu, Header, Layer, Queries);\n        nav(Queries, Queries, Menu, Layer, Queries);\n        nav(Layer, Menu, Header, Layer, Layer);\n        nav(Header, Header, Header, Header, Layer);\n        React.useEffect(() => {\n            go.focus(Menu);\n        }, []);\n        const isMobile = c.useBreakpointValue({ base: true, md: false }, { fallback: 'xs' });\n        return React.createElement(go.On, { do: {\n                left: (g, v, o) => go.focus(nav.get(go.value, 'left'), o),\n                up: (g, v, o) => go.focus(nav.get(go.value, 'up'), o),\n                right: (g, v, o) => go.focus(nav.get(go.value, 'right'), o),\n                down: (g, v, o) => go.focus(nav.get(go.value, 'down'), o),\n                use: (g, v, o) => {\n                    if (go.data.usedId != o?.id && o?.id) {\n                        go.data.usedId = o.id;\n                        go(Header).do('use', o);\n                        go(Layer).do('use', o);\n                    }\n                },\n                open: async (g, v, o) => {\n                    if (!go(Layer))\n                        await (go.focus(Layer).go.awaitRef(Layer));\n                    go(Layer).do('open', o);\n                },\n                concentrate: (g, v, o) => {\n                    go(Layer).do('concentrate', o);\n                },\n            } },\n            React.createElement(c.Box, { ref: go.ref, h: '100vh', w: \"100vw\", position: \"fixed\", left: \"0%\", top: \"0%\" },\n                React.createElement(c.Grid, { templateAreas: `\"tabs tabs\"\n                              \"nav main\"`, gridTemplateRows: '3em 1fr', gridTemplateColumns: '3em 1fr', h: '100vh', w: \"100vw\", position: \"fixed\", left: \"0%\", top: \"0%\", color: 'blackAlpha.700', fontWeight: 'bold', ref: ref },\n                    React.createElement(c.GridItem, { area: 'tabs', zIndex: 1 },\n                        React.createElement(c.Flex, { w: \"100%\", h: \"100%\", bg: go.value === Header ? 'deepBgDark' : 'deepBg' },\n                            React.createElement(go.Provider, { linkId: Header },\n                                React.createElement(go.Handler, { linkId: deep.linkId, handlerId: Header, using: true })))),\n                    React.createElement(c.GridItem, { area: 'nav', zIndex: 1, position: \"relative\", h: \"100%\" },\n                        React.createElement(c.Flex, { direction: 'column', h: '100%', bg: go.value === Menu ? 'deepBgDark' : 'deepBg' },\n                            React.createElement(go.Provider, { linkId: Menu },\n                                React.createElement(go.Handler, { linkId: deep.linkId, handlerId: Menu }),\n                                React.createElement(c.Spacer, null)),\n                            React.createElement(c.VStack, null,\n                                React.createElement(c.Button, { w: '3em', h: '3em', as: 'a', href: `http://${deep?.client?.path}` },\n                                    React.createElement(GrGraphQl, null)),\n                                React.createElement(ColorMode, { w: '3em', h: '3em', dark: { children: React.createElement(SunIcon, null) }, light: { children: React.createElement(MoonIcon, null) } }),\n                                React.createElement(go.Provider, { linkId: Queries },\n                                    React.createElement(go.Component, { path: [dpl, 'Queries'], isActive: go.value === Queries },\n                                        React.createElement(Status, null))),\n                                React.createElement(Auth, null)))),\n                    React.createElement(c.GridItem, { area: 'main', overflow: \"hidden\", position: \"relative\", h: '100%', bg: go.value === Layer ? 'deepBgDark' : 'deepBg' },\n                        React.createElement(go.Provider, { linkId: Layer, value: Tree },\n                            React.createElement(go.Handler, { linkId: deep.linkId, handlerId: Layer, using: true, fullWidth: isMobile ? 'calc(100vw - 3em)' : null }))))));\n    };\n};\n//# sourceMappingURL=data:application/json;base64,",
        "link_id": 6065
      }
    },
    {
      "id": 6066,
      "type_id": 3,
      "from_id": 5628,
      "to_id": 6065,
      "value": {
        "id": 1283,
        "value": "generated",
        "link_id": 6066
      }
    },
    {
      "id": 6067,
      "type_id": 143,
      "from_id": 6065,
      "to_id": 5628
    },
    {
      "id": 6068,
      "type_id": 3,
      "from_id": 5628,
      "to_id": 6067
    },
    {
      "id": 5298,
      "type_id": 717,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 1200,
        "value": "async ({ deep, data, require }) => {\n  const React = require('react');\n  const { FaTree } = require(\"react-icons/fa\");\n  const c = require('@chakra-ui/react');\n\n  const dpl = '@deep-foundation/perception-links';\n  const dc = '@deep-foundation/core';\n\n  const Tree = deep.idLocal(dpl, 'Tree');\n\n  return ({\n    go,\n    handlerId,\n\n    isActive,\n  }, ref) => {\n    return <go.On do={{\n      exec: (g,v,o) => go.go.do('right', { ...o, id: Tree })),\n      click: (g,v,o) => go.do('exec', o),\n      right: (g,v,o) => go.do('exec', o),\n    }}>\n      <c.Button\n        w='3em' h='3em'\n        variant={isActive ? 'active' : undefined}\n        ref={ref}\n        onClick={() => go.do('exec')}\n      >\n        <FaTree/>\n      </c.Button>\n    </go.On>;\n  };\n}",
        "link_id": 5298
      }
    },
    {
      "id": 3936,
      "type_id": 30,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 951,
        "value": "({ deep, data, require, go }) => {\n    const React = require('react');\n    const { useSymbol } = require('@deep-foundation/perception-app');\n    const c = require('@chakra-ui/react');\n    const _ = require('lodash');\n    const dpl = '@deep-foundation/perception-links';\n    const dc = '@deep-foundation/core';\n    const Contain = deep.idLocal(dc, 'Contain');\n    return ({ go, linkId, isActive, onClick, variant = 'short', needParent = false, isConcentrated, children = null, ...props }, ref) => {\n        const [co] = deep.useLocalQuery({ type_id: Contain, to_id: linkId });\n        const link = deep.get(linkId);\n        const contain = link?.inByType?.[Contain]?.[0];\n        const name = link?.name;\n        const type = link?.type?.name;\n        const icon = link?.symbol;\n        const parent = contain?.from;\n        const parentName = parent?.name || '';\n        const parentIcon = parent?.symbol;\n        const [editing, setEditing] = React.useState(false);\n        const heightRef = React.useRef(0);\n        const [value, setValue] = React.useState(link?.name);\n        const editingRef = React.useRef(editing);\n        const afterEdit = (!!editingRef.current && !editing);\n        editingRef.current = editing;\n        return React.createElement(go.On, { do: {\n                enter: async () => {\n                    if (!isActive || !contain)\n                        return;\n                    heightRef.current = ref.current.clientHeight;\n                    if (!editing) {\n                        setEditing(true);\n                        setValue(link?.name);\n                    }\n                    else {\n                        await deep.value(contain?.id, value);\n                        setEditing(false);\n                    }\n                },\n                escape: () => {\n                    setEditing(false);\n                },\n            } },\n            isConcentrated != false && React.createElement(React.Fragment, null,\n                editing && React.createElement(c.Box, { ref: ref, height: `${heightRef.current}px`, w: '100%', overflow: 'hidden' },\n                    React.createElement(c.Input, { autoFocus: true, value: value, onChange: e => setValue(e.target.value), h: '100%', onKeyDown: event => event.key === 'Escape' ? go.do('escape') : null })),\n                !!afterEdit && React.createElement(go.Query, { query: { type_id: Contain, to_id: linkId } }),\n                !editing && React.createElement(c.Button, { ref: ref, ...props, variant: isActive ? 'active' : undefined, onClick: (e) => {\n                        e.stopPropagation();\n                        e.preventDefault();\n                        go.do('exec', { id: linkId });\n                        onClick && onClick(link);\n                    }, justifyContent: 'left', pt: 2, pb: 2, w: '100%', h: '100%' },\n                    icon,\n                    \" \",\n                    React.createElement(c.Box, { textAlign: 'left', pl: '0.5em', w: '100%', overflow: 'hidden', position: 'relative' },\n                        !!parent && !!needParent && React.createElement(c.Box, { fontSize: \"0.6em\", textAlign: 'right' },\n                            parentName,\n                            \" \",\n                            parentIcon),\n                        !!((name) || (type)) && React.createElement(c.Box, { fontSize: \"sm\" }, name || type),\n                        React.createElement(c.Box, { fontSize: \"xxs\" },\n                            name ? type : '',\n                            \" \",\n                            linkId),\n                        children,\n                        variant === 'full' && !!link?.value && React.createElement(React.Fragment, null,\n                            React.createElement(c.Text, { fontSize: \"xxs\", opacity: 0.5 }, \"value:\"),\n                            React.createElement(c.Text, { fontSize: \"xs\" },\n                                typeof (link?.value?.value) == 'string' && React.createElement(React.Fragment, null,\n                                    React.createElement(c.Heading, { as: 'pre', fontSize: 'xs', noOfLines: 1, w: '100%' }, link?.value?.value)),\n                                typeof (link?.value?.value) == 'number' && React.createElement(React.Fragment, null,\n                                    React.createElement(c.Heading, { as: 'pre', fontSize: 'xs', noOfLines: 1, w: '100%' }, link?.value?.value)),\n                                typeof (link?.value?.value) == 'object' && React.createElement(React.Fragment, null,\n                                    React.createElement(c.Heading, { as: 'pre', fontSize: 'xs', noOfLines: 1, w: '100%' }, JSON.stringify(link?.value?.value)))))))),\n            isConcentrated === false && React.createElement(React.Fragment, null,\n                React.createElement(c.Button, { ref: ref, ...props, variant: isActive ? 'active' : undefined, onClick: (e) => {\n                        e.stopPropagation();\n                        e.preventDefault();\n                        go.do('exec', { id: linkId });\n                        onClick && onClick(link);\n                    }, justifyContent: 'left', pt: 2, pb: 2, w: '0', h: '100%' }, icon)));\n    };\n};\n//# sourceMappingURL=data:application/json;base64,",
        "link_id": 3936
      }
    },
    {
      "id": 3937,
      "type_id": 3,
      "from_id": 3844,
      "to_id": 3936,
      "value": {
        "id": 950,
        "value": "generated",
        "link_id": 3937
      }
    },
    {
      "id": 3938,
      "type_id": 143,
      "from_id": 3936,
      "to_id": 3844
    },
    {
      "id": 3939,
      "type_id": 3,
      "from_id": 3844,
      "to_id": 3938
    },
    {
      "id": 5301,
      "type_id": 3,
      "from_id": 2586,
      "to_id": 5298,
      "value": {
        "id": 1179,
        "value": "MenuTreeComponent",
        "link_id": 5301
      }
    },
    {
      "id": 5305,
      "type_id": 3,
      "from_id": 2586,
      "to_id": 5304,
      "value": {
        "id": 1170,
        "value": "MenuTree",
        "link_id": 5305
      }
    },
    {
      "id": 5304,
      "type_id": 35,
      "from_id": 145,
      "to_id": 5298
    },
    {
      "id": 5601,
      "type_id": 717,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 1237,
        "value": "async ({ deep, data, require }) => {\n  const React = require('react');\n  const c = require('@chakra-ui/react');\n\n  const dpl = '@deep-foundation/perception-links';\n  const dc = '@deep-foundation/core';\n\n  const Tree = deep.idLocal(dpl, 'Tree');\n\n  return ({\n    go,\n\n    using = false,\n    fullWidth = null,\n  }, ref) => {\n    // const [layer, setLayer] = go.useQueryStore(`layer`, Tree);\n    // React.useEffect(() => go.value && setLayer(go.value), [go.value]);\n\n    return <go.On do={{\n      focus: (g,v,linkId,o) => o?.id && go.focus(o.id),\n      use: (g,v,o) => go.current && go.current.do('use',o),\n      open: async (g,v,o) => {\n        if (!go.current) await (go.focus(Tree).go.awaitRef(Tree));\n        if (o?.id) go.current.do('open',o);\n      },\n      concentrate: (g,v,o) => {\n        go.current && go.current.do('concentrate', o);\n      },\n    }}>\n      <c.Box ref={ref} w='100%' h='100%'>\n        {!!go.value && [<go.Provider key={go.value} linkId={go.value}>\n          <go.Handler\n            initialId={deep?.linkId}\n            handlerId={go.value}\n            saveHistory\n            using={using}\n            fullWidth={fullWidth}\n            queryField='opened'\n          />\n        </go.Provider>]}\n      </c.Box>\n    </go.On>;\n  };\n}",
        "link_id": 5601
      }
    },
    {
      "id": 5604,
      "type_id": 3,
      "from_id": 2586,
      "to_id": 5601,
      "value": {
        "id": 1218,
        "value": "LayerComponent",
        "link_id": 5604
      }
    },
    {
      "id": 5605,
      "type_id": 35,
      "from_id": 145,
      "to_id": 5601
    },
    {
      "id": 5606,
      "type_id": 3,
      "from_id": 2586,
      "to_id": 5605,
      "value": {
        "id": 1219,
        "value": "Layer",
        "link_id": 5606
      }
    },
    {
      "id": 6282,
      "type_id": 30,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 1318,
        "value": "async ({ deep, data, require }) => {\n    const React = require('react');\n    const { PiGraphBold } = require(\"react-icons/pi\");\n    const c = require('@chakra-ui/react');\n    const dpl = '@deep-foundation/perception-links';\n    const dc = '@deep-foundation/core';\n    const Graph = deep.idLocal(dpl, 'Graph');\n    return ({ go, handlerId, isActive, }, ref) => {\n        return React.createElement(go.On, { do: {\n                exec: (g, v, o) => go.go.do('right', { ...o, id: Graph }),\n                click: (g, v, o) => go.do('exec', o),\n                right: (g, v, o) => go.do('exec', o),\n            } },\n            React.createElement(c.Button, { w: '3em', h: '3em', variant: isActive ? 'active' : undefined, onClick: () => go.do('exec'), ref: ref },\n                React.createElement(PiGraphBold, null)));\n    };\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsibW9kdWxlLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxLQUFLLEVBQUUsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLE9BQU8sRUFBRSxFQUFFLEVBQUU7SUFDaEMsTUFBTSxLQUFLLEdBQUcsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQy9CLE1BQU0sRUFBRSxXQUFXLEVBQUUsR0FBRyxPQUFPLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztJQUNsRCxNQUFNLENBQUMsR0FBRyxPQUFPLENBQUMsa0JBQWtCLENBQUMsQ0FBQztJQUV0QyxNQUFNLEdBQUcsR0FBRyxtQ0FBbUMsQ0FBQztJQUNoRCxNQUFNLEVBQUUsR0FBRyx1QkFBdUIsQ0FBQztJQUVuQyxNQUFNLEtBQUssR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxPQUFPLENBQUMsQ0FBQztJQUV6QyxPQUFPLENBQUMsRUFDTixFQUFFLEVBQ0YsU0FBUyxFQUVULFFBQVEsR0FDVCxFQUFFLEdBQUcsRUFBRSxFQUFFO1FBQ1IsT0FBTyxvQkFBQyxFQUFFLENBQUMsRUFBRSxJQUFDLEVBQUUsRUFBRTtnQkFDaEIsSUFBSSxFQUFFLENBQUMsQ0FBQyxFQUFDLENBQUMsRUFBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLE9BQU8sRUFBRSxFQUFFLEdBQUcsQ0FBQyxFQUFFLEVBQUUsRUFBRSxLQUFLLEVBQUUsQ0FBQztnQkFDdkQsS0FBSyxFQUFFLENBQUMsQ0FBQyxFQUFDLENBQUMsRUFBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsTUFBTSxFQUFFLENBQUMsQ0FBQztnQkFDbEMsS0FBSyxFQUFFLENBQUMsQ0FBQyxFQUFDLENBQUMsRUFBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsTUFBTSxFQUFFLENBQUMsQ0FBQzthQUNuQztZQUNDLG9CQUFDLENBQUMsQ0FBQyxNQUFNLElBQ1AsQ0FBQyxFQUFDLEtBQUssRUFBQyxDQUFDLEVBQUMsS0FBSyxFQUNmLE9BQU8sRUFBRSxRQUFRLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsU0FBUyxFQUN4QyxPQUFPLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUMsRUFDNUIsR0FBRyxFQUFFLEdBQUc7Z0JBRVIsb0JBQUMsV0FBVyxPQUFFLENBQ0wsQ0FDTCxDQUFDO0lBQ1gsQ0FBQyxDQUFDO0FBQ0osQ0FBQyxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiYXN5bmMgKHsgZGVlcCwgZGF0YSwgcmVxdWlyZSB9KSA9PiB7XG4gIGNvbnN0IFJlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcbiAgY29uc3QgeyBQaUdyYXBoQm9sZCB9ID0gcmVxdWlyZShcInJlYWN0LWljb25zL3BpXCIpO1xuICBjb25zdCBjID0gcmVxdWlyZSgnQGNoYWtyYS11aS9yZWFjdCcpO1xuXG4gIGNvbnN0IGRwbCA9ICdAZGVlcC1mb3VuZGF0aW9uL3BlcmNlcHRpb24tbGlua3MnO1xuICBjb25zdCBkYyA9ICdAZGVlcC1mb3VuZGF0aW9uL2NvcmUnO1xuXG4gIGNvbnN0IEdyYXBoID0gZGVlcC5pZExvY2FsKGRwbCwgJ0dyYXBoJyk7XG5cbiAgcmV0dXJuICh7XG4gICAgZ28sXG4gICAgaGFuZGxlcklkLFxuXG4gICAgaXNBY3RpdmUsXG4gIH0sIHJlZikgPT4ge1xuICAgIHJldHVybiA8Z28uT24gZG89e3tcbiAgICAgIGV4ZWM6IChnLHYsbykgPT4gZ28uZ28uZG8oJ3JpZ2h0JywgeyAuLi5vLCBpZDogR3JhcGggfSkpLFxuICAgICAgY2xpY2s6IChnLHYsbykgPT4gZ28uZG8oJ2V4ZWMnLCBvKSxcbiAgICAgIHJpZ2h0OiAoZyx2LG8pID0+IGdvLmRvKCdleGVjJywgbyksXG4gICAgfX0+XG4gICAgICA8Yy5CdXR0b25cbiAgICAgICAgdz0nM2VtJyBoPSczZW0nXG4gICAgICAgIHZhcmlhbnQ9e2lzQWN0aXZlID8gJ2FjdGl2ZScgOiB1bmRlZmluZWR9XG4gICAgICAgIG9uQ2xpY2s9eygpID0+IGdvLmRvKCdleGVjJyl9XG4gICAgICAgIHJlZj17cmVmfVxuICAgICAgPlxuICAgICAgICA8UGlHcmFwaEJvbGQvPlxuICAgICAgPC9jLkJ1dHRvbj5cbiAgICA8L2dvLk9uPjtcbiAgfTtcbn0iXX0=",
        "link_id": 6282
      }
    },
    {
      "id": 6283,
      "type_id": 3,
      "from_id": 6262,
      "to_id": 6282,
      "value": {
        "id": 1317,
        "value": "generated",
        "link_id": 6283
      }
    },
    {
      "id": 6284,
      "type_id": 143,
      "from_id": 6282,
      "to_id": 6262
    },
    {
      "id": 6285,
      "type_id": 3,
      "from_id": 6262,
      "to_id": 6284
    },
    {
      "id": 3844,
      "type_id": 717,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 949,
        "value": "({ deep, data, require, go }) => {\n  const React = require('react');\n  const { useSymbol } = require('@deep-foundation/perception-app');\n  const c = require('@chakra-ui/react');\n  const _ = require('lodash');\n\n  const dpl = '@deep-foundation/perception-links';\n  const dc = '@deep-foundation/core';\n\n  const Contain = deep.idLocal(dc, 'Contain');\n\n  return ({\n    go,\n\n    linkId,\n    isActive,\n\n    onClick,\n\n    variant='short', // full | short\n    needParent = false,\n    isConcentrated,\n\n    children = null,\n    ...props\n  }, ref) => {\n    const [co] = deep.useLocalQuery({ type_id: Contain, to_id: linkId });\n    // const [link, contain] = deep.useLinks(linkId, co);\n    // console.log('XXXXX', link, contain);\n    const link = deep.get(linkId);\n    const contain = link?.inByType?.[Contain]?.[0];\n    const name = link?.name;\n    const type = link?.type?.name;\n    const icon = link?.symbol;\n  \n    const parent = contain?.from;\n    const parentName = parent?.name || '';\n    const parentIcon = parent?.symbol;\n    const [editing, setEditing] = React.useState(false);\n    const heightRef = React.useRef(0);\n    const [value, setValue] = React.useState(link?.name);\n  \n    const editingRef = React.useRef(editing);\n    const afterEdit = (!!editingRef.current && !editing);\n    editingRef.current = editing;\n  \n    return <go.On do={{\n      enter: async () => {\n        if (!isActive || !contain) return;\n        heightRef.current = ref.current.clientHeight;\n        if (!editing) {\n          setEditing(true);\n          setValue(link?.name);\n        } else {\n          await deep.value(contain?.id, value);\n          setEditing(false);\n        }\n      },\n      escape: () => {\n        setEditing(false);\n      },\n    }}>\n      {isConcentrated != false && <>\n        {editing && <c.Box ref={ref} height={`${heightRef.current}px`} w='100%' overflow='hidden'>\n          <c.Input\n            autoFocus value={value} onChange={e => setValue(e.target.value)} h='100%'\n            onKeyDown={event => event.key === 'Escape' ? go.do('escape') : null}\n          />\n        </c.Box>}\n        {!!afterEdit && <go.Query query={{ type_id: Contain, to_id: linkId }}/>}\n        {!editing && <c.Button\n          ref={ref}\n          {...props}\n          variant={isActive ? 'active' : undefined}\n          onClick={(e) => {\n            e.stopPropagation();\n            e.preventDefault();\n            go.do('exec', { id: linkId });\n            onClick && onClick(link);\n          }}\n          justifyContent={'left'}\n          pt={2} pb={2} w='100%' h='100%'\n        >\n          {icon} <c.Box textAlign='left' pl='0.5em' w='100%' overflow='hidden' position='relative'>\n          {!!parent && !!needParent && <c.Box fontSize=\"0.6em\" textAlign='right'>{parentName} {parentIcon}</c.Box>}\n          {!!((name) || (type)) && <c.Box fontSize=\"sm\">{name || type}\n          </c.Box>}\n          <c.Box fontSize=\"xxs\">{name ? type : ''} {linkId}</c.Box>\n          {children}\n          {variant === 'full' && !!link?.value && <>\n            <c.Text fontSize=\"xxs\" opacity={0.5}>value:</c.Text>\n            <c.Text fontSize=\"xs\">\n              {typeof(link?.value?.value) == 'string' && <>\n                <c.Heading as='pre' fontSize='xs' noOfLines={1} w='100%'>{link?.value?.value}</c.Heading>\n              </>}\n              {typeof(link?.value?.value) == 'number' && <>\n                <c.Heading as='pre' fontSize='xs' noOfLines={1} w='100%'>{link?.value?.value}</c.Heading>\n              </>}\n              {typeof(link?.value?.value) == 'object' && <>\n                <c.Heading as='pre' fontSize='xs' noOfLines={1} w='100%'>{JSON.stringify(link?.value?.value)}</c.Heading>\n              </>}\n            </c.Text>\n          </>}\n          </c.Box>\n        </c.Button>}\n      </>}\n      {isConcentrated === false && <>\n        <c.Button\n          ref={ref}\n          {...props}\n          variant={isActive ? 'active' : undefined}\n          onClick={(e) => {\n            e.stopPropagation();\n            e.preventDefault();\n            go.do('exec', { id: linkId });\n            onClick && onClick(link);\n          }}\n          justifyContent={'left'}\n          pt={2} pb={2} w='0' h='100%'\n        >\n          {icon}\n        </c.Button>\n      </>}\n    </go.On>;\n  };\n}",
        "link_id": 3844
      }
    },
    {
      "id": 3845,
      "type_id": 3,
      "from_id": 2586,
      "to_id": 3844,
      "value": {
        "id": 933,
        "value": "TreeLinkButtonComponent",
        "link_id": 3845
      }
    },
    {
      "id": 5510,
      "type_id": 30,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 1202,
        "value": "async ({ deep, data, require }) => {\n    const React = require('react');\n    const { FaTree } = require(\"react-icons/fa\");\n    const c = require('@chakra-ui/react');\n    const dpl = '@deep-foundation/perception-links';\n    const dc = '@deep-foundation/core';\n    const Tree = deep.idLocal(dpl, 'Tree');\n    return ({ go, handlerId, isActive, }, ref) => {\n        return React.createElement(go.On, { do: {\n                exec: (g, v, o) => go.go.do('right', { ...o, id: Tree }),\n                click: (g, v, o) => go.do('exec', o),\n                right: (g, v, o) => go.do('exec', o),\n            } },\n            React.createElement(c.Button, { w: '3em', h: '3em', variant: isActive ? 'active' : undefined, ref: ref, onClick: () => go.do('exec') },\n                React.createElement(FaTree, null)));\n    };\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsibW9kdWxlLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxLQUFLLEVBQUUsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLE9BQU8sRUFBRSxFQUFFLEVBQUU7SUFDaEMsTUFBTSxLQUFLLEdBQUcsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQy9CLE1BQU0sRUFBRSxNQUFNLEVBQUUsR0FBRyxPQUFPLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztJQUM3QyxNQUFNLENBQUMsR0FBRyxPQUFPLENBQUMsa0JBQWtCLENBQUMsQ0FBQztJQUV0QyxNQUFNLEdBQUcsR0FBRyxtQ0FBbUMsQ0FBQztJQUNoRCxNQUFNLEVBQUUsR0FBRyx1QkFBdUIsQ0FBQztJQUVuQyxNQUFNLElBQUksR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxNQUFNLENBQUMsQ0FBQztJQUV2QyxPQUFPLENBQUMsRUFDTixFQUFFLEVBQ0YsU0FBUyxFQUVULFFBQVEsR0FDVCxFQUFFLEdBQUcsRUFBRSxFQUFFO1FBQ1IsT0FBTyxvQkFBQyxFQUFFLENBQUMsRUFBRSxJQUFDLEVBQUUsRUFBRTtnQkFDaEIsSUFBSSxFQUFFLENBQUMsQ0FBQyxFQUFDLENBQUMsRUFBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLE9BQU8sRUFBRSxFQUFFLEdBQUcsQ0FBQyxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsQ0FBQztnQkFDdEQsS0FBSyxFQUFFLENBQUMsQ0FBQyxFQUFDLENBQUMsRUFBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsTUFBTSxFQUFFLENBQUMsQ0FBQztnQkFDbEMsS0FBSyxFQUFFLENBQUMsQ0FBQyxFQUFDLENBQUMsRUFBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsTUFBTSxFQUFFLENBQUMsQ0FBQzthQUNuQztZQUNDLG9CQUFDLENBQUMsQ0FBQyxNQUFNLElBQ1AsQ0FBQyxFQUFDLEtBQUssRUFBQyxDQUFDLEVBQUMsS0FBSyxFQUNmLE9BQU8sRUFBRSxRQUFRLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsU0FBUyxFQUN4QyxHQUFHLEVBQUUsR0FBRyxFQUNSLE9BQU8sRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLE1BQU0sQ0FBQztnQkFFNUIsb0JBQUMsTUFBTSxPQUFFLENBQ0EsQ0FDTCxDQUFDO0lBQ1gsQ0FBQyxDQUFDO0FBQ0osQ0FBQyxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiYXN5bmMgKHsgZGVlcCwgZGF0YSwgcmVxdWlyZSB9KSA9PiB7XG4gIGNvbnN0IFJlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcbiAgY29uc3QgeyBGYVRyZWUgfSA9IHJlcXVpcmUoXCJyZWFjdC1pY29ucy9mYVwiKTtcbiAgY29uc3QgYyA9IHJlcXVpcmUoJ0BjaGFrcmEtdWkvcmVhY3QnKTtcblxuICBjb25zdCBkcGwgPSAnQGRlZXAtZm91bmRhdGlvbi9wZXJjZXB0aW9uLWxpbmtzJztcbiAgY29uc3QgZGMgPSAnQGRlZXAtZm91bmRhdGlvbi9jb3JlJztcblxuICBjb25zdCBUcmVlID0gZGVlcC5pZExvY2FsKGRwbCwgJ1RyZWUnKTtcblxuICByZXR1cm4gKHtcbiAgICBnbyxcbiAgICBoYW5kbGVySWQsXG5cbiAgICBpc0FjdGl2ZSxcbiAgfSwgcmVmKSA9PiB7XG4gICAgcmV0dXJuIDxnby5PbiBkbz17e1xuICAgICAgZXhlYzogKGcsdixvKSA9PiBnby5nby5kbygncmlnaHQnLCB7IC4uLm8sIGlkOiBUcmVlIH0pKSxcbiAgICAgIGNsaWNrOiAoZyx2LG8pID0+IGdvLmRvKCdleGVjJywgbyksXG4gICAgICByaWdodDogKGcsdixvKSA9PiBnby5kbygnZXhlYycsIG8pLFxuICAgIH19PlxuICAgICAgPGMuQnV0dG9uXG4gICAgICAgIHc9JzNlbScgaD0nM2VtJ1xuICAgICAgICB2YXJpYW50PXtpc0FjdGl2ZSA/ICdhY3RpdmUnIDogdW5kZWZpbmVkfVxuICAgICAgICByZWY9e3JlZn1cbiAgICAgICAgb25DbGljaz17KCkgPT4gZ28uZG8oJ2V4ZWMnKX1cbiAgICAgID5cbiAgICAgICAgPEZhVHJlZS8+XG4gICAgICA8L2MuQnV0dG9uPlxuICAgIDwvZ28uT24+O1xuICB9O1xufSJdfQ==",
        "link_id": 5510
      }
    },
    {
      "id": 5511,
      "type_id": 3,
      "from_id": 5298,
      "to_id": 5510,
      "value": {
        "id": 1201,
        "value": "generated",
        "link_id": 5511
      }
    },
    {
      "id": 5512,
      "type_id": 143,
      "from_id": 5510,
      "to_id": 5298
    },
    {
      "id": 4586,
      "type_id": 30,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 1026,
        "value": "({ deep, data, require, go }) => {\n    const React = require('react');\n    const c = require('@chakra-ui/react');\n    const dpl = '@deep-foundation/perception-links';\n    const dc = '@deep-foundation/core';\n    return ({ go, disclosure: _disclosure, defaultContainerId, defaultTypeId, defaultFromId, defaultToId, isActive, }, ref) => {\n        const __disclosure = c.useDisclosure();\n        const disclosure = _disclosure || __disclosure;\n        return React.createElement(go.On, { do: {\n                'exec': () => disclosure.onOpen(),\n            } },\n            React.createElement(c.Button, { ref: ref, variant: isActive ? 'active' : undefined, justifyContent: 'center', position: 'relative', onClick: () => go.do('exec') },\n                React.createElement(c.Box, { position: 'absolute', right: 1, top: 1 }, true ? '🔓' : '🔒'),\n                React.createElement(c.Text, { pr: 1 }, \"+\"),\n                \" insert\"),\n            React.createElement(go.Component, { path: [dpl, 'LinkInsertModal'], disclosure: disclosure, defaultContainerId: defaultContainerId, defaultTypeId: defaultTypeId, defaultFromId: defaultFromId, defaultToId: defaultToId }));\n    };\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsibW9kdWxlLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxDQUFDLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRTtJQUM5QixNQUFNLEtBQUssR0FBRyxPQUFPLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDL0IsTUFBTSxDQUFDLEdBQUcsT0FBTyxDQUFDLGtCQUFrQixDQUFDLENBQUM7SUFFdEMsTUFBTSxHQUFHLEdBQUcsbUNBQW1DLENBQUM7SUFDaEQsTUFBTSxFQUFFLEdBQUcsdUJBQXVCLENBQUM7SUFFbkMsT0FBTyxDQUFDLEVBQ04sRUFBRSxFQUVGLFVBQVUsRUFBRSxXQUFXLEVBRXZCLGtCQUFrQixFQUNsQixhQUFhLEVBQ2IsYUFBYSxFQUNiLFdBQVcsRUFFWCxRQUFRLEdBQ1QsRUFBRSxHQUFHLEVBQUUsRUFBRTtRQUNSLE1BQU0sWUFBWSxHQUFHLENBQUMsQ0FBQyxhQUFhLEVBQUUsQ0FBQztRQUN2QyxNQUFNLFVBQVUsR0FBRyxXQUFXLElBQUksWUFBWSxDQUFDO1FBRS9DLE9BQU8sb0JBQUMsRUFBRSxDQUFDLEVBQUUsSUFBQyxFQUFFLEVBQUU7Z0JBQ2hCLE1BQU0sRUFBRSxHQUFHLEVBQUUsQ0FBQyxVQUFVLENBQUMsTUFBTSxFQUFFO2FBQ2xDO1lBQ0Msb0JBQUMsQ0FBQyxDQUFDLE1BQU0sSUFDUCxHQUFHLEVBQUUsR0FBRyxFQUNSLE9BQU8sRUFBRSxRQUFRLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsU0FBUyxFQUFFLGNBQWMsRUFBQyxRQUFRLEVBQUMsUUFBUSxFQUFDLFVBQVUsRUFDckYsT0FBTyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsTUFBTSxDQUFDO2dCQUU1QixvQkFBQyxDQUFDLENBQUMsR0FBRyxJQUFDLFFBQVEsRUFBQyxVQUFVLEVBQUMsS0FBSyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxJQUFHLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQVM7Z0JBQ3pFLG9CQUFDLENBQUMsQ0FBQyxJQUFJLElBQUMsRUFBRSxFQUFFLENBQUMsUUFBWTswQkFDaEI7WUFDWCxvQkFBQyxFQUFFLENBQUMsU0FBUyxJQUFDLElBQUksRUFBRSxDQUFDLEdBQUcsRUFBRSxpQkFBaUIsQ0FBQyxFQUFFLFVBQVUsRUFBRSxVQUFVLEVBQ2xFLGtCQUFrQixFQUFFLGtCQUFrQixFQUN0QyxhQUFhLEVBQUUsYUFBYSxFQUM1QixhQUFhLEVBQUUsYUFBYSxFQUM1QixXQUFXLEVBQUUsV0FBVyxHQUN4QixDQUNJLENBQUM7SUFDWCxDQUFDLENBQUM7QUFDSixDQUFDLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyIoeyBkZWVwLCBkYXRhLCByZXF1aXJlLCBnbyB9KSA9PiB7XG4gIGNvbnN0IFJlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcbiAgY29uc3QgYyA9IHJlcXVpcmUoJ0BjaGFrcmEtdWkvcmVhY3QnKTtcblxuICBjb25zdCBkcGwgPSAnQGRlZXAtZm91bmRhdGlvbi9wZXJjZXB0aW9uLWxpbmtzJztcbiAgY29uc3QgZGMgPSAnQGRlZXAtZm91bmRhdGlvbi9jb3JlJztcblxuICByZXR1cm4gKHtcbiAgICBnbyxcblxuICAgIGRpc2Nsb3N1cmU6IF9kaXNjbG9zdXJlLFxuXG4gICAgZGVmYXVsdENvbnRhaW5lcklkLFxuICAgIGRlZmF1bHRUeXBlSWQsXG4gICAgZGVmYXVsdEZyb21JZCxcbiAgICBkZWZhdWx0VG9JZCxcblxuICAgIGlzQWN0aXZlLFxuICB9LCByZWYpID0+IHtcbiAgICBjb25zdCBfX2Rpc2Nsb3N1cmUgPSBjLnVzZURpc2Nsb3N1cmUoKTtcbiAgICBjb25zdCBkaXNjbG9zdXJlID0gX2Rpc2Nsb3N1cmUgfHwgX19kaXNjbG9zdXJlO1xuXG4gICAgcmV0dXJuIDxnby5PbiBkbz17e1xuICAgICAgJ2V4ZWMnOiAoKSA9PiBkaXNjbG9zdXJlLm9uT3BlbigpLFxuICAgIH19PlxuICAgICAgPGMuQnV0dG9uXG4gICAgICAgIHJlZj17cmVmfVxuICAgICAgICB2YXJpYW50PXtpc0FjdGl2ZSA/ICdhY3RpdmUnIDogdW5kZWZpbmVkfSBqdXN0aWZ5Q29udGVudD0nY2VudGVyJyBwb3NpdGlvbj0ncmVsYXRpdmUnXG4gICAgICAgIG9uQ2xpY2s9eygpID0+IGdvLmRvKCdleGVjJyl9XG4gICAgICA+XG4gICAgICAgIDxjLkJveCBwb3NpdGlvbj0nYWJzb2x1dGUnIHJpZ2h0PXsxfSB0b3A9ezF9Pnt0cnVlID8gJ/CflJMnIDogJ/CflJInfTwvYy5Cb3g+XG4gICAgICAgIDxjLlRleHQgcHI9ezF9Pis8L2MuVGV4dD4gaW5zZXJ0XG4gICAgICA8L2MuQnV0dG9uPlxuICAgICAgPGdvLkNvbXBvbmVudCBwYXRoPXtbZHBsLCAnTGlua0luc2VydE1vZGFsJ119IGRpc2Nsb3N1cmU9e2Rpc2Nsb3N1cmV9XG4gICAgICAgIGRlZmF1bHRDb250YWluZXJJZD17ZGVmYXVsdENvbnRhaW5lcklkfVxuICAgICAgICBkZWZhdWx0VHlwZUlkPXtkZWZhdWx0VHlwZUlkfVxuICAgICAgICBkZWZhdWx0RnJvbUlkPXtkZWZhdWx0RnJvbUlkfVxuICAgICAgICBkZWZhdWx0VG9JZD17ZGVmYXVsdFRvSWR9XG4gICAgICAvPlxuICAgIDwvZ28uT24+O1xuICB9O1xufSJdfQ==",
        "link_id": 4586
      }
    },
    {
      "id": 4587,
      "type_id": 3,
      "from_id": 4001,
      "to_id": 4586,
      "value": {
        "id": 1025,
        "value": "generated",
        "link_id": 4587
      }
    },
    {
      "id": 4588,
      "type_id": 143,
      "from_id": 4586,
      "to_id": 4001
    },
    {
      "id": 4589,
      "type_id": 3,
      "from_id": 4001,
      "to_id": 4588
    },
    {
      "id": 5513,
      "type_id": 3,
      "from_id": 5298,
      "to_id": 5512
    },
    {
      "id": 5865,
      "type_id": 717,
      "from_id": 0,
      "to_id": 0
    },
    {
      "id": 5868,
      "type_id": 3,
      "from_id": 2586,
      "to_id": 5865,
      "value": {
        "id": 1262,
        "value": "TreeLinkActionsComponent",
        "link_id": 5868
      }
    },
    {
      "id": 5869,
      "type_id": 35,
      "from_id": 145,
      "to_id": 5865
    },
    {
      "id": 5870,
      "type_id": 3,
      "from_id": 2586,
      "to_id": 5869,
      "value": {
        "id": 1264,
        "value": "TreeLinkActions",
        "link_id": 5870
      }
    },
    {
      "id": 6289,
      "type_id": 5258,
      "from_id": 6266,
      "to_id": 5240
    },
    {
      "id": 6290,
      "type_id": 3,
      "from_id": 2586,
      "to_id": 6289,
      "value": {
        "id": 1350,
        "value": "compatableMenuGraph",
        "link_id": 6290
      }
    },
    {
      "id": 5320,
      "type_id": 30,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 1182,
        "value": "async ({ deep, data, Go, require }) => {\n    const React = require('react');\n    const c = require('@chakra-ui/react');\n    const dpl = '@deep-foundation/perception-links';\n    const dc = '@deep-foundation/core';\n    const dml = '@deep-foundation/deepmemo-links';\n    const Handler = deep.idLocal(dc, 'Handler');\n    const Compatable = deep.idLocal(dpl, 'Compatable');\n    const Header = deep.idLocal(dpl, 'Header');\n    const Menu = deep.idLocal(dpl, 'Menu');\n    const Stack = deep.idLocal(dpl, 'Stack');\n    const Item = ({ link, isActive }) => (React.createElement(Go.Handler, { handlerId: link.id, linkId: link.id, isActive: isActive }));\n    return ({ go, }, ref) => {\n        const { data: menu } = deep.useSubscription({\n            type_id: Handler,\n            out: {\n                type_id: Compatable,\n                to_id: Menu,\n            },\n            order_by: { id: 'desc' }\n        });\n        return React.createElement(go.On, { do: {\n                focus: (g, v, linkId, o) => {\n                    !go.value && go.focus(Stack);\n                    o?.id && go(Stack).focus(o?.id);\n                },\n            } },\n            React.createElement(go.Provider, { linkId: Stack },\n                React.createElement(go.Component, { path: [dpl, 'Stack'], links: menu, direction: 'vertical', Item: Item })));\n    };\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsibW9kdWxlLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxLQUFLLEVBQUUsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLEVBQUUsRUFBRSxPQUFPLEVBQUUsRUFBRSxFQUFFO0lBQ3BDLE1BQU0sS0FBSyxHQUFHLE9BQU8sQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUMvQixNQUFNLENBQUMsR0FBRyxPQUFPLENBQUMsa0JBQWtCLENBQUMsQ0FBQztJQUV0QyxNQUFNLEdBQUcsR0FBRyxtQ0FBbUMsQ0FBQztJQUNoRCxNQUFNLEVBQUUsR0FBRyx1QkFBdUIsQ0FBQztJQUNuQyxNQUFNLEdBQUcsR0FBRyxpQ0FBaUMsQ0FBQztJQUU5QyxNQUFNLE9BQU8sR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLEVBQUUsRUFBRSxTQUFTLENBQUMsQ0FBQztJQUM1QyxNQUFNLFVBQVUsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxZQUFZLENBQUMsQ0FBQztJQUNuRCxNQUFNLE1BQU0sR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxRQUFRLENBQUMsQ0FBQztJQUMzQyxNQUFNLElBQUksR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxNQUFNLENBQUMsQ0FBQztJQUN2QyxNQUFNLEtBQUssR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxPQUFPLENBQUMsQ0FBQztJQUV6QyxNQUFNLElBQUksR0FBRyxDQUFDLEVBQUUsSUFBSSxFQUFFLFFBQVEsRUFBRSxFQUFFLEVBQUUsQ0FBQyxDQUFDLG9CQUFDLEVBQUUsQ0FBQyxPQUFPLElBQy9DLFNBQVMsRUFBRSxJQUFJLENBQUMsRUFBRSxFQUNsQixNQUFNLEVBQUUsSUFBSSxDQUFDLEVBQUUsRUFDZixRQUFRLEVBQUUsUUFBUSxHQUNsQixDQUFDLENBQUM7SUFFSixPQUFPLENBQUMsRUFDTixFQUFFLEdBQ0gsRUFBRSxHQUFHLEVBQUUsRUFBRTtRQUNSLE1BQU0sRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLEdBQUcsSUFBSSxDQUFDLGVBQWUsQ0FBQztZQUMxQyxPQUFPLEVBQUUsT0FBTztZQUNoQixHQUFHLEVBQUU7Z0JBQ0gsT0FBTyxFQUFFLFVBQVU7Z0JBQ25CLEtBQUssRUFBRSxJQUFJO2FBQ1o7WUFDRCxRQUFRLEVBQUUsRUFBRSxFQUFFLEVBQUUsTUFBTSxFQUFFO1NBQ3pCLENBQUMsQ0FBQztRQUVILE9BQU8sb0JBQUMsRUFBRSxDQUFDLEVBQUUsSUFBQyxFQUFFLEVBQUU7Z0JBQ2hCLEtBQUssRUFBRSxDQUFDLENBQUMsRUFBQyxDQUFDLEVBQUMsTUFBTSxFQUFDLENBQUMsRUFBRSxFQUFFO29CQUN0QixDQUFDLEVBQUUsQ0FBQyxLQUFLLElBQUksRUFBRSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQztvQkFDN0IsQ0FBQyxFQUFFLEVBQUUsSUFBSSxFQUFFLENBQUMsS0FBSyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQztnQkFDbEMsQ0FBQzthQUNGO1lBQ0Msb0JBQUMsRUFBRSxDQUFDLFFBQVEsSUFBQyxNQUFNLEVBQUUsS0FBSztnQkFDeEIsb0JBQUMsRUFBRSxDQUFDLFNBQVMsSUFBQyxJQUFJLEVBQUUsQ0FBQyxHQUFHLEVBQUUsT0FBTyxDQUFDLEVBQUUsS0FBSyxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUMsVUFBVSxFQUFDLElBQUksRUFBRSxJQUFJLEdBQUcsQ0FDdkUsQ0FDUixDQUFDO0lBQ1gsQ0FBQyxDQUFDO0FBQ0osQ0FBQyxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiYXN5bmMgKHsgZGVlcCwgZGF0YSwgR28sIHJlcXVpcmUgfSkgPT4ge1xuICBjb25zdCBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XG4gIGNvbnN0IGMgPSByZXF1aXJlKCdAY2hha3JhLXVpL3JlYWN0Jyk7XG5cbiAgY29uc3QgZHBsID0gJ0BkZWVwLWZvdW5kYXRpb24vcGVyY2VwdGlvbi1saW5rcyc7XG4gIGNvbnN0IGRjID0gJ0BkZWVwLWZvdW5kYXRpb24vY29yZSc7XG4gIGNvbnN0IGRtbCA9ICdAZGVlcC1mb3VuZGF0aW9uL2RlZXBtZW1vLWxpbmtzJztcblxuICBjb25zdCBIYW5kbGVyID0gZGVlcC5pZExvY2FsKGRjLCAnSGFuZGxlcicpO1xuICBjb25zdCBDb21wYXRhYmxlID0gZGVlcC5pZExvY2FsKGRwbCwgJ0NvbXBhdGFibGUnKTtcbiAgY29uc3QgSGVhZGVyID0gZGVlcC5pZExvY2FsKGRwbCwgJ0hlYWRlcicpO1xuICBjb25zdCBNZW51ID0gZGVlcC5pZExvY2FsKGRwbCwgJ01lbnUnKTtcbiAgY29uc3QgU3RhY2sgPSBkZWVwLmlkTG9jYWwoZHBsLCAnU3RhY2snKTtcblxuICBjb25zdCBJdGVtID0gKHsgbGluaywgaXNBY3RpdmUgfSkgPT4gKDxHby5IYW5kbGVyXG4gICAgaGFuZGxlcklkPXtsaW5rLmlkfVxuICAgIGxpbmtJZD17bGluay5pZH1cbiAgICBpc0FjdGl2ZT17aXNBY3RpdmV9XG4gIC8+KTtcbiAgXG4gIHJldHVybiAoe1xuICAgIGdvLFxuICB9LCByZWYpID0+IHtcbiAgICBjb25zdCB7IGRhdGE6IG1lbnUgfSA9IGRlZXAudXNlU3Vic2NyaXB0aW9uKHtcbiAgICAgIHR5cGVfaWQ6IEhhbmRsZXIsXG4gICAgICBvdXQ6IHtcbiAgICAgICAgdHlwZV9pZDogQ29tcGF0YWJsZSxcbiAgICAgICAgdG9faWQ6IE1lbnUsXG4gICAgICB9LFxuICAgICAgb3JkZXJfYnk6IHsgaWQ6ICdkZXNjJyB9XG4gICAgfSk7XG5cbiAgICByZXR1cm4gPGdvLk9uIGRvPXt7XG4gICAgICBmb2N1czogKGcsdixsaW5rSWQsbykgPT4ge1xuICAgICAgICAhZ28udmFsdWUgJiYgZ28uZm9jdXMoU3RhY2spO1xuICAgICAgICBvPy5pZCAmJiBnbyhTdGFjaykuZm9jdXMobz8uaWQpO1xuICAgICAgfSxcbiAgICB9fT5cbiAgICAgIDxnby5Qcm92aWRlciBsaW5rSWQ9e1N0YWNrfT5cbiAgICAgICAgPGdvLkNvbXBvbmVudCBwYXRoPXtbZHBsLCAnU3RhY2snXX0gbGlua3M9e21lbnV9IGRpcmVjdGlvbj0ndmVydGljYWwnIEl0ZW09e0l0ZW19Lz5cbiAgICAgIDwvZ28uUHJvdmlkZXI+XG4gICAgPC9nby5Pbj47XG4gIH07XG59Il19",
        "link_id": 5320
      }
    },
    {
      "id": 5321,
      "type_id": 3,
      "from_id": 5236,
      "to_id": 5320,
      "value": {
        "id": 1181,
        "value": "generated",
        "link_id": 5321
      }
    },
    {
      "id": 5322,
      "type_id": 143,
      "from_id": 5320,
      "to_id": 5236
    },
    {
      "id": 5323,
      "type_id": 3,
      "from_id": 5236,
      "to_id": 5322
    },
    {
      "id": 5628,
      "type_id": 717,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 1282,
        "value": "async ({ deep, data, Go, require }) => {\n  const React = require('react');\n  const { MoonIcon, SunIcon } = require('@chakra-ui/icons');\n  const { GrGraphQl } = require(\"react-icons/gr\");\n  const { IoReload } = require(\"react-icons/io\");\n  const c = require('@chakra-ui/react');\n\n  const dpl = '@deep-foundation/perception-links';\n  const dc = '@deep-foundation/core';\n\n  const Menu = deep.idLocal(dpl, 'Menu');\n  const Layer = deep.idLocal(dpl, 'Layer');\n  const Header = deep.idLocal(dpl, 'Header');\n  const Queries = deep.idLocal(dpl, 'Queries');\n\n  const Tree = deep.idLocal(dpl, 'Tree');\n\n  return ({\n    go,\n    linkId,\n\n    Status,\n    Auth,\n    ColorMode,\n\n    children,\n\n  }, ref) => {\n    const nav = go.useNav();\n    nav(Menu, Menu, Header, Layer, Queries);\n    nav(Queries, Queries, Menu, Layer, Queries);\n    nav(Layer, Menu, Header, Layer, Layer);\n    nav(Header, Header, Header, Header, Layer);\n\n    // const useTheme = go.useHook({ path: [dpl, 'useTheme'] });\n    // console.log('useTheme', useTheme);\n\n    React.useEffect(() => {\n      go.focus(Menu)\n\n    }, []);\n\n    const isMobile = c.useBreakpointValue(\n      { base: true, md: false },\n      { fallback: 'xs' },\n    );\n\n    return <go.On\n      do={{\n        left: (g, v, o) => go.focus(nav.get(go.value, 'left'), o),\n        up: (g, v, o) => go.focus(nav.get(go.value, 'up'), o),\n        right: (g, v, o) => go.focus(nav.get(go.value, 'right'), o),\n        down: (g, v, o) => go.focus(nav.get(go.value, 'down'), o),\n        use: (g, v, o) => {\n          if (go.data.usedId != o?.id && o?.id) {\n            go.data.usedId = o.id;\n            go(Header).do('use', o);\n            go(Layer).do('use', o);\n          }\n        },\n        open: async (g, v, o) => {\n          if (!go(Layer)) await (go.focus(Layer).go.awaitRef(Layer));\n          go(Layer).do('open', o);\n        },\n        concentrate: (g,v,o) => {\n          go(Layer).do('concentrate', o);\n        },\n      }}\n    >\n      <c.Box ref={go.ref} h='100vh' w=\"100vw\" position=\"fixed\" left=\"0%\" top=\"0%\">\n        <c.Grid\n          templateAreas={`\"tabs tabs\"\n                              \"nav main\"`}\n          gridTemplateRows={'3em 1fr'}\n          gridTemplateColumns={'3em 1fr'}\n          h='100vh' w=\"100vw\" position=\"fixed\" left=\"0%\" top=\"0%\"\n          color='blackAlpha.700'\n          fontWeight='bold'\n          ref={ref}\n        >\n          <c.GridItem area={'tabs'} zIndex={1}>\n            <c.Flex w=\"100%\" h=\"100%\" bg={go.value === Header ? 'deepBgDark' : 'deepBg'}>\n              <go.Provider linkId={Header}>\n                <go.Handler\n                  linkId={deep.linkId}\n                  handlerId={Header}\n                  using\n                />\n              </go.Provider>\n            </c.Flex>\n          </c.GridItem>\n          <c.GridItem area={'nav'} zIndex={1} position=\"relative\" h=\"100%\">\n            <c.Flex direction='column' h='100%' bg={go.value === Menu ? 'deepBgDark' : 'deepBg'}>\n              <go.Provider linkId={Menu}>\n                <go.Handler\n                  linkId={deep.linkId}\n                  handlerId={Menu}\n                />\n                <c.Spacer />\n              </go.Provider>\n              <c.VStack>\n                <c.Button w='3em' h='3em' as='a' href={`http://${deep?.client?.path}`}><GrGraphQl /></c.Button>\n                <ColorMode w='3em' h='3em' dark={{ children: <SunIcon /> }} light={{ children: <MoonIcon /> }} />\n                <go.Provider linkId={Queries}>\n                  <go.Component path={[dpl, 'Queries']} isActive={go.value === Queries}><Status /></go.Component>\n                </go.Provider>\n                <Auth />\n              </c.VStack>\n            </c.Flex>\n          </c.GridItem>\n          <c.GridItem area={'main'} overflow=\"hidden\" position=\"relative\" h='100%' bg={go.value === Layer ? 'deepBgDark' : 'deepBg'}>\n            <go.Provider linkId={Layer} value={Tree}>\n              <go.Handler\n                linkId={deep.linkId}\n                handlerId={Layer}\n                using fullWidth={isMobile ? 'calc(100vw - 3em)' : null}\n              />\n            </go.Provider>\n          </c.GridItem>\n        </c.Grid>\n      </c.Box>\n    </go.On>;\n  };\n}",
        "link_id": 5628
      }
    },
    {
      "id": 5631,
      "type_id": 3,
      "from_id": 2586,
      "to_id": 5628,
      "value": {
        "id": 1222,
        "value": "LayoutComponent",
        "link_id": 5631
      }
    },
    {
      "id": 5632,
      "type_id": 35,
      "from_id": 145,
      "to_id": 5628
    },
    {
      "id": 5633,
      "type_id": 3,
      "from_id": 2586,
      "to_id": 5632,
      "value": {
        "id": 1225,
        "value": "Layout",
        "link_id": 5633
      }
    },
    {
      "id": 3987,
      "type_id": 35,
      "from_id": 145,
      "to_id": 3983
    },
    {
      "id": 3988,
      "type_id": 3,
      "from_id": 2586,
      "to_id": 3987,
      "value": {
        "id": 963,
        "value": "TreeLinkDelete",
        "link_id": 3988
      }
    },
    {
      "id": 7349,
      "type_id": 5258,
      "from_id": 2739,
      "to_id": 5605
    },
    {
      "id": 7350,
      "type_id": 3,
      "from_id": 2586,
      "to_id": 7349,
      "value": {
        "id": 1355,
        "value": "compatableLayerTree",
        "link_id": 7350
      }
    },
    {
      "id": 7353,
      "type_id": 5258,
      "from_id": 5827,
      "to_id": 5605
    },
    {
      "id": 7354,
      "type_id": 3,
      "from_id": 2586,
      "to_id": 7353,
      "value": {
        "id": 1356,
        "value": "compatableLayerGraph",
        "link_id": 7354
      }
    },
    {
      "id": 8341,
      "type_id": 30,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 1359,
        "value": "async ({ deep, data, Go, require }) => {\n    const { GrClear } = require(\"react-icons/gr\");\n    const React = require('react');\n    const c = require('@chakra-ui/react');\n    const _ = require('lodash');\n    const { useDebounceCallback } = require('@react-hook/debounce');\n    const dpl = '@deep-foundation/perception-links';\n    const dc = '@deep-foundation/core';\n    const Contain = deep.idLocal(dc, 'Contain');\n    const containTree = deep.idLocal(dc, 'containTree');\n    const TreeLinkButton = deep.idLocal(dpl, 'TreeLinkButton');\n    const History = deep.idLocal(dpl, 'History');\n    const HistoryHandler = deep.idLocal(dpl, 'HistoryHandler');\n    const Menu = deep.idLocal(dpl, 'Menu');\n    const Stack = deep.idLocal(dpl, 'Stack');\n    const FinderButton = deep.idLocal(dpl, 'FinderButton');\n    const Item = ({ link, isActive, isConcentrated }) => {\n        const go = Go.useGo();\n        return React.createElement(Go.Handler, { handlerId: TreeLinkButton, linkId: link.id, isActive: isActive, minW: isConcentrated === false ? '3em' : '8em', h: '100%', maxH: '100%', variant: 'short', isConcentrated: isConcentrated });\n    };\n    return ({ go, using = false, }, ref) => {\n        const { data: history } = deep.useSubscription({\n            type_id: History,\n            from_id: deep.linkId,\n            order_by: { id: 'desc' },\n            limit: 30,\n            return: {\n                item: { relation: 'to' },\n            },\n        });\n        const [concentrate, setConcentrate] = React.useState('');\n        const concetrateDebounce = useDebounceCallback((concentrate) => {\n            go.root().do('concentrate', { value: concentrate });\n        }, 500);\n        React.useEffect(() => {\n            concetrateDebounce(concentrate);\n        }, [concentrate]);\n        const { data: items, ids } = React.useMemo(() => {\n            const _ids = [];\n            const filtered = _.uniqBy(history.map(h => h?.to), (l) => l?.id).filter(l => {\n                if (!!l?.id)\n                    _ids.push(l?.id);\n                return !!l?.id;\n            });\n            return { data: filtered, ids: _ids };\n        }, [history]);\n        const nav = go.useNav();\n        nav(FinderButton, FinderButton, FinderButton, Stack, 'down');\n        nav(Stack, FinderButton, Stack, 'clear', 'down');\n        nav('clear', Stack, 'clear', 'clear', 'down');\n        const { ids: concentrated } = deep.useSearch(concentrate, {\n            db: false, sort: false,\n            query: { id: { _in: ids } },\n            skip: !!concentrate,\n        });\n        console.log({ concentrated });\n        return React.createElement(go.On, { do: {\n                exec: (g, v, o) => o?.id || go.value == Stack || !go.value ? go.root().do('open', { id: o?.id || go(Stack).value, focus: true }) : go.do(go.value),\n                use: (g, v, o) => go(Stack) && go(Stack).do('use', o),\n                focus: (g, v, linkId, o) => {\n                    !go.value && go.focus(Stack);\n                    o?.id && go(Stack).focus(o?.id);\n                },\n                right: (g, v, o) => go.focus(nav.get(go.value || Stack, 'right')),\n                left: (g, v, o) => go.focus(nav.get(go.value || Stack, 'left')),\n                finder: (g, v, o) => go(FinderButton).do('exec'),\n                clear: (g, v, o) => deep.delete({\n                    up: {\n                        tree_id: containTree,\n                        parent: {\n                            type_id: Contain,\n                            to: { type_id: { _in: [History, HistoryHandler] } },\n                        },\n                    },\n                }),\n            } },\n            React.createElement(c.Flex, { ref: ref, w: '100%' },\n                React.createElement(go.Provider, { linkId: FinderButton },\n                    React.createElement(go.Handler, { handlerId: FinderButton, isActive: go.value === FinderButton })),\n                React.createElement(c.Box, { w: '12em', h: '100%', position: 'relative' },\n                    React.createElement(go.Editor, { value: concentrate, onChange: setConcentrate, fillSize: true, lineNumbers: false })),\n                React.createElement(go.Provider, { linkId: Stack },\n                    React.createElement(go.Component, { path: [dpl, 'Stack'], links: items, direction: 'horizontal', Item: Item, flex: '1', using: using, concentrated: !!concentrate && concentrated })),\n                React.createElement(c.Button, { h: '3em', w: '3em', variant: go.value === 'clear' ? 'active' : undefined, onClick: () => go.focus('clear').go.do('clear') },\n                    React.createElement(GrClear, null))));\n    };\n};\n//# sourceMappingURL=data:application/json;base64,",
        "link_id": 8341
      }
    },
    {
      "id": 8342,
      "type_id": 3,
      "from_id": 5646,
      "to_id": 8341,
      "value": {
        "id": 1358,
        "value": "generated",
        "link_id": 8342
      }
    },
    {
      "id": 8343,
      "type_id": 143,
      "from_id": 8341,
      "to_id": 5646
    },
    {
      "id": 8344,
      "type_id": 3,
      "from_id": 5646,
      "to_id": 8343
    },
    {
      "id": 19495,
      "type_id": 55,
      "from_id": 2586,
      "to_id": 2586,
      "value": {
        "id": 2930,
        "value": {
          "x": 133.62678649644747,
          "y": 98.88448773374024
        },
        "link_id": 19495
      }
    },
    {
      "id": 19496,
      "type_id": 3,
      "from_id": 2586,
      "to_id": 19495
    },
    {
      "id": 10114,
      "type_id": 35,
      "from_id": 145,
      "to_id": 2650
    },
    {
      "id": 10115,
      "type_id": 3,
      "from_id": 2586,
      "to_id": 10114,
      "value": {
        "id": 1424,
        "value": "TreeQuery",
        "link_id": 10115
      }
    },
    {
      "id": 10426,
      "type_id": 717,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 1433,
        "value": "({ deep, data, require, Go }) => {\n  const { MdEdit, MdPreview, MdSaveAlt } = require(\"react-icons/md\");\n  const { AiOutlineStop } = require(\"react-icons/ai\");\n  const { BsX, BsCheck2, BsXLg, BsDatabase, BsRegex } = require('react-icons/bs');\n  const { useResizeDetector } = require('react-resize-detector');\n  const { useDebounceCallback } = require('@react-hook/debounce');\n\n  const React = require('react');\n  \n  const c = require('@chakra-ui/react');\n\n  const dpl = '@deep-foundation/perception-links';\n  const dc = '@deep-foundation/core';\n\n  const Contain = deep.idLocal('@deep-foundation/core', 'Contain');\n  const History = deep.idLocal(dpl, 'History');\n  const Header = deep.idLocal(dpl, 'Header');\n  const Search = deep.idLocal(dpl, 'Search');\n  const TreeQuery = deep.idLocal(dpl, 'TreeQuery');\n  const TreeLink = deep.idLocal(dpl, 'TreeLink');\n  const TreeLinkInsert = deep.idLocal(dpl, 'TreeLinkInsert');\n  const TreeLinkDelete = deep.idLocal(dpl, 'TreeLinkDelete');\n  const TreeLinkButton = deep.idLocal(dpl, 'TreeLinkButton');\n\n  const identifiy = (q) => {\n    let value;\n    const o = {};\n    if (q?._or) {\n      for (let i in q?._or) {\n        if (q?._or[i]?.string?.value?._ilike) {\n          o.values = true;\n          o.query = false;\n          if (!value) value = q?._or[i]?.string?.value?._ilike.slice(1, -1);\n        }\n        if (q?._or[i]?.string?.value?._iregex) {\n          o.values = true;\n          o.query = false;\n          o.regexp = true;\n          if (!value) value = q?._or[i]?.string?.value?._iregex;\n        }\n        if (typeof(q?._or[i]?.number?.value) === 'number') {\n          o.values = true;\n          o.query = false;\n          if (!value) value = q?._or[i]?.number?.value;\n        }\n        if (q?._or[i]?.in?.type_id === Contain) {\n          if (q?._or[i]?.in?.string?.value?._iregex) {\n            o.query = false;\n            o.regexp = true;\n            if (!value) value = q?._or[i]?.in?.string?.value?._iregex;\n          }\n          if (q?._or[i]?.in?.string?.value?._ilike) {\n            o.query = false;\n            if (!value) value = q?._or[i]?.in?.string?.value?._ilike.slice(1,-1);\n          }\n        }\n        if (q?._not?.type_id === Contain) o.contains = false;\n        else if (q?.type_id === Contain) o.contains = true;\n      }\n    }\n    console.log('identified', q, o, value);\n    return { options: o, value };\n  };\n\n  return ({\n    go,\n    linkId,\n\n    isActive,\n    oneline = false,\n    saveHistory = false,\n    finder = false,\n\n    query: _query,\n    search: _search,\n\n    options: _options = {\n      db: false,\n      regexp: false,\n      query: false,\n      values: false,\n      contains: false,\n    },\n\n    onChange,\n    onSearch,\n\n    childrenSearchRight = null,\n\n    children,\n  }, ref) => {\n    if (!linkId) throw new Error(`linkId must be Query instance id but ${linkId}`);\n\n    const nav = go.useNav();\n    if (finder) nav('finder', 'left', 'up', 'current', 'db');\n    nav('current', finder ? 'finder' : 'db', 'up', 'search', 'db');\n    nav('search', 'current', 'up', 'contains', 'contains');\n    nav('db', 'current', 'current', 'regexp', 'down');\n    nav('regexp', 'db', 'current', 'query', 'down');\n    nav('query', 'regexp', 'current', 'values', 'down');\n    nav('values', 'query', 'current', 'contains', 'down');\n    nav('contains', 'values', 'search', 'right', 'down');\n\n    const options = { ...({ db: false, regexp: false, query: false, values: false, contains: false, }), ..._options };\n    const _q = React.useMemo(() => deep.get(linkId)?.value?.value || _query, []);\n    if (_q) options.query = true;\n\n    const [toRequest, setToRequest] = React.useState();\n\n    const identified = React.useMemo(() => {\n      return identifiy(deep.get(linkId)?.value?.value || {});\n    }, []);\n\n    const [value, setValue] = React.useState(typeof(identified?.value) === 'string' ? identified?.value : (_q ? JSON.stringify(_q) : _search));\n\n    const [o, setOptions] = React.useState({ ...options, ...identified.options });\n\n    const optionsRef = React.useRef(o);\n    React.useMemo(() => {\n      if (!optionsRef.current.query && !!o.query) {\n        setValue(JSON.stringify(deep.searchQuery(value, { ...o, query: undefined }), null, 2));\n      } else if (!!optionsRef.current.query && !o.query) {\n        const identified = identifiy(toRequest);\n        setOptions(identified?.options);\n        setValue(identified?.value);\n      }\n    }, [o.query]);\n    optionsRef.current = o;\n    const [results, setResults] = React.useState([]);\n\n\n    const request = React.useCallback(async (value) => {\n      const o = optionsRef.current;\n      let cq;\n      console.log('onRequest', { _q, o, identified });\n      if (!o.query) {\n        cq = deep.searchQuery(value, { ...o, query: undefined });\n      } else try { cq = JSON.parse(value); } catch(error) {\n        return console.error(error);\n      }\n      console.log('onRequest', cq);\n      if (saveHistory && typeof(linkId) === 'number') deep.value(linkId, cq);\n      setToRequest(cq);\n    }, []);\n\n    React.useEffect(() => {\n      if (!!value) request(value);\n    }, []);\n\n    React.useMemo(() => { (async () => {\n      const o = optionsRef.current;\n      if (!toRequest) return;\n      if (onSearch && value) {\n        let results;\n        try {\n          results = await deep.search(value, { ...o, remote: o.db, query: undefined, apply: `deep-perception-search-${go.__p}` });\n        } catch(error) {\n          results = { error };\n        }\n        console.log('onSearch', toRequest, results, o);\n        onSearch({ ...results, query: toRequest, search: !o.query ? value : null, options: o });\n      }\n    })(); }, [toRequest]);\n\n    return <go.On\n      do={{\n        focus: () => go.set('current'),\n        left: () => go.focus(nav.get(go.value, 'left')),\n        right: () => go.focus(nav.get(go.value, 'right')),\n        up: () => go.focus(nav.get(go.value, 'up')),\n        down: () => go.focus(nav.get(go.value, 'down')),\n        finder: () => setOptions({ ...o, finder: !o.finder}),\n        search: () => request(value),\n        current: () => setOptions({ ...o, current: !o.current}),\n        db: () => setOptions({ ...o, db: !o.db}),\n        regexp: () => setOptions({ ...o, regexp: !o.regexp}),\n        query: () => setOptions({ ...o, query: !o.query}),\n        values: () => setOptions({ ...o, values: !o.values}),\n        contains: () => setOptions({ ...o, contains: !o.contains}),\n      }}\n      focus={{\n        up: (q,v,o) => go.set().go?.go?.do('up'),\n        down: (q,v,o) => go.set().go?.go?.do('down'),\n        left: (q,v,o) => go.set(o?.left).go?.go?.do('left'),\n        right: (q,v,o) => go.set(o?.right).go?.go?.do('right'),\n      }}\n    >\n      <c.Box ref={ref} position='relative' w='100%' bg={isActive ? 'deepBgDark' : undefined}>\n        <c.SimpleGrid columns={oneline ? 2 : 1} w={oneline ? finder ? '28em' : '25em' : undefined}>\n          <c.Flex>\n            {!!finder && <c.Button\n              h='3em' maxW='3em' w='3em' variant={go.value === 'finder' ? 'active' : undefined}\n              onClick={() => go.do('finder')}\n            >\n              🪬\n            </c.Button>}\n            <c.Box flex={1} h='3em'>\n              {[<go.Editor\n                key={o.query}\n                fillSize\n                value={value}\n                onChange={value => {\n                  setValue(value);\n                  onChange && onChange(value);\n                }}\n                onSave={value => go.do('search')}\n                basicSetup={{\n                  lineNumbers: false\n                }}\n                saveButton={false}\n              />]}\n            </c.Box>\n            <c.Flex>\n              <c.Button\n                h='3em' maxW='3em' w='3em' variant={go.value === 'search' ? 'active' : undefined}\n                onClick={() => go.do('search')}\n              >\n                🔎\n              </c.Button>\n              {childrenSearchRight}\n            </c.Flex>\n          </c.Flex>\n          <c.Flex>\n            <c.Button\n              h='3em' maxW='3em' w='3em' position='relative'\n              onClick={() => go.do('db')} variant={go.value === 'db' ? 'active' : undefined}\n            >\n              <BsDatabase/>\n              {!o.db && <c.Center position='absolute' top='0' left='0' right='0' bottom='0' fontSize='2em'><AiOutlineStop/></c.Center>}\n            </c.Button>\n            <c.Button\n              h='3em' maxW='3em' w='3em' position='relative'\n              onClick={() => go.do('regexp')}  variant={go.value === 'regexp' ? 'active' : undefined}\n            >\n              <BsRegex/>\n              {!o.regexp && <c.Center position='absolute' top='0' left='0' right='0' bottom='0' fontSize='2em'><AiOutlineStop/></c.Center>}\n            </c.Button>\n            <c.Button\n              h='3em' maxW='3em' w='3em' position='relative'\n              onClick={() =>  go.do('query')} variant={go.value === 'query' ? 'active' : undefined}\n            >\n              {`{q}`}\n              {!o.query && <c.Center position='absolute' top='0' left='0' right='0' bottom='0' fontSize='2em'><AiOutlineStop/></c.Center>}\n            </c.Button>\n            <c.Spacer/>\n            <c.Button\n              h='3em' maxW='3em' w='3em' position='relative'\n              onClick={() =>  go.do('values')} variant={go.value === 'values' ? 'active' : undefined}\n            >\n              \"v\"\n              {!o.values && <c.Center position='absolute' top='0' left='0' right='0' bottom='0' fontSize='2em'><AiOutlineStop/></c.Center>}\n            </c.Button>\n            <c.Button\n              h='3em' maxW='3em' w='3em' position='relative'\n              onClick={() =>  go.do('contains')} variant={go.value === 'contains' ? 'active' : undefined}\n            >\n              🗂️\n              {!o.contains && <c.Center position='absolute' top='0' left='0' right='0' bottom='0' fontSize='2em'><AiOutlineStop/></c.Center>}\n            </c.Button>\n          </c.Flex>\n        </c.SimpleGrid>\n      </c.Box>\n    </go.On>\n  };\n}\n",
        "link_id": 10426
      }
    },
    {
      "id": 10429,
      "type_id": 3,
      "from_id": 2586,
      "to_id": 10426,
      "value": {
        "id": 1432,
        "value": "SearchComponent",
        "link_id": 10429
      }
    },
    {
      "id": 10430,
      "type_id": 35,
      "from_id": 145,
      "to_id": 10426
    },
    {
      "id": 10431,
      "type_id": 3,
      "from_id": 2586,
      "to_id": 10430,
      "value": {
        "id": 1431,
        "value": "Search",
        "link_id": 10431
      }
    },
    {
      "id": 10559,
      "type_id": 30,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 1435,
        "value": "({ deep, data, require, Go }) => {\n    const { MdEdit, MdPreview, MdSaveAlt } = require(\"react-icons/md\");\n    const { AiOutlineStop } = require(\"react-icons/ai\");\n    const { BsX, BsCheck2, BsXLg, BsDatabase, BsRegex } = require('react-icons/bs');\n    const { useResizeDetector } = require('react-resize-detector');\n    const { useDebounceCallback } = require('@react-hook/debounce');\n    const React = require('react');\n    const c = require('@chakra-ui/react');\n    const dpl = '@deep-foundation/perception-links';\n    const dc = '@deep-foundation/core';\n    const Contain = deep.idLocal('@deep-foundation/core', 'Contain');\n    const History = deep.idLocal(dpl, 'History');\n    const Header = deep.idLocal(dpl, 'Header');\n    const Search = deep.idLocal(dpl, 'Search');\n    const TreeQuery = deep.idLocal(dpl, 'TreeQuery');\n    const TreeLink = deep.idLocal(dpl, 'TreeLink');\n    const TreeLinkInsert = deep.idLocal(dpl, 'TreeLinkInsert');\n    const TreeLinkDelete = deep.idLocal(dpl, 'TreeLinkDelete');\n    const TreeLinkButton = deep.idLocal(dpl, 'TreeLinkButton');\n    const identifiy = (q) => {\n        let value;\n        const o = {};\n        if (q?._or) {\n            for (let i in q?._or) {\n                if (q?._or[i]?.string?.value?._ilike) {\n                    o.values = true;\n                    o.query = false;\n                    if (!value)\n                        value = q?._or[i]?.string?.value?._ilike.slice(1, -1);\n                }\n                if (q?._or[i]?.string?.value?._iregex) {\n                    o.values = true;\n                    o.query = false;\n                    o.regexp = true;\n                    if (!value)\n                        value = q?._or[i]?.string?.value?._iregex;\n                }\n                if (typeof (q?._or[i]?.number?.value) === 'number') {\n                    o.values = true;\n                    o.query = false;\n                    if (!value)\n                        value = q?._or[i]?.number?.value;\n                }\n                if (q?._or[i]?.in?.type_id === Contain) {\n                    if (q?._or[i]?.in?.string?.value?._iregex) {\n                        o.query = false;\n                        o.regexp = true;\n                        if (!value)\n                            value = q?._or[i]?.in?.string?.value?._iregex;\n                    }\n                    if (q?._or[i]?.in?.string?.value?._ilike) {\n                        o.query = false;\n                        if (!value)\n                            value = q?._or[i]?.in?.string?.value?._ilike.slice(1, -1);\n                    }\n                }\n                if (q?._not?.type_id === Contain)\n                    o.contains = false;\n                else if (q?.type_id === Contain)\n                    o.contains = true;\n            }\n        }\n        console.log('identified', q, o, value);\n        return { options: o, value };\n    };\n    return ({ go, linkId, isActive, oneline = false, saveHistory = false, finder = false, query: _query, search: _search, options: _options = {\n        db: false,\n        regexp: false,\n        query: false,\n        values: false,\n        contains: false,\n    }, onChange, onSearch, childrenSearchRight = null, children, }, ref) => {\n        if (!linkId)\n            throw new Error(`linkId must be Query instance id but ${linkId}`);\n        const nav = go.useNav();\n        if (finder)\n            nav('finder', 'left', 'up', 'current', 'db');\n        nav('current', finder ? 'finder' : 'db', 'up', 'search', 'db');\n        nav('search', 'current', 'up', 'contains', 'contains');\n        nav('db', 'current', 'current', 'regexp', 'down');\n        nav('regexp', 'db', 'current', 'query', 'down');\n        nav('query', 'regexp', 'current', 'values', 'down');\n        nav('values', 'query', 'current', 'contains', 'down');\n        nav('contains', 'values', 'search', 'right', 'down');\n        const options = { ...({ db: false, regexp: false, query: false, values: false, contains: false, }), ..._options };\n        const _q = React.useMemo(() => deep.get(linkId)?.value?.value || _query, []);\n        if (_q)\n            options.query = true;\n        const [toRequest, setToRequest] = React.useState();\n        const identified = React.useMemo(() => {\n            return identifiy(deep.get(linkId)?.value?.value || {});\n        }, []);\n        const [value, setValue] = React.useState(typeof (identified?.value) === 'string' ? identified?.value : (_q ? JSON.stringify(_q) : _search));\n        const [o, setOptions] = React.useState({ ...options, ...identified.options });\n        const optionsRef = React.useRef(o);\n        React.useMemo(() => {\n            if (!optionsRef.current.query && !!o.query) {\n                setValue(JSON.stringify(deep.searchQuery(value, { ...o, query: undefined }), null, 2));\n            }\n            else if (!!optionsRef.current.query && !o.query) {\n                const identified = identifiy(toRequest);\n                setOptions(identified?.options);\n                setValue(identified?.value);\n            }\n        }, [o.query]);\n        optionsRef.current = o;\n        const [results, setResults] = React.useState([]);\n        const request = React.useCallback(async (value) => {\n            const o = optionsRef.current;\n            let cq;\n            console.log('onRequest', { _q, o, identified });\n            if (!o.query) {\n                cq = deep.searchQuery(value, { ...o, query: undefined });\n            }\n            else\n                try {\n                    cq = JSON.parse(value);\n                }\n                catch (error) {\n                    return console.error(error);\n                }\n            console.log('onRequest', cq);\n            if (saveHistory && typeof (linkId) === 'number')\n                deep.value(linkId, cq);\n            setToRequest(cq);\n        }, []);\n        React.useEffect(() => {\n            if (!!value)\n                request(value);\n        }, []);\n        React.useMemo(() => {\n            (async () => {\n                const o = optionsRef.current;\n                if (!toRequest)\n                    return;\n                if (onSearch && value) {\n                    let results;\n                    try {\n                        results = await deep.search(value, { ...o, remote: o.db, query: undefined, apply: `deep-perception-search-${go.__p}` });\n                    }\n                    catch (error) {\n                        results = { error };\n                    }\n                    console.log('onSearch', toRequest, results, o);\n                    onSearch({ ...results, query: toRequest, search: !o.query ? value : null, options: o });\n                }\n            })();\n        }, [toRequest]);\n        return React.createElement(go.On, { do: {\n                focus: () => go.set('current'),\n                left: () => go.focus(nav.get(go.value, 'left')),\n                right: () => go.focus(nav.get(go.value, 'right')),\n                up: () => go.focus(nav.get(go.value, 'up')),\n                down: () => go.focus(nav.get(go.value, 'down')),\n                finder: () => setOptions({ ...o, finder: !o.finder }),\n                search: () => request(value),\n                current: () => setOptions({ ...o, current: !o.current }),\n                db: () => setOptions({ ...o, db: !o.db }),\n                regexp: () => setOptions({ ...o, regexp: !o.regexp }),\n                query: () => setOptions({ ...o, query: !o.query }),\n                values: () => setOptions({ ...o, values: !o.values }),\n                contains: () => setOptions({ ...o, contains: !o.contains }),\n            }, focus: {\n                up: (q, v, o) => go.set().go?.go?.do('up'),\n                down: (q, v, o) => go.set().go?.go?.do('down'),\n                left: (q, v, o) => go.set(o?.left).go?.go?.do('left'),\n                right: (q, v, o) => go.set(o?.right).go?.go?.do('right'),\n            } },\n            React.createElement(c.Box, { ref: ref, position: 'relative', w: '100%', bg: isActive ? 'deepBgDark' : undefined },\n                React.createElement(c.SimpleGrid, { columns: oneline ? 2 : 1, w: oneline ? finder ? '28em' : '25em' : undefined },\n                    React.createElement(c.Flex, null,\n                        !!finder && React.createElement(c.Button, { h: '3em', maxW: '3em', w: '3em', variant: go.value === 'finder' ? 'active' : undefined, onClick: () => go.do('finder') }, \"\\uD83E\\uDEAC\"),\n                        React.createElement(c.Box, { flex: 1, h: '3em' }, [React.createElement(go.Editor, { key: o.query, fillSize: true, value: value, onChange: value => {\n                                    setValue(value);\n                                    onChange && onChange(value);\n                                }, onSave: value => go.do('search'), basicSetup: {\n                                    lineNumbers: false\n                                }, saveButton: false })]),\n                        React.createElement(c.Flex, null,\n                            React.createElement(c.Button, { h: '3em', maxW: '3em', w: '3em', variant: go.value === 'search' ? 'active' : undefined, onClick: () => go.do('search') }, \"\\uD83D\\uDD0E\"),\n                            childrenSearchRight)),\n                    React.createElement(c.Flex, null,\n                        React.createElement(c.Button, { h: '3em', maxW: '3em', w: '3em', position: 'relative', onClick: () => go.do('db'), variant: go.value === 'db' ? 'active' : undefined },\n                            React.createElement(BsDatabase, null),\n                            !o.db && React.createElement(c.Center, { position: 'absolute', top: '0', left: '0', right: '0', bottom: '0', fontSize: '2em' },\n                                React.createElement(AiOutlineStop, null))),\n                        React.createElement(c.Button, { h: '3em', maxW: '3em', w: '3em', position: 'relative', onClick: () => go.do('regexp'), variant: go.value === 'regexp' ? 'active' : undefined },\n                            React.createElement(BsRegex, null),\n                            !o.regexp && React.createElement(c.Center, { position: 'absolute', top: '0', left: '0', right: '0', bottom: '0', fontSize: '2em' },\n                                React.createElement(AiOutlineStop, null))),\n                        React.createElement(c.Button, { h: '3em', maxW: '3em', w: '3em', position: 'relative', onClick: () => go.do('query'), variant: go.value === 'query' ? 'active' : undefined },\n                            `{q}`,\n                            !o.query && React.createElement(c.Center, { position: 'absolute', top: '0', left: '0', right: '0', bottom: '0', fontSize: '2em' },\n                                React.createElement(AiOutlineStop, null))),\n                        React.createElement(c.Spacer, null),\n                        React.createElement(c.Button, { h: '3em', maxW: '3em', w: '3em', position: 'relative', onClick: () => go.do('values'), variant: go.value === 'values' ? 'active' : undefined },\n                            \"\\\"v\\\"\",\n                            !o.values && React.createElement(c.Center, { position: 'absolute', top: '0', left: '0', right: '0', bottom: '0', fontSize: '2em' },\n                                React.createElement(AiOutlineStop, null))),\n                        React.createElement(c.Button, { h: '3em', maxW: '3em', w: '3em', position: 'relative', onClick: () => go.do('contains'), variant: go.value === 'contains' ? 'active' : undefined },\n                            \"\\uD83D\\uDDC2\\uFE0F\",\n                            !o.contains && React.createElement(c.Center, { position: 'absolute', top: '0', left: '0', right: '0', bottom: '0', fontSize: '2em' },\n                                React.createElement(AiOutlineStop, null)))))));\n    };\n};\n//# sourceMappingURL=data:application/json;base64,",
        "link_id": 10559
      }
    },
    {
      "id": 10560,
      "type_id": 3,
      "from_id": 10426,
      "to_id": 10559,
      "value": {
        "id": 1434,
        "value": "generated",
        "link_id": 10560
      }
    },
    {
      "id": 10561,
      "type_id": 143,
      "from_id": 10559,
      "to_id": 10426
    },
    {
      "id": 10562,
      "type_id": 3,
      "from_id": 10426,
      "to_id": 10561
    },
    {
      "id": 10711,
      "type_id": 717,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 1441,
        "value": "({ deep, data, require, Go }) => {\n  const { MdEdit, MdPreview, MdSaveAlt } = require(\"react-icons/md\");\n  const React = require('react');\n\n  const {\n    TypedIcon, DownIcon, UpIcon, TypeIcon, InIcon, OutIcon, FromIcon, ToIcon,\n    useSymbol,\n  } = require('@deep-foundation/perception-app');\n\n  const c = require('@chakra-ui/react');\n\n  const dpl = '@deep-foundation/perception-links';\n  const dc = '@deep-foundation/core';\n  \n  const Query = deep.idLocal(dc, 'Query');\n  const Stack = deep.idLocal(dpl, 'Stack');\n  const History = deep.idLocal(dpl, 'History');\n  const Header = deep.idLocal(dpl, 'Header');\n  const Search = deep.idLocal(dpl, 'Search');\n  const TreeQuery = deep.idLocal(dpl, 'TreeQuery');\n  const TreeList = deep.idLocal(dpl, 'TreeList');\n  const TreeLink = deep.idLocal(dpl, 'TreeLink');\n  const TreeLinkInsert = deep.idLocal(dpl, 'TreeLinkInsert');\n  const TreeLinkDelete = deep.idLocal(dpl, 'TreeLinkDelete');\n  const TreeLinkButton = deep.idLocal(dpl, 'TreeLinkButton');\n\n  return ({\n    go,\n\n    isActive,\n    fullWidth = null,\n\n    saveHistory = false,\n\n    initialResults,\n    ...props\n  }, ref) => {\n    const [links, setLinks] = React.useState(initialResults || []);\n    const firstRef = React.useRef(false);\n    \n    const nav = go.useNav();\n    nav(Search, 'left', 'up', 'right', Stack);\n    nav(Stack, 'left', Search, 'right', 'down');\n\n    return <go.On do={{\n      exec: (g,v,o) => o?.id && go.go.do('open', { handlerId: TreeLink, id: o.id, prevId: go.linkId, focus: true }),\n      close: (g,v,o) => go.go.do('close', { id: go.linkId }),\n\n      left: (g,v,o) => go.focus(nav.get(go.value || Search, 'left'), { prev: go.value }),\n      up: (g,v,o) => go.focus(nav.get(go.value || Search, 'up'), { prev: go.value }),\n      right: (g,v,o) => go.focus(nav.get(go.value || Search, 'right'), { prev: go.value }),\n      down: (g,v,o) => go.focus(nav.get(go.value || Search, 'down'), { prev: go.value }),\n    }}>\n      <c.Flex direction='column' minW={fullWidth || '30em'} maxW={fullWidth || '30em'} h='100%' maxH='100%' {...props}>\n        <go.Provider linkId={Search}>\n          <go.Handler linkId={go.linkId} handlerId={Search}\n            saveHistory={saveHistory}\n            onSearch={(results) => {\n              if (!initialResults || !!firstRef.current) {\n                console.log('onSearch', results);\n                let links = results.data || [];\n                setLinks(links);\n              }\n              firstRef.current = true;\n            }}\n            childrenSearchRight={<c.Button\n              minW='3e,' w='3em' h='100%' minH='3em' p='0'\n              onClick={() => go.focus('close').go.do('close')}\n              variant={go.value === 'close' ? 'active' : null}\n            >x</c.Button>}\n          />\n        </go.Provider>\n        <go.Provider linkId={Stack}>\n          <go.Handler handlerId={Stack} direction='vertical' links={links} flex='1' saveHistory={saveHistory}/>\n        </go.Provider>\n      </c.Flex>\n    </go.On>\n  };\n}\n",
        "link_id": 10711
      }
    },
    {
      "id": 10714,
      "type_id": 3,
      "from_id": 2586,
      "to_id": 10711,
      "value": {
        "id": 1440,
        "value": "TreeListComponent",
        "link_id": 10714
      }
    },
    {
      "id": 10715,
      "type_id": 35,
      "from_id": 145,
      "to_id": 10711
    },
    {
      "id": 10716,
      "type_id": 3,
      "from_id": 2586,
      "to_id": 10715,
      "value": {
        "id": 1439,
        "value": "TreeList",
        "link_id": 10716
      }
    },
    {
      "id": 10736,
      "type_id": 30,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 1443,
        "value": "({ deep, data, require, Go }) => {\n    const { MdEdit, MdPreview, MdSaveAlt } = require(\"react-icons/md\");\n    const React = require('react');\n    const { TypedIcon, DownIcon, UpIcon, TypeIcon, InIcon, OutIcon, FromIcon, ToIcon, useSymbol, } = require('@deep-foundation/perception-app');\n    const c = require('@chakra-ui/react');\n    const dpl = '@deep-foundation/perception-links';\n    const dc = '@deep-foundation/core';\n    const Query = deep.idLocal(dc, 'Query');\n    const Stack = deep.idLocal(dpl, 'Stack');\n    const History = deep.idLocal(dpl, 'History');\n    const Header = deep.idLocal(dpl, 'Header');\n    const Search = deep.idLocal(dpl, 'Search');\n    const TreeQuery = deep.idLocal(dpl, 'TreeQuery');\n    const TreeList = deep.idLocal(dpl, 'TreeList');\n    const TreeLink = deep.idLocal(dpl, 'TreeLink');\n    const TreeLinkInsert = deep.idLocal(dpl, 'TreeLinkInsert');\n    const TreeLinkDelete = deep.idLocal(dpl, 'TreeLinkDelete');\n    const TreeLinkButton = deep.idLocal(dpl, 'TreeLinkButton');\n    return ({ go, isActive, fullWidth = null, saveHistory = false, initialResults, ...props }, ref) => {\n        const [links, setLinks] = React.useState(initialResults || []);\n        const firstRef = React.useRef(false);\n        const nav = go.useNav();\n        nav(Search, 'left', 'up', 'right', Stack);\n        nav(Stack, 'left', Search, 'right', 'down');\n        return React.createElement(go.On, { do: {\n                exec: (g, v, o) => o?.id && go.go.do('open', { handlerId: TreeLink, id: o.id, prevId: go.linkId, focus: true }),\n                close: (g, v, o) => go.go.do('close', { id: go.linkId }),\n                left: (g, v, o) => go.focus(nav.get(go.value || Search, 'left'), { prev: go.value }),\n                up: (g, v, o) => go.focus(nav.get(go.value || Search, 'up'), { prev: go.value }),\n                right: (g, v, o) => go.focus(nav.get(go.value || Search, 'right'), { prev: go.value }),\n                down: (g, v, o) => go.focus(nav.get(go.value || Search, 'down'), { prev: go.value }),\n            } },\n            React.createElement(c.Flex, { direction: 'column', minW: fullWidth || '30em', maxW: fullWidth || '30em', h: '100%', maxH: '100%', ...props },\n                React.createElement(go.Provider, { linkId: Search },\n                    React.createElement(go.Handler, { linkId: go.linkId, handlerId: Search, saveHistory: saveHistory, onSearch: (results) => {\n                            if (!initialResults || !!firstRef.current) {\n                                console.log('onSearch', results);\n                                let links = results.data || [];\n                                setLinks(links);\n                            }\n                            firstRef.current = true;\n                        }, childrenSearchRight: React.createElement(c.Button, { minW: '3e,', w: '3em', h: '100%', minH: '3em', p: '0', onClick: () => go.focus('close').go.do('close'), variant: go.value === 'close' ? 'active' : null }, \"x\") })),\n                React.createElement(go.Provider, { linkId: Stack },\n                    React.createElement(go.Handler, { handlerId: Stack, direction: 'vertical', links: links, flex: '1', saveHistory: saveHistory }))));\n    };\n};\n//# sourceMappingURL=data:application/json;base64,",
        "link_id": 10736
      }
    },
    {
      "id": 10737,
      "type_id": 3,
      "from_id": 10711,
      "to_id": 10736,
      "value": {
        "id": 1442,
        "value": "generated",
        "link_id": 10737
      }
    },
    {
      "id": 10738,
      "type_id": 143,
      "from_id": 10736,
      "to_id": 10711
    },
    {
      "id": 10739,
      "type_id": 3,
      "from_id": 10711,
      "to_id": 10738
    },
    {
      "id": 11285,
      "type_id": 717,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 1454,
        "value": "({ deep, data, require, Go }) => {\n  const { BsFullscreenExit, BsFullscreen } = require(\"react-icons/bs\");\n  const React = require('react');\n  \n  const c = require('@chakra-ui/react');\n\n  const dpl = '@deep-foundation/perception-links';\n\n  return ({\n    go,\n    linkId,\n\n    disclosure: __disclosure,\n  }, ref) => {\n    const _disclosure = c.useDisclosure();\n    const disclosure = __disclosure || _disclosure;\n\n    return <go.On do={{\n    }}>\n      {!disclosure.isOpen && <go.Editor linkId={linkId} fillSize>\n        <c.Button w='3em' h='3em' onClick={disclosure.onOpen}>\n          <BsFullscreen/>\n        </c.Button>\n      </go.Editor>}\n      <c.Modal\n        closeOnOverlayClick blockScrollOnMount={false}\n        onClose={disclosure.onClose}\n        isOpen={disclosure.isOpen} portalProps={{ containerRef: go.root().ref }}\n      >\n        <c.ModalOverlay />\n        <c.ModalContent w='80vw' maxW='80vw' h='80vh' position='relative'>\n          <c.ModalHeader>{''+deep.nameLocal(linkId)}</c.ModalHeader>\n          <c.ModalBody p={0} position='relative'>\n            <go.Editor linkId={linkId} fillSize>\n              <BsFullscreenExit/>\n            </c.Button>\n          </c.ModalBody>\n        </c.ModalContent>\n      </c.Modal>\n    </go.On>;\n  };\n}",
        "link_id": 11285
      }
    },
    {
      "id": 11288,
      "type_id": 3,
      "from_id": 2586,
      "to_id": 11285,
      "value": {
        "id": 1453,
        "value": "TreeEditorComponent",
        "link_id": 11288
      }
    },
    {
      "id": 11289,
      "type_id": 35,
      "from_id": 145,
      "to_id": 11285
    },
    {
      "id": 11290,
      "type_id": 3,
      "from_id": 2586,
      "to_id": 11289,
      "value": {
        "id": 1451,
        "value": "TreeEditor",
        "link_id": 11290
      }
    },
    {
      "id": 11305,
      "type_id": 30,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 1456,
        "value": "({ deep, data, require, Go }) => {\n    const { BsFullscreenExit, BsFullscreen } = require(\"react-icons/bs\");\n    const React = require('react');\n    const c = require('@chakra-ui/react');\n    const dpl = '@deep-foundation/perception-links';\n    return ({ go, linkId, disclosure: __disclosure, }, ref) => {\n        const _disclosure = c.useDisclosure();\n        const disclosure = __disclosure || _disclosure;\n        return React.createElement(go.On, { do: {} },\n            !disclosure.isOpen && React.createElement(go.Editor, { linkId: linkId, fillSize: true },\n                React.createElement(c.Button, { w: '3em', h: '3em', onClick: disclosure.onOpen },\n                    React.createElement(BsFullscreen, null))),\n            React.createElement(c.Modal, { closeOnOverlayClick: true, blockScrollOnMount: false, onClose: disclosure.onClose, isOpen: disclosure.isOpen, portalProps: { containerRef: go.root().ref } },\n                React.createElement(c.ModalOverlay, null),\n                React.createElement(c.ModalContent, { w: '80vw', maxW: '80vw', h: '80vh', position: 'relative' },\n                    React.createElement(c.ModalHeader, null, '' + deep.nameLocal(linkId)),\n                    React.createElement(c.ModalBody, { p: 0, position: 'relative' },\n                        React.createElement(go.Editor, { linkId: linkId, fillSize: true },\n                            React.createElement(BsFullscreenExit, null))))));\n    };\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsibW9kdWxlLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxDQUFDLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRTtJQUM5QixNQUFNLEVBQUUsZ0JBQWdCLEVBQUUsWUFBWSxFQUFFLEdBQUcsT0FBTyxDQUFDLGdCQUFnQixDQUFDLENBQUM7SUFDckUsTUFBTSxLQUFLLEdBQUcsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBRS9CLE1BQU0sQ0FBQyxHQUFHLE9BQU8sQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDO0lBRXRDLE1BQU0sR0FBRyxHQUFHLG1DQUFtQyxDQUFDO0lBRWhELE9BQU8sQ0FBQyxFQUNOLEVBQUUsRUFDRixNQUFNLEVBRU4sVUFBVSxFQUFFLFlBQVksR0FDekIsRUFBRSxHQUFHLEVBQUUsRUFBRTtRQUNSLE1BQU0sV0FBVyxHQUFHLENBQUMsQ0FBQyxhQUFhLEVBQUUsQ0FBQztRQUN0QyxNQUFNLFVBQVUsR0FBRyxZQUFZLElBQUksV0FBVyxDQUFDO1FBRS9DLE9BQU8sb0JBQUMsRUFBRSxDQUFDLEVBQUUsSUFBQyxFQUFFLEVBQUUsRUFDakI7WUFDRSxDQUFDLFVBQVUsQ0FBQyxNQUFNLElBQUksb0JBQUMsRUFBRSxDQUFDLE1BQU0sSUFBQyxNQUFNLEVBQUUsTUFBTSxFQUFFLFFBQVE7Z0JBQ3hELG9CQUFDLENBQUMsQ0FBQyxNQUFNLElBQUMsQ0FBQyxFQUFDLEtBQUssRUFBQyxDQUFDLEVBQUMsS0FBSyxFQUFDLE9BQU8sRUFBRSxVQUFVLENBQUMsTUFBTTtvQkFDbEQsb0JBQUMsWUFBWSxPQUFFLENBQ04sQ0FDRDtZQUNaLG9CQUFDLENBQUMsQ0FBQyxLQUFLLElBQ04sbUJBQW1CLFFBQUMsa0JBQWtCLEVBQUUsS0FBSyxFQUM3QyxPQUFPLEVBQUUsVUFBVSxDQUFDLE9BQU8sRUFDM0IsTUFBTSxFQUFFLFVBQVUsQ0FBQyxNQUFNLEVBQUUsV0FBVyxFQUFFLEVBQUUsWUFBWSxFQUFFLEVBQUUsQ0FBQyxJQUFJLEVBQUUsQ0FBQyxHQUFHLEVBQUU7Z0JBRXZFLG9CQUFDLENBQUMsQ0FBQyxZQUFZLE9BQUc7Z0JBQ2xCLG9CQUFDLENBQUMsQ0FBQyxZQUFZLElBQUMsQ0FBQyxFQUFDLE1BQU0sRUFBQyxJQUFJLEVBQUMsTUFBTSxFQUFDLENBQUMsRUFBQyxNQUFNLEVBQUMsUUFBUSxFQUFDLFVBQVU7b0JBQy9ELG9CQUFDLENBQUMsQ0FBQyxXQUFXLFFBQUUsRUFBRSxHQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUFDLENBQWlCO29CQUMxRCxvQkFBQyxDQUFDLENBQUMsU0FBUyxJQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsUUFBUSxFQUFDLFVBQVU7d0JBQ3BDLG9CQUFDLEVBQUUsQ0FBQyxNQUFNLElBQUMsTUFBTSxFQUFFLE1BQU0sRUFBRSxRQUFROzRCQUNqQyxvQkFBQyxnQkFBZ0IsT0FBRSxDQUNWLENBQ0MsQ0FDQyxDQUNULENBQ0osQ0FBQztJQUNYLENBQUMsQ0FBQztBQUNKLENBQUMsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbIih7IGRlZXAsIGRhdGEsIHJlcXVpcmUsIEdvIH0pID0+IHtcbiAgY29uc3QgeyBCc0Z1bGxzY3JlZW5FeGl0LCBCc0Z1bGxzY3JlZW4gfSA9IHJlcXVpcmUoXCJyZWFjdC1pY29ucy9ic1wiKTtcbiAgY29uc3QgUmVhY3QgPSByZXF1aXJlKCdyZWFjdCcpO1xuICBcbiAgY29uc3QgYyA9IHJlcXVpcmUoJ0BjaGFrcmEtdWkvcmVhY3QnKTtcblxuICBjb25zdCBkcGwgPSAnQGRlZXAtZm91bmRhdGlvbi9wZXJjZXB0aW9uLWxpbmtzJztcblxuICByZXR1cm4gKHtcbiAgICBnbyxcbiAgICBsaW5rSWQsXG5cbiAgICBkaXNjbG9zdXJlOiBfX2Rpc2Nsb3N1cmUsXG4gIH0sIHJlZikgPT4ge1xuICAgIGNvbnN0IF9kaXNjbG9zdXJlID0gYy51c2VEaXNjbG9zdXJlKCk7XG4gICAgY29uc3QgZGlzY2xvc3VyZSA9IF9fZGlzY2xvc3VyZSB8fCBfZGlzY2xvc3VyZTtcblxuICAgIHJldHVybiA8Z28uT24gZG89e3tcbiAgICB9fT5cbiAgICAgIHshZGlzY2xvc3VyZS5pc09wZW4gJiYgPGdvLkVkaXRvciBsaW5rSWQ9e2xpbmtJZH0gZmlsbFNpemU+XG4gICAgICAgIDxjLkJ1dHRvbiB3PSczZW0nIGg9JzNlbScgb25DbGljaz17ZGlzY2xvc3VyZS5vbk9wZW59PlxuICAgICAgICAgIDxCc0Z1bGxzY3JlZW4vPlxuICAgICAgICA8L2MuQnV0dG9uPlxuICAgICAgPC9nby5FZGl0b3I+fVxuICAgICAgPGMuTW9kYWxcbiAgICAgICAgY2xvc2VPbk92ZXJsYXlDbGljayBibG9ja1Njcm9sbE9uTW91bnQ9e2ZhbHNlfVxuICAgICAgICBvbkNsb3NlPXtkaXNjbG9zdXJlLm9uQ2xvc2V9XG4gICAgICAgIGlzT3Blbj17ZGlzY2xvc3VyZS5pc09wZW59IHBvcnRhbFByb3BzPXt7IGNvbnRhaW5lclJlZjogZ28ucm9vdCgpLnJlZiB9fVxuICAgICAgPlxuICAgICAgICA8Yy5Nb2RhbE92ZXJsYXkgLz5cbiAgICAgICAgPGMuTW9kYWxDb250ZW50IHc9JzgwdncnIG1heFc9JzgwdncnIGg9JzgwdmgnIHBvc2l0aW9uPSdyZWxhdGl2ZSc+XG4gICAgICAgICAgPGMuTW9kYWxIZWFkZXI+eycnK2RlZXAubmFtZUxvY2FsKGxpbmtJZCl9PC9jLk1vZGFsSGVhZGVyPlxuICAgICAgICAgIDxjLk1vZGFsQm9keSBwPXswfSBwb3NpdGlvbj0ncmVsYXRpdmUnPlxuICAgICAgICAgICAgPGdvLkVkaXRvciBsaW5rSWQ9e2xpbmtJZH0gZmlsbFNpemU+XG4gICAgICAgICAgICAgIDxCc0Z1bGxzY3JlZW5FeGl0Lz5cbiAgICAgICAgICAgIDwvYy5CdXR0b24+XG4gICAgICAgICAgPC9jLk1vZGFsQm9keT5cbiAgICAgICAgPC9jLk1vZGFsQ29udGVudD5cbiAgICAgIDwvYy5Nb2RhbD5cbiAgICA8L2dvLk9uPjtcbiAgfTtcbn0iXX0=",
        "link_id": 11305
      }
    },
    {
      "id": 11306,
      "type_id": 3,
      "from_id": 11285,
      "to_id": 11305,
      "value": {
        "id": 1455,
        "value": "generated",
        "link_id": 11306
      }
    },
    {
      "id": 11307,
      "type_id": 143,
      "from_id": 11305,
      "to_id": 11285
    },
    {
      "id": 11308,
      "type_id": 3,
      "from_id": 11285,
      "to_id": 11307
    },
    {
      "id": 12266,
      "type_id": 717,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 1494,
        "value": "async ({ deep, data, require }) => {\n  const React = require('react');\n  const { SiApollographql } = require(\"react-icons/si\");\n  const c = require('@chakra-ui/react');\n\n  const dpl = '@deep-foundation/perception-links';\n  const dc = '@deep-foundation/core';\n\n  const Sandbox = deep.idLocal(dpl, 'Sandbox');\n\n  return ({\n    go,\n    handlerId,\n\n    isActive,\n  }, ref) => {\n    return <go.On do={{\n      exec: (g,v,o) => go.go.do('right', { ...o, id: Sandbox })),\n      click: (g,v,o) => go.do('exec', o),\n      right: (g,v,o) => go.do('exec', o),\n    }}>\n      <c.Button\n        w='3em' h='3em'\n        variant={isActive ? 'active' : undefined}\n        onClick={() => {\n          go.do('enter');\n        }}\n        ref={ref}\n      >\n        <SiApollographql/>\n      </c.Button>\n    </go.On>;\n  };\n}",
        "link_id": 12266
      }
    },
    {
      "id": 12267,
      "type_id": 3,
      "from_id": 2586,
      "to_id": 12266,
      "value": {
        "id": 1493,
        "value": "MenuSandboxComponent",
        "link_id": 12267
      }
    },
    {
      "id": 12270,
      "type_id": 35,
      "from_id": 145,
      "to_id": 12266
    },
    {
      "id": 12271,
      "type_id": 3,
      "from_id": 2586,
      "to_id": 12270,
      "value": {
        "id": 1495,
        "value": "MenuSandbox",
        "link_id": 12271
      }
    },
    {
      "id": 12272,
      "type_id": 30,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 1497,
        "value": "async ({ deep, data, require }) => {\n    const React = require('react');\n    const { SiApollographql } = require(\"react-icons/si\");\n    const c = require('@chakra-ui/react');\n    const dpl = '@deep-foundation/perception-links';\n    const dc = '@deep-foundation/core';\n    const Sandbox = deep.idLocal(dpl, 'Sandbox');\n    return ({ go, handlerId, isActive, }, ref) => {\n        return React.createElement(go.On, { do: {\n                exec: (g, v, o) => go.go.do('right', { ...o, id: Sandbox }),\n                click: (g, v, o) => go.do('exec', o),\n                right: (g, v, o) => go.do('exec', o),\n            } },\n            React.createElement(c.Button, { w: '3em', h: '3em', variant: isActive ? 'active' : undefined, onClick: () => {\n                    go.do('enter');\n                }, ref: ref },\n                React.createElement(SiApollographql, null)));\n    };\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsibW9kdWxlLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxLQUFLLEVBQUUsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLE9BQU8sRUFBRSxFQUFFLEVBQUU7SUFDaEMsTUFBTSxLQUFLLEdBQUcsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQy9CLE1BQU0sRUFBRSxlQUFlLEVBQUUsR0FBRyxPQUFPLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztJQUN0RCxNQUFNLENBQUMsR0FBRyxPQUFPLENBQUMsa0JBQWtCLENBQUMsQ0FBQztJQUV0QyxNQUFNLEdBQUcsR0FBRyxtQ0FBbUMsQ0FBQztJQUNoRCxNQUFNLEVBQUUsR0FBRyx1QkFBdUIsQ0FBQztJQUVuQyxNQUFNLE9BQU8sR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxTQUFTLENBQUMsQ0FBQztJQUU3QyxPQUFPLENBQUMsRUFDTixFQUFFLEVBQ0YsU0FBUyxFQUVULFFBQVEsR0FDVCxFQUFFLEdBQUcsRUFBRSxFQUFFO1FBQ1IsT0FBTyxvQkFBQyxFQUFFLENBQUMsRUFBRSxJQUFDLEVBQUUsRUFBRTtnQkFDaEIsSUFBSSxFQUFFLENBQUMsQ0FBQyxFQUFDLENBQUMsRUFBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLE9BQU8sRUFBRSxFQUFFLEdBQUcsQ0FBQyxFQUFFLEVBQUUsRUFBRSxPQUFPLEVBQUUsQ0FBQztnQkFDekQsS0FBSyxFQUFFLENBQUMsQ0FBQyxFQUFDLENBQUMsRUFBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsTUFBTSxFQUFFLENBQUMsQ0FBQztnQkFDbEMsS0FBSyxFQUFFLENBQUMsQ0FBQyxFQUFDLENBQUMsRUFBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsTUFBTSxFQUFFLENBQUMsQ0FBQzthQUNuQztZQUNDLG9CQUFDLENBQUMsQ0FBQyxNQUFNLElBQ1AsQ0FBQyxFQUFDLEtBQUssRUFBQyxDQUFDLEVBQUMsS0FBSyxFQUNmLE9BQU8sRUFBRSxRQUFRLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsU0FBUyxFQUN4QyxPQUFPLEVBQUUsR0FBRyxFQUFFO29CQUNaLEVBQUUsQ0FBQyxFQUFFLENBQUMsT0FBTyxDQUFDLENBQUM7Z0JBQ2pCLENBQUMsRUFDRCxHQUFHLEVBQUUsR0FBRztnQkFFUixvQkFBQyxlQUFlLE9BQUUsQ0FDVCxDQUNMLENBQUM7SUFDWCxDQUFDLENBQUM7QUFDSixDQUFDLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJhc3luYyAoeyBkZWVwLCBkYXRhLCByZXF1aXJlIH0pID0+IHtcbiAgY29uc3QgUmVhY3QgPSByZXF1aXJlKCdyZWFjdCcpO1xuICBjb25zdCB7IFNpQXBvbGxvZ3JhcGhxbCB9ID0gcmVxdWlyZShcInJlYWN0LWljb25zL3NpXCIpO1xuICBjb25zdCBjID0gcmVxdWlyZSgnQGNoYWtyYS11aS9yZWFjdCcpO1xuXG4gIGNvbnN0IGRwbCA9ICdAZGVlcC1mb3VuZGF0aW9uL3BlcmNlcHRpb24tbGlua3MnO1xuICBjb25zdCBkYyA9ICdAZGVlcC1mb3VuZGF0aW9uL2NvcmUnO1xuXG4gIGNvbnN0IFNhbmRib3ggPSBkZWVwLmlkTG9jYWwoZHBsLCAnU2FuZGJveCcpO1xuXG4gIHJldHVybiAoe1xuICAgIGdvLFxuICAgIGhhbmRsZXJJZCxcblxuICAgIGlzQWN0aXZlLFxuICB9LCByZWYpID0+IHtcbiAgICByZXR1cm4gPGdvLk9uIGRvPXt7XG4gICAgICBleGVjOiAoZyx2LG8pID0+IGdvLmdvLmRvKCdyaWdodCcsIHsgLi4ubywgaWQ6IFNhbmRib3ggfSkpLFxuICAgICAgY2xpY2s6IChnLHYsbykgPT4gZ28uZG8oJ2V4ZWMnLCBvKSxcbiAgICAgIHJpZ2h0OiAoZyx2LG8pID0+IGdvLmRvKCdleGVjJywgbyksXG4gICAgfX0+XG4gICAgICA8Yy5CdXR0b25cbiAgICAgICAgdz0nM2VtJyBoPSczZW0nXG4gICAgICAgIHZhcmlhbnQ9e2lzQWN0aXZlID8gJ2FjdGl2ZScgOiB1bmRlZmluZWR9XG4gICAgICAgIG9uQ2xpY2s9eygpID0+IHtcbiAgICAgICAgICBnby5kbygnZW50ZXInKTtcbiAgICAgICAgfX1cbiAgICAgICAgcmVmPXtyZWZ9XG4gICAgICA+XG4gICAgICAgIDxTaUFwb2xsb2dyYXBocWwvPlxuICAgICAgPC9jLkJ1dHRvbj5cbiAgICA8L2dvLk9uPjtcbiAgfTtcbn0iXX0=",
        "link_id": 12272
      }
    },
    {
      "id": 12273,
      "type_id": 3,
      "from_id": 12266,
      "to_id": 12272,
      "value": {
        "id": 1496,
        "value": "generated",
        "link_id": 12273
      }
    },
    {
      "id": 12274,
      "type_id": 143,
      "from_id": 12272,
      "to_id": 12266
    },
    {
      "id": 12275,
      "type_id": 3,
      "from_id": 12266,
      "to_id": 12274
    },
    {
      "id": 12489,
      "type_id": 717,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 1504,
        "value": "({ deep, data, require, Go }) => {\n  const React = require('react');\n  \n  const { ApolloSandbox } = require('@apollo/sandbox/react');\n  const c = require('@chakra-ui/react');\n\n  return ({\n    go,\n\n    requestOptions = {},\n\n    children,\n  }, ref) => {\n    return <go.On do={{\n      use: (g,v,o) => {},\n    }}>\n      <c.Box ref={ref} h='100%' w='100%' sx={{ '& > div': { h: '100%' } }}>\n        <ApolloSandbox\n          initialEndpoint={`http${deep.client.ssl ? 's' : ''}://${deep.client.path}`}\n          initialState={{\n            sharedHeaders: {\n              Authorization: `Bearer ${deep.token}`,\n            },\n          }}\n        />\n      </c.Box>\n    </go.On>;\n  };\n}",
        "link_id": 12489
      }
    },
    {
      "id": 12490,
      "type_id": 3,
      "from_id": 2586,
      "to_id": 12489,
      "value": {
        "id": 1503,
        "value": "SandboxComponent",
        "link_id": 12490
      }
    },
    {
      "id": 12493,
      "type_id": 35,
      "from_id": 145,
      "to_id": 12489
    },
    {
      "id": 12494,
      "type_id": 3,
      "from_id": 2586,
      "to_id": 12493,
      "value": {
        "id": 1505,
        "value": "Sandbox",
        "link_id": 12494
      }
    },
    {
      "id": 12501,
      "type_id": 30,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 1507,
        "value": "({ deep, data, require, Go }) => {\n    const React = require('react');\n    const { ApolloSandbox } = require('@apollo/sandbox/react');\n    const c = require('@chakra-ui/react');\n    return ({ go, requestOptions = {}, children, }, ref) => {\n        return React.createElement(go.On, { do: {\n                use: (g, v, o) => { },\n            } },\n            React.createElement(c.Box, { ref: ref, h: '100%', w: '100%', sx: { '& > div': { h: '100%' } } },\n                React.createElement(ApolloSandbox, { initialEndpoint: `http${deep.client.ssl ? 's' : ''}://${deep.client.path}`, initialState: {\n                        sharedHeaders: {\n                            Authorization: `Bearer ${deep.token}`,\n                        },\n                    } })));\n    };\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsibW9kdWxlLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxDQUFDLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRTtJQUM5QixNQUFNLEtBQUssR0FBRyxPQUFPLENBQUMsT0FBTyxDQUFDLENBQUM7SUFFL0IsTUFBTSxFQUFFLGFBQWEsRUFBRSxHQUFHLE9BQU8sQ0FBQyx1QkFBdUIsQ0FBQyxDQUFDO0lBQzNELE1BQU0sQ0FBQyxHQUFHLE9BQU8sQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDO0lBRXRDLE9BQU8sQ0FBQyxFQUNOLEVBQUUsRUFFRixjQUFjLEdBQUcsRUFBRSxFQUVuQixRQUFRLEdBQ1QsRUFBRSxHQUFHLEVBQUUsRUFBRTtRQUNSLE9BQU8sb0JBQUMsRUFBRSxDQUFDLEVBQUUsSUFBQyxFQUFFLEVBQUU7Z0JBQ2hCLEdBQUcsRUFBRSxDQUFDLENBQUMsRUFBQyxDQUFDLEVBQUMsQ0FBQyxFQUFFLEVBQUUsR0FBRSxDQUFDO2FBQ25CO1lBQ0Msb0JBQUMsQ0FBQyxDQUFDLEdBQUcsSUFBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBQyxNQUFNLEVBQUMsQ0FBQyxFQUFDLE1BQU0sRUFBQyxFQUFFLEVBQUUsRUFBRSxTQUFTLEVBQUUsRUFBRSxDQUFDLEVBQUUsTUFBTSxFQUFFLEVBQUU7Z0JBQ2pFLG9CQUFDLGFBQWEsSUFDWixlQUFlLEVBQUUsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxFQUFFLE1BQU0sSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUUsRUFDMUUsWUFBWSxFQUFFO3dCQUNaLGFBQWEsRUFBRTs0QkFDYixhQUFhLEVBQUUsVUFBVSxJQUFJLENBQUMsS0FBSyxFQUFFO3lCQUN0QztxQkFDRixHQUNELENBQ0ksQ0FDRixDQUFDO0lBQ1gsQ0FBQyxDQUFDO0FBQ0osQ0FBQyxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiKHsgZGVlcCwgZGF0YSwgcmVxdWlyZSwgR28gfSkgPT4ge1xuICBjb25zdCBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XG4gIFxuICBjb25zdCB7IEFwb2xsb1NhbmRib3ggfSA9IHJlcXVpcmUoJ0BhcG9sbG8vc2FuZGJveC9yZWFjdCcpO1xuICBjb25zdCBjID0gcmVxdWlyZSgnQGNoYWtyYS11aS9yZWFjdCcpO1xuXG4gIHJldHVybiAoe1xuICAgIGdvLFxuXG4gICAgcmVxdWVzdE9wdGlvbnMgPSB7fSxcblxuICAgIGNoaWxkcmVuLFxuICB9LCByZWYpID0+IHtcbiAgICByZXR1cm4gPGdvLk9uIGRvPXt7XG4gICAgICB1c2U6IChnLHYsbykgPT4ge30sXG4gICAgfX0+XG4gICAgICA8Yy5Cb3ggcmVmPXtyZWZ9IGg9JzEwMCUnIHc9JzEwMCUnIHN4PXt7ICcmID4gZGl2JzogeyBoOiAnMTAwJScgfSB9fT5cbiAgICAgICAgPEFwb2xsb1NhbmRib3hcbiAgICAgICAgICBpbml0aWFsRW5kcG9pbnQ9e2BodHRwJHtkZWVwLmNsaWVudC5zc2wgPyAncycgOiAnJ306Ly8ke2RlZXAuY2xpZW50LnBhdGh9YH1cbiAgICAgICAgICBpbml0aWFsU3RhdGU9e3tcbiAgICAgICAgICAgIHNoYXJlZEhlYWRlcnM6IHtcbiAgICAgICAgICAgICAgQXV0aG9yaXphdGlvbjogYEJlYXJlciAke2RlZXAudG9rZW59YCxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgfX1cbiAgICAgICAgLz5cbiAgICAgIDwvYy5Cb3g+XG4gICAgPC9nby5Pbj47XG4gIH07XG59Il19",
        "link_id": 12501
      }
    },
    {
      "id": 12503,
      "type_id": 3,
      "from_id": 12489,
      "to_id": 12501,
      "value": {
        "id": 1506,
        "value": "generated",
        "link_id": 12503
      }
    },
    {
      "id": 12505,
      "type_id": 143,
      "from_id": 12501,
      "to_id": 12489
    },
    {
      "id": 12506,
      "type_id": 3,
      "from_id": 12489,
      "to_id": 12505
    },
    {
      "id": 12521,
      "type_id": 5258,
      "from_id": 12493,
      "to_id": 5605
    },
    {
      "id": 12522,
      "type_id": 3,
      "from_id": 2586,
      "to_id": 12521,
      "value": {
        "id": 1521,
        "value": "compatableLayerSandbox",
        "link_id": 12522
      }
    },
    {
      "id": 12529,
      "type_id": 5258,
      "from_id": 12270,
      "to_id": 5240
    },
    {
      "id": 12530,
      "type_id": 3,
      "from_id": 2586,
      "to_id": 12529,
      "value": {
        "id": 1583,
        "value": "compatableMenuSanbox",
        "link_id": 12530
      }
    },
    {
      "id": 12668,
      "type_id": 717,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 1509,
        "value": "async ({ deep, data, require }) => {\n  const React = require('react');\n  const { GrGraphQl } = require(\"react-icons/gr\");\n  const c = require('@chakra-ui/react');\n\n  const dpl = '@deep-foundation/perception-links';\n  const dc = '@deep-foundation/core';\n\n  const Layer = deep.idLocal(dpl, 'Layer');\n  const Graphql = deep.idLocal(dpl, 'Graphql');\n\n  return ({\n    go,\n    handlerId,\n\n    isActive,\n  }, ref) => {\n    return <go.Provider onDo={{\n      space: () => go.go.go.focus(Layer).go(Layer).focus(Graphql),\n      enter: () => go.go.go.focus(Layer).go(Layer).focus(Graphql),\n    }}>\n      <c.Button\n        w='3em' h='3em'\n        variant={isActive ? 'active' : undefined}\n        onClick={() => {\n          go.go.focus(handlerId);\n          go.do('enter');\n        }}\n        ref={ref}\n      >\n        <GrGraphQl/>\n      </c.Button>\n    </go.Provider>;\n  };\n}",
        "link_id": 12668
      }
    },
    {
      "id": 12669,
      "type_id": 3,
      "from_id": 2586,
      "to_id": 12668,
      "value": {
        "id": 1508,
        "value": "MenuGraphqlComponent",
        "link_id": 12669
      }
    },
    {
      "id": 12674,
      "type_id": 30,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 1512,
        "value": "async ({ deep, data, require }) => {\n    const React = require('react');\n    const { GrGraphQl } = require(\"react-icons/gr\");\n    const c = require('@chakra-ui/react');\n    const dpl = '@deep-foundation/perception-links';\n    const dc = '@deep-foundation/core';\n    const Layer = deep.idLocal(dpl, 'Layer');\n    const Graphql = deep.idLocal(dpl, 'Graphql');\n    return ({ go, handlerId, isActive, }, ref) => {\n        return React.createElement(go.Provider, { onDo: {\n                space: () => go.go.go.focus(Layer).go(Layer).focus(Graphql),\n                enter: () => go.go.go.focus(Layer).go(Layer).focus(Graphql),\n            } },\n            React.createElement(c.Button, { w: '3em', h: '3em', variant: isActive ? 'active' : undefined, onClick: () => {\n                    go.go.focus(handlerId);\n                    go.do('enter');\n                }, ref: ref },\n                React.createElement(GrGraphQl, null)));\n    };\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsibW9kdWxlLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxLQUFLLEVBQUUsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLE9BQU8sRUFBRSxFQUFFLEVBQUU7SUFDaEMsTUFBTSxLQUFLLEdBQUcsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQy9CLE1BQU0sRUFBRSxTQUFTLEVBQUUsR0FBRyxPQUFPLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztJQUNoRCxNQUFNLENBQUMsR0FBRyxPQUFPLENBQUMsa0JBQWtCLENBQUMsQ0FBQztJQUV0QyxNQUFNLEdBQUcsR0FBRyxtQ0FBbUMsQ0FBQztJQUNoRCxNQUFNLEVBQUUsR0FBRyx1QkFBdUIsQ0FBQztJQUVuQyxNQUFNLEtBQUssR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxPQUFPLENBQUMsQ0FBQztJQUN6QyxNQUFNLE9BQU8sR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxTQUFTLENBQUMsQ0FBQztJQUU3QyxPQUFPLENBQUMsRUFDTixFQUFFLEVBQ0YsU0FBUyxFQUVULFFBQVEsR0FDVCxFQUFFLEdBQUcsRUFBRSxFQUFFO1FBQ1IsT0FBTyxvQkFBQyxFQUFFLENBQUMsUUFBUSxJQUFDLElBQUksRUFBRTtnQkFDeEIsS0FBSyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQyxFQUFFLENBQUMsS0FBSyxDQUFDLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQztnQkFDM0QsS0FBSyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQyxFQUFFLENBQUMsS0FBSyxDQUFDLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQzthQUM1RDtZQUNDLG9CQUFDLENBQUMsQ0FBQyxNQUFNLElBQ1AsQ0FBQyxFQUFDLEtBQUssRUFBQyxDQUFDLEVBQUMsS0FBSyxFQUNmLE9BQU8sRUFBRSxRQUFRLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsU0FBUyxFQUN4QyxPQUFPLEVBQUUsR0FBRyxFQUFFO29CQUNaLEVBQUUsQ0FBQyxFQUFFLENBQUMsS0FBSyxDQUFDLFNBQVMsQ0FBQyxDQUFDO29CQUN2QixFQUFFLENBQUMsRUFBRSxDQUFDLE9BQU8sQ0FBQyxDQUFDO2dCQUNqQixDQUFDLEVBQ0QsR0FBRyxFQUFFLEdBQUc7Z0JBRVIsb0JBQUMsU0FBUyxPQUFFLENBQ0gsQ0FDQyxDQUFDO0lBQ2pCLENBQUMsQ0FBQztBQUNKLENBQUMsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbImFzeW5jICh7IGRlZXAsIGRhdGEsIHJlcXVpcmUgfSkgPT4ge1xuICBjb25zdCBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XG4gIGNvbnN0IHsgR3JHcmFwaFFsIH0gPSByZXF1aXJlKFwicmVhY3QtaWNvbnMvZ3JcIik7XG4gIGNvbnN0IGMgPSByZXF1aXJlKCdAY2hha3JhLXVpL3JlYWN0Jyk7XG5cbiAgY29uc3QgZHBsID0gJ0BkZWVwLWZvdW5kYXRpb24vcGVyY2VwdGlvbi1saW5rcyc7XG4gIGNvbnN0IGRjID0gJ0BkZWVwLWZvdW5kYXRpb24vY29yZSc7XG5cbiAgY29uc3QgTGF5ZXIgPSBkZWVwLmlkTG9jYWwoZHBsLCAnTGF5ZXInKTtcbiAgY29uc3QgR3JhcGhxbCA9IGRlZXAuaWRMb2NhbChkcGwsICdHcmFwaHFsJyk7XG5cbiAgcmV0dXJuICh7XG4gICAgZ28sXG4gICAgaGFuZGxlcklkLFxuXG4gICAgaXNBY3RpdmUsXG4gIH0sIHJlZikgPT4ge1xuICAgIHJldHVybiA8Z28uUHJvdmlkZXIgb25Ebz17e1xuICAgICAgc3BhY2U6ICgpID0+IGdvLmdvLmdvLmZvY3VzKExheWVyKS5nbyhMYXllcikuZm9jdXMoR3JhcGhxbCksXG4gICAgICBlbnRlcjogKCkgPT4gZ28uZ28uZ28uZm9jdXMoTGF5ZXIpLmdvKExheWVyKS5mb2N1cyhHcmFwaHFsKSxcbiAgICB9fT5cbiAgICAgIDxjLkJ1dHRvblxuICAgICAgICB3PSczZW0nIGg9JzNlbSdcbiAgICAgICAgdmFyaWFudD17aXNBY3RpdmUgPyAnYWN0aXZlJyA6IHVuZGVmaW5lZH1cbiAgICAgICAgb25DbGljaz17KCkgPT4ge1xuICAgICAgICAgIGdvLmdvLmZvY3VzKGhhbmRsZXJJZCk7XG4gICAgICAgICAgZ28uZG8oJ2VudGVyJyk7XG4gICAgICAgIH19XG4gICAgICAgIHJlZj17cmVmfVxuICAgICAgPlxuICAgICAgICA8R3JHcmFwaFFsLz5cbiAgICAgIDwvYy5CdXR0b24+XG4gICAgPC9nby5Qcm92aWRlcj47XG4gIH07XG59Il19",
        "link_id": 12674
      }
    },
    {
      "id": 12675,
      "type_id": 3,
      "from_id": 12668,
      "to_id": 12674,
      "value": {
        "id": 1511,
        "value": "generated",
        "link_id": 12675
      }
    },
    {
      "id": 12676,
      "type_id": 143,
      "from_id": 12674,
      "to_id": 12668
    },
    {
      "id": 12677,
      "type_id": 3,
      "from_id": 12668,
      "to_id": 12676
    },
    {
      "id": 12733,
      "type_id": 717,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 1514,
        "value": "({ deep, data, require, Go }) => {\n  const React = require('react');\n  const { GraphQL } = require('@deep-foundation/perception-app');\n  \n  const c = require('@chakra-ui/react');\n\n  return ({\n    go,\n\n    children,\n  }, ref) => {\n    // console.log('GraphQL', GraphQL)\n    return <go.Provider\n      onDo={{\n        focus: () => go.set('current').go.scroll(),\n        enter: () => {},\n        space: () => {},\n        return: () => {},\n        left: () => {},\n        up: () => {},\n        right: () => {},\n        down: () => {},\n      }}\n    >\n      <GraphQL deep={deep}/>\n    </go.Provider>;\n  };\n}",
        "link_id": 12733
      }
    },
    {
      "id": 12734,
      "type_id": 3,
      "from_id": 2586,
      "to_id": 12733,
      "value": {
        "id": 1513,
        "value": "GraphqlComponent",
        "link_id": 12734
      }
    },
    {
      "id": 12741,
      "type_id": 30,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 1517,
        "value": "({ deep, data, require, Go }) => {\n    const React = require('react');\n    const { GraphQL } = require('@deep-foundation/perception-app');\n    const c = require('@chakra-ui/react');\n    return ({ go, children, }, ref) => {\n        return React.createElement(go.Provider, { onDo: {\n                focus: () => go.set('current').go.scroll(),\n                enter: () => { },\n                space: () => { },\n                return: () => { },\n                left: () => { },\n                up: () => { },\n                right: () => { },\n                down: () => { },\n            } },\n            React.createElement(GraphQL, { deep: deep }));\n    };\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsibW9kdWxlLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxDQUFDLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRTtJQUM5QixNQUFNLEtBQUssR0FBRyxPQUFPLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDL0IsTUFBTSxFQUFFLE9BQU8sRUFBRSxHQUFHLE9BQU8sQ0FBQyxpQ0FBaUMsQ0FBQyxDQUFDO0lBRS9ELE1BQU0sQ0FBQyxHQUFHLE9BQU8sQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDO0lBRXRDLE9BQU8sQ0FBQyxFQUNOLEVBQUUsRUFFRixRQUFRLEdBQ1QsRUFBRSxHQUFHLEVBQUUsRUFBRTtRQUVSLE9BQU8sb0JBQUMsRUFBRSxDQUFDLFFBQVEsSUFDakIsSUFBSSxFQUFFO2dCQUNKLEtBQUssRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsR0FBRyxDQUFDLFNBQVMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxNQUFNLEVBQUU7Z0JBQzFDLEtBQUssRUFBRSxHQUFHLEVBQUUsR0FBRSxDQUFDO2dCQUNmLEtBQUssRUFBRSxHQUFHLEVBQUUsR0FBRSxDQUFDO2dCQUNmLE1BQU0sRUFBRSxHQUFHLEVBQUUsR0FBRSxDQUFDO2dCQUNoQixJQUFJLEVBQUUsR0FBRyxFQUFFLEdBQUUsQ0FBQztnQkFDZCxFQUFFLEVBQUUsR0FBRyxFQUFFLEdBQUUsQ0FBQztnQkFDWixLQUFLLEVBQUUsR0FBRyxFQUFFLEdBQUUsQ0FBQztnQkFDZixJQUFJLEVBQUUsR0FBRyxFQUFFLEdBQUUsQ0FBQzthQUNmO1lBRUQsb0JBQUMsT0FBTyxJQUFDLElBQUksRUFBRSxJQUFJLEdBQUcsQ0FDVixDQUFDO0lBQ2pCLENBQUMsQ0FBQztBQUNKLENBQUMsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbIih7IGRlZXAsIGRhdGEsIHJlcXVpcmUsIEdvIH0pID0+IHtcbiAgY29uc3QgUmVhY3QgPSByZXF1aXJlKCdyZWFjdCcpO1xuICBjb25zdCB7IEdyYXBoUUwgfSA9IHJlcXVpcmUoJ0BkZWVwLWZvdW5kYXRpb24vcGVyY2VwdGlvbi1hcHAnKTtcbiAgXG4gIGNvbnN0IGMgPSByZXF1aXJlKCdAY2hha3JhLXVpL3JlYWN0Jyk7XG5cbiAgcmV0dXJuICh7XG4gICAgZ28sXG5cbiAgICBjaGlsZHJlbixcbiAgfSwgcmVmKSA9PiB7XG4gICAgLy8gY29uc29sZS5sb2coJ0dyYXBoUUwnLCBHcmFwaFFMKVxuICAgIHJldHVybiA8Z28uUHJvdmlkZXJcbiAgICAgIG9uRG89e3tcbiAgICAgICAgZm9jdXM6ICgpID0+IGdvLnNldCgnY3VycmVudCcpLmdvLnNjcm9sbCgpLFxuICAgICAgICBlbnRlcjogKCkgPT4ge30sXG4gICAgICAgIHNwYWNlOiAoKSA9PiB7fSxcbiAgICAgICAgcmV0dXJuOiAoKSA9PiB7fSxcbiAgICAgICAgbGVmdDogKCkgPT4ge30sXG4gICAgICAgIHVwOiAoKSA9PiB7fSxcbiAgICAgICAgcmlnaHQ6ICgpID0+IHt9LFxuICAgICAgICBkb3duOiAoKSA9PiB7fSxcbiAgICAgIH19XG4gICAgPlxuICAgICAgPEdyYXBoUUwgZGVlcD17ZGVlcH0vPlxuICAgIDwvZ28uUHJvdmlkZXI+O1xuICB9O1xufSJdfQ==",
        "link_id": 12741
      }
    },
    {
      "id": 12742,
      "type_id": 3,
      "from_id": 12733,
      "to_id": 12741,
      "value": {
        "id": 1516,
        "value": "generated",
        "link_id": 12742
      }
    },
    {
      "id": 12743,
      "type_id": 143,
      "from_id": 12741,
      "to_id": 12733
    },
    {
      "id": 12744,
      "type_id": 3,
      "from_id": 12733,
      "to_id": 12743
    },
    {
      "id": 13039,
      "type_id": 717,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 1523,
        "value": "({ deep, data, require, Go }) => {\n  const { MdEdit, MdPreview, MdSaveAlt } = require(\"react-icons/md\");\n  const React = require('react');\n\n  const {\n    TypedIcon, DownIcon, UpIcon, TypeIcon, InIcon, OutIcon, FromIcon, ToIcon,\n    useSymbol,\n  } = require('@deep-foundation/perception-app');\n  \n  const c = require('@chakra-ui/react');\n\n  const dpl = '@deep-foundation/perception-links';\n  const dc = '@deep-foundation/core';\n  \n  const History = deep.idLocal(dpl, 'History');\n  const Header = deep.idLocal(dpl, 'Header');\n  const Search = deep.idLocal(dpl, 'Search');\n  const TreeQuery = deep.idLocal(dpl, 'TreeQuery');\n  const TreeList = deep.idLocal(dpl, 'TreeList');\n  const TreeLink = deep.idLocal(dpl, 'TreeLink');\n  const TreeLinkInsert = deep.idLocal(dpl, 'TreeLinkInsert');\n  const TreeLinkDelete = deep.idLocal(dpl, 'TreeLinkDelete');\n  const TreeLinkButton = deep.idLocal(dpl, 'TreeLinkButton');\n\n  const _Item = ({ link, isActive, isConcentrated, Item, direction, startProps }) => {\n    const go = Go.useGo();\n    return <c.Box ref={go.ref} {...(direction === 'vertical' ? { w: '100%' } : { h: '100%' })}>\n      {!!Item ? <Item link={link} go={go} isActive={isActive} {...startProps}\n        isConcentrated={isConcentrated}\n      /> : <go.Handler\n        handlerId={TreeLinkButton} linkId={link.id} variant='full' {...startProps}\n        isActive={isActive} {...(direction === 'vertical' ? { w: '100%' } : { h: '100%' })}\n        isConcentrated={isConcentrated}\n      />}\n    </c.Box>;\n  }\n\n  const startPropsPlaceholder = {};\n\n  return ({\n    go,\n    handlerId,\n\n    links = [],\n    Item = _Item,\n\n    direction = 'vertical', // 'vertical' | 'horizontal'\n\n    using = false,\n    saveHistory = false,\n\n    startProps = {},\n\n    concentrated,\n\n    children,\n  }, ref) => {\n    const list = links.map((link, i) => !!link ? <go.Provider key={`${link?.id}`} linkId={link.id}>\n      <_Item\n        link={link} isActive={go.value === link.id} Item={Item}\n        direction={direction} saveHistory={saveHistory}\n        startProps={!i ? startProps : startPropsPlaceholder}\n        isConcentrated={concentrated ? !!concentrated[link.id] : undefined}\n      />\n    </go.Provider> : <React.Fragment/>);\n\n    const content = direction === 'vertical' ? <c.VStack ref={ref}\n      overflowY='scroll' overflowX='hidden'\n      css={go.noScrollBar} flex={1}\n      w='100%' h='100%'\n    >\n      {list}\n      {children}\n    </c.VStack> : <c.HStack ref={ref}\n      overflowX='scroll' overflowY='hidden'\n      css={go.noScrollBar} flex={1}\n      w='100%' h='100%'\n    >\n      {list}\n      {children}\n    </c.HStack>;\n\n    React.useEffect(() => {\n      if (go?.current) {\n        if (using && go.root()?.data?.usedId != go.value) go.root().do('use', { id: go.value });\n        go.do('changed', { id: go.value });\n        go?.current?.scroll();\n      }\n    }, [go.value]);\n\n    const events = direction === 'vertical' ? {\n      up: (g,v,o) => {\n        if (o?.hotkeyEvent?.meta || o?.hotkeyEvent?.shift || o?.hotkeyEvent?.ctrl || o?.hotkeyEvent?.alt) {\n          go.focus(links?.[0]?.id);\n        } else go.value === links?.[0]?.id ? go.go.do('up') : go.focus(go.prev(links));\n      },\n      down: (g,v,o) => {\n        if (o?.hotkeyEvent?.meta || o?.hotkeyEvent?.shift || o?.hotkeyEvent?.ctrl || o?.hotkeyEvent?.alt) {\n          go.focus(links?.[links.length - 1]?.id);\n        } else go.value === links?.[links.length - 1]?.id ? go.go.do('down') : go.focus(go.next(links));\n      },\n    } : {\n      left: (g,v,o) => {\n        if (o?.hotkeyEvent?.meta || o?.hotkeyEvent?.shift || o?.hotkeyEvent?.ctrl || o?.hotkeyEvent?.alt) {\n          go.focus(links?.[0]?.id);\n        } else go.value === links?.[0]?.id ? go.go.do('left') : go.focus(go.prev(links));\n      },\n      right: (g,v,o) => {\n        if (o?.hotkeyEvent?.meta || o?.hotkeyEvent?.shift || o?.hotkeyEvent?.ctrl || o?.hotkeyEvent?.alt) {\n          go.focus(links?.[links.length - 1]?.id);\n        } else go.value === links?.[links.length - 1]?.id ? go.go.do('right') : go.focus(go.next(links));\n      },\n    };\n\n    return <go.On\n      do={{\n        focus: (g,d,v,o) => !v && go.set(o?.id ? o?.id : links?.[0]?.id),\n        use: (g,v,o) => o?.id && o?.id != go.value && go(o?.id) && go.set(o.id).go(o?.id).go?.scroll().go?.do('use'),\n        exec: (g,v,o) => (o?.id || go.value) && go.set(o?.id || go.value).go.go.do('exec', { id: o?.id || go.value })\n        ...events,\n      }}\n    >\n      {content}\n    </go.On>\n  };\n}\n",
        "link_id": 13039
      }
    },
    {
      "id": 13040,
      "type_id": 3,
      "from_id": 2586,
      "to_id": 13039,
      "value": {
        "id": 1522,
        "value": "StackComponent",
        "link_id": 13040
      }
    },
    {
      "id": 13043,
      "type_id": 35,
      "from_id": 145,
      "to_id": 13039
    },
    {
      "id": 13044,
      "type_id": 3,
      "from_id": 2586,
      "to_id": 13043,
      "value": {
        "id": 1524,
        "value": "Stack",
        "link_id": 13044
      }
    },
    {
      "id": 13045,
      "type_id": 30,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 1526,
        "value": "({ deep, data, require, Go }) => {\n    const { MdEdit, MdPreview, MdSaveAlt } = require(\"react-icons/md\");\n    const React = require('react');\n    const { TypedIcon, DownIcon, UpIcon, TypeIcon, InIcon, OutIcon, FromIcon, ToIcon, useSymbol, } = require('@deep-foundation/perception-app');\n    const c = require('@chakra-ui/react');\n    const dpl = '@deep-foundation/perception-links';\n    const dc = '@deep-foundation/core';\n    const History = deep.idLocal(dpl, 'History');\n    const Header = deep.idLocal(dpl, 'Header');\n    const Search = deep.idLocal(dpl, 'Search');\n    const TreeQuery = deep.idLocal(dpl, 'TreeQuery');\n    const TreeList = deep.idLocal(dpl, 'TreeList');\n    const TreeLink = deep.idLocal(dpl, 'TreeLink');\n    const TreeLinkInsert = deep.idLocal(dpl, 'TreeLinkInsert');\n    const TreeLinkDelete = deep.idLocal(dpl, 'TreeLinkDelete');\n    const TreeLinkButton = deep.idLocal(dpl, 'TreeLinkButton');\n    const _Item = ({ link, isActive, isConcentrated, Item, direction, startProps }) => {\n        const go = Go.useGo();\n        return React.createElement(c.Box, { ref: go.ref, ...(direction === 'vertical' ? { w: '100%' } : { h: '100%' }) }, !!Item ? React.createElement(Item, { link: link, go: go, isActive: isActive, ...startProps, isConcentrated: isConcentrated }) : React.createElement(go.Handler, { handlerId: TreeLinkButton, linkId: link.id, variant: 'full', ...startProps, isActive: isActive, ...(direction === 'vertical' ? { w: '100%' } : { h: '100%' }), isConcentrated: isConcentrated }));\n    };\n    const startPropsPlaceholder = {};\n    return ({ go, handlerId, links = [], Item = _Item, direction = 'vertical', using = false, saveHistory = false, startProps = {}, concentrated, children, }, ref) => {\n        const list = links.map((link, i) => !!link ? React.createElement(go.Provider, { key: `${link?.id}`, linkId: link.id },\n            React.createElement(_Item, { link: link, isActive: go.value === link.id, Item: Item, direction: direction, saveHistory: saveHistory, startProps: !i ? startProps : startPropsPlaceholder, isConcentrated: concentrated ? !!concentrated[link.id] : undefined })) : React.createElement(React.Fragment, null));\n        const content = direction === 'vertical' ? React.createElement(c.VStack, { ref: ref, overflowY: 'scroll', overflowX: 'hidden', css: go.noScrollBar, flex: 1, w: '100%', h: '100%' },\n            list,\n            children) : React.createElement(c.HStack, { ref: ref, overflowX: 'scroll', overflowY: 'hidden', css: go.noScrollBar, flex: 1, w: '100%', h: '100%' },\n            list,\n            children);\n        React.useEffect(() => {\n            if (go?.current) {\n                if (using && go.root()?.data?.usedId != go.value)\n                    go.root().do('use', { id: go.value });\n                go.do('changed', { id: go.value });\n                go?.current?.scroll();\n            }\n        }, [go.value]);\n        const events = direction === 'vertical' ? {\n            up: (g, v, o) => {\n                if (o?.hotkeyEvent?.meta || o?.hotkeyEvent?.shift || o?.hotkeyEvent?.ctrl || o?.hotkeyEvent?.alt) {\n                    go.focus(links?.[0]?.id);\n                }\n                else\n                    go.value === links?.[0]?.id ? go.go.do('up') : go.focus(go.prev(links));\n            },\n            down: (g, v, o) => {\n                if (o?.hotkeyEvent?.meta || o?.hotkeyEvent?.shift || o?.hotkeyEvent?.ctrl || o?.hotkeyEvent?.alt) {\n                    go.focus(links?.[links.length - 1]?.id);\n                }\n                else\n                    go.value === links?.[links.length - 1]?.id ? go.go.do('down') : go.focus(go.next(links));\n            },\n        } : {\n            left: (g, v, o) => {\n                if (o?.hotkeyEvent?.meta || o?.hotkeyEvent?.shift || o?.hotkeyEvent?.ctrl || o?.hotkeyEvent?.alt) {\n                    go.focus(links?.[0]?.id);\n                }\n                else\n                    go.value === links?.[0]?.id ? go.go.do('left') : go.focus(go.prev(links));\n            },\n            right: (g, v, o) => {\n                if (o?.hotkeyEvent?.meta || o?.hotkeyEvent?.shift || o?.hotkeyEvent?.ctrl || o?.hotkeyEvent?.alt) {\n                    go.focus(links?.[links.length - 1]?.id);\n                }\n                else\n                    go.value === links?.[links.length - 1]?.id ? go.go.do('right') : go.focus(go.next(links));\n            },\n        };\n        return React.createElement(go.On, { do: {\n                focus: (g, d, v, o) => !v && go.set(o?.id ? o?.id : links?.[0]?.id),\n                use: (g, v, o) => o?.id && o?.id != go.value && go(o?.id) && go.set(o.id).go(o?.id).go?.scroll().go?.do('use'),\n                exec: (g, v, o) => (o?.id || go.value) && go.set(o?.id || go.value).go.go.do('exec', { id: o?.id || go.value }),\n                ...events,\n            } }, content);\n    };\n};\n//# sourceMappingURL=data:application/json;base64,",
        "link_id": 13045
      }
    },
    {
      "id": 13046,
      "type_id": 3,
      "from_id": 13039,
      "to_id": 13045,
      "value": {
        "id": 1525,
        "value": "generated",
        "link_id": 13046
      }
    },
    {
      "id": 13047,
      "type_id": 143,
      "from_id": 13045,
      "to_id": 13039
    },
    {
      "id": 13048,
      "type_id": 3,
      "from_id": 13039,
      "to_id": 13047
    },
    {
      "id": 14093,
      "type_id": 717,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 1538,
        "value": "({ deep, data, require, Go }) => {\n  const { BsCheck2All } = require(\"react-icons/bs\");\n  const React = require('react');\n  \n  const c = require('@chakra-ui/react');\n\n  const dc = '@deep-foundation/core';\n  const dpl = '@deep-foundation/perception-links';\n  \n  const Query = deep.idLocal(dc, 'Query');\n  const Contain = deep.idLocal(dc, 'Contain');\n  const FinderQuery = deep.idLocal(dpl, 'FinderQuery');\n  const Tree = deep.idLocal(dpl, 'Tree');\n  const TreeList = deep.idLocal(dpl, 'TreeList');\n  const Search = deep.idLocal(dpl, 'Search');\n\n  return ({\n    go,\n\n    isActive,\n    saveHistory = false,\n    disclosure: __disclosure,\n    startProps,\n    ...props\n  }, ref) => {\n    const _disclosure = c.useDisclosure();\n    const disclosure = __disclosure || _disclosure;\n\n    React.useEffect(() => () => deep.minilinks.apply([], `deep-perception-finder-${go.__p}`), []);\n    const [queryId, setQueryId] = React.useState(!saveHistory ? 'virtual' : undefined);\n\n    return <go.On\n      do={{\n        open: (g,v,o) => {\n          if (!o?.id) return;\n          disclosure.onClose();\n          go.root().do('open', { id: o?.id, focus: true });\n        },\n        exec: async (g,v,o) => {\n          if (saveHistory) {\n            const { data: [{ id }] } = await deep.insert({\n              type_id: Query,\n              object: {\n                _or: [{ in: { type_id: Contain, string: { value: { _ilike: `%Type%` } } } }],\n              },\n              containerId: deep.linkId,\n              in: {\n                type_id: FinderQuery,\n                from_id: deep.linkId,\n                containerId: deep.linkId,\n              },\n            });\n            await deep.select(id, { apply: `deep-perception-finder-${go.__p}` });\n            setQueryId(id);\n          }\n          disclosure.onOpen();\n          go.focus(Tree);\n        }\n      }}\n    >\n      <c.Button\n        ref={ref} h='3em' w='3em' variant={isActive ? 'active' : null}\n        onClick={() => go.do('exec')}\n        {...props}\n      >🪬</c.Button>\n      {!!queryId && disclosure.isOpen && <go.Component path={[dpl, 'Finder']}\n        disclosure={disclosure} initialId={queryId} initialHandlerId={TreeList}\n        onSubmit={(id) => go.do('open', { id })}\n        startProps={startProps}\n      />}\n    </go.On>;\n  };\n}",
        "link_id": 14093
      }
    },
    {
      "id": 14094,
      "type_id": 3,
      "from_id": 2586,
      "to_id": 14093,
      "value": {
        "id": 1537,
        "value": "FinderButtonComponent",
        "link_id": 14094
      }
    },
    {
      "id": 14097,
      "type_id": 35,
      "from_id": 145,
      "to_id": 14093
    },
    {
      "id": 14098,
      "type_id": 3,
      "from_id": 2586,
      "to_id": 14097,
      "value": {
        "id": 1539,
        "value": "FinderButton",
        "link_id": 14098
      }
    },
    {
      "id": 14099,
      "type_id": 30,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 1541,
        "value": "({ deep, data, require, Go }) => {\n    const { BsCheck2All } = require(\"react-icons/bs\");\n    const React = require('react');\n    const c = require('@chakra-ui/react');\n    const dc = '@deep-foundation/core';\n    const dpl = '@deep-foundation/perception-links';\n    const Query = deep.idLocal(dc, 'Query');\n    const Contain = deep.idLocal(dc, 'Contain');\n    const FinderQuery = deep.idLocal(dpl, 'FinderQuery');\n    const Tree = deep.idLocal(dpl, 'Tree');\n    const TreeList = deep.idLocal(dpl, 'TreeList');\n    const Search = deep.idLocal(dpl, 'Search');\n    return ({ go, isActive, saveHistory = false, disclosure: __disclosure, startProps, ...props }, ref) => {\n        const _disclosure = c.useDisclosure();\n        const disclosure = __disclosure || _disclosure;\n        React.useEffect(() => () => deep.minilinks.apply([], `deep-perception-finder-${go.__p}`), []);\n        const [queryId, setQueryId] = React.useState(!saveHistory ? 'virtual' : undefined);\n        return React.createElement(go.On, { do: {\n                open: (g, v, o) => {\n                    if (!o?.id)\n                        return;\n                    disclosure.onClose();\n                    go.root().do('open', { id: o?.id, focus: true });\n                },\n                exec: async (g, v, o) => {\n                    if (saveHistory) {\n                        const { data: [{ id }] } = await deep.insert({\n                            type_id: Query,\n                            object: {\n                                _or: [{ in: { type_id: Contain, string: { value: { _ilike: `%Type%` } } } }],\n                            },\n                            containerId: deep.linkId,\n                            in: {\n                                type_id: FinderQuery,\n                                from_id: deep.linkId,\n                                containerId: deep.linkId,\n                            },\n                        });\n                        await deep.select(id, { apply: `deep-perception-finder-${go.__p}` });\n                        setQueryId(id);\n                    }\n                    disclosure.onOpen();\n                    go.focus(Tree);\n                }\n            } },\n            React.createElement(c.Button, { ref: ref, h: '3em', w: '3em', variant: isActive ? 'active' : null, onClick: () => go.do('exec'), ...props }, \"\\uD83E\\uDEAC\"),\n            !!queryId && disclosure.isOpen && React.createElement(go.Component, { path: [dpl, 'Finder'], disclosure: disclosure, initialId: queryId, initialHandlerId: TreeList, onSubmit: (id) => go.do('open', { id }), startProps: startProps }));\n    };\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsibW9kdWxlLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxDQUFDLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRTtJQUM5QixNQUFNLEVBQUUsV0FBVyxFQUFFLEdBQUcsT0FBTyxDQUFDLGdCQUFnQixDQUFDLENBQUM7SUFDbEQsTUFBTSxLQUFLLEdBQUcsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBRS9CLE1BQU0sQ0FBQyxHQUFHLE9BQU8sQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDO0lBRXRDLE1BQU0sRUFBRSxHQUFHLHVCQUF1QixDQUFDO0lBQ25DLE1BQU0sR0FBRyxHQUFHLG1DQUFtQyxDQUFDO0lBRWhELE1BQU0sS0FBSyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsRUFBRSxFQUFFLE9BQU8sQ0FBQyxDQUFDO0lBQ3hDLE1BQU0sT0FBTyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsRUFBRSxFQUFFLFNBQVMsQ0FBQyxDQUFDO0lBQzVDLE1BQU0sV0FBVyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLGFBQWEsQ0FBQyxDQUFDO0lBQ3JELE1BQU0sSUFBSSxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLE1BQU0sQ0FBQyxDQUFDO0lBQ3ZDLE1BQU0sUUFBUSxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLFVBQVUsQ0FBQyxDQUFDO0lBQy9DLE1BQU0sTUFBTSxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLFFBQVEsQ0FBQyxDQUFDO0lBRTNDLE9BQU8sQ0FBQyxFQUNOLEVBQUUsRUFFRixRQUFRLEVBQ1IsV0FBVyxHQUFHLEtBQUssRUFDbkIsVUFBVSxFQUFFLFlBQVksRUFDeEIsVUFBVSxFQUNWLEdBQUcsS0FBSyxFQUNULEVBQUUsR0FBRyxFQUFFLEVBQUU7UUFDUixNQUFNLFdBQVcsR0FBRyxDQUFDLENBQUMsYUFBYSxFQUFFLENBQUM7UUFDdEMsTUFBTSxVQUFVLEdBQUcsWUFBWSxJQUFJLFdBQVcsQ0FBQztRQUUvQyxLQUFLLENBQUMsU0FBUyxDQUFDLEdBQUcsRUFBRSxDQUFDLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsS0FBSyxDQUFDLEVBQUUsRUFBRSwwQkFBMEIsRUFBRSxDQUFDLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUM7UUFDOUYsTUFBTSxDQUFDLE9BQU8sRUFBRSxVQUFVLENBQUMsR0FBRyxLQUFLLENBQUMsUUFBUSxDQUFDLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBRW5GLE9BQU8sb0JBQUMsRUFBRSxDQUFDLEVBQUUsSUFDWCxFQUFFLEVBQUU7Z0JBQ0YsSUFBSSxFQUFFLENBQUMsQ0FBQyxFQUFDLENBQUMsRUFBQyxDQUFDLEVBQUUsRUFBRTtvQkFDZCxJQUFJLENBQUMsQ0FBQyxFQUFFLEVBQUU7d0JBQUUsT0FBTztvQkFDbkIsVUFBVSxDQUFDLE9BQU8sRUFBRSxDQUFDO29CQUNyQixFQUFFLENBQUMsSUFBSSxFQUFFLENBQUMsRUFBRSxDQUFDLE1BQU0sRUFBRSxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUUsQ0FBQyxDQUFDO2dCQUNuRCxDQUFDO2dCQUNELElBQUksRUFBRSxLQUFLLEVBQUUsQ0FBQyxFQUFDLENBQUMsRUFBQyxDQUFDLEVBQUUsRUFBRTtvQkFDcEIsSUFBSSxXQUFXLEVBQUUsQ0FBQzt3QkFDaEIsTUFBTSxFQUFFLElBQUksRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLE1BQU0sSUFBSSxDQUFDLE1BQU0sQ0FBQzs0QkFDM0MsT0FBTyxFQUFFLEtBQUs7NEJBQ2QsTUFBTSxFQUFFO2dDQUNOLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLEVBQUUsT0FBTyxFQUFFLE9BQU8sRUFBRSxNQUFNLEVBQUUsRUFBRSxLQUFLLEVBQUUsRUFBRSxNQUFNLEVBQUUsUUFBUSxFQUFFLEVBQUUsRUFBRSxFQUFFLENBQUM7NkJBQzdFOzRCQUNELFdBQVcsRUFBRSxJQUFJLENBQUMsTUFBTTs0QkFDeEIsRUFBRSxFQUFFO2dDQUNGLE9BQU8sRUFBRSxXQUFXO2dDQUNwQixPQUFPLEVBQUUsSUFBSSxDQUFDLE1BQU07Z0NBQ3BCLFdBQVcsRUFBRSxJQUFJLENBQUMsTUFBTTs2QkFDekI7eUJBQ0YsQ0FBQyxDQUFDO3dCQUNILE1BQU0sSUFBSSxDQUFDLE1BQU0sQ0FBQyxFQUFFLEVBQUUsRUFBRSxLQUFLLEVBQUUsMEJBQTBCLEVBQUUsQ0FBQyxHQUFHLEVBQUUsRUFBRSxDQUFDLENBQUM7d0JBQ3JFLFVBQVUsQ0FBQyxFQUFFLENBQUMsQ0FBQztvQkFDakIsQ0FBQztvQkFDRCxVQUFVLENBQUMsTUFBTSxFQUFFLENBQUM7b0JBQ3BCLEVBQUUsQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUM7Z0JBQ2pCLENBQUM7YUFDRjtZQUVELG9CQUFDLENBQUMsQ0FBQyxNQUFNLElBQ1AsR0FBRyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUMsS0FBSyxFQUFDLENBQUMsRUFBQyxLQUFLLEVBQUMsT0FBTyxFQUFFLFFBQVEsQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxJQUFJLEVBQzdELE9BQU8sRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLE1BQU0sQ0FBQyxLQUN4QixLQUFLLG1CQUNHO1lBQ2IsQ0FBQyxDQUFDLE9BQU8sSUFBSSxVQUFVLENBQUMsTUFBTSxJQUFJLG9CQUFDLEVBQUUsQ0FBQyxTQUFTLElBQUMsSUFBSSxFQUFFLENBQUMsR0FBRyxFQUFFLFFBQVEsQ0FBQyxFQUNwRSxVQUFVLEVBQUUsVUFBVSxFQUFFLFNBQVMsRUFBRSxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsUUFBUSxFQUN0RSxRQUFRLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsTUFBTSxFQUFFLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFDdkMsVUFBVSxFQUFFLFVBQVUsR0FDdEIsQ0FDSSxDQUFDO0lBQ1gsQ0FBQyxDQUFDO0FBQ0osQ0FBQyxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiKHsgZGVlcCwgZGF0YSwgcmVxdWlyZSwgR28gfSkgPT4ge1xuICBjb25zdCB7IEJzQ2hlY2syQWxsIH0gPSByZXF1aXJlKFwicmVhY3QtaWNvbnMvYnNcIik7XG4gIGNvbnN0IFJlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcbiAgXG4gIGNvbnN0IGMgPSByZXF1aXJlKCdAY2hha3JhLXVpL3JlYWN0Jyk7XG5cbiAgY29uc3QgZGMgPSAnQGRlZXAtZm91bmRhdGlvbi9jb3JlJztcbiAgY29uc3QgZHBsID0gJ0BkZWVwLWZvdW5kYXRpb24vcGVyY2VwdGlvbi1saW5rcyc7XG4gIFxuICBjb25zdCBRdWVyeSA9IGRlZXAuaWRMb2NhbChkYywgJ1F1ZXJ5Jyk7XG4gIGNvbnN0IENvbnRhaW4gPSBkZWVwLmlkTG9jYWwoZGMsICdDb250YWluJyk7XG4gIGNvbnN0IEZpbmRlclF1ZXJ5ID0gZGVlcC5pZExvY2FsKGRwbCwgJ0ZpbmRlclF1ZXJ5Jyk7XG4gIGNvbnN0IFRyZWUgPSBkZWVwLmlkTG9jYWwoZHBsLCAnVHJlZScpO1xuICBjb25zdCBUcmVlTGlzdCA9IGRlZXAuaWRMb2NhbChkcGwsICdUcmVlTGlzdCcpO1xuICBjb25zdCBTZWFyY2ggPSBkZWVwLmlkTG9jYWwoZHBsLCAnU2VhcmNoJyk7XG5cbiAgcmV0dXJuICh7XG4gICAgZ28sXG5cbiAgICBpc0FjdGl2ZSxcbiAgICBzYXZlSGlzdG9yeSA9IGZhbHNlLFxuICAgIGRpc2Nsb3N1cmU6IF9fZGlzY2xvc3VyZSxcbiAgICBzdGFydFByb3BzLFxuICAgIC4uLnByb3BzXG4gIH0sIHJlZikgPT4ge1xuICAgIGNvbnN0IF9kaXNjbG9zdXJlID0gYy51c2VEaXNjbG9zdXJlKCk7XG4gICAgY29uc3QgZGlzY2xvc3VyZSA9IF9fZGlzY2xvc3VyZSB8fCBfZGlzY2xvc3VyZTtcblxuICAgIFJlYWN0LnVzZUVmZmVjdCgoKSA9PiAoKSA9PiBkZWVwLm1pbmlsaW5rcy5hcHBseShbXSwgYGRlZXAtcGVyY2VwdGlvbi1maW5kZXItJHtnby5fX3B9YCksIFtdKTtcbiAgICBjb25zdCBbcXVlcnlJZCwgc2V0UXVlcnlJZF0gPSBSZWFjdC51c2VTdGF0ZSghc2F2ZUhpc3RvcnkgPyAndmlydHVhbCcgOiB1bmRlZmluZWQpO1xuXG4gICAgcmV0dXJuIDxnby5PblxuICAgICAgZG89e3tcbiAgICAgICAgb3BlbjogKGcsdixvKSA9PiB7XG4gICAgICAgICAgaWYgKCFvPy5pZCkgcmV0dXJuO1xuICAgICAgICAgIGRpc2Nsb3N1cmUub25DbG9zZSgpO1xuICAgICAgICAgIGdvLnJvb3QoKS5kbygnb3BlbicsIHsgaWQ6IG8/LmlkLCBmb2N1czogdHJ1ZSB9KTtcbiAgICAgICAgfSxcbiAgICAgICAgZXhlYzogYXN5bmMgKGcsdixvKSA9PiB7XG4gICAgICAgICAgaWYgKHNhdmVIaXN0b3J5KSB7XG4gICAgICAgICAgICBjb25zdCB7IGRhdGE6IFt7IGlkIH1dIH0gPSBhd2FpdCBkZWVwLmluc2VydCh7XG4gICAgICAgICAgICAgIHR5cGVfaWQ6IFF1ZXJ5LFxuICAgICAgICAgICAgICBvYmplY3Q6IHtcbiAgICAgICAgICAgICAgICBfb3I6IFt7IGluOiB7IHR5cGVfaWQ6IENvbnRhaW4sIHN0cmluZzogeyB2YWx1ZTogeyBfaWxpa2U6IGAlVHlwZSVgIH0gfSB9IH1dLFxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICBjb250YWluZXJJZDogZGVlcC5saW5rSWQsXG4gICAgICAgICAgICAgIGluOiB7XG4gICAgICAgICAgICAgICAgdHlwZV9pZDogRmluZGVyUXVlcnksXG4gICAgICAgICAgICAgICAgZnJvbV9pZDogZGVlcC5saW5rSWQsXG4gICAgICAgICAgICAgICAgY29udGFpbmVySWQ6IGRlZXAubGlua0lkLFxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBhd2FpdCBkZWVwLnNlbGVjdChpZCwgeyBhcHBseTogYGRlZXAtcGVyY2VwdGlvbi1maW5kZXItJHtnby5fX3B9YCB9KTtcbiAgICAgICAgICAgIHNldFF1ZXJ5SWQoaWQpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBkaXNjbG9zdXJlLm9uT3BlbigpO1xuICAgICAgICAgIGdvLmZvY3VzKFRyZWUpO1xuICAgICAgICB9XG4gICAgICB9fVxuICAgID5cbiAgICAgIDxjLkJ1dHRvblxuICAgICAgICByZWY9e3JlZn0gaD0nM2VtJyB3PSczZW0nIHZhcmlhbnQ9e2lzQWN0aXZlID8gJ2FjdGl2ZScgOiBudWxsfVxuICAgICAgICBvbkNsaWNrPXsoKSA9PiBnby5kbygnZXhlYycpfVxuICAgICAgICB7Li4ucHJvcHN9XG4gICAgICA+8J+qrDwvYy5CdXR0b24+XG4gICAgICB7ISFxdWVyeUlkICYmIGRpc2Nsb3N1cmUuaXNPcGVuICYmIDxnby5Db21wb25lbnQgcGF0aD17W2RwbCwgJ0ZpbmRlciddfVxuICAgICAgICBkaXNjbG9zdXJlPXtkaXNjbG9zdXJlfSBpbml0aWFsSWQ9e3F1ZXJ5SWR9IGluaXRpYWxIYW5kbGVySWQ9e1RyZWVMaXN0fVxuICAgICAgICBvblN1Ym1pdD17KGlkKSA9PiBnby5kbygnb3BlbicsIHsgaWQgfSl9XG4gICAgICAgIHN0YXJ0UHJvcHM9e3N0YXJ0UHJvcHN9XG4gICAgICAvPn1cbiAgICA8L2dvLk9uPjtcbiAgfTtcbn0iXX0=",
        "link_id": 14099
      }
    },
    {
      "id": 14100,
      "type_id": 3,
      "from_id": 14093,
      "to_id": 14099,
      "value": {
        "id": 1540,
        "value": "generated",
        "link_id": 14100
      }
    },
    {
      "id": 14101,
      "type_id": 143,
      "from_id": 14099,
      "to_id": 14093
    },
    {
      "id": 14102,
      "type_id": 3,
      "from_id": 14093,
      "to_id": 14101
    },
    {
      "id": 16175,
      "type_id": 58,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 2305,
        "value": {
          "down": {
            "link_id": {
              "_eq": 5
            },
            "tree_id": {
              "_eq": 40
            }
          }
        },
        "link_id": 16175
      }
    },
    {
      "id": 16176,
      "type_id": 3,
      "from_id": 721,
      "to_id": 16175
    },
    {
      "id": 16177,
      "type_id": 92,
      "from_id": 721,
      "to_id": 16175
    },
    {
      "id": 16178,
      "type_id": 3,
      "from_id": 721,
      "to_id": 16177
    },
    {
      "id": 16179,
      "type_id": 795,
      "from_id": 5,
      "to_id": 16175
    },
    {
      "id": 16180,
      "type_id": 3,
      "from_id": 721,
      "to_id": 16179
    },
    {
      "id": 21743,
      "type_id": 717,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 1802,
        "value": "async ({ deep, data, Go, require }) => {\n  const React = require('react');\n  const { GrGraphQl } = require(\"react-icons/gr\");\n  const c = require('@chakra-ui/react');\n  const _ = require('lodash');\n\n  const dpl = '@deep-foundation/perception-links';\n  const dc = '@deep-foundation/core';\n\n  return ({\n    go,\n    handlerId,\n\n    isActive,\n  }, ref) => {\n    const View = React.useCallback(({ event }) => {\n      const value = `// query\n${event?.remoteQuery?.query?.queryString || ''}\n\n// variables\n${JSON.stringify(event?.remoteQuery?.query?.variables || {}, null, 2)}\n`\n  \n      return <Go.Editor editable={false} readOnly value={value} fillSize/>;\n    }, []);\n\n    return <go.On do={{\n      exec: (g,v,o) => go.do('view', { id: go.linkId, Component: View })),\n    }}>\n      <c.Button\n        w='3em' h='3em'\n        variant={isActive ? 'active' : undefined}\n        ref={ref}\n        onClick={() => go.do('exec')}\n      >\n        <GrGraphQl/>\n      </c.Button>\n    </go.On>;\n  };\n}",
        "link_id": 21743
      }
    },
    {
      "id": 21744,
      "type_id": 3,
      "from_id": 2586,
      "to_id": 21743,
      "value": {
        "id": 1801,
        "value": "QueriesGQLComponent",
        "link_id": 21744
      }
    },
    {
      "id": 16183,
      "type_id": 58,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 2307,
        "value": {
          "down": {
            "link_id": {
              "_eq": 83
            },
            "tree_id": {
              "_eq": 40
            }
          }
        },
        "link_id": 16183
      }
    },
    {
      "id": 16184,
      "type_id": 3,
      "from_id": 721,
      "to_id": 16183
    },
    {
      "id": 16185,
      "type_id": 92,
      "from_id": 721,
      "to_id": 16183
    },
    {
      "id": 16186,
      "type_id": 3,
      "from_id": 721,
      "to_id": 16185
    },
    {
      "id": 16187,
      "type_id": 795,
      "from_id": 83,
      "to_id": 16183
    },
    {
      "id": 16188,
      "type_id": 3,
      "from_id": 721,
      "to_id": 16187
    },
    {
      "id": 16447,
      "type_id": 30,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 1611,
        "value": "({ deep, data, require, Go }) => {\n    const React = require('react');\n    const { BsX, BsCheck2 } = require('react-icons/bs');\n    const c = require('@chakra-ui/react');\n    const { useAsyncMemo } = require('use-async-memo');\n    const dc = '@deep-foundation/core';\n    const V = deep.idLocal(dc, 'Value');\n    return ({ go, linkId, containerId, disclosure }, ref) => {\n        if (!disclosure)\n            throw new Error('!disclosure');\n        if (!linkId)\n            throw new Error('!linkId');\n        const link = React.useMemo(() => deep.get(linkId), [linkId]);\n        const [containment, setContainment] = React.useState('contains');\n        const [down, setDown] = React.useState(true);\n        const AllowAdmin = useAsyncMemo(async () => {\n            return await deep.can(deep.linkId, deep.linkId, deep.idLocal(dc, 'AllowAdmin'));\n        }, [], false);\n        const AllowDeleteType = useAsyncMemo(async () => {\n            return !link.type_id ? false : await deep.can(link.type_id, deep.linkId, deep.idLocal(dc, 'AllowDeleteType'));\n        }, [link.type_id], false);\n        const AllowDelete = useAsyncMemo(async () => {\n            return !linkId ? false : await deep.can(linkId, deep.linkId, deep.idLocal(dc, 'AllowDelete'));\n        }, [linkId], false);\n        const can = AllowAdmin || AllowDeleteType || AllowDelete;\n        const deleteQuery = {\n            _or: [\n                (down ? {\n                    up: {\n                        tree_id: deep.idLocal(dc, 'containTree'),\n                        parent_id: link.id,\n                    }\n                } : {\n                    id: link.id,\n                }),\n                ...(containment === 'contains' ? [{\n                        type_id: deep.idLocal(dc, 'Contain'),\n                        to_id: link.id,\n                    }] : containment === 'container' ? [{\n                        type_id: deep.idLocal(dc, 'Contain'),\n                        from_id: containerId,\n                        to_id: link.id,\n                    }] : []),\n            ],\n        };\n        const { data: countDown } = deep.useQuery({\n            up: {\n                tree_id: deep.idLocal(dc, 'containTree'),\n                parent_id: link.id,\n            }\n        }, {\n            skip: !disclosure.isOpen,\n            aggregate: 'count',\n        });\n        const { data: countInContains } = deep.useQuery({\n            to_id: link.id,\n            type_id: deep.idLocal(dc, 'Contain'),\n        }, {\n            skip: !disclosure.isOpen,\n            aggregate: 'count'\n        });\n        const buttons = (React.createElement(React.Fragment, null,\n            React.createElement(c.SlideFade, { in: true, offsetX: '-0.5rem', style: { position: 'absolute', top: 0, right: '-4em' } },\n                React.createElement(c.Button, { w: '3em', h: '3em', boxShadow: 'dark-lg', onClick: disclosure.onClose },\n                    React.createElement(BsX, null))),\n            React.createElement(c.SlideFade, { in: true, offsetX: '-0.5rem', style: { position: 'absolute', bottom: 0, right: '-4em' } },\n                React.createElement(c.Button, { w: '3em', h: '3em', boxShadow: 'dark-lg', variant: 'active', onClick: async () => {\n                        await deep.delete(deleteQuery);\n                        disclosure.onClose();\n                    } },\n                    React.createElement(BsCheck2, null)))));\n        const alert = (React.createElement(React.Fragment, null,\n            React.createElement(c.Alert, { status: can ? 'info' : 'error' },\n                React.createElement(c.AlertIcon, null),\n                React.createElement(c.AlertTitle, null,\n                    \"You \",\n                    can ? 'can' : \"can't\",\n                    \" do it.\")),\n            React.createElement(go.Editor, { value: `await deep.can(deep.linkId, deep.linkId, deep.idLocal('@deep-foundation/core', 'AllowAdmin'))\n// ${AllowAdmin}\nawait deep.can(${link.type_id}, deep.linkId, deep.idLocal('@deep-foundation/core', 'AllowDeleteType'))\n// ${AllowDeleteType}\nawait deep.can(${link.id}, deep.linkId, deep.idLocal('@deep-foundation/core', 'AllowDelete'))\n// ${AllowDelete}`, editable: false, readOnly: true })));\n        return (React.createElement(go.On, { do: {} },\n            React.createElement(c.Modal, { ref: ref, closeOnOverlayClick: true, blockScrollOnMount: false, onClose: disclosure.onClose, isOpen: disclosure.isOpen, portalProps: {\n                    containerRef: go.root().ref\n                } },\n                React.createElement(c.ModalOverlay, null),\n                React.createElement(c.ModalContent, { w: '30em', maxW: '30em', position: 'relative' },\n                    React.createElement(c.ModalHeader, null,\n                        \"Link deleting: \",\n                        `${link}`),\n                    React.createElement(c.ModalBody, { p: 0, w: '100%', h: '100%' },\n                        alert,\n                        React.createElement(c.Box, { p: '1em' },\n                            React.createElement(c.Checkbox, { size: 'lg', checked: down, onChange: () => setDown(!down) },\n                                \"Delete all contained in links? Total: (\",\n                                countDown,\n                                \")\")),\n                        React.createElement(c.Box, { p: '1em' }, \"Need to delete contains to this link?\"),\n                        React.createElement(c.Box, null,\n                            React.createElement(c.SimpleGrid, { columns: 3 },\n                                React.createElement(c.Button, { variant: containment === 'contains' ? 'active' : undefined, onClick: () => setContainment('contains') },\n                                    React.createElement(c.Box, null,\n                                        React.createElement(c.Box, null, \"all in\"),\n                                        React.createElement(c.Box, { fontSize: 'xs' },\n                                            \"contains: (\",\n                                            countInContains,\n                                            \")\"))),\n                                !!containerId && (React.createElement(c.Button, { variant: containment === 'container' ? 'active' : undefined, onClick: () => setContainment('container') },\n                                    React.createElement(c.Box, null,\n                                        React.createElement(c.Box, null, \"only one\"),\n                                        React.createElement(c.Box, { fontSize: 'xs' },\n                                            \"from \",\n                                            containerId)))),\n                                React.createElement(c.Button, { variant: containment === 'only' ? 'active' : undefined, onClick: () => setContainment('only') },\n                                    React.createElement(c.Box, null,\n                                        React.createElement(c.Box, null, \"not need\"),\n                                        React.createElement(c.Box, { fontSize: 'xs' }, \"to delete contains\"))))),\n                        React.createElement(go.Editor, { value: `await deep.delete(${JSON.stringify(deleteQuery, null, 2)})`, editable: false, readOnly: true })),\n                    buttons))));\n    };\n};\n//# sourceMappingURL=data:application/json;base64,",
        "link_id": 16447
      }
    },
    {
      "id": 16448,
      "type_id": 3,
      "from_id": 16441,
      "to_id": 16447,
      "value": {
        "id": 1610,
        "value": "generated",
        "link_id": 16448
      }
    },
    {
      "id": 16449,
      "type_id": 143,
      "from_id": 16447,
      "to_id": 16441
    },
    {
      "id": 16450,
      "type_id": 3,
      "from_id": 16441,
      "to_id": 16449
    },
    {
      "id": 21747,
      "type_id": 35,
      "from_id": 145,
      "to_id": 21743
    },
    {
      "id": 21748,
      "type_id": 3,
      "from_id": 2586,
      "to_id": 21747,
      "value": {
        "id": 1803,
        "value": "QueriesGQL",
        "link_id": 21748
      }
    },
    {
      "id": 21749,
      "type_id": 5258,
      "from_id": 21747,
      "to_id": 20478
    },
    {
      "id": 21750,
      "type_id": 3,
      "from_id": 2586,
      "to_id": 21749
    },
    {
      "id": 21751,
      "type_id": 30,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 1805,
        "value": "async ({ deep, data, Go, require }) => {\n    const React = require('react');\n    const { GrGraphQl } = require(\"react-icons/gr\");\n    const c = require('@chakra-ui/react');\n    const _ = require('lodash');\n    const dpl = '@deep-foundation/perception-links';\n    const dc = '@deep-foundation/core';\n    return ({ go, handlerId, isActive, }, ref) => {\n        const View = React.useCallback(({ event }) => {\n            const value = `// query\n${event?.remoteQuery?.query?.queryString || ''}\n\n// variables\n${JSON.stringify(event?.remoteQuery?.query?.variables || {}, null, 2)}\n`;\n            return React.createElement(Go.Editor, { editable: false, readOnly: true, value: value, fillSize: true });\n        }, []);\n        return React.createElement(go.On, { do: {\n                exec: (g, v, o) => go.do('view', { id: go.linkId, Component: View })\n            } },\n            React.createElement(c.Button, { w: '3em', h: '3em', variant: isActive ? 'active' : undefined, ref: ref, onClick: () => go.do('exec') },\n                React.createElement(GrGraphQl, null)));\n    };\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsibW9kdWxlLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxLQUFLLEVBQUUsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLEVBQUUsRUFBRSxPQUFPLEVBQUUsRUFBRSxFQUFFO0lBQ3BDLE1BQU0sS0FBSyxHQUFHLE9BQU8sQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUMvQixNQUFNLEVBQUUsU0FBUyxFQUFFLEdBQUcsT0FBTyxDQUFDLGdCQUFnQixDQUFDLENBQUM7SUFDaEQsTUFBTSxDQUFDLEdBQUcsT0FBTyxDQUFDLGtCQUFrQixDQUFDLENBQUM7SUFDdEMsTUFBTSxDQUFDLEdBQUcsT0FBTyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBRTVCLE1BQU0sR0FBRyxHQUFHLG1DQUFtQyxDQUFDO0lBQ2hELE1BQU0sRUFBRSxHQUFHLHVCQUF1QixDQUFDO0lBRW5DLE9BQU8sQ0FBQyxFQUNOLEVBQUUsRUFDRixTQUFTLEVBRVQsUUFBUSxHQUNULEVBQUUsR0FBRyxFQUFFLEVBQUU7UUFDUixNQUFNLElBQUksR0FBRyxLQUFLLENBQUMsV0FBVyxDQUFDLENBQUMsRUFBRSxLQUFLLEVBQUUsRUFBRSxFQUFFO1lBQzNDLE1BQU0sS0FBSyxHQUFHO0VBQ2xCLEtBQUssRUFBRSxXQUFXLEVBQUUsS0FBSyxFQUFFLFdBQVcsSUFBSSxFQUFFOzs7RUFHNUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxLQUFLLEVBQUUsV0FBVyxFQUFFLEtBQUssRUFBRSxTQUFTLElBQUksRUFBRSxFQUFFLElBQUksRUFBRSxDQUFDLENBQUM7Q0FDcEUsQ0FBQTtZQUVLLE9BQU8sb0JBQUMsRUFBRSxDQUFDLE1BQU0sSUFBQyxRQUFRLEVBQUUsS0FBSyxFQUFFLFFBQVEsUUFBQyxLQUFLLEVBQUUsS0FBSyxFQUFFLFFBQVEsU0FBRSxDQUFDO1FBQ3ZFLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQztRQUVQLE9BQU8sb0JBQUMsRUFBRSxDQUFDLEVBQUUsSUFBQyxFQUFFLEVBQUU7Z0JBQ2hCLElBQUksRUFBRSxDQUFDLENBQUMsRUFBQyxDQUFDLEVBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLE1BQU0sRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLENBQUMsTUFBTSxFQUFFLFNBQVMsRUFBRSxJQUFJLEVBQUUsQ0FBQzthQUNuRTtZQUNDLG9CQUFDLENBQUMsQ0FBQyxNQUFNLElBQ1AsQ0FBQyxFQUFDLEtBQUssRUFBQyxDQUFDLEVBQUMsS0FBSyxFQUNmLE9BQU8sRUFBRSxRQUFRLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsU0FBUyxFQUN4QyxHQUFHLEVBQUUsR0FBRyxFQUNSLE9BQU8sRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLE1BQU0sQ0FBQztnQkFFNUIsb0JBQUMsU0FBUyxPQUFFLENBQ0gsQ0FDTCxDQUFDO0lBQ1gsQ0FBQyxDQUFDO0FBQ0osQ0FBQyxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiYXN5bmMgKHsgZGVlcCwgZGF0YSwgR28sIHJlcXVpcmUgfSkgPT4ge1xuICBjb25zdCBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XG4gIGNvbnN0IHsgR3JHcmFwaFFsIH0gPSByZXF1aXJlKFwicmVhY3QtaWNvbnMvZ3JcIik7XG4gIGNvbnN0IGMgPSByZXF1aXJlKCdAY2hha3JhLXVpL3JlYWN0Jyk7XG4gIGNvbnN0IF8gPSByZXF1aXJlKCdsb2Rhc2gnKTtcblxuICBjb25zdCBkcGwgPSAnQGRlZXAtZm91bmRhdGlvbi9wZXJjZXB0aW9uLWxpbmtzJztcbiAgY29uc3QgZGMgPSAnQGRlZXAtZm91bmRhdGlvbi9jb3JlJztcblxuICByZXR1cm4gKHtcbiAgICBnbyxcbiAgICBoYW5kbGVySWQsXG5cbiAgICBpc0FjdGl2ZSxcbiAgfSwgcmVmKSA9PiB7XG4gICAgY29uc3QgVmlldyA9IFJlYWN0LnVzZUNhbGxiYWNrKCh7IGV2ZW50IH0pID0+IHtcbiAgICAgIGNvbnN0IHZhbHVlID0gYC8vIHF1ZXJ5XG4ke2V2ZW50Py5yZW1vdGVRdWVyeT8ucXVlcnk/LnF1ZXJ5U3RyaW5nIHx8ICcnfVxuXG4vLyB2YXJpYWJsZXNcbiR7SlNPTi5zdHJpbmdpZnkoZXZlbnQ/LnJlbW90ZVF1ZXJ5Py5xdWVyeT8udmFyaWFibGVzIHx8IHt9LCBudWxsLCAyKX1cbmBcbiAgXG4gICAgICByZXR1cm4gPEdvLkVkaXRvciBlZGl0YWJsZT17ZmFsc2V9IHJlYWRPbmx5IHZhbHVlPXt2YWx1ZX0gZmlsbFNpemUvPjtcbiAgICB9LCBbXSk7XG5cbiAgICByZXR1cm4gPGdvLk9uIGRvPXt7XG4gICAgICBleGVjOiAoZyx2LG8pID0+IGdvLmRvKCd2aWV3JywgeyBpZDogZ28ubGlua0lkLCBDb21wb25lbnQ6IFZpZXcgfSkpLFxuICAgIH19PlxuICAgICAgPGMuQnV0dG9uXG4gICAgICAgIHc9JzNlbScgaD0nM2VtJ1xuICAgICAgICB2YXJpYW50PXtpc0FjdGl2ZSA/ICdhY3RpdmUnIDogdW5kZWZpbmVkfVxuICAgICAgICByZWY9e3JlZn1cbiAgICAgICAgb25DbGljaz17KCkgPT4gZ28uZG8oJ2V4ZWMnKX1cbiAgICAgID5cbiAgICAgICAgPEdyR3JhcGhRbC8+XG4gICAgICA8L2MuQnV0dG9uPlxuICAgIDwvZ28uT24+O1xuICB9O1xufSJdfQ==",
        "link_id": 21751
      }
    },
    {
      "id": 21752,
      "type_id": 3,
      "from_id": 21743,
      "to_id": 21751,
      "value": {
        "id": 1804,
        "value": "generated",
        "link_id": 21752
      }
    },
    {
      "id": 21753,
      "type_id": 143,
      "from_id": 21751,
      "to_id": 21743
    },
    {
      "id": 21754,
      "type_id": 3,
      "from_id": 21743,
      "to_id": 21753
    },
    {
      "id": 16360,
      "type_id": 30,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 1606,
        "value": "({ deep, data, require, Go }) => {\n    const React = require('react');\n    const { BsX, BsCheck2, BsXLg, BsDatabase, BsRegex } = require('react-icons/bs');\n    const { TypedIcon, DownIcon, UpIcon, TypeIcon, InIcon, OutIcon, FromIcon, ToIcon, } = require('@deep-foundation/perception-app');\n    const { useAsyncMemo } = require('use-async-memo');\n    const c = require('@chakra-ui/react');\n    const dc = '@deep-foundation/core';\n    const dpl = '@deep-foundation/perception-links';\n    const V = deep.idLocal(dc, 'Value');\n    const S = deep.idLocal(dc, 'String');\n    const N = deep.idLocal(dc, 'Number');\n    const O = deep.idLocal(dc, 'Object');\n    return ({ go, defaultContainerId, defaultTypeId, defaultFromId, defaultToId, disclosure, }, ref) => {\n        if (!disclosure)\n            throw new Error('!disclosure');\n        const [typeId, setTypeId] = React.useState(defaultTypeId);\n        const [fromId, setFromId] = React.useState(defaultFromId);\n        const [toId, setToId] = React.useState(defaultToId);\n        const type = React.useMemo(() => typeId ? deep.get(+typeId) : null, [typeId]);\n        const from = React.useMemo(() => fromId ? deep.get(+fromId) : null, [fromId]);\n        const to = React.useMemo(() => toId ? deep.get(+toId) : null, [toId]);\n        const [value, setValue] = React.useState();\n        const [name, setName] = React.useState('');\n        const [containerId, setContainerId] = React.useState(defaultContainerId);\n        const tV = useAsyncMemo(async () => {\n            return typeId ? (await deep.select({ type_id: V, from_id: +typeId }))?.data?.[0]?.to_id : undefined;\n        }, [type]);\n        const { isValid, validated } = React.useMemo(() => {\n            try {\n                if (tV === S)\n                    return { validated: value, isValid: true };\n                if (tV === N)\n                    return { validated: +value, isValud: typeof (validated) === 'number' && !Number.isNaN(validated) };\n                if (tV === O)\n                    return { validated: JSON.parse(value), isValid: true };\n                if (!tV)\n                    return { validated: value, isValid: true };\n            }\n            catch (e) { }\n            return { validated: value, isValid: false };\n        }, [value, tV]);\n        const AllowAdmin = useAsyncMemo(async () => {\n            return await deep.can(deep.linkId, deep.linkId, deep.idLocal('@deep-foundation/core', 'AllowAdmin'));\n        }, [], false);\n        const AllowInsertType = useAsyncMemo(async () => {\n            return !typeId ? false : await deep.can(+typeId, deep.linkId, deep.idLocal('@deep-foundation/core', 'AllowInsertType'));\n        }, [typeId], false);\n        const can = AllowInsertType || AllowAdmin;\n        const insertQuery = type ? {\n            type_id: type.id,\n            ...(fromId && toId ? { from_id: +fromId, to_id: +toId } : {}),\n            containerId,\n            ...(name ? { name } : {}),\n            ...(tV == S ? { string: { data: { value: validated } } } : tV == N ? { number: { data: { value: validated } } } : tV == O ? { object: { data: { value: validated } } } : {}),\n        } : {};\n        const valueType = React.useMemo(() => type?.outByType[V]?.[0]?.to_id, [type]);\n        const buttons = React.createElement(React.Fragment, null,\n            React.createElement(c.SlideFade, { in: true, offsetX: '-0.5rem', style: { position: 'absolute', top: 0, right: '-4em' } },\n                React.createElement(c.Button, { w: '3em', h: '3em', boxShadow: 'dark-lg', variant: undefined, onClick: disclosure.onClose },\n                    React.createElement(BsX, null))),\n            React.createElement(c.SlideFade, { in: ((!!fromId && !!toId) || type?.id === 1 || (!type?.from_id && !type?.to_id)) && (isValid || value === ''), offsetX: '-0.5rem', style: { position: 'absolute', bottom: 0, right: '-4em' } },\n                React.createElement(c.Button, { w: '3em', h: '3em', boxShadow: 'dark-lg', variant: 'active', onClick: async () => {\n                        await deep.insert(insertQuery);\n                        disclosure.onClose();\n                    } },\n                    React.createElement(BsCheck2, null))));\n        const alert = React.createElement(React.Fragment, null,\n            React.createElement(c.Alert, { status: can ? 'info' : 'error' },\n                React.createElement(c.AlertIcon, null),\n                React.createElement(c.AlertTitle, null,\n                    \"You \",\n                    can ? 'can' : 'can`t',\n                    \" do it.\")),\n            React.createElement(go.Editor, { value: `await deep.can(deep.linkId, deep.linkId, deep.idLocal('@deep-foundation/core', 'AllowAdmin'))\n// ${AllowAdmin}${!!typeId ? `\nawait deep.can(${typeId}, deep.linkId, deep.idLocal('@deep-foundation/core', 'AllowInsertType'))\n// ${AllowInsertType}` : ''}`, editable: false, readOnly: true }));\n        return React.createElement(go.On, { do: {} },\n            React.createElement(c.Modal, { ref: ref, closeOnOverlayClick: true, blockScrollOnMount: false, onClose: disclosure.onClose, isOpen: disclosure.isOpen, portalProps: { containerRef: go.root().ref } },\n                React.createElement(c.ModalOverlay, null),\n                React.createElement(c.ModalContent, { w: '30em', maxW: '30em', position: 'relative' },\n                    React.createElement(c.ModalHeader, null, \"Link inserting:\"),\n                    React.createElement(c.ModalBody, { p: 0, w: '100%', h: '100%' },\n                        !can && alert,\n                        React.createElement(go.Component, { path: [dpl, 'FinderInput'], leftIcon: React.createElement(TypeIcon, null), value: typeId, onChange: id => setTypeId(id) }),\n                        React.createElement(c.SimpleGrid, { columns: 2 },\n                            React.createElement(go.Component, { path: [dpl, 'FinderInput'], leftIcon: React.createElement(FromIcon, null), value: fromId, onChange: id => setFromId(id) }),\n                            React.createElement(go.Component, { path: [dpl, 'FinderInput'], leftIcon: React.createElement(ToIcon, null), value: toId, onChange: id => setToId(id) })),\n                        React.createElement(c.SimpleGrid, { columns: 2 },\n                            React.createElement(go.Component, { path: [dpl, 'FinderInput'], leftIcon: React.createElement(React.Fragment, null, \"\\uD83D\\uDDC2\\uFE0F\"), value: containerId, onChange: id => setContainId(id) }),\n                            React.createElement(c.Input, { placeholder: 'name', h: '3em', value: name, onChange: e => setName(e.target.value) })),\n                        !!type && React.createElement(c.Box, null,\n                            !valueType && React.createElement(React.Fragment, null,\n                                React.createElement(c.Alert, { status: 'info' },\n                                    React.createElement(c.AlertIcon, null),\n                                    React.createElement(c.AlertTitle, null,\n                                        \"type \",\n                                        +type,\n                                        \" can't have Value\"))),\n                            valueType === S && React.createElement(React.Fragment, null,\n                                React.createElement(go.Editor, { placeholder: 'String value', value: value, onChange: setValue })),\n                            valueType === N && React.createElement(React.Fragment, null,\n                                React.createElement(c.Input, { type: 'string', value: value, placeholder: 'Number value', onChange: e => setValue(e.target.value) })),\n                            valueType === O && React.createElement(React.Fragment, null,\n                                React.createElement(go.Editor, { placeholder: 'Object value', value: value, onChange: setValue })),\n                            (tV === S || tV === N || tV === O) && React.createElement(c.Tag, { size: 'lg', colorScheme: value === '' ? 'black' : isValid ? 'deepActive' : 'danger', variant: 'solid', borderRadius: 'full', position: 'absolute', bottom: '-0.5em', right: '-0.5em' }, value === '' ? 'empty' : isValid ? 'valid' : 'invalid')),\n                        React.createElement(c.Divider, { mt: '1em', mb: '1em' }),\n                        React.createElement(go.Editor, { value: `await deep.insert(${JSON.stringify(insertQuery, null, 2)})`, editable: false, readOnly: true }),\n                        !!can && alert),\n                    buttons)));\n    };\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsibW9kdWxlLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxDQUFDLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRTtJQUM5QixNQUFNLEtBQUssR0FBRyxPQUFPLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDL0IsTUFBTSxFQUFFLEdBQUcsRUFBRSxRQUFRLEVBQUUsS0FBSyxFQUFFLFVBQVUsRUFBRSxPQUFPLEVBQUUsR0FBRyxPQUFPLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztJQUVoRixNQUFNLEVBQ0osU0FBUyxFQUFFLFFBQVEsRUFBRSxNQUFNLEVBQUUsUUFBUSxFQUFFLE1BQU0sRUFBRSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sR0FDekUsR0FBRyxPQUFPLENBQUMsaUNBQWlDLENBQUMsQ0FBQztJQUUvQyxNQUFNLEVBQUUsWUFBWSxFQUFFLEdBQUcsT0FBTyxDQUFDLGdCQUFnQixDQUFDLENBQUM7SUFFbkQsTUFBTSxDQUFDLEdBQUcsT0FBTyxDQUFDLGtCQUFrQixDQUFDLENBQUM7SUFFdEMsTUFBTSxFQUFFLEdBQUcsdUJBQXVCLENBQUM7SUFDbkMsTUFBTSxHQUFHLEdBQUcsbUNBQW1DLENBQUM7SUFFaEQsTUFBTSxDQUFDLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxFQUFFLEVBQUUsT0FBTyxDQUFDLENBQUM7SUFDcEMsTUFBTSxDQUFDLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxFQUFFLEVBQUUsUUFBUSxDQUFDLENBQUM7SUFDckMsTUFBTSxDQUFDLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxFQUFFLEVBQUUsUUFBUSxDQUFDLENBQUM7SUFDckMsTUFBTSxDQUFDLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxFQUFFLEVBQUUsUUFBUSxDQUFDLENBQUM7SUFFckMsT0FBTyxDQUFDLEVBQ04sRUFBRSxFQUVGLGtCQUFrQixFQUNsQixhQUFhLEVBQ2IsYUFBYSxFQUNiLFdBQVcsRUFFWCxVQUFVLEdBQ1gsRUFBRSxHQUFHLEVBQUUsRUFBRTtRQUNSLElBQUksQ0FBQyxVQUFVO1lBQUUsTUFBTSxJQUFJLEtBQUssQ0FBQyxhQUFhLENBQUMsQ0FBQztRQUVoRCxNQUFNLENBQUMsTUFBTSxFQUFFLFNBQVMsQ0FBQyxHQUFHLEtBQUssQ0FBQyxRQUFRLENBQUMsYUFBYSxDQUFDLENBQUM7UUFDMUQsTUFBTSxDQUFDLE1BQU0sRUFBRSxTQUFTLENBQUMsR0FBRyxLQUFLLENBQUMsUUFBUSxDQUFDLGFBQWEsQ0FBQyxDQUFDO1FBQzFELE1BQU0sQ0FBQyxJQUFJLEVBQUUsT0FBTyxDQUFDLEdBQUcsS0FBSyxDQUFDLFFBQVEsQ0FBQyxXQUFXLENBQUMsQ0FBQztRQUNwRCxNQUFNLElBQUksR0FBRyxLQUFLLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLEVBQUUsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDO1FBQzlFLE1BQU0sSUFBSSxHQUFHLEtBQUssQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksRUFBRSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUM7UUFDOUUsTUFBTSxFQUFFLEdBQUcsS0FBSyxDQUFDLE9BQU8sQ0FBQyxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztRQUV0RSxNQUFNLENBQUMsS0FBSyxFQUFFLFFBQVEsQ0FBQyxHQUFHLEtBQUssQ0FBQyxRQUFRLEVBQUUsQ0FBQztRQUMzQyxNQUFNLENBQUMsSUFBSSxFQUFFLE9BQU8sQ0FBQyxHQUFHLEtBQUssQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLENBQUM7UUFDM0MsTUFBTSxDQUFDLFdBQVcsRUFBRSxjQUFjLENBQUMsR0FBRyxLQUFLLENBQUMsUUFBUSxDQUFDLGtCQUFrQixDQUFDLENBQUM7UUFFekUsTUFBTSxFQUFFLEdBQUcsWUFBWSxDQUFDLEtBQUssSUFBSSxFQUFFO1lBQ2pDLE9BQU8sTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sSUFBSSxDQUFDLE1BQU0sQ0FBQyxFQUFFLE9BQU8sRUFBRSxDQUFDLEVBQUUsT0FBTyxFQUFFLENBQUMsTUFBTSxFQUFFLENBQUMsQ0FBQyxFQUFFLElBQUksRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFFLEtBQUssQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDO1FBQ3RHLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7UUFDWCxNQUFNLEVBQUUsT0FBTyxFQUFFLFNBQVMsRUFBRSxHQUFHLEtBQUssQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFO1lBQ2hELElBQUksQ0FBQztnQkFDSCxJQUFJLEVBQUUsS0FBSyxDQUFDO29CQUFFLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLE9BQU8sRUFBRSxJQUFJLEVBQUUsQ0FBQztnQkFDekQsSUFBSSxFQUFFLEtBQUssQ0FBQztvQkFBRSxPQUFPLEVBQUUsU0FBUyxFQUFFLENBQUMsS0FBSyxFQUFFLE9BQU8sRUFBRSxPQUFNLENBQUMsU0FBUyxDQUFDLEtBQUssUUFBUSxJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxTQUFTLENBQUMsRUFBRSxDQUFDO2dCQUNoSCxJQUFJLEVBQUUsS0FBSyxDQUFDO29CQUFFLE9BQU8sRUFBRSxTQUFTLEVBQUUsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsRUFBRSxPQUFPLEVBQUUsSUFBSSxFQUFFLENBQUM7Z0JBQ3JFLElBQUksQ0FBQyxFQUFFO29CQUFFLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLE9BQU8sRUFBRSxJQUFJLEVBQUUsQ0FBQztZQUN0RCxDQUFDO1lBQUMsT0FBTSxDQUFDLEVBQUUsQ0FBQyxDQUFBLENBQUM7WUFDYixPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxPQUFPLEVBQUUsS0FBSyxFQUFFLENBQUM7UUFDOUMsQ0FBQyxFQUFFLENBQUMsS0FBSyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFFaEIsTUFBTSxVQUFVLEdBQUcsWUFBWSxDQUFNLEtBQUssSUFBSSxFQUFFO1lBQzlDLE9BQU8sTUFBTSxJQUFJLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsSUFBSSxDQUFDLE1BQU0sRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLHVCQUF1QixFQUFFLFlBQVksQ0FBQyxDQUFDLENBQUM7UUFDdkcsQ0FBQyxFQUFFLEVBQUUsRUFBRSxLQUFLLENBQUMsQ0FBQztRQUNkLE1BQU0sZUFBZSxHQUFHLFlBQVksQ0FBTSxLQUFLLElBQUksRUFBRTtZQUNuRCxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLE1BQU0sSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLE1BQU0sRUFBRSxJQUFJLENBQUMsTUFBTSxFQUFFLElBQUksQ0FBQyxPQUFPLENBQUMsdUJBQXVCLEVBQUUsaUJBQWlCLENBQUMsQ0FBQyxDQUFDO1FBQzFILENBQUMsRUFBRSxDQUFDLE1BQU0sQ0FBQyxFQUFFLEtBQUssQ0FBQyxDQUFDO1FBQ3BCLE1BQU0sR0FBRyxHQUFHLGVBQWUsSUFBSSxVQUFVLENBQUM7UUFFMUMsTUFBTSxXQUFXLEdBQUcsSUFBSSxDQUFDLENBQUMsQ0FBQztZQUN6QixPQUFPLEVBQUUsSUFBSSxDQUFDLEVBQUU7WUFDaEIsR0FBRyxDQUFDLE1BQU0sSUFBSSxJQUFJLENBQUMsQ0FBQyxDQUFDLEVBQUUsT0FBTyxFQUFFLENBQUMsTUFBTSxFQUFFLEtBQUssRUFBRSxDQUFDLElBQUksRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUM7WUFDN0QsV0FBVztZQUNYLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEVBQUUsSUFBSSxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQztZQUN6QixHQUFHLENBQUMsRUFBRSxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxNQUFNLEVBQUUsRUFBRSxJQUFJLEVBQUUsRUFBRSxLQUFLLEVBQUUsU0FBUyxFQUFFLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFFLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLE1BQU0sRUFBRSxFQUFFLElBQUksRUFBRSxFQUFFLEtBQUssRUFBRSxTQUFTLEVBQUUsRUFBRSxFQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsTUFBTSxFQUFFLEVBQUUsSUFBSSxFQUFFLEVBQUUsS0FBSyxFQUFFLFNBQVMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDO1NBQzVLLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQztRQUVQLE1BQU0sU0FBUyxHQUFHLEtBQUssQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLENBQUMsSUFBSSxFQUFFLFNBQVMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFFLEtBQUssRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7UUFFOUUsTUFBTSxPQUFPLEdBQUc7WUFDZCxvQkFBQyxDQUFDLENBQUMsU0FBUyxJQUFDLEVBQUUsRUFBRSxJQUFJLEVBQUUsT0FBTyxFQUFDLFNBQVMsRUFBQyxLQUFLLEVBQUUsRUFBQyxRQUFRLEVBQUUsVUFBVSxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBQztnQkFDM0Ysb0JBQUMsQ0FBQyxDQUFDLE1BQU0sSUFDUCxDQUFDLEVBQUMsS0FBSyxFQUFDLENBQUMsRUFBQyxLQUFLLEVBQ2YsU0FBUyxFQUFDLFNBQVMsRUFDbkIsT0FBTyxFQUFFLFNBQVMsRUFDbEIsT0FBTyxFQUFFLFVBQVUsQ0FBQyxPQUFPO29CQUM1QixvQkFBQyxHQUFHLE9BQUcsQ0FBVyxDQUNQO1lBQ2Qsb0JBQUMsQ0FBQyxDQUFDLFNBQVMsSUFDVixFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLElBQUksQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLElBQUksRUFBRSxFQUFFLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQyxJQUFJLEVBQUUsT0FBTyxJQUFJLENBQUMsSUFBSSxFQUFFLEtBQUssQ0FBQyxDQUFDLElBQUksQ0FBQyxPQUFPLElBQUksS0FBSyxLQUFLLEVBQUUsQ0FBQyxFQUM3RyxPQUFPLEVBQUMsU0FBUyxFQUFDLEtBQUssRUFBRSxFQUFDLFFBQVEsRUFBRSxVQUFVLEVBQUUsTUFBTSxFQUFFLENBQUMsRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFDO2dCQUV6RSxvQkFBQyxDQUFDLENBQUMsTUFBTSxJQUNQLENBQUMsRUFBQyxLQUFLLEVBQUMsQ0FBQyxFQUFDLEtBQUssRUFDZixTQUFTLEVBQUMsU0FBUyxFQUNuQixPQUFPLEVBQUUsUUFBUSxFQUNqQixPQUFPLEVBQUUsS0FBSyxJQUFJLEVBQUU7d0JBQ2xCLE1BQU0sSUFBSSxDQUFDLE1BQU0sQ0FBQyxXQUFXLENBQUMsQ0FBQzt3QkFDL0IsVUFBVSxDQUFDLE9BQU8sRUFBRSxDQUFDO29CQUN2QixDQUFDO29CQUNGLG9CQUFDLFFBQVEsT0FBRyxDQUFXLENBQ1osQ0FDYixDQUFDO1FBRUosTUFBTSxLQUFLLEdBQUc7WUFDWixvQkFBQyxDQUFDLENBQUMsS0FBSyxJQUFDLE1BQU0sRUFBRSxHQUFHLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsT0FBTztnQkFDckMsb0JBQUMsQ0FBQyxDQUFDLFNBQVMsT0FBRztnQkFDZixvQkFBQyxDQUFDLENBQUMsVUFBVTs7b0JBQU0sR0FBRyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLE9BQU87OEJBQXVCLENBQ3ZEO1lBQ1Ysb0JBQUMsRUFBRSxDQUFDLE1BQU0sSUFDUixLQUFLLEVBQUU7S0FDVixVQUFVLEdBQUcsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUM7aUJBQ1osTUFBTTtLQUNsQixlQUFlLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLEVBQ3JCLFFBQVEsRUFBRSxLQUFLLEVBQUUsUUFBUSxTQUN6QixDQUNELENBQUM7UUFFSixPQUFPLG9CQUFDLEVBQUUsQ0FBQyxFQUFFLElBQ1gsRUFBRSxFQUFFLEVBQ0g7WUFFRCxvQkFBQyxDQUFDLENBQUMsS0FBSyxJQUNOLEdBQUcsRUFBRSxHQUFHLEVBQ1IsbUJBQW1CLFFBQUMsa0JBQWtCLEVBQUUsS0FBSyxFQUM3QyxPQUFPLEVBQUUsVUFBVSxDQUFDLE9BQU8sRUFDM0IsTUFBTSxFQUFFLFVBQVUsQ0FBQyxNQUFNLEVBQUUsV0FBVyxFQUFFLEVBQUUsWUFBWSxFQUFFLEVBQUUsQ0FBQyxJQUFJLEVBQUUsQ0FBQyxHQUFHLEVBQUU7Z0JBRXZFLG9CQUFDLENBQUMsQ0FBQyxZQUFZLE9BQUc7Z0JBQ2xCLG9CQUFDLENBQUMsQ0FBQyxZQUFZLElBQUMsQ0FBQyxFQUFDLE1BQU0sRUFBQyxJQUFJLEVBQUMsTUFBTSxFQUFDLFFBQVEsRUFBQyxVQUFVO29CQUN0RCxvQkFBQyxDQUFDLENBQUMsV0FBVywwQkFBZ0M7b0JBQzlDLG9CQUFDLENBQUMsQ0FBQyxTQUFTLElBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUMsTUFBTSxFQUFDLENBQUMsRUFBQyxNQUFNO3dCQUNqQyxDQUFDLEdBQUcsSUFBSSxLQUFLO3dCQUNkLG9CQUFDLEVBQUUsQ0FBQyxTQUFTLElBQUMsSUFBSSxFQUFFLENBQUMsR0FBRyxFQUFFLGFBQWEsQ0FBQyxFQUN0QyxRQUFRLEVBQUUsb0JBQUMsUUFBUSxPQUFFLEVBQ3JCLEtBQUssRUFBRSxNQUFNLEVBQ2IsUUFBUSxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsU0FBUyxDQUFDLEVBQUUsQ0FBQyxHQUM3Qjt3QkFDRixvQkFBQyxDQUFDLENBQUMsVUFBVSxJQUFDLE9BQU8sRUFBRSxDQUFDOzRCQUN0QixvQkFBQyxFQUFFLENBQUMsU0FBUyxJQUFDLElBQUksRUFBRSxDQUFDLEdBQUcsRUFBRSxhQUFhLENBQUMsRUFDdEMsUUFBUSxFQUFFLG9CQUFDLFFBQVEsT0FBRSxFQUNyQixLQUFLLEVBQUUsTUFBTSxFQUNiLFFBQVEsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLFNBQVMsQ0FBQyxFQUFFLENBQUMsR0FDN0I7NEJBQ0Ysb0JBQUMsRUFBRSxDQUFDLFNBQVMsSUFBQyxJQUFJLEVBQUUsQ0FBQyxHQUFHLEVBQUUsYUFBYSxDQUFDLEVBQ3RDLFFBQVEsRUFBRSxvQkFBQyxNQUFNLE9BQUUsRUFDbkIsS0FBSyxFQUFFLElBQUksRUFDWCxRQUFRLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUFDLEdBQzNCLENBQ1c7d0JBQ2Ysb0JBQUMsQ0FBQyxDQUFDLFVBQVUsSUFBQyxPQUFPLEVBQUUsQ0FBQzs0QkFDdEIsb0JBQUMsRUFBRSxDQUFDLFNBQVMsSUFBQyxJQUFJLEVBQUUsQ0FBQyxHQUFHLEVBQUUsYUFBYSxDQUFDLEVBQ3RDLFFBQVEsRUFBRSwrREFBUSxFQUNsQixLQUFLLEVBQUUsV0FBVyxFQUNsQixRQUFRLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxZQUFZLENBQUMsRUFBRSxDQUFDLEdBQ2hDOzRCQUNGLG9CQUFDLENBQUMsQ0FBQyxLQUFLLElBQ04sV0FBVyxFQUFDLE1BQU0sRUFBQyxDQUFDLEVBQUMsS0FBSyxFQUMxQixLQUFLLEVBQUUsSUFBSSxFQUNYLFFBQVEsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxHQUN0QyxDQUNXO3dCQUNkLENBQUMsQ0FBQyxJQUFJLElBQUksb0JBQUMsQ0FBQyxDQUFDLEdBQUc7NEJBQ2QsQ0FBQyxTQUFTLElBQUk7Z0NBQ2Isb0JBQUMsQ0FBQyxDQUFDLEtBQUssSUFBQyxNQUFNLEVBQUMsTUFBTTtvQ0FDcEIsb0JBQUMsQ0FBQyxDQUFDLFNBQVMsT0FBRTtvQ0FDZCxvQkFBQyxDQUFDLENBQUMsVUFBVTs7d0NBQU8sQ0FBQyxJQUFJOzREQUFpQyxDQUNsRCxDQUNUOzRCQUNGLFNBQVMsS0FBSyxDQUFDLElBQUk7Z0NBQ2xCLG9CQUFDLEVBQUUsQ0FBQyxNQUFNLElBQUMsV0FBVyxFQUFDLGNBQWMsRUFBQyxLQUFLLEVBQUUsS0FBSyxFQUFFLFFBQVEsRUFBRSxRQUFRLEdBQUcsQ0FDeEU7NEJBQ0YsU0FBUyxLQUFLLENBQUMsSUFBSTtnQ0FDbEIsb0JBQUMsQ0FBQyxDQUFDLEtBQUssSUFDTixJQUFJLEVBQUMsUUFBUSxFQUNiLEtBQUssRUFBRSxLQUFLLEVBQ1osV0FBVyxFQUFDLGNBQWMsRUFDMUIsUUFBUSxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLEdBQ3ZDLENBQ0Q7NEJBQ0YsU0FBUyxLQUFLLENBQUMsSUFBSTtnQ0FDbEIsb0JBQUMsRUFBRSxDQUFDLE1BQU0sSUFBQyxXQUFXLEVBQUMsY0FBYyxFQUFDLEtBQUssRUFBRSxLQUFLLEVBQUUsUUFBUSxFQUFFLFFBQVEsR0FBRyxDQUN4RTs0QkFDRixDQUFDLEVBQUUsS0FBSyxDQUFDLElBQUksRUFBRSxLQUFLLENBQUMsSUFBSSxFQUFFLEtBQUssQ0FBQyxDQUFDLElBQUksb0JBQUMsQ0FBQyxDQUFDLEdBQUcsSUFDM0MsSUFBSSxFQUFDLElBQUksRUFBQyxXQUFXLEVBQUUsS0FBSyxLQUFLLEVBQUUsQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLFlBQVksQ0FBQyxDQUFDLENBQUMsUUFBUSxFQUFFLE9BQU8sRUFBQyxPQUFPLEVBQUMsWUFBWSxFQUFDLE1BQU0sRUFDdEgsUUFBUSxFQUFDLFVBQVUsRUFBQyxNQUFNLEVBQUMsUUFBUSxFQUFDLEtBQUssRUFBQyxRQUFRLElBQ2xELEtBQUssS0FBSyxFQUFFLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBUyxDQUMzRDt3QkFDUixvQkFBQyxDQUFDLENBQUMsT0FBTyxJQUFDLEVBQUUsRUFBQyxLQUFLLEVBQUMsRUFBRSxFQUFDLEtBQUssR0FBRTt3QkFDOUIsb0JBQUMsRUFBRSxDQUFDLE1BQU0sSUFDUixLQUFLLEVBQUUscUJBQXFCLElBQUksQ0FBQyxTQUFTLENBQUMsV0FBVyxFQUFFLElBQUksRUFBRSxDQUFDLENBQUMsR0FBRyxFQUNuRSxRQUFRLEVBQUUsS0FBSyxFQUFFLFFBQVEsU0FDekI7d0JBQ0QsQ0FBQyxDQUFDLEdBQUcsSUFBSSxLQUFLLENBQ0g7b0JBQ2IsT0FBTyxDQUNPLENBQ1QsQ0FDSixDQUFDO0lBQ1gsQ0FBQyxDQUFDO0FBQ0osQ0FBQyxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiKHsgZGVlcCwgZGF0YSwgcmVxdWlyZSwgR28gfSkgPT4ge1xuICBjb25zdCBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XG4gIGNvbnN0IHsgQnNYLCBCc0NoZWNrMiwgQnNYTGcsIEJzRGF0YWJhc2UsIEJzUmVnZXggfSA9IHJlcXVpcmUoJ3JlYWN0LWljb25zL2JzJyk7XG5cbiAgY29uc3Qge1xuICAgIFR5cGVkSWNvbiwgRG93bkljb24sIFVwSWNvbiwgVHlwZUljb24sIEluSWNvbiwgT3V0SWNvbiwgRnJvbUljb24sIFRvSWNvbixcbiAgfSA9IHJlcXVpcmUoJ0BkZWVwLWZvdW5kYXRpb24vcGVyY2VwdGlvbi1hcHAnKTtcblxuICBjb25zdCB7IHVzZUFzeW5jTWVtbyB9ID0gcmVxdWlyZSgndXNlLWFzeW5jLW1lbW8nKTtcbiAgXG4gIGNvbnN0IGMgPSByZXF1aXJlKCdAY2hha3JhLXVpL3JlYWN0Jyk7XG5cbiAgY29uc3QgZGMgPSAnQGRlZXAtZm91bmRhdGlvbi9jb3JlJztcbiAgY29uc3QgZHBsID0gJ0BkZWVwLWZvdW5kYXRpb24vcGVyY2VwdGlvbi1saW5rcyc7XG5cbiAgY29uc3QgViA9IGRlZXAuaWRMb2NhbChkYywgJ1ZhbHVlJyk7XG4gIGNvbnN0IFMgPSBkZWVwLmlkTG9jYWwoZGMsICdTdHJpbmcnKTtcbiAgY29uc3QgTiA9IGRlZXAuaWRMb2NhbChkYywgJ051bWJlcicpO1xuICBjb25zdCBPID0gZGVlcC5pZExvY2FsKGRjLCAnT2JqZWN0Jyk7XG5cbiAgcmV0dXJuICh7XG4gICAgZ28sXG5cbiAgICBkZWZhdWx0Q29udGFpbmVySWQsXG4gICAgZGVmYXVsdFR5cGVJZCxcbiAgICBkZWZhdWx0RnJvbUlkLFxuICAgIGRlZmF1bHRUb0lkLFxuXG4gICAgZGlzY2xvc3VyZSxcbiAgfSwgcmVmKSA9PiB7XG4gICAgaWYgKCFkaXNjbG9zdXJlKSB0aHJvdyBuZXcgRXJyb3IoJyFkaXNjbG9zdXJlJyk7XG5cbiAgICBjb25zdCBbdHlwZUlkLCBzZXRUeXBlSWRdID0gUmVhY3QudXNlU3RhdGUoZGVmYXVsdFR5cGVJZCk7XG4gICAgY29uc3QgW2Zyb21JZCwgc2V0RnJvbUlkXSA9IFJlYWN0LnVzZVN0YXRlKGRlZmF1bHRGcm9tSWQpO1xuICAgIGNvbnN0IFt0b0lkLCBzZXRUb0lkXSA9IFJlYWN0LnVzZVN0YXRlKGRlZmF1bHRUb0lkKTtcbiAgICBjb25zdCB0eXBlID0gUmVhY3QudXNlTWVtbygoKSA9PiB0eXBlSWQgPyBkZWVwLmdldCgrdHlwZUlkKSA6IG51bGwsIFt0eXBlSWRdKTtcbiAgICBjb25zdCBmcm9tID0gUmVhY3QudXNlTWVtbygoKSA9PiBmcm9tSWQgPyBkZWVwLmdldCgrZnJvbUlkKSA6IG51bGwsIFtmcm9tSWRdKTtcbiAgICBjb25zdCB0byA9IFJlYWN0LnVzZU1lbW8oKCkgPT4gdG9JZCA/IGRlZXAuZ2V0KCt0b0lkKSA6IG51bGwsIFt0b0lkXSk7XG5cbiAgICBjb25zdCBbdmFsdWUsIHNldFZhbHVlXSA9IFJlYWN0LnVzZVN0YXRlKCk7XG4gICAgY29uc3QgW25hbWUsIHNldE5hbWVdID0gUmVhY3QudXNlU3RhdGUoJycpO1xuICAgIGNvbnN0IFtjb250YWluZXJJZCwgc2V0Q29udGFpbmVySWRdID0gUmVhY3QudXNlU3RhdGUoZGVmYXVsdENvbnRhaW5lcklkKTtcblxuICAgIGNvbnN0IHRWID0gdXNlQXN5bmNNZW1vKGFzeW5jICgpID0+IHtcbiAgICAgIHJldHVybiB0eXBlSWQgPyAoYXdhaXQgZGVlcC5zZWxlY3QoeyB0eXBlX2lkOiBWLCBmcm9tX2lkOiArdHlwZUlkIH0pKT8uZGF0YT8uWzBdPy50b19pZCA6IHVuZGVmaW5lZDtcbiAgICB9LCBbdHlwZV0pO1xuICAgIGNvbnN0IHsgaXNWYWxpZCwgdmFsaWRhdGVkIH0gPSBSZWFjdC51c2VNZW1vKCgpID0+IHtcbiAgICAgIHRyeSB7XG4gICAgICAgIGlmICh0ViA9PT0gUykgcmV0dXJuIHsgdmFsaWRhdGVkOiB2YWx1ZSwgaXNWYWxpZDogdHJ1ZSB9O1xuICAgICAgICBpZiAodFYgPT09IE4pIHJldHVybiB7IHZhbGlkYXRlZDogK3ZhbHVlLCBpc1ZhbHVkOiB0eXBlb2YodmFsaWRhdGVkKSA9PT0gJ251bWJlcicgJiYgIU51bWJlci5pc05hTih2YWxpZGF0ZWQpIH07XG4gICAgICAgIGlmICh0ViA9PT0gTykgcmV0dXJuIHsgdmFsaWRhdGVkOiBKU09OLnBhcnNlKHZhbHVlKSwgaXNWYWxpZDogdHJ1ZSB9O1xuICAgICAgICBpZiAoIXRWKSByZXR1cm4geyB2YWxpZGF0ZWQ6IHZhbHVlLCBpc1ZhbGlkOiB0cnVlIH07XG4gICAgICB9IGNhdGNoKGUpIHt9XG4gICAgICByZXR1cm4geyB2YWxpZGF0ZWQ6IHZhbHVlLCBpc1ZhbGlkOiBmYWxzZSB9O1xuICAgIH0sIFt2YWx1ZSwgdFZdKTtcblxuICAgIGNvbnN0IEFsbG93QWRtaW4gPSB1c2VBc3luY01lbW88YW55Pihhc3luYyAoKSA9PiB7XG4gICAgICByZXR1cm4gYXdhaXQgZGVlcC5jYW4oZGVlcC5saW5rSWQsIGRlZXAubGlua0lkLCBkZWVwLmlkTG9jYWwoJ0BkZWVwLWZvdW5kYXRpb24vY29yZScsICdBbGxvd0FkbWluJykpO1xuICAgIH0sIFtdLCBmYWxzZSk7XG4gICAgY29uc3QgQWxsb3dJbnNlcnRUeXBlID0gdXNlQXN5bmNNZW1vPGFueT4oYXN5bmMgKCkgPT4ge1xuICAgICAgcmV0dXJuICF0eXBlSWQgPyBmYWxzZSA6IGF3YWl0IGRlZXAuY2FuKCt0eXBlSWQsIGRlZXAubGlua0lkLCBkZWVwLmlkTG9jYWwoJ0BkZWVwLWZvdW5kYXRpb24vY29yZScsICdBbGxvd0luc2VydFR5cGUnKSk7XG4gICAgfSwgW3R5cGVJZF0sIGZhbHNlKTtcbiAgICBjb25zdCBjYW4gPSBBbGxvd0luc2VydFR5cGUgfHwgQWxsb3dBZG1pbjtcbiAgICBcbiAgICBjb25zdCBpbnNlcnRRdWVyeSA9IHR5cGUgPyB7XG4gICAgICB0eXBlX2lkOiB0eXBlLmlkLFxuICAgICAgLi4uKGZyb21JZCAmJiB0b0lkID8geyBmcm9tX2lkOiArZnJvbUlkLCB0b19pZDogK3RvSWQgfSA6IHt9KSxcbiAgICAgIGNvbnRhaW5lcklkLFxuICAgICAgLi4uKG5hbWUgPyB7IG5hbWUgfSA6IHt9KSxcbiAgICAgIC4uLih0ViA9PSBTID8geyBzdHJpbmc6IHsgZGF0YTogeyB2YWx1ZTogdmFsaWRhdGVkIH0gfSB9IDogdFYgPT0gTiA/IHsgbnVtYmVyOiB7IGRhdGE6IHsgdmFsdWU6IHZhbGlkYXRlZCB9IH19IDogdFYgPT0gTyA/IHsgb2JqZWN0OiB7IGRhdGE6IHsgdmFsdWU6IHZhbGlkYXRlZCB9IH0gfSA6IHt9KSxcbiAgICB9IDoge307XG5cbiAgICBjb25zdCB2YWx1ZVR5cGUgPSBSZWFjdC51c2VNZW1vKCgpID0+IHR5cGU/Lm91dEJ5VHlwZVtWXT8uWzBdPy50b19pZCwgW3R5cGVdKTtcblxuICAgIGNvbnN0IGJ1dHRvbnMgPSA8PlxuICAgICAgPGMuU2xpZGVGYWRlIGluPXt0cnVlfSBvZmZzZXRYPSctMC41cmVtJyBzdHlsZT17e3Bvc2l0aW9uOiAnYWJzb2x1dGUnLCB0b3A6IDAsIHJpZ2h0OiAnLTRlbSd9fT5cbiAgICAgICAgPGMuQnV0dG9uXG4gICAgICAgICAgdz0nM2VtJyBoPSczZW0nXG4gICAgICAgICAgYm94U2hhZG93PSdkYXJrLWxnJ1xuICAgICAgICAgIHZhcmlhbnQ9e3VuZGVmaW5lZH1cbiAgICAgICAgICBvbkNsaWNrPXtkaXNjbG9zdXJlLm9uQ2xvc2V9XG4gICAgICAgID48QnNYIC8+PC9jLkJ1dHRvbj5cbiAgICAgIDwvYy5TbGlkZUZhZGU+XG4gICAgICA8Yy5TbGlkZUZhZGVcbiAgICAgICAgaW49eygoISFmcm9tSWQgJiYgISF0b0lkKSB8fCB0eXBlPy5pZCA9PT0gMSB8fCAoIXR5cGU/LmZyb21faWQgJiYgIXR5cGU/LnRvX2lkKSkgJiYgKGlzVmFsaWQgfHwgdmFsdWUgPT09ICcnKX1cbiAgICAgICAgb2Zmc2V0WD0nLTAuNXJlbScgc3R5bGU9e3twb3NpdGlvbjogJ2Fic29sdXRlJywgYm90dG9tOiAwLCByaWdodDogJy00ZW0nfX1cbiAgICAgID5cbiAgICAgICAgPGMuQnV0dG9uXG4gICAgICAgICAgdz0nM2VtJyBoPSczZW0nXG4gICAgICAgICAgYm94U2hhZG93PSdkYXJrLWxnJ1xuICAgICAgICAgIHZhcmlhbnQ9eydhY3RpdmUnfVxuICAgICAgICAgIG9uQ2xpY2s9e2FzeW5jICgpID0+IHtcbiAgICAgICAgICAgIGF3YWl0IGRlZXAuaW5zZXJ0KGluc2VydFF1ZXJ5KTtcbiAgICAgICAgICAgIGRpc2Nsb3N1cmUub25DbG9zZSgpO1xuICAgICAgICAgIH19XG4gICAgICAgID48QnNDaGVjazIgLz48L2MuQnV0dG9uPlxuICAgICAgPC9jLlNsaWRlRmFkZT5cbiAgICA8Lz47XG5cbiAgICBjb25zdCBhbGVydCA9IDw+XG4gICAgICA8Yy5BbGVydCBzdGF0dXM9e2NhbiA/ICdpbmZvJyA6ICdlcnJvcid9PlxuICAgICAgICA8Yy5BbGVydEljb24gLz5cbiAgICAgICAgPGMuQWxlcnRUaXRsZT5Zb3Uge2NhbiA/ICdjYW4nIDogJ2NhbmB0J30gZG8gaXQuPC9jLkFsZXJ0VGl0bGU+XG4gICAgICA8L2MuQWxlcnQ+XG4gICAgICA8Z28uRWRpdG9yXG4gICAgICAgIHZhbHVlPXtgYXdhaXQgZGVlcC5jYW4oZGVlcC5saW5rSWQsIGRlZXAubGlua0lkLCBkZWVwLmlkTG9jYWwoJ0BkZWVwLWZvdW5kYXRpb24vY29yZScsICdBbGxvd0FkbWluJykpXG4vLyAke0FsbG93QWRtaW59JHshIXR5cGVJZCA/IGBcbmF3YWl0IGRlZXAuY2FuKCR7dHlwZUlkfSwgZGVlcC5saW5rSWQsIGRlZXAuaWRMb2NhbCgnQGRlZXAtZm91bmRhdGlvbi9jb3JlJywgJ0FsbG93SW5zZXJ0VHlwZScpKVxuLy8gJHtBbGxvd0luc2VydFR5cGV9YCA6ICcnfWB9XG4gICAgICAgIGVkaXRhYmxlPXtmYWxzZX0gcmVhZE9ubHlcbiAgICAgIC8+XG4gICAgPC8+O1xuXG4gICAgcmV0dXJuIDxnby5PblxuICAgICAgZG89e3tcbiAgICAgIH19XG4gICAgPlxuICAgICAgPGMuTW9kYWxcbiAgICAgICAgcmVmPXtyZWZ9XG4gICAgICAgIGNsb3NlT25PdmVybGF5Q2xpY2sgYmxvY2tTY3JvbGxPbk1vdW50PXtmYWxzZX1cbiAgICAgICAgb25DbG9zZT17ZGlzY2xvc3VyZS5vbkNsb3NlfVxuICAgICAgICBpc09wZW49e2Rpc2Nsb3N1cmUuaXNPcGVufSBwb3J0YWxQcm9wcz17eyBjb250YWluZXJSZWY6IGdvLnJvb3QoKS5yZWYgfX1cbiAgICAgID5cbiAgICAgICAgPGMuTW9kYWxPdmVybGF5IC8+XG4gICAgICAgIDxjLk1vZGFsQ29udGVudCB3PSczMGVtJyBtYXhXPSczMGVtJyBwb3NpdGlvbj0ncmVsYXRpdmUnPlxuICAgICAgICAgIDxjLk1vZGFsSGVhZGVyPkxpbmsgaW5zZXJ0aW5nOjwvYy5Nb2RhbEhlYWRlcj5cbiAgICAgICAgICA8Yy5Nb2RhbEJvZHkgcD17MH0gdz0nMTAwJScgaD0nMTAwJSc+XG4gICAgICAgICAgICB7IWNhbiAmJiBhbGVydH1cbiAgICAgICAgICAgIDxnby5Db21wb25lbnQgcGF0aD17W2RwbCwgJ0ZpbmRlcklucHV0J119XG4gICAgICAgICAgICAgIGxlZnRJY29uPXs8VHlwZUljb24vPn1cbiAgICAgICAgICAgICAgdmFsdWU9e3R5cGVJZH1cbiAgICAgICAgICAgICAgb25DaGFuZ2U9e2lkID0+IHNldFR5cGVJZChpZCl9XG4gICAgICAgICAgICAvPlxuICAgICAgICAgICAgPGMuU2ltcGxlR3JpZCBjb2x1bW5zPXsyfT5cbiAgICAgICAgICAgICAgPGdvLkNvbXBvbmVudCBwYXRoPXtbZHBsLCAnRmluZGVySW5wdXQnXX1cbiAgICAgICAgICAgICAgICBsZWZ0SWNvbj17PEZyb21JY29uLz59XG4gICAgICAgICAgICAgICAgdmFsdWU9e2Zyb21JZH1cbiAgICAgICAgICAgICAgICBvbkNoYW5nZT17aWQgPT4gc2V0RnJvbUlkKGlkKX1cbiAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgPGdvLkNvbXBvbmVudCBwYXRoPXtbZHBsLCAnRmluZGVySW5wdXQnXX1cbiAgICAgICAgICAgICAgICBsZWZ0SWNvbj17PFRvSWNvbi8+fVxuICAgICAgICAgICAgICAgIHZhbHVlPXt0b0lkfVxuICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXtpZCA9PiBzZXRUb0lkKGlkKX1cbiAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIDwvYy5TaW1wbGVHcmlkPlxuICAgICAgICAgICAgPGMuU2ltcGxlR3JpZCBjb2x1bW5zPXsyfT5cbiAgICAgICAgICAgICAgPGdvLkNvbXBvbmVudCBwYXRoPXtbZHBsLCAnRmluZGVySW5wdXQnXX1cbiAgICAgICAgICAgICAgICBsZWZ0SWNvbj17PD7wn5eC77iPPC8+fVxuICAgICAgICAgICAgICAgIHZhbHVlPXtjb250YWluZXJJZH1cbiAgICAgICAgICAgICAgICBvbkNoYW5nZT17aWQgPT4gc2V0Q29udGFpbklkKGlkKX1cbiAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgPGMuSW5wdXRcbiAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcj0nbmFtZScgaD0nM2VtJ1xuICAgICAgICAgICAgICAgIHZhbHVlPXtuYW1lfVxuICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXtlID0+IHNldE5hbWUoZS50YXJnZXQudmFsdWUpfVxuICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgPC9jLlNpbXBsZUdyaWQ+XG4gICAgICAgICAgICB7ISF0eXBlICYmIDxjLkJveD5cbiAgICAgICAgICAgICAgeyF2YWx1ZVR5cGUgJiYgPD5cbiAgICAgICAgICAgICAgICA8Yy5BbGVydCBzdGF0dXM9J2luZm8nPlxuICAgICAgICAgICAgICAgICAgPGMuQWxlcnRJY29uLz5cbiAgICAgICAgICAgICAgICAgIDxjLkFsZXJ0VGl0bGU+dHlwZSB7K3R5cGV9IGNhbid0IGhhdmUgVmFsdWU8L2MuQWxlcnRUaXRsZT5cbiAgICAgICAgICAgICAgICA8L2MuQWxlcnQ+XG4gICAgICAgICAgICAgIDwvPn1cbiAgICAgICAgICAgICAge3ZhbHVlVHlwZSA9PT0gUyAmJiA8PlxuICAgICAgICAgICAgICAgIDxnby5FZGl0b3IgcGxhY2Vob2xkZXI9J1N0cmluZyB2YWx1ZScgdmFsdWU9e3ZhbHVlfSBvbkNoYW5nZT17c2V0VmFsdWV9Lz5cbiAgICAgICAgICAgICAgPC8+fVxuICAgICAgICAgICAgICB7dmFsdWVUeXBlID09PSBOICYmIDw+XG4gICAgICAgICAgICAgICAgPGMuSW5wdXRcbiAgICAgICAgICAgICAgICAgIHR5cGU9J3N0cmluZydcbiAgICAgICAgICAgICAgICAgIHZhbHVlPXt2YWx1ZX1cbiAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPSdOdW1iZXIgdmFsdWUnXG4gICAgICAgICAgICAgICAgICBvbkNoYW5nZT17ZSA9PiBzZXRWYWx1ZShlLnRhcmdldC52YWx1ZSl9XG4gICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgPC8+fVxuICAgICAgICAgICAgICB7dmFsdWVUeXBlID09PSBPICYmIDw+XG4gICAgICAgICAgICAgICAgPGdvLkVkaXRvciBwbGFjZWhvbGRlcj0nT2JqZWN0IHZhbHVlJyB2YWx1ZT17dmFsdWV9IG9uQ2hhbmdlPXtzZXRWYWx1ZX0vPlxuICAgICAgICAgICAgICA8Lz59XG4gICAgICAgICAgICAgIHsodFYgPT09IFMgfHwgdFYgPT09IE4gfHwgdFYgPT09IE8pICYmIDxjLlRhZ1xuICAgICAgICAgICAgICAgIHNpemU9J2xnJyBjb2xvclNjaGVtZT17dmFsdWUgPT09ICcnID8gJ2JsYWNrJyA6IGlzVmFsaWQgPyAnZGVlcEFjdGl2ZScgOiAnZGFuZ2VyJ30gdmFyaWFudD0nc29saWQnIGJvcmRlclJhZGl1cz0nZnVsbCdcbiAgICAgICAgICAgICAgICBwb3NpdGlvbj0nYWJzb2x1dGUnIGJvdHRvbT0nLTAuNWVtJyByaWdodD0nLTAuNWVtJ1xuICAgICAgICAgICAgICA+e3ZhbHVlID09PSAnJyA/ICdlbXB0eScgOiBpc1ZhbGlkID8gJ3ZhbGlkJyA6ICdpbnZhbGlkJ308L2MuVGFnPn1cbiAgICAgICAgICAgIDwvYy5Cb3g+fVxuICAgICAgICAgICAgPGMuRGl2aWRlciBtdD0nMWVtJyBtYj0nMWVtJy8+XG4gICAgICAgICAgICA8Z28uRWRpdG9yXG4gICAgICAgICAgICAgIHZhbHVlPXtgYXdhaXQgZGVlcC5pbnNlcnQoJHtKU09OLnN0cmluZ2lmeShpbnNlcnRRdWVyeSwgbnVsbCwgMil9KWB9XG4gICAgICAgICAgICAgIGVkaXRhYmxlPXtmYWxzZX0gcmVhZE9ubHlcbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgICB7ISFjYW4gJiYgYWxlcnR9XG4gICAgICAgICAgPC9jLk1vZGFsQm9keT5cbiAgICAgICAgICB7YnV0dG9uc31cbiAgICAgICAgPC9jLk1vZGFsQ29udGVudD5cbiAgICAgIDwvYy5Nb2RhbD5cbiAgICA8L2dvLk9uPjtcbiAgfTtcbn0iXX0=",
        "link_id": 16360
      }
    },
    {
      "id": 16361,
      "type_id": 3,
      "from_id": 16347,
      "to_id": 16360,
      "value": {
        "id": 1605,
        "value": "generated",
        "link_id": 16361
      }
    },
    {
      "id": 16362,
      "type_id": 143,
      "from_id": 16360,
      "to_id": 16347
    },
    {
      "id": 16363,
      "type_id": 3,
      "from_id": 16347,
      "to_id": 16362
    },
    {
      "id": 16441,
      "type_id": 717,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 1608,
        "value": "({ deep, data, require, Go }) => {\n  const React = require('react');\n  const { BsX, BsCheck2 } = require('react-icons/bs');\n  const c = require('@chakra-ui/react');\n\n  const { useAsyncMemo } = require('use-async-memo');\n\n  const dc = '@deep-foundation/core';\n  const V = deep.idLocal(dc, 'Value');\n\n  return ({ go, linkId, containerId, disclosure }, ref) => {\n    if (!disclosure) throw new Error('!disclosure');\n    if (!linkId) throw new Error('!linkId');\n\n    const link = React.useMemo(() => deep.get(linkId), [linkId]);\n    const [containment, setContainment] = React.useState('contains');\n    const [down, setDown] = React.useState(true);\n\n    const AllowAdmin = useAsyncMemo(async () => {\n      return await deep.can(deep.linkId, deep.linkId, deep.idLocal(dc, 'AllowAdmin'));\n    }, [], false);\n\n    const AllowDeleteType = useAsyncMemo(async () => {\n      return !link.type_id ? false : await deep.can(link.type_id, deep.linkId, deep.idLocal(dc, 'AllowDeleteType'));\n    }, [link.type_id], false);\n\n    const AllowDelete = useAsyncMemo(async () => {\n      return !linkId ? false : await deep.can(linkId, deep.linkId, deep.idLocal(dc, 'AllowDelete'));\n    }, [linkId], false);\n\n    const can = AllowAdmin || AllowDeleteType || AllowDelete;\n\n    const deleteQuery = {\n      _or: [\n        (down ? {\n          up: {\n            tree_id: deep.idLocal(dc, 'containTree'),\n            parent_id: link.id,\n          }\n        } : {\n          id: link.id,\n        }),\n        ...(containment === 'contains' ? [{\n          type_id: deep.idLocal(dc, 'Contain'),\n          to_id: link.id,\n        }] : containment === 'container' ? [{\n          type_id: deep.idLocal(dc, 'Contain'),\n          from_id: containerId,\n          to_id: link.id,\n        }] : []),\n      ],\n    };\n\n    const { data: countDown } = deep.useQuery({\n      up: {\n        tree_id: deep.idLocal(dc, 'containTree'),\n        parent_id: link.id,\n      }\n    }, {\n      skip: !disclosure.isOpen,\n      aggregate: 'count',\n    });\n\n    const { data: countInContains } = deep.useQuery({\n      to_id: link.id,\n      type_id: deep.idLocal(dc, 'Contain'),\n    }, {\n      skip: !disclosure.isOpen,\n      aggregate: 'count'\n    });\n\n    const buttons = (\n      <>\n        <c.SlideFade in={true} offsetX='-0.5rem' style={{ position: 'absolute', top: 0, right: '-4em' }}>\n          <c.Button w='3em' h='3em' boxShadow='dark-lg' onClick={disclosure.onClose}>\n            <BsX />\n          </c.Button>\n        </c.SlideFade>\n        <c.SlideFade in={true} offsetX='-0.5rem' style={{ position: 'absolute', bottom: 0, right: '-4em' }}>\n          <c.Button w='3em' h='3em' boxShadow='dark-lg' variant='active' onClick={async () => {\n            await deep.delete(deleteQuery);\n            disclosure.onClose();\n          }}>\n            <BsCheck2 />\n          </c.Button>\n        </c.SlideFade>\n      </>\n    );\n    \n    const alert = (\n      <React.Fragment>\n        <c.Alert status={can ? 'info' : 'error'}>\n          <c.AlertIcon />\n          <c.AlertTitle>\n            You {can ? 'can' : \"can't\"} do it.\n          </c.AlertTitle>\n        </c.Alert>\n        <go.Editor\n          value={`await deep.can(deep.linkId, deep.linkId, deep.idLocal('@deep-foundation/core', 'AllowAdmin'))\n// ${AllowAdmin}\nawait deep.can(${link.type_id}, deep.linkId, deep.idLocal('@deep-foundation/core', 'AllowDeleteType'))\n// ${AllowDeleteType}\nawait deep.can(${link.id}, deep.linkId, deep.idLocal('@deep-foundation/core', 'AllowDelete'))\n// ${AllowDelete}`}\n          editable={false}\n          readOnly\n        />\n      </React.Fragment>\n    );\n    \n    return (\n      <go.On do={{}}>\n        <c.Modal\n          ref={ref}\n          closeOnOverlayClick\n          blockScrollOnMount={false}\n          onClose={disclosure.onClose}\n          isOpen={disclosure.isOpen}\n          portalProps={{\n            containerRef: go.root().ref\n          }}\n        >\n          <c.ModalOverlay />\n          <c.ModalContent w='30em' maxW='30em' position='relative'>\n            <c.ModalHeader>\n              Link deleting: {`${link}`}\n            </c.ModalHeader>\n            <c.ModalBody p={0} w='100%' h='100%'>\n              {alert}\n              <c.Box p='1em'>\n                <c.Checkbox\n                  size='lg'\n                  checked={down}\n                  onChange={() => setDown(!down)}\n                >\n                  Delete all contained in links? Total: ({countDown})\n                </c.Checkbox>\n              </c.Box>\n              <c.Box p='1em'>\n                Need to delete contains to this link?\n              </c.Box>\n              <c.Box>\n                <c.SimpleGrid columns={3}>\n                  <c.Button\n                    variant={containment === 'contains' ? 'active' : undefined}\n                    onClick={() => setContainment('contains')}\n                  >\n                    <c.Box>\n                      <c.Box>all in</c.Box>\n                      <c.Box fontSize='xs'>\n                        contains: ({countInContains})\n                      </c.Box>\n                    </c.Box>\n                  </c.Button>\n                  {!!containerId && (\n                    <c.Button\n                      variant={containment === 'container' ? 'active' : undefined}\n                      onClick={() => setContainment('container')}\n                    >\n                      <c.Box>\n                        <c.Box>only one</c.Box>\n                        <c.Box fontSize='xs'>\n                          from {containerId}\n                        </c.Box>\n                      </c.Box>\n                    </c.Button>\n                  )}\n                  <c.Button\n                    variant={containment === 'only' ? 'active' : undefined}\n                    onClick={() => setContainment('only')}\n                  >\n                    <c.Box>\n                      <c.Box>not need</c.Box>\n                      <c.Box fontSize='xs'>\n                        to delete contains\n                      </c.Box>\n                    </c.Box>\n                  </c.Button>\n                </c.SimpleGrid>\n              </c.Box>\n              <go.Editor\n                value={`await deep.delete(${JSON.stringify(deleteQuery, null, 2)})`}\n                editable={false}\n                readOnly\n              />\n            </c.ModalBody>\n            {buttons}\n          </c.ModalContent>\n        </c.Modal>\n      </go.On>\n    );\n  };\n};",
        "link_id": 16441
      }
    },
    {
      "id": 16442,
      "type_id": 3,
      "from_id": 2586,
      "to_id": 16441,
      "value": {
        "id": 1607,
        "value": "LinkDeleteModalComponent",
        "link_id": 16442
      }
    },
    {
      "id": 16445,
      "type_id": 35,
      "from_id": 145,
      "to_id": 16441
    },
    {
      "id": 16446,
      "type_id": 3,
      "from_id": 2586,
      "to_id": 16445,
      "value": {
        "id": 1609,
        "value": "LinkDeleteModal",
        "link_id": 16446
      }
    },
    {
      "id": 17040,
      "type_id": 30,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 1649,
        "value": "({ deep, data, require, Go }) => {\n    const React = require('react');\n    const c = require('@chakra-ui/react');\n    return ({ go, id, ...props }, ref) => {\n        const { cy } = go.useGraph();\n        const data = { id: `${id}`, label: `${id}` };\n        const classes = ['link-ghost'];\n        return React.createElement(go.GraphNode, { ghost: true, element: {\n                data, classes,\n            }, ...props });\n    };\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsibW9kdWxlLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxDQUFDLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRTtJQUM5QixNQUFNLEtBQUssR0FBRyxPQUFPLENBQUMsT0FBTyxDQUFDLENBQUM7SUFFL0IsTUFBTSxDQUFDLEdBQUcsT0FBTyxDQUFDLGtCQUFrQixDQUFDLENBQUM7SUFFdEMsT0FBTyxDQUFDLEVBQ04sRUFBRSxFQUNGLEVBQUUsRUFFRixHQUFHLEtBQUssRUFDVCxFQUFFLEdBQUcsRUFBRSxFQUFFO1FBQ1IsTUFBTSxFQUFFLEVBQUUsRUFBRSxHQUFHLEVBQUUsQ0FBQyxRQUFRLEVBQUUsQ0FBQztRQUM3QixNQUFNLElBQUksR0FBRyxFQUFFLEVBQUUsRUFBRSxHQUFHLEVBQUUsRUFBRSxFQUFFLEtBQUssRUFBRSxHQUFHLEVBQUUsRUFBRSxFQUFFLENBQUM7UUFDN0MsTUFBTSxPQUFPLEdBQUcsQ0FBQyxZQUFZLENBQUMsQ0FBQztRQUMvQixPQUFPLG9CQUFDLEVBQUUsQ0FBQyxTQUFTLElBQ2xCLEtBQUssUUFDTCxPQUFPLEVBQUU7Z0JBQ1AsSUFBSSxFQUFFLE9BQU87YUFDZCxLQUNHLEtBQUssR0FDVCxDQUFDO0lBQ0wsQ0FBQyxDQUFDO0FBQ0osQ0FBQyxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiKHsgZGVlcCwgZGF0YSwgcmVxdWlyZSwgR28gfSkgPT4ge1xuICBjb25zdCBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XG4gIFxuICBjb25zdCBjID0gcmVxdWlyZSgnQGNoYWtyYS11aS9yZWFjdCcpO1xuXG4gIHJldHVybiAoe1xuICAgIGdvLFxuICAgIGlkLFxuXG4gICAgLi4ucHJvcHNcbiAgfSwgcmVmKSA9PiB7XG4gICAgY29uc3QgeyBjeSB9ID0gZ28udXNlR3JhcGgoKTtcbiAgICBjb25zdCBkYXRhID0geyBpZDogYCR7aWR9YCwgbGFiZWw6IGAke2lkfWAgfTtcbiAgICBjb25zdCBjbGFzc2VzID0gWydsaW5rLWdob3N0J107XG4gICAgcmV0dXJuIDxnby5HcmFwaE5vZGVcbiAgICAgIGdob3N0XG4gICAgICBlbGVtZW50PXt7XG4gICAgICAgIGRhdGEsIGNsYXNzZXMsXG4gICAgICB9fVxuICAgICAgey4uLnByb3BzfVxuICAgIC8+O1xuICB9O1xufSJdfQ==",
        "link_id": 17040
      }
    },
    {
      "id": 17041,
      "type_id": 3,
      "from_id": 17034,
      "to_id": 17040,
      "value": {
        "id": 1648,
        "value": "generated",
        "link_id": 17041
      }
    },
    {
      "id": 17042,
      "type_id": 143,
      "from_id": 17040,
      "to_id": 17034
    },
    {
      "id": 17043,
      "type_id": 3,
      "from_id": 17034,
      "to_id": 17042
    },
    {
      "id": 16008,
      "type_id": 30,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 1579,
        "value": "async ({ deep, data, Go, require }) => {\n    const React = require('react');\n    const c = require('@chakra-ui/react');\n    const dpl = '@deep-foundation/perception-links';\n    const GraphLinkPlanet = await deep.id(dpl, 'GraphLinkPlanet');\n    return ({ go, isActive, position, locked = false, children, }, ref) => {\n        const { cy } = go.useGraph();\n        const $inouts = cy.$(`.link-type[target=\"${go.linkId}\"],.link-from[target=\"${go.linkId}\"],.link-to[target=\"${go.linkId}\"]`);\n        const inouts = $inouts.map((e) => {\n            return { id: e.id(), linkId: e.data().linkId };\n        });\n        const nav = go.useNav();\n        nav('current', go?.link?.from_id ? 'from_id' : 'current', 'type_id', go?.link?.to_id ? 'to_id' : 'current', inouts?.length ? 'inout' : 'current');\n        nav('from_id', 'from', 'from_id', 'current', 'from_id');\n        nav('to_id', 'current', 'to_id', 'to', 'to_id');\n        nav('type_id', 'type_id', 'type', 'type_id', 'current');\n        const [inoutId, setInoutId] = React.useState();\n        nav('inout', 'inout', 'current', 'inout', 'inouted');\n        React.useEffect(() => {\n            $inouts.removeClass('link-edge-active');\n            if (go.value === 'inout' && inoutId)\n                cy.$id(inoutId).addClass('link-edge-active');\n        }, [go.value, inoutId]);\n        React.useEffect(() => {\n            if (!isActive)\n                go.set('current');\n        }, [isActive]);\n        return React.createElement(go.On, { do: {\n                exec: (g, v, o) => {\n                    if (!go.value || go.value === 'current')\n                        go.focus(GraphLinkPlanet);\n                    if (go.value === GraphLinkPlanet)\n                        go.focus('current');\n                },\n                focus: (g, v, o) => { },\n                use: (g, v, o) => { },\n                position: (g, v, o) => { },\n                scroll: (g, v, o) => {\n                    console.log(ref);\n                    cy.center(ref.current);\n                },\n                ...(go.value === 'inout') ? {\n                    left: (g, v, o) => {\n                        if (o?.hotkeyEvent?.meta || o?.hotkeyEvent?.shift || o?.hotkeyEvent?.ctrl || o?.hotkeyEvent?.alt) {\n                            setInoutId(inouts?.[0]);\n                        }\n                        else\n                            setInoutId(go.prev(inouts, inoutId));\n                    },\n                    right: (g, v, o) => {\n                        if (o?.hotkeyEvent?.meta || o?.hotkeyEvent?.shift || o?.hotkeyEvent?.ctrl || o?.hotkeyEvent?.alt) {\n                            setInoutId(inouts?.[inouts.length - 1]?.id);\n                        }\n                        else\n                            setInoutId(go.next(inouts, inoutId));\n                    },\n                } : {\n                    left: (g, v, o) => {\n                        go.focus(nav.get(go.value || 'current', 'left'), { prev: go.value });\n                    },\n                    right: (g, v, o) => {\n                        go.focus(nav.get(go.value || 'current', 'right'), { prev: go.value });\n                    },\n                },\n                up: (g, v, o) => go.focus(nav.get(go.value || 'current', 'up'), { prev: go.value }),\n                down: (g, v, o) => go.focus(nav.get(go.value || 'current', 'down'), { prev: go.value }),\n            }, focus: {\n                type: (g, v, o) => go.set().go.go.do('open', { id: go.link.type_id, focus: true }),\n                from: (g, v, o) => go.set().go.go.do('open', { id: go.link.from_id, focus: true }),\n                to: (g, v, o) => go.set().go.go.do('open', { id: go.link.to_id, focus: true }),\n                inout: (g, v, o) => setInoutId(inouts?.[0]?.id),\n                inouted: (g, v, o) => {\n                    setInoutId();\n                    go.set().go.go.focus(cy.$id(inoutId)?.data()?.linkId);\n                }\n            } },\n            React.createElement(go.GraphNode, { element: {\n                    data: { id: `${go.link.id}-children` },\n                    classes: ['link-children'],\n                } },\n                React.createElement(go.GraphNode, { ref: ref, element: {\n                        data: { id: go.link.id, label: `${go.linkId}: ${go.link.name !== go.linkId ? go.link.name : ''}\n  (${go.link.type_id}: ${go.link.type?.name !== go.link.type_id ? go.link.type?.name : ''})\n  \n  ${go.link.symbol}` },\n                        classes: ['link-node', ...(isActive ? ['link-node-active'] : [])],\n                    }, onClick: (e) => {\n                        go.go.focus(go.linkId);\n                        go.do('exec');\n                    } },\n                    React.createElement(c.Box, { w: '0', h: '0', position: 'relative', ref: go.ref },\n                        React.createElement(go.Provider, { linkId: GraphLinkPlanet },\n                            React.createElement(go.Component, { path: [dpl, 'GraphLinkPlanet'], linkId: go.linkId, isActive: isActive && go.value === GraphLinkPlanet })))),\n                !!go.link.type_id && React.createElement(go.GraphEdge, { element: {\n                        data: { id: `${go.link.id}-type`, source: `${go.link.id}`, target: `${go.link.type_id}` },\n                        classes: ['link-edge', 'link-type', ...(go.value === 'type_id' ? ['link-edge-active'] : [])],\n                    } }),\n                !!go.link.from_id && React.createElement(go.GraphEdge, { element: {\n                        data: { id: `${go.link.id}-from`, source: `${go.link.id}`, target: `${go.link.from_id}` },\n                        classes: ['link-edge', 'link-from', ...(go.value === 'from_id' ? ['link-edge-active'] : [])],\n                    } }),\n                !!go.link.to_id && React.createElement(go.GraphEdge, { element: {\n                        data: { id: `${go.link.id}-to`, source: `${go.link.id}`, target: `${go.link.to_id}` },\n                        classes: ['link-edge', 'link-to', ...(go.value === 'to_id' ? ['link-edge-active'] : [])],\n                    } }),\n                children));\n    };\n};\n//# sourceMappingURL=data:application/json;base64,",
        "link_id": 16008
      }
    },
    {
      "id": 16009,
      "type_id": 3,
      "from_id": 5813,
      "to_id": 16008,
      "value": {
        "id": 1578,
        "value": "generated",
        "link_id": 16009
      }
    },
    {
      "id": 16010,
      "type_id": 143,
      "from_id": 16008,
      "to_id": 5813
    },
    {
      "id": 16011,
      "type_id": 3,
      "from_id": 5813,
      "to_id": 16010
    },
    {
      "id": 16347,
      "type_id": 717,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 1601,
        "value": "({ deep, data, require, Go }) => {\n  const React = require('react');\n  const { BsX, BsCheck2, BsXLg, BsDatabase, BsRegex } = require('react-icons/bs');\n\n  const {\n    TypedIcon, DownIcon, UpIcon, TypeIcon, InIcon, OutIcon, FromIcon, ToIcon,\n  } = require('@deep-foundation/perception-app');\n\n  const { useAsyncMemo } = require('use-async-memo');\n  \n  const c = require('@chakra-ui/react');\n\n  const dc = '@deep-foundation/core';\n  const dpl = '@deep-foundation/perception-links';\n\n  const V = deep.idLocal(dc, 'Value');\n  const S = deep.idLocal(dc, 'String');\n  const N = deep.idLocal(dc, 'Number');\n  const O = deep.idLocal(dc, 'Object');\n\n  return ({\n    go,\n\n    defaultContainerId,\n    defaultTypeId,\n    defaultFromId,\n    defaultToId,\n\n    disclosure,\n  }, ref) => {\n    if (!disclosure) throw new Error('!disclosure');\n\n    const [typeId, setTypeId] = React.useState(defaultTypeId);\n    const [fromId, setFromId] = React.useState(defaultFromId);\n    const [toId, setToId] = React.useState(defaultToId);\n    const type = React.useMemo(() => typeId ? deep.get(+typeId) : null, [typeId]);\n    const from = React.useMemo(() => fromId ? deep.get(+fromId) : null, [fromId]);\n    const to = React.useMemo(() => toId ? deep.get(+toId) : null, [toId]);\n\n    const [value, setValue] = React.useState();\n    const [name, setName] = React.useState('');\n    const [containerId, setContainerId] = React.useState(defaultContainerId);\n\n    const tV = useAsyncMemo(async () => {\n      return typeId ? (await deep.select({ type_id: V, from_id: +typeId }))?.data?.[0]?.to_id : undefined;\n    }, [type]);\n    const { isValid, validated } = React.useMemo(() => {\n      try {\n        if (tV === S) return { validated: value, isValid: true };\n        if (tV === N) return { validated: +value, isValud: typeof(validated) === 'number' && !Number.isNaN(validated) };\n        if (tV === O) return { validated: JSON.parse(value), isValid: true };\n        if (!tV) return { validated: value, isValid: true };\n      } catch(e) {}\n      return { validated: value, isValid: false };\n    }, [value, tV]);\n\n    const AllowAdmin = useAsyncMemo<any>(async () => {\n      return await deep.can(deep.linkId, deep.linkId, deep.idLocal('@deep-foundation/core', 'AllowAdmin'));\n    }, [], false);\n    const AllowInsertType = useAsyncMemo<any>(async () => {\n      return !typeId ? false : await deep.can(+typeId, deep.linkId, deep.idLocal('@deep-foundation/core', 'AllowInsertType'));\n    }, [typeId], false);\n    const can = AllowInsertType || AllowAdmin;\n    \n    const insertQuery = type ? {\n      type_id: type.id,\n      ...(fromId && toId ? { from_id: +fromId, to_id: +toId } : {}),\n      containerId,\n      ...(name ? { name } : {}),\n      ...(tV == S ? { string: { data: { value: validated } } } : tV == N ? { number: { data: { value: validated } }} : tV == O ? { object: { data: { value: validated } } } : {}),\n    } : {};\n\n    const valueType = React.useMemo(() => type?.outByType[V]?.[0]?.to_id, [type]);\n\n    const buttons = <>\n      <c.SlideFade in={true} offsetX='-0.5rem' style={{position: 'absolute', top: 0, right: '-4em'}}>\n        <c.Button\n          w='3em' h='3em'\n          boxShadow='dark-lg'\n          variant={undefined}\n          onClick={disclosure.onClose}\n        ><BsX /></c.Button>\n      </c.SlideFade>\n      <c.SlideFade\n        in={((!!fromId && !!toId) || type?.id === 1 || (!type?.from_id && !type?.to_id)) && (isValid || value === '')}\n        offsetX='-0.5rem' style={{position: 'absolute', bottom: 0, right: '-4em'}}\n      >\n        <c.Button\n          w='3em' h='3em'\n          boxShadow='dark-lg'\n          variant={'active'}\n          onClick={async () => {\n            await deep.insert(insertQuery);\n            disclosure.onClose();\n          }}\n        ><BsCheck2 /></c.Button>\n      </c.SlideFade>\n    </>;\n\n    const alert = <>\n      <c.Alert status={can ? 'info' : 'error'}>\n        <c.AlertIcon />\n        <c.AlertTitle>You {can ? 'can' : 'can`t'} do it.</c.AlertTitle>\n      </c.Alert>\n      <go.Editor\n        value={`await deep.can(deep.linkId, deep.linkId, deep.idLocal('@deep-foundation/core', 'AllowAdmin'))\n// ${AllowAdmin}${!!typeId ? `\nawait deep.can(${typeId}, deep.linkId, deep.idLocal('@deep-foundation/core', 'AllowInsertType'))\n// ${AllowInsertType}` : ''}`}\n        editable={false} readOnly\n      />\n    </>;\n\n    return <go.On\n      do={{\n      }}\n    >\n      <c.Modal\n        ref={ref}\n        closeOnOverlayClick blockScrollOnMount={false}\n        onClose={disclosure.onClose}\n        isOpen={disclosure.isOpen} portalProps={{ containerRef: go.root().ref }}\n      >\n        <c.ModalOverlay />\n        <c.ModalContent w='30em' maxW='30em' position='relative'>\n          <c.ModalHeader>Link inserting:</c.ModalHeader>\n          <c.ModalBody p={0} w='100%' h='100%'>\n            {!can && alert}\n            <go.Component path={[dpl, 'FinderInput']}\n              leftIcon={<TypeIcon/>}\n              value={typeId}\n              onChange={id => setTypeId(id)}\n            />\n            <c.SimpleGrid columns={2}>\n              <go.Component path={[dpl, 'FinderInput']}\n                leftIcon={<FromIcon/>}\n                value={fromId}\n                onChange={id => setFromId(id)}\n              />\n              <go.Component path={[dpl, 'FinderInput']}\n                leftIcon={<ToIcon/>}\n                value={toId}\n                onChange={id => setToId(id)}\n              />\n            </c.SimpleGrid>\n            <c.SimpleGrid columns={2}>\n              <go.Component path={[dpl, 'FinderInput']}\n                leftIcon={<>🗂️</>}\n                value={containerId}\n                onChange={id => setContainId(id)}\n              />\n              <c.Input\n                placeholder='name' h='3em'\n                value={name}\n                onChange={e => setName(e.target.value)}\n              />\n            </c.SimpleGrid>\n            {!!type && <c.Box>\n              {!valueType && <>\n                <c.Alert status='info'>\n                  <c.AlertIcon/>\n                  <c.AlertTitle>type {+type} can't have Value</c.AlertTitle>\n                </c.Alert>\n              </>}\n              {valueType === S && <>\n                <go.Editor placeholder='String value' value={value} onChange={setValue}/>\n              </>}\n              {valueType === N && <>\n                <c.Input\n                  type='string'\n                  value={value}\n                  placeholder='Number value'\n                  onChange={e => setValue(e.target.value)}\n                />\n              </>}\n              {valueType === O && <>\n                <go.Editor placeholder='Object value' value={value} onChange={setValue}/>\n              </>}\n              {(tV === S || tV === N || tV === O) && <c.Tag\n                size='lg' colorScheme={value === '' ? 'black' : isValid ? 'deepActive' : 'danger'} variant='solid' borderRadius='full'\n                position='absolute' bottom='-0.5em' right='-0.5em'\n              >{value === '' ? 'empty' : isValid ? 'valid' : 'invalid'}</c.Tag>}\n            </c.Box>}\n            <c.Divider mt='1em' mb='1em'/>\n            <go.Editor\n              value={`await deep.insert(${JSON.stringify(insertQuery, null, 2)})`}\n              editable={false} readOnly\n            />\n            {!!can && alert}\n          </c.ModalBody>\n          {buttons}\n        </c.ModalContent>\n      </c.Modal>\n    </go.On>;\n  };\n}",
        "link_id": 16347
      }
    },
    {
      "id": 16348,
      "type_id": 3,
      "from_id": 2586,
      "to_id": 16347,
      "value": {
        "id": 1600,
        "value": "LinkInsertModalComponent",
        "link_id": 16348
      }
    },
    {
      "id": 16351,
      "type_id": 35,
      "from_id": 145,
      "to_id": 16347
    },
    {
      "id": 16352,
      "type_id": 3,
      "from_id": 2586,
      "to_id": 16351,
      "value": {
        "id": 1602,
        "value": "LinkInsertModal",
        "link_id": 16352
      }
    },
    {
      "id": 16541,
      "type_id": 30,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 1633,
        "value": "({ deep, data, require, Go }) => {\n    const { BsX, BsCheck2All } = require(\"react-icons/bs\");\n    const React = require('react');\n    const c = require('@chakra-ui/react');\n    const dc = '@deep-foundation/core';\n    const dpl = '@deep-foundation/perception-links';\n    const Query = deep.idLocal(dc, 'Query');\n    const Contain = deep.idLocal(dc, 'Contain');\n    const FinderQuery = deep.idLocal(dpl, 'FinderQuery');\n    const Tree = deep.idLocal(dpl, 'Tree');\n    const Search = deep.idLocal(dpl, 'Search');\n    return ({ go, initialId = deep.linkId, initialHandlerId, startProps = {}, isActive, onSubmit, disclosure: __disclosure, }, ref) => {\n        const _disclosure = c.useDisclosure();\n        const disclosure = __disclosure || _disclosure;\n        const [selectedId, setSelectedId] = React.useState();\n        const [queryId, setQueryId] = React.useState();\n        const buttons = React.createElement(React.Fragment, null,\n            React.createElement(c.SlideFade, { in: true, offsetX: '-0.5rem', style: { position: 'absolute', top: 0, right: '-4em' } },\n                React.createElement(c.Button, { w: '3em', h: '3em', boxShadow: 'dark-lg', variant: undefined, onClick: disclosure.onClose },\n                    React.createElement(BsX, null))),\n            React.createElement(c.Box, { position: 'absolute', right: '0', bottom: '-4em' }, !!selectedId && React.createElement(c.Button, { h: '3em', rightIcon: React.createElement(BsCheck2All, null), onClick: () => {\n                    onSubmit && onSubmit(selectedId);\n                } }, `${deep.get(selectedId)}`)));\n        return React.createElement(go.On, { do: {\n                changed: (g, v, o) => o?.id && setSelectedId(o.id),\n            } },\n            React.createElement(c.Modal, { ref: disclosure.isOpen ? ref : null, closeOnOverlayClick: true, blockScrollOnMount: false, onClose: () => {\n                    disclosure.onClose();\n                    go.focus();\n                }, isOpen: disclosure.isOpen, portalProps: { containerRef: go.root().ref } },\n                React.createElement(c.ModalOverlay, null),\n                React.createElement(c.ModalContent, { w: '30em', maxW: '30em', h: '80vh', position: 'relative' },\n                    React.createElement(c.ModalHeader, null, \"Finder\"),\n                    React.createElement(c.ModalBody, { p: 0, w: '100%', h: '100%' },\n                        React.createElement(go.Provider, { linkId: Tree }, !!disclosure.isOpen && React.createElement(go.Handler, { initialId: initialId, initialHandlerId: initialHandlerId, startProps: startProps, handlerId: Tree, fullWidth: '30em', flex: '1', saveHistory: false, using: false }))),\n                    buttons)));\n    };\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsibW9kdWxlLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxDQUFDLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRTtJQUM5QixNQUFNLEVBQUUsR0FBRyxFQUFFLFdBQVcsRUFBRSxHQUFHLE9BQU8sQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO0lBQ3ZELE1BQU0sS0FBSyxHQUFHLE9BQU8sQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUUvQixNQUFNLENBQUMsR0FBRyxPQUFPLENBQUMsa0JBQWtCLENBQUMsQ0FBQztJQUV0QyxNQUFNLEVBQUUsR0FBRyx1QkFBdUIsQ0FBQztJQUNuQyxNQUFNLEdBQUcsR0FBRyxtQ0FBbUMsQ0FBQztJQUVoRCxNQUFNLEtBQUssR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLEVBQUUsRUFBRSxPQUFPLENBQUMsQ0FBQztJQUN4QyxNQUFNLE9BQU8sR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLEVBQUUsRUFBRSxTQUFTLENBQUMsQ0FBQztJQUM1QyxNQUFNLFdBQVcsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxhQUFhLENBQUMsQ0FBQztJQUNyRCxNQUFNLElBQUksR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxNQUFNLENBQUMsQ0FBQztJQUN2QyxNQUFNLE1BQU0sR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxRQUFRLENBQUMsQ0FBQztJQUUzQyxPQUFPLENBQUMsRUFDTixFQUFFLEVBRUYsU0FBUyxHQUFHLElBQUksQ0FBQyxNQUFNLEVBQ3ZCLGdCQUFnQixFQUNoQixVQUFVLEdBQUcsRUFBRSxFQUNmLFFBQVEsRUFDUixRQUFRLEVBQ1IsVUFBVSxFQUFFLFlBQVksR0FDekIsRUFBRSxHQUFHLEVBQUUsRUFBRTtRQUNSLE1BQU0sV0FBVyxHQUFHLENBQUMsQ0FBQyxhQUFhLEVBQUUsQ0FBQztRQUN0QyxNQUFNLFVBQVUsR0FBRyxZQUFZLElBQUksV0FBVyxDQUFDO1FBRS9DLE1BQU0sQ0FBQyxVQUFVLEVBQUUsYUFBYSxDQUFDLEdBQUcsS0FBSyxDQUFDLFFBQVEsRUFBRSxDQUFDO1FBQ3JELE1BQU0sQ0FBQyxPQUFPLEVBQUUsVUFBVSxDQUFDLEdBQUcsS0FBSyxDQUFDLFFBQVEsRUFBRSxDQUFDO1FBRS9DLE1BQU0sT0FBTyxHQUFHO1lBQ2Qsb0JBQUMsQ0FBQyxDQUFDLFNBQVMsSUFBQyxFQUFFLEVBQUUsSUFBSSxFQUFFLE9BQU8sRUFBQyxTQUFTLEVBQUMsS0FBSyxFQUFFLEVBQUMsUUFBUSxFQUFFLFVBQVUsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUM7Z0JBQzNGLG9CQUFDLENBQUMsQ0FBQyxNQUFNLElBQ1AsQ0FBQyxFQUFDLEtBQUssRUFBQyxDQUFDLEVBQUMsS0FBSyxFQUNmLFNBQVMsRUFBQyxTQUFTLEVBQ25CLE9BQU8sRUFBRSxTQUFTLEVBQ2xCLE9BQU8sRUFBRSxVQUFVLENBQUMsT0FBTztvQkFDNUIsb0JBQUMsR0FBRyxPQUFHLENBQVcsQ0FDUDtZQUNkLG9CQUFDLENBQUMsQ0FBQyxHQUFHLElBQUMsUUFBUSxFQUFDLFVBQVUsRUFBQyxLQUFLLEVBQUMsR0FBRyxFQUFDLE1BQU0sRUFBQyxNQUFNLElBQy9DLENBQUMsQ0FBQyxVQUFVLElBQUksb0JBQUMsQ0FBQyxDQUFDLE1BQU0sSUFDeEIsQ0FBQyxFQUFDLEtBQUssRUFBQyxTQUFTLEVBQUUsb0JBQUMsV0FBVyxPQUFHLEVBQ2xDLE9BQU8sRUFBRSxHQUFHLEVBQUU7b0JBQ1osUUFBUSxJQUFJLFFBQVEsQ0FBQyxVQUFVLENBQUMsQ0FBQztnQkFDbkMsQ0FBQyxJQUNELEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxVQUFVLENBQUMsRUFBRSxDQUFZLENBQ2pDLENBQ1AsQ0FBQztRQUVKLE9BQU8sb0JBQUMsRUFBRSxDQUFDLEVBQUUsSUFDWCxFQUFFLEVBQUU7Z0JBQ0YsT0FBTyxFQUFFLENBQUMsQ0FBQyxFQUFDLENBQUMsRUFBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsRUFBRSxFQUFFLElBQUksYUFBYSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUM7YUFDakQ7WUFFRCxvQkFBQyxDQUFDLENBQUMsS0FBSyxJQUNOLEdBQUcsRUFBRSxVQUFVLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLElBQUksRUFDbkMsbUJBQW1CLFFBQUMsa0JBQWtCLEVBQUUsS0FBSyxFQUM3QyxPQUFPLEVBQUUsR0FBRyxFQUFFO29CQUNaLFVBQVUsQ0FBQyxPQUFPLEVBQUUsQ0FBQztvQkFDckIsRUFBRSxDQUFDLEtBQUssRUFBRSxDQUFDO2dCQUNiLENBQUMsRUFDRCxNQUFNLEVBQUUsVUFBVSxDQUFDLE1BQU0sRUFBRSxXQUFXLEVBQUUsRUFBRSxZQUFZLEVBQUUsRUFBRSxDQUFDLElBQUksRUFBRSxDQUFDLEdBQUcsRUFBRTtnQkFFdkUsb0JBQUMsQ0FBQyxDQUFDLFlBQVksT0FBRztnQkFDbEIsb0JBQUMsQ0FBQyxDQUFDLFlBQVksSUFBQyxDQUFDLEVBQUMsTUFBTSxFQUFDLElBQUksRUFBQyxNQUFNLEVBQUMsQ0FBQyxFQUFDLE1BQU0sRUFBQyxRQUFRLEVBQUMsVUFBVTtvQkFDL0Qsb0JBQUMsQ0FBQyxDQUFDLFdBQVcsaUJBQXVCO29CQUlyQyxvQkFBQyxDQUFDLENBQUMsU0FBUyxJQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFDLE1BQU0sRUFBQyxDQUFDLEVBQUMsTUFBTTt3QkFDbEMsb0JBQUMsRUFBRSxDQUFDLFFBQVEsSUFBQyxNQUFNLEVBQUUsSUFBSSxJQUN0QixDQUFDLENBQUMsVUFBVSxDQUFDLE1BQU0sSUFBSSxvQkFBQyxFQUFFLENBQUMsT0FBTyxJQUNqQyxTQUFTLEVBQUUsU0FBUyxFQUNwQixnQkFBZ0IsRUFBRSxnQkFBZ0IsRUFDbEMsVUFBVSxFQUFFLFVBQVUsRUFDdEIsU0FBUyxFQUFFLElBQUksRUFDZixTQUFTLEVBQUMsTUFBTSxFQUFDLElBQUksRUFBQyxHQUFHLEVBQ3pCLFdBQVcsRUFBRSxLQUFLLEVBQ2xCLEtBQUssRUFBRSxLQUFLLEdBQ1osQ0FDVSxDQUNGO29CQUNiLE9BQU8sQ0FDTyxDQUNULENBQ0osQ0FBQztJQUNYLENBQUMsQ0FBQztBQUNKLENBQUMsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbIih7IGRlZXAsIGRhdGEsIHJlcXVpcmUsIEdvIH0pID0+IHtcbiAgY29uc3QgeyBCc1gsIEJzQ2hlY2syQWxsIH0gPSByZXF1aXJlKFwicmVhY3QtaWNvbnMvYnNcIik7XG4gIGNvbnN0IFJlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcbiAgXG4gIGNvbnN0IGMgPSByZXF1aXJlKCdAY2hha3JhLXVpL3JlYWN0Jyk7XG5cbiAgY29uc3QgZGMgPSAnQGRlZXAtZm91bmRhdGlvbi9jb3JlJztcbiAgY29uc3QgZHBsID0gJ0BkZWVwLWZvdW5kYXRpb24vcGVyY2VwdGlvbi1saW5rcyc7XG4gIFxuICBjb25zdCBRdWVyeSA9IGRlZXAuaWRMb2NhbChkYywgJ1F1ZXJ5Jyk7XG4gIGNvbnN0IENvbnRhaW4gPSBkZWVwLmlkTG9jYWwoZGMsICdDb250YWluJyk7XG4gIGNvbnN0IEZpbmRlclF1ZXJ5ID0gZGVlcC5pZExvY2FsKGRwbCwgJ0ZpbmRlclF1ZXJ5Jyk7XG4gIGNvbnN0IFRyZWUgPSBkZWVwLmlkTG9jYWwoZHBsLCAnVHJlZScpO1xuICBjb25zdCBTZWFyY2ggPSBkZWVwLmlkTG9jYWwoZHBsLCAnU2VhcmNoJyk7XG5cbiAgcmV0dXJuICh7XG4gICAgZ28sXG5cbiAgICBpbml0aWFsSWQgPSBkZWVwLmxpbmtJZCxcbiAgICBpbml0aWFsSGFuZGxlcklkLFxuICAgIHN0YXJ0UHJvcHMgPSB7fSxcbiAgICBpc0FjdGl2ZSxcbiAgICBvblN1Ym1pdCxcbiAgICBkaXNjbG9zdXJlOiBfX2Rpc2Nsb3N1cmUsXG4gIH0sIHJlZikgPT4ge1xuICAgIGNvbnN0IF9kaXNjbG9zdXJlID0gYy51c2VEaXNjbG9zdXJlKCk7XG4gICAgY29uc3QgZGlzY2xvc3VyZSA9IF9fZGlzY2xvc3VyZSB8fCBfZGlzY2xvc3VyZTtcblxuICAgIGNvbnN0IFtzZWxlY3RlZElkLCBzZXRTZWxlY3RlZElkXSA9IFJlYWN0LnVzZVN0YXRlKCk7XG4gICAgY29uc3QgW3F1ZXJ5SWQsIHNldFF1ZXJ5SWRdID0gUmVhY3QudXNlU3RhdGUoKTtcblxuICAgIGNvbnN0IGJ1dHRvbnMgPSA8PlxuICAgICAgPGMuU2xpZGVGYWRlIGluPXt0cnVlfSBvZmZzZXRYPSctMC41cmVtJyBzdHlsZT17e3Bvc2l0aW9uOiAnYWJzb2x1dGUnLCB0b3A6IDAsIHJpZ2h0OiAnLTRlbSd9fT5cbiAgICAgICAgPGMuQnV0dG9uXG4gICAgICAgICAgdz0nM2VtJyBoPSczZW0nXG4gICAgICAgICAgYm94U2hhZG93PSdkYXJrLWxnJ1xuICAgICAgICAgIHZhcmlhbnQ9e3VuZGVmaW5lZH1cbiAgICAgICAgICBvbkNsaWNrPXtkaXNjbG9zdXJlLm9uQ2xvc2V9XG4gICAgICAgID48QnNYIC8+PC9jLkJ1dHRvbj5cbiAgICAgIDwvYy5TbGlkZUZhZGU+XG4gICAgICA8Yy5Cb3ggcG9zaXRpb249J2Fic29sdXRlJyByaWdodD0nMCcgYm90dG9tPSctNGVtJz5cbiAgICAgICAgeyEhc2VsZWN0ZWRJZCAmJiA8Yy5CdXR0b25cbiAgICAgICAgICBoPSczZW0nIHJpZ2h0SWNvbj17PEJzQ2hlY2syQWxsIC8+fVxuICAgICAgICAgIG9uQ2xpY2s9eygpID0+IHtcbiAgICAgICAgICAgIG9uU3VibWl0ICYmIG9uU3VibWl0KHNlbGVjdGVkSWQpO1xuICAgICAgICAgIH19XG4gICAgICAgID57YCR7ZGVlcC5nZXQoc2VsZWN0ZWRJZCl9YH08L2MuQnV0dG9uPlxuICAgICAgPC9jLkJveD5cbiAgICA8Lz47XG5cbiAgICByZXR1cm4gPGdvLk9uXG4gICAgICBkbz17e1xuICAgICAgICBjaGFuZ2VkOiAoZyx2LG8pID0+IG8/LmlkICYmIHNldFNlbGVjdGVkSWQoby5pZCksXG4gICAgICB9fVxuICAgID5cbiAgICAgIDxjLk1vZGFsXG4gICAgICAgIHJlZj17ZGlzY2xvc3VyZS5pc09wZW4gPyByZWYgOiBudWxsfVxuICAgICAgICBjbG9zZU9uT3ZlcmxheUNsaWNrIGJsb2NrU2Nyb2xsT25Nb3VudD17ZmFsc2V9XG4gICAgICAgIG9uQ2xvc2U9eygpID0+IHtcbiAgICAgICAgICBkaXNjbG9zdXJlLm9uQ2xvc2UoKTtcbiAgICAgICAgICBnby5mb2N1cygpO1xuICAgICAgICB9fVxuICAgICAgICBpc09wZW49e2Rpc2Nsb3N1cmUuaXNPcGVufSBwb3J0YWxQcm9wcz17eyBjb250YWluZXJSZWY6IGdvLnJvb3QoKS5yZWYgfX1cbiAgICAgID5cbiAgICAgICAgPGMuTW9kYWxPdmVybGF5IC8+XG4gICAgICAgIDxjLk1vZGFsQ29udGVudCB3PSczMGVtJyBtYXhXPSczMGVtJyBoPSc4MHZoJyBwb3NpdGlvbj0ncmVsYXRpdmUnPlxuICAgICAgICAgIDxjLk1vZGFsSGVhZGVyPkZpbmRlcjwvYy5Nb2RhbEhlYWRlcj5cbiAgICAgICAgICB7LyogPEJveCBwb3NpdGlvbj0nYWJzb2x1dGUnIGJvdHRvbT0nLTAuNWVtJyByaWdodD0nLTAuNWVtJyBib3hTaGFkb3c9J2RhcmstbGcnIHpJbmRleD17Mn0+XG4gICAgICAgICAgICB7ISFzZWxlY3RlZExpbmsgJiYgPExpbmtCdXR0b24gaWQ9e3NlbGVjdGVkTGluaz8uaWR9IG1heFc9JzEwMCUnLz59XG4gICAgICAgICAgPC9Cb3g+ICovfVxuICAgICAgICAgIDxjLk1vZGFsQm9keSBwPXswfSB3PScxMDAlJyBoPScxMDAlJz5cbiAgICAgICAgICAgIDxnby5Qcm92aWRlciBsaW5rSWQ9e1RyZWV9PlxuICAgICAgICAgICAgICB7ISFkaXNjbG9zdXJlLmlzT3BlbiAmJiA8Z28uSGFuZGxlclxuICAgICAgICAgICAgICAgIGluaXRpYWxJZD17aW5pdGlhbElkfVxuICAgICAgICAgICAgICAgIGluaXRpYWxIYW5kbGVySWQ9e2luaXRpYWxIYW5kbGVySWR9XG4gICAgICAgICAgICAgICAgc3RhcnRQcm9wcz17c3RhcnRQcm9wc31cbiAgICAgICAgICAgICAgICBoYW5kbGVySWQ9e1RyZWV9XG4gICAgICAgICAgICAgICAgZnVsbFdpZHRoPSczMGVtJyBmbGV4PScxJ1xuICAgICAgICAgICAgICAgIHNhdmVIaXN0b3J5PXtmYWxzZX1cbiAgICAgICAgICAgICAgICB1c2luZz17ZmFsc2V9XG4gICAgICAgICAgICAgIC8+fVxuICAgICAgICAgICAgPC9nby5Qcm92aWRlcj5cbiAgICAgICAgICA8L2MuTW9kYWxCb2R5PlxuICAgICAgICAgIHtidXR0b25zfVxuICAgICAgICA8L2MuTW9kYWxDb250ZW50PlxuICAgICAgPC9jLk1vZGFsPlxuICAgIDwvZ28uT24+O1xuICB9O1xufSJdfQ==",
        "link_id": 16541
      }
    },
    {
      "id": 16543,
      "type_id": 3,
      "from_id": 16525,
      "to_id": 16541,
      "value": {
        "id": 1632,
        "value": "generated",
        "link_id": 16543
      }
    },
    {
      "id": 16544,
      "type_id": 143,
      "from_id": 16541,
      "to_id": 16525
    },
    {
      "id": 16545,
      "type_id": 3,
      "from_id": 16525,
      "to_id": 16544
    },
    {
      "id": 16525,
      "type_id": 717,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 1626,
        "value": "({ deep, data, require, Go }) => {\n  const { BsX, BsCheck2All } = require(\"react-icons/bs\");\n  const React = require('react');\n  \n  const c = require('@chakra-ui/react');\n\n  const dc = '@deep-foundation/core';\n  const dpl = '@deep-foundation/perception-links';\n  \n  const Query = deep.idLocal(dc, 'Query');\n  const Contain = deep.idLocal(dc, 'Contain');\n  const FinderQuery = deep.idLocal(dpl, 'FinderQuery');\n  const Tree = deep.idLocal(dpl, 'Tree');\n  const Search = deep.idLocal(dpl, 'Search');\n\n  return ({\n    go,\n\n    initialId = deep.linkId,\n    initialHandlerId,\n    startProps = {},\n    isActive,\n    onSubmit,\n    disclosure: __disclosure,\n  }, ref) => {\n    const _disclosure = c.useDisclosure();\n    const disclosure = __disclosure || _disclosure;\n\n    const [selectedId, setSelectedId] = React.useState();\n    const [queryId, setQueryId] = React.useState();\n\n    const buttons = <>\n      <c.SlideFade in={true} offsetX='-0.5rem' style={{position: 'absolute', top: 0, right: '-4em'}}>\n        <c.Button\n          w='3em' h='3em'\n          boxShadow='dark-lg'\n          variant={undefined}\n          onClick={disclosure.onClose}\n        ><BsX /></c.Button>\n      </c.SlideFade>\n      <c.Box position='absolute' right='0' bottom='-4em'>\n        {!!selectedId && <c.Button\n          h='3em' rightIcon={<BsCheck2All />}\n          onClick={() => {\n            onSubmit && onSubmit(selectedId);\n          }}\n        >{`${deep.get(selectedId)}`}</c.Button>\n      </c.Box>\n    </>;\n\n    return <go.On\n      do={{\n        changed: (g,v,o) => o?.id && setSelectedId(o.id),\n      }}\n    >\n      <c.Modal\n        ref={disclosure.isOpen ? ref : null}\n        closeOnOverlayClick blockScrollOnMount={false}\n        onClose={() => {\n          disclosure.onClose();\n          go.focus();\n        }}\n        isOpen={disclosure.isOpen} portalProps={{ containerRef: go.root().ref }}\n      >\n        <c.ModalOverlay />\n        <c.ModalContent w='30em' maxW='30em' h='80vh' position='relative'>\n          <c.ModalHeader>Finder</c.ModalHeader>\n          {/* <Box position='absolute' bottom='-0.5em' right='-0.5em' boxShadow='dark-lg' zIndex={2}>\n            {!!selectedLink && <LinkButton id={selectedLink?.id} maxW='100%'/>}\n          </Box> */}\n          <c.ModalBody p={0} w='100%' h='100%'>\n            <go.Provider linkId={Tree}>\n              {!!disclosure.isOpen && <go.Handler\n                initialId={initialId}\n                initialHandlerId={initialHandlerId}\n                startProps={startProps}\n                handlerId={Tree}\n                fullWidth='30em' flex='1'\n                saveHistory={false}\n                using={false}\n              />}\n            </go.Provider>\n          </c.ModalBody>\n          {buttons}\n        </c.ModalContent>\n      </c.Modal>\n    </go.On>;\n  };\n}",
        "link_id": 16525
      }
    },
    {
      "id": 16526,
      "type_id": 3,
      "from_id": 2586,
      "to_id": 16525,
      "value": {
        "id": 1625,
        "value": "FinderComponent",
        "link_id": 16526
      }
    },
    {
      "id": 16529,
      "type_id": 35,
      "from_id": 145,
      "to_id": 16525
    },
    {
      "id": 16530,
      "type_id": 3,
      "from_id": 2586,
      "to_id": 16529,
      "value": {
        "id": 1627,
        "value": "Finder",
        "link_id": 16530
      }
    },
    {
      "id": 15105,
      "type_id": 1,
      "from_id": 8,
      "to_id": 58
    },
    {
      "id": 15106,
      "type_id": 3,
      "from_id": 2586,
      "to_id": 15105,
      "value": {
        "id": 1551,
        "value": "FinderQuery",
        "link_id": 15106
      }
    },
    {
      "id": 16671,
      "type_id": 717,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 1636,
        "value": "({ deep, data, require, Go }) => {\n  const React = require('react');\n  \n  const _ = require('lodash');\n  const c = require('@chakra-ui/react');\n\n  const dc = '@deep-foundation/core';\n  const dpl = '@deep-foundation/perception-links';\n\n  const FinderButton = deep.idLocal(dpl, 'FinderButton');\n\n  return ({\n    go,\n\n    placeholder = '',\n    value,\n    onChange,\n    leftIcon,\n    children,\n  }, ref) => {\n    const link = React.useMemo(() => {\n      return typeof(+value) === 'number' && !_.isNaN(+value)\n        ? deep.get(+value)\n        : undefined;\n    }, [value]);\n    return <go.On\n      do={{\n      }}\n    >\n      <c.InputGroup position='relative'>\n        {!!leftIcon && <c.InputLeftElement h='3em' w='3em' minW='3em'>\n          {leftIcon}\n        </c.InputLeftElement>}\n        <c.Input\n          placeholder={placeholder}\n          value={value} onChange={(e) => onChange && onChange(e.target.value)}\n          h='3em' pl={leftIcon ? '3em' : 0} pr='3em' pt={link ? '0.25em' : undefined}\n        />\n        {!!link && <c.Text\n          position='absolute' left={leftIcon ? '4em' : '1em'} bottom='0.25em'\n          pointerEvents='none' fontSize='xs'\n          noOfLines={1}\n        >\n          {`${link.symbol} ${link.name != link.id ? link.name : link.id}`}\n        </c.Text>}\n        <c.InputRightElement h='3em'>\n          <go.Provider linkId={FinderButton} on={{\n            do: {\n              open: (g,v,o) => {\n                if (o?.id) onChange && onChange(o?.id);\n              },\n            }\n          }}>\n            <go.Handler handlerId={FinderButton} bg='transparent' isActive={go.value === FinderButton}/>\n          </go.Provider>\n        </c.InputRightElement>\n      </c.InputGroup>\n    </go.On>;\n  };\n}",
        "link_id": 16671
      }
    },
    {
      "id": 16672,
      "type_id": 3,
      "from_id": 2586,
      "to_id": 16671,
      "value": {
        "id": 1635,
        "value": "FinderInputComponent",
        "link_id": 16672
      }
    },
    {
      "id": 16675,
      "type_id": 35,
      "from_id": 145,
      "to_id": 16671
    },
    {
      "id": 16676,
      "type_id": 3,
      "from_id": 2586,
      "to_id": 16675,
      "value": {
        "id": 1637,
        "value": "FinderInput",
        "link_id": 16676
      }
    },
    {
      "id": 17034,
      "type_id": 717,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 1646,
        "value": "({ deep, data, require, Go }) => {\n  const React = require('react');\n  \n  const c = require('@chakra-ui/react');\n\n  return ({\n    go,\n    id,\n\n    ...props\n  }, ref) => {\n    const { cy } = go.useGraph();\n    const data = { id: `${id}`, label: `${id}` };\n    const classes = ['link-ghost'];\n    return <go.GraphNode\n      ghost\n      element={{\n        data, classes,\n      }}\n      {...props}\n    />;\n  };\n}",
        "link_id": 17034
      }
    },
    {
      "id": 17035,
      "type_id": 3,
      "from_id": 2586,
      "to_id": 17034,
      "value": {
        "id": 1645,
        "value": "GraphLinkGhostComponent",
        "link_id": 17035
      }
    },
    {
      "id": 17038,
      "type_id": 35,
      "from_id": 145,
      "to_id": 17034
    },
    {
      "id": 17039,
      "type_id": 3,
      "from_id": 2586,
      "to_id": 17038,
      "value": {
        "id": 1647,
        "value": "GraphLinkGhost",
        "link_id": 17039
      }
    },
    {
      "id": 16677,
      "type_id": 30,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 1639,
        "value": "({ deep, data, require, Go }) => {\n    const React = require('react');\n    const _ = require('lodash');\n    const c = require('@chakra-ui/react');\n    const dc = '@deep-foundation/core';\n    const dpl = '@deep-foundation/perception-links';\n    const FinderButton = deep.idLocal(dpl, 'FinderButton');\n    return ({ go, placeholder = '', value, onChange, leftIcon, children, }, ref) => {\n        const link = React.useMemo(() => {\n            return typeof (+value) === 'number' && !_.isNaN(+value)\n                ? deep.get(+value)\n                : undefined;\n        }, [value]);\n        return React.createElement(go.On, { do: {} },\n            React.createElement(c.InputGroup, { position: 'relative' },\n                !!leftIcon && React.createElement(c.InputLeftElement, { h: '3em', w: '3em', minW: '3em' }, leftIcon),\n                React.createElement(c.Input, { placeholder: placeholder, value: value, onChange: (e) => onChange && onChange(e.target.value), h: '3em', pl: leftIcon ? '3em' : 0, pr: '3em', pt: link ? '0.25em' : undefined }),\n                !!link && React.createElement(c.Text, { position: 'absolute', left: leftIcon ? '4em' : '1em', bottom: '0.25em', pointerEvents: 'none', fontSize: 'xs', noOfLines: 1 }, `${link.symbol} ${link.name != link.id ? link.name : link.id}`),\n                React.createElement(c.InputRightElement, { h: '3em' },\n                    React.createElement(go.Provider, { linkId: FinderButton, on: {\n                            do: {\n                                open: (g, v, o) => {\n                                    if (o?.id)\n                                        onChange && onChange(o?.id);\n                                },\n                            }\n                        } },\n                        React.createElement(go.Handler, { handlerId: FinderButton, bg: 'transparent', isActive: go.value === FinderButton })))));\n    };\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsibW9kdWxlLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxDQUFDLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRTtJQUM5QixNQUFNLEtBQUssR0FBRyxPQUFPLENBQUMsT0FBTyxDQUFDLENBQUM7SUFFL0IsTUFBTSxDQUFDLEdBQUcsT0FBTyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQzVCLE1BQU0sQ0FBQyxHQUFHLE9BQU8sQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDO0lBRXRDLE1BQU0sRUFBRSxHQUFHLHVCQUF1QixDQUFDO0lBQ25DLE1BQU0sR0FBRyxHQUFHLG1DQUFtQyxDQUFDO0lBRWhELE1BQU0sWUFBWSxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLGNBQWMsQ0FBQyxDQUFDO0lBRXZELE9BQU8sQ0FBQyxFQUNOLEVBQUUsRUFFRixXQUFXLEdBQUcsRUFBRSxFQUNoQixLQUFLLEVBQ0wsUUFBUSxFQUNSLFFBQVEsRUFDUixRQUFRLEdBQ1QsRUFBRSxHQUFHLEVBQUUsRUFBRTtRQUNSLE1BQU0sSUFBSSxHQUFHLEtBQUssQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFO1lBQzlCLE9BQU8sT0FBTSxDQUFDLENBQUMsS0FBSyxDQUFDLEtBQUssUUFBUSxJQUFJLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLEtBQUssQ0FBQztnQkFDcEQsQ0FBQyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxLQUFLLENBQUM7Z0JBQ2xCLENBQUMsQ0FBQyxTQUFTLENBQUM7UUFDaEIsQ0FBQyxFQUFFLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQztRQUNaLE9BQU8sb0JBQUMsRUFBRSxDQUFDLEVBQUUsSUFDWCxFQUFFLEVBQUUsRUFDSDtZQUVELG9CQUFDLENBQUMsQ0FBQyxVQUFVLElBQUMsUUFBUSxFQUFDLFVBQVU7Z0JBQzlCLENBQUMsQ0FBQyxRQUFRLElBQUksb0JBQUMsQ0FBQyxDQUFDLGdCQUFnQixJQUFDLENBQUMsRUFBQyxLQUFLLEVBQUMsQ0FBQyxFQUFDLEtBQUssRUFBQyxJQUFJLEVBQUMsS0FBSyxJQUMxRCxRQUFRLENBQ1U7Z0JBQ3JCLG9CQUFDLENBQUMsQ0FBQyxLQUFLLElBQ04sV0FBVyxFQUFFLFdBQVcsRUFDeEIsS0FBSyxFQUFFLEtBQUssRUFBRSxRQUFRLEVBQUUsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLFFBQVEsSUFBSSxRQUFRLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsRUFDbkUsQ0FBQyxFQUFDLEtBQUssRUFBQyxFQUFFLEVBQUUsUUFBUSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLEVBQUMsS0FBSyxFQUFDLEVBQUUsRUFBRSxJQUFJLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsU0FBUyxHQUMxRTtnQkFDRCxDQUFDLENBQUMsSUFBSSxJQUFJLG9CQUFDLENBQUMsQ0FBQyxJQUFJLElBQ2hCLFFBQVEsRUFBQyxVQUFVLEVBQUMsSUFBSSxFQUFFLFFBQVEsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxLQUFLLEVBQUUsTUFBTSxFQUFDLFFBQVEsRUFDbkUsYUFBYSxFQUFDLE1BQU0sRUFBQyxRQUFRLEVBQUMsSUFBSSxFQUNsQyxTQUFTLEVBQUUsQ0FBQyxJQUVYLEdBQUcsSUFBSSxDQUFDLE1BQU0sSUFBSSxJQUFJLENBQUMsSUFBSSxJQUFJLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxFQUFFLEVBQUUsQ0FDeEQ7Z0JBQ1Qsb0JBQUMsQ0FBQyxDQUFDLGlCQUFpQixJQUFDLENBQUMsRUFBQyxLQUFLO29CQUMxQixvQkFBQyxFQUFFLENBQUMsUUFBUSxJQUFDLE1BQU0sRUFBRSxZQUFZLEVBQUUsRUFBRSxFQUFFOzRCQUNyQyxFQUFFLEVBQUU7Z0NBQ0YsSUFBSSxFQUFFLENBQUMsQ0FBQyxFQUFDLENBQUMsRUFBQyxDQUFDLEVBQUUsRUFBRTtvQ0FDZCxJQUFJLENBQUMsRUFBRSxFQUFFO3dDQUFFLFFBQVEsSUFBSSxRQUFRLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDO2dDQUN6QyxDQUFDOzZCQUNGO3lCQUNGO3dCQUNDLG9CQUFDLEVBQUUsQ0FBQyxPQUFPLElBQUMsU0FBUyxFQUFFLFlBQVksRUFBRSxFQUFFLEVBQUMsYUFBYSxFQUFDLFFBQVEsRUFBRSxFQUFFLENBQUMsS0FBSyxLQUFLLFlBQVksR0FBRyxDQUNoRixDQUNNLENBQ1QsQ0FDVCxDQUFDO0lBQ1gsQ0FBQyxDQUFDO0FBQ0osQ0FBQyxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiKHsgZGVlcCwgZGF0YSwgcmVxdWlyZSwgR28gfSkgPT4ge1xuICBjb25zdCBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XG4gIFxuICBjb25zdCBfID0gcmVxdWlyZSgnbG9kYXNoJyk7XG4gIGNvbnN0IGMgPSByZXF1aXJlKCdAY2hha3JhLXVpL3JlYWN0Jyk7XG5cbiAgY29uc3QgZGMgPSAnQGRlZXAtZm91bmRhdGlvbi9jb3JlJztcbiAgY29uc3QgZHBsID0gJ0BkZWVwLWZvdW5kYXRpb24vcGVyY2VwdGlvbi1saW5rcyc7XG5cbiAgY29uc3QgRmluZGVyQnV0dG9uID0gZGVlcC5pZExvY2FsKGRwbCwgJ0ZpbmRlckJ1dHRvbicpO1xuXG4gIHJldHVybiAoe1xuICAgIGdvLFxuXG4gICAgcGxhY2Vob2xkZXIgPSAnJyxcbiAgICB2YWx1ZSxcbiAgICBvbkNoYW5nZSxcbiAgICBsZWZ0SWNvbixcbiAgICBjaGlsZHJlbixcbiAgfSwgcmVmKSA9PiB7XG4gICAgY29uc3QgbGluayA9IFJlYWN0LnVzZU1lbW8oKCkgPT4ge1xuICAgICAgcmV0dXJuIHR5cGVvZigrdmFsdWUpID09PSAnbnVtYmVyJyAmJiAhXy5pc05hTigrdmFsdWUpXG4gICAgICAgID8gZGVlcC5nZXQoK3ZhbHVlKVxuICAgICAgICA6IHVuZGVmaW5lZDtcbiAgICB9LCBbdmFsdWVdKTtcbiAgICByZXR1cm4gPGdvLk9uXG4gICAgICBkbz17e1xuICAgICAgfX1cbiAgICA+XG4gICAgICA8Yy5JbnB1dEdyb3VwIHBvc2l0aW9uPSdyZWxhdGl2ZSc+XG4gICAgICAgIHshIWxlZnRJY29uICYmIDxjLklucHV0TGVmdEVsZW1lbnQgaD0nM2VtJyB3PSczZW0nIG1pblc9JzNlbSc+XG4gICAgICAgICAge2xlZnRJY29ufVxuICAgICAgICA8L2MuSW5wdXRMZWZ0RWxlbWVudD59XG4gICAgICAgIDxjLklucHV0XG4gICAgICAgICAgcGxhY2Vob2xkZXI9e3BsYWNlaG9sZGVyfVxuICAgICAgICAgIHZhbHVlPXt2YWx1ZX0gb25DaGFuZ2U9eyhlKSA9PiBvbkNoYW5nZSAmJiBvbkNoYW5nZShlLnRhcmdldC52YWx1ZSl9XG4gICAgICAgICAgaD0nM2VtJyBwbD17bGVmdEljb24gPyAnM2VtJyA6IDB9IHByPSczZW0nIHB0PXtsaW5rID8gJzAuMjVlbScgOiB1bmRlZmluZWR9XG4gICAgICAgIC8+XG4gICAgICAgIHshIWxpbmsgJiYgPGMuVGV4dFxuICAgICAgICAgIHBvc2l0aW9uPSdhYnNvbHV0ZScgbGVmdD17bGVmdEljb24gPyAnNGVtJyA6ICcxZW0nfSBib3R0b209JzAuMjVlbSdcbiAgICAgICAgICBwb2ludGVyRXZlbnRzPSdub25lJyBmb250U2l6ZT0neHMnXG4gICAgICAgICAgbm9PZkxpbmVzPXsxfVxuICAgICAgICA+XG4gICAgICAgICAge2Ake2xpbmsuc3ltYm9sfSAke2xpbmsubmFtZSAhPSBsaW5rLmlkID8gbGluay5uYW1lIDogbGluay5pZH1gfVxuICAgICAgICA8L2MuVGV4dD59XG4gICAgICAgIDxjLklucHV0UmlnaHRFbGVtZW50IGg9JzNlbSc+XG4gICAgICAgICAgPGdvLlByb3ZpZGVyIGxpbmtJZD17RmluZGVyQnV0dG9ufSBvbj17e1xuICAgICAgICAgICAgZG86IHtcbiAgICAgICAgICAgICAgb3BlbjogKGcsdixvKSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKG8/LmlkKSBvbkNoYW5nZSAmJiBvbkNoYW5nZShvPy5pZCk7XG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfX0+XG4gICAgICAgICAgICA8Z28uSGFuZGxlciBoYW5kbGVySWQ9e0ZpbmRlckJ1dHRvbn0gYmc9J3RyYW5zcGFyZW50JyBpc0FjdGl2ZT17Z28udmFsdWUgPT09IEZpbmRlckJ1dHRvbn0vPlxuICAgICAgICAgIDwvZ28uUHJvdmlkZXI+XG4gICAgICAgIDwvYy5JbnB1dFJpZ2h0RWxlbWVudD5cbiAgICAgIDwvYy5JbnB1dEdyb3VwPlxuICAgIDwvZ28uT24+O1xuICB9O1xufSJdfQ==",
        "link_id": 16677
      }
    },
    {
      "id": 16678,
      "type_id": 3,
      "from_id": 16671,
      "to_id": 16677,
      "value": {
        "id": 1638,
        "value": "generated",
        "link_id": 16678
      }
    },
    {
      "id": 16679,
      "type_id": 143,
      "from_id": 16677,
      "to_id": 16671
    },
    {
      "id": 16680,
      "type_id": 3,
      "from_id": 16671,
      "to_id": 16679
    },
    {
      "id": 17544,
      "type_id": 35,
      "from_id": 145,
      "to_id": 3844
    },
    {
      "id": 17545,
      "type_id": 3,
      "from_id": 2586,
      "to_id": 17544,
      "value": {
        "id": 1663,
        "value": "TreeLinkButton",
        "link_id": 17545
      }
    },
    {
      "id": 18261,
      "type_id": 717,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 1682,
        "value": "async ({ deep, data, Go, require }) => {\n  const React = require('react');\n  const { LuChevronLast, LuChevronFirst } = require(\"react-icons/lu\");\n  const { IoInfiniteSharp } = require(\"react-icons/io5\");\n  const { Planet } = require('react-planet');\n  const c = require('@chakra-ui/react');\n\n  const {\n    TypedIcon, DownIcon, UpIcon, TypeIcon, InIcon, OutIcon, FromIcon, ToIcon,\n  } = require('@deep-foundation/perception-app');\n\n  const dpl = '@deep-foundation/perception-links';\n\n  const TreeList = deep.idLocal(dpl, 'TreeList');\n  const PlanetRelations = await deep.id(dpl, 'PlanetRelations');\n  const PlanetOperations = await deep.id(dpl, 'PlanetOperations');\n\n  return ({\n    go,\n\n    linkId,\n    deleteDisclosure: _deleteDisclosure,\n    finderDisclosure: _finderDisclosure,\n\n    isActive = false,\n  }, ref) => {\n    const { cy } = go.useGraph();\n\n    const link = React.useMemo(() => deep.get(linkId), []);\n\n    const __deleteDisclosure = c.useDisclosure();\n    const deleteDisclosure = _deleteDisclosure || __deleteDisclosure;\n\n    const __finderDisclosure = c.useDisclosure();\n    const finderDisclosure = _finderDisclosure || __finderDisclosure;\n\n    const [mode, setMode] = React.useState('current');\n\n    const nav = go.useNav();\n    nav('current', PlanetRelations, PlanetRelations, PlanetRelations, PlanetRelations);\n    nav(PlanetRelations, PlanetRelations, PlanetOperations, PlanetRelations, 'current');\n    nav(PlanetOperations, PlanetOperations, 'up', PlanetOperations, PlanetRelations);\n\n    return <go.On do={{\n      exec: (g,v,o) => {\n        if (o?.mode) setMode(mode === o.mode ? 'current' : o.mode);\n        if (go.value === 'current') go.do(go.value);\n      },\n      focus: (g,d,v,o) => !v && go.set('current'),\n      up: (g,v,o) => go.focus(nav.get(go.value, 'up'), { position: 0.5, ...o }),\n      down: (g,v,o) => go.focus(nav.get(go.value, 'down'), { position: 0, ...o }),\n      left: (g,v,o) => go.focus(nav.get(go.value, 'left'), { position: 0.25 }),\n      right: (g,v,o) => go.focus(nav.get(go.value, 'right'), { position: 0.75 }),\n      current: (g,v,o) => go.go.do('exec'),\n    }} focus={{\n      up: (g,v,o) => go.root().do('up'),\n    }}>\n      <c.Box position='relative' top='0' left='0' w='0' h='0'>\n        <go.Provider linkId={PlanetRelations}>\n          <go.Component path={[dpl, 'PlanetRelations']} isActive={isActive} linkId={linkId}/>\n        </go.Provider>\n        <go.Provider linkId={PlanetOperations}>\n          <go.Component path={[dpl, 'PlanetOperations']} isActive={isActive} linkId={linkId}/>\n        </go.Provider>\n        {!!isActive && <c.Button\n          variant={go.value === 'current' ? 'planetActive' : 'planet'}\n          position='absolute' left='-1.5em' top='-1.5em'\n          onClick={() => go.focus('current').go.do('current')}\n        ></c.Button>}\n      </c.Box>\n    </go.On>;\n  };\n}",
        "link_id": 18261
      }
    },
    {
      "id": 18263,
      "type_id": 3,
      "from_id": 2586,
      "to_id": 18261,
      "value": {
        "id": 1681,
        "value": "GraphLinkPlanetComponent",
        "link_id": 18263
      }
    },
    {
      "id": 18269,
      "type_id": 35,
      "from_id": 145,
      "to_id": 18261
    },
    {
      "id": 18270,
      "type_id": 3,
      "from_id": 2586,
      "to_id": 18269,
      "value": {
        "id": 1685,
        "value": "GraphLinkPlanet",
        "link_id": 18270
      }
    },
    {
      "id": 18274,
      "type_id": 30,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 1690,
        "value": "async ({ deep, data, Go, require }) => {\n    const React = require('react');\n    const { LuChevronLast, LuChevronFirst } = require(\"react-icons/lu\");\n    const { IoInfiniteSharp } = require(\"react-icons/io5\");\n    const { Planet } = require('react-planet');\n    const c = require('@chakra-ui/react');\n    const { TypedIcon, DownIcon, UpIcon, TypeIcon, InIcon, OutIcon, FromIcon, ToIcon, } = require('@deep-foundation/perception-app');\n    const dpl = '@deep-foundation/perception-links';\n    const TreeList = deep.idLocal(dpl, 'TreeList');\n    const PlanetRelations = await deep.id(dpl, 'PlanetRelations');\n    const PlanetOperations = await deep.id(dpl, 'PlanetOperations');\n    return ({ go, linkId, deleteDisclosure: _deleteDisclosure, finderDisclosure: _finderDisclosure, isActive = false, }, ref) => {\n        const { cy } = go.useGraph();\n        const link = React.useMemo(() => deep.get(linkId), []);\n        const __deleteDisclosure = c.useDisclosure();\n        const deleteDisclosure = _deleteDisclosure || __deleteDisclosure;\n        const __finderDisclosure = c.useDisclosure();\n        const finderDisclosure = _finderDisclosure || __finderDisclosure;\n        const [mode, setMode] = React.useState('current');\n        const nav = go.useNav();\n        nav('current', PlanetRelations, PlanetRelations, PlanetRelations, PlanetRelations);\n        nav(PlanetRelations, PlanetRelations, PlanetOperations, PlanetRelations, 'current');\n        nav(PlanetOperations, PlanetOperations, 'up', PlanetOperations, PlanetRelations);\n        return React.createElement(go.On, { do: {\n                exec: (g, v, o) => {\n                    if (o?.mode)\n                        setMode(mode === o.mode ? 'current' : o.mode);\n                    if (go.value === 'current')\n                        go.do(go.value);\n                },\n                focus: (g, d, v, o) => !v && go.set('current'),\n                up: (g, v, o) => go.focus(nav.get(go.value, 'up'), { position: 0.5, ...o }),\n                down: (g, v, o) => go.focus(nav.get(go.value, 'down'), { position: 0, ...o }),\n                left: (g, v, o) => go.focus(nav.get(go.value, 'left'), { position: 0.25 }),\n                right: (g, v, o) => go.focus(nav.get(go.value, 'right'), { position: 0.75 }),\n                current: (g, v, o) => go.go.do('exec'),\n            }, focus: {\n                up: (g, v, o) => go.root().do('up'),\n            } },\n            React.createElement(c.Box, { position: 'relative', top: '0', left: '0', w: '0', h: '0' },\n                React.createElement(go.Provider, { linkId: PlanetRelations },\n                    React.createElement(go.Component, { path: [dpl, 'PlanetRelations'], isActive: isActive, linkId: linkId })),\n                React.createElement(go.Provider, { linkId: PlanetOperations },\n                    React.createElement(go.Component, { path: [dpl, 'PlanetOperations'], isActive: isActive, linkId: linkId })),\n                !!isActive && React.createElement(c.Button, { variant: go.value === 'current' ? 'planetActive' : 'planet', position: 'absolute', left: '-1.5em', top: '-1.5em', onClick: () => go.focus('current').go.do('current') })));\n    };\n};\n//# sourceMappingURL=data:application/json;base64,",
        "link_id": 18274
      }
    },
    {
      "id": 18276,
      "type_id": 3,
      "from_id": 18261,
      "to_id": 18274,
      "value": {
        "id": 1688,
        "value": "generated",
        "link_id": 18276
      }
    },
    {
      "id": 18278,
      "type_id": 143,
      "from_id": 18274,
      "to_id": 18261
    },
    {
      "id": 18280,
      "type_id": 3,
      "from_id": 18261,
      "to_id": 18278
    },
    {
      "id": 19125,
      "type_id": 717,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 1711,
        "value": "async ({ deep, data, require }) => {\n  const React = require('react');\n  const { GiBrain } = require(\"react-icons/gi\");\n  const c = require('@chakra-ui/react');\n\n  const dpl = '@deep-foundation/perception-links';\n  const dc = '@deep-foundation/core';\n\n  const Tree = deep.idLocal(dpl, 'Tree');\n\n  return ({\n    go,\n    handlerId,\n\n    isActive,\n  }, ref) => {\n    return <go.On do={{\n      exec: (g,v,o) => go.go.do('right', { ...o, id: Tree })),\n      click: (g,v,o) => go.do('exec', o),\n      right: (g,v,o) => go.do('exec', o),\n    }}>\n      <c.Button\n        w='3em' h='3em'\n        variant={isActive ? 'active' : undefined}\n        ref={ref}\n        onClick={() => go.do('exec')}\n      >\n        <GiBrain/>\n      </c.Button>\n    </go.On>;\n  };\n}",
        "link_id": 19125
      }
    },
    {
      "id": 19126,
      "type_id": 3,
      "from_id": 2586,
      "to_id": 19125,
      "value": {
        "id": 1710,
        "value": "MenuMemoComponent",
        "link_id": 19126
      }
    },
    {
      "id": 19129,
      "type_id": 35,
      "from_id": 145,
      "to_id": 19125
    },
    {
      "id": 19130,
      "type_id": 3,
      "from_id": 2586,
      "to_id": 19129,
      "value": {
        "id": 1712,
        "value": "MenuMemo",
        "link_id": 19130
      }
    },
    {
      "id": 19137,
      "type_id": 30,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 1717,
        "value": "async ({ deep, data, require }) => {\n    const React = require('react');\n    const { GiBrain } = require(\"react-icons/gi\");\n    const c = require('@chakra-ui/react');\n    const dpl = '@deep-foundation/perception-links';\n    const dc = '@deep-foundation/core';\n    const Tree = deep.idLocal(dpl, 'Tree');\n    return ({ go, handlerId, isActive, }, ref) => {\n        return React.createElement(go.On, { do: {\n                exec: (g, v, o) => go.go.do('right', { ...o, id: Tree }),\n                click: (g, v, o) => go.do('exec', o),\n                right: (g, v, o) => go.do('exec', o),\n            } },\n            React.createElement(c.Button, { w: '3em', h: '3em', variant: isActive ? 'active' : undefined, ref: ref, onClick: () => go.do('exec') },\n                React.createElement(GiBrain, null)));\n    };\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsibW9kdWxlLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxLQUFLLEVBQUUsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLE9BQU8sRUFBRSxFQUFFLEVBQUU7SUFDaEMsTUFBTSxLQUFLLEdBQUcsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQy9CLE1BQU0sRUFBRSxPQUFPLEVBQUUsR0FBRyxPQUFPLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztJQUM5QyxNQUFNLENBQUMsR0FBRyxPQUFPLENBQUMsa0JBQWtCLENBQUMsQ0FBQztJQUV0QyxNQUFNLEdBQUcsR0FBRyxtQ0FBbUMsQ0FBQztJQUNoRCxNQUFNLEVBQUUsR0FBRyx1QkFBdUIsQ0FBQztJQUVuQyxNQUFNLElBQUksR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxNQUFNLENBQUMsQ0FBQztJQUV2QyxPQUFPLENBQUMsRUFDTixFQUFFLEVBQ0YsU0FBUyxFQUVULFFBQVEsR0FDVCxFQUFFLEdBQUcsRUFBRSxFQUFFO1FBQ1IsT0FBTyxvQkFBQyxFQUFFLENBQUMsRUFBRSxJQUFDLEVBQUUsRUFBRTtnQkFDaEIsSUFBSSxFQUFFLENBQUMsQ0FBQyxFQUFDLENBQUMsRUFBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLE9BQU8sRUFBRSxFQUFFLEdBQUcsQ0FBQyxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsQ0FBQztnQkFDdEQsS0FBSyxFQUFFLENBQUMsQ0FBQyxFQUFDLENBQUMsRUFBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsTUFBTSxFQUFFLENBQUMsQ0FBQztnQkFDbEMsS0FBSyxFQUFFLENBQUMsQ0FBQyxFQUFDLENBQUMsRUFBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsTUFBTSxFQUFFLENBQUMsQ0FBQzthQUNuQztZQUNDLG9CQUFDLENBQUMsQ0FBQyxNQUFNLElBQ1AsQ0FBQyxFQUFDLEtBQUssRUFBQyxDQUFDLEVBQUMsS0FBSyxFQUNmLE9BQU8sRUFBRSxRQUFRLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsU0FBUyxFQUN4QyxHQUFHLEVBQUUsR0FBRyxFQUNSLE9BQU8sRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLE1BQU0sQ0FBQztnQkFFNUIsb0JBQUMsT0FBTyxPQUFFLENBQ0QsQ0FDTCxDQUFDO0lBQ1gsQ0FBQyxDQUFDO0FBQ0osQ0FBQyxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiYXN5bmMgKHsgZGVlcCwgZGF0YSwgcmVxdWlyZSB9KSA9PiB7XG4gIGNvbnN0IFJlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcbiAgY29uc3QgeyBHaUJyYWluIH0gPSByZXF1aXJlKFwicmVhY3QtaWNvbnMvZ2lcIik7XG4gIGNvbnN0IGMgPSByZXF1aXJlKCdAY2hha3JhLXVpL3JlYWN0Jyk7XG5cbiAgY29uc3QgZHBsID0gJ0BkZWVwLWZvdW5kYXRpb24vcGVyY2VwdGlvbi1saW5rcyc7XG4gIGNvbnN0IGRjID0gJ0BkZWVwLWZvdW5kYXRpb24vY29yZSc7XG5cbiAgY29uc3QgVHJlZSA9IGRlZXAuaWRMb2NhbChkcGwsICdUcmVlJyk7XG5cbiAgcmV0dXJuICh7XG4gICAgZ28sXG4gICAgaGFuZGxlcklkLFxuXG4gICAgaXNBY3RpdmUsXG4gIH0sIHJlZikgPT4ge1xuICAgIHJldHVybiA8Z28uT24gZG89e3tcbiAgICAgIGV4ZWM6IChnLHYsbykgPT4gZ28uZ28uZG8oJ3JpZ2h0JywgeyAuLi5vLCBpZDogVHJlZSB9KSksXG4gICAgICBjbGljazogKGcsdixvKSA9PiBnby5kbygnZXhlYycsIG8pLFxuICAgICAgcmlnaHQ6IChnLHYsbykgPT4gZ28uZG8oJ2V4ZWMnLCBvKSxcbiAgICB9fT5cbiAgICAgIDxjLkJ1dHRvblxuICAgICAgICB3PSczZW0nIGg9JzNlbSdcbiAgICAgICAgdmFyaWFudD17aXNBY3RpdmUgPyAnYWN0aXZlJyA6IHVuZGVmaW5lZH1cbiAgICAgICAgcmVmPXtyZWZ9XG4gICAgICAgIG9uQ2xpY2s9eygpID0+IGdvLmRvKCdleGVjJyl9XG4gICAgICA+XG4gICAgICAgIDxHaUJyYWluLz5cbiAgICAgIDwvYy5CdXR0b24+XG4gICAgPC9nby5Pbj47XG4gIH07XG59Il19",
        "link_id": 19137
      }
    },
    {
      "id": 19139,
      "type_id": 3,
      "from_id": 19125,
      "to_id": 19137,
      "value": {
        "id": 1716,
        "value": "generated",
        "link_id": 19139
      }
    },
    {
      "id": 19141,
      "type_id": 143,
      "from_id": 19137,
      "to_id": 19125
    },
    {
      "id": 19143,
      "type_id": 3,
      "from_id": 19125,
      "to_id": 19141
    },
    {
      "id": 19243,
      "type_id": 717,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 1724,
        "value": "async ({ deep, data, require }) => {\n  const React = require('react');\n  const { GiBrain } = require(\"react-icons/gi\");\n  const c = require('@chakra-ui/react');\n\n  const dpl = '@deep-foundation/perception-links';\n  const dml = '@deep-foundation/deepmemo-links';\n  const dc = '@deep-foundation/core';\n\n  const Memo = await deep.id(dml, 'Memo');\n\n  return ({\n    go,\n    handlerId,\n\n    isActive,\n  }, ref) => {\n    return <go.On do={{\n      exec: (g,v,o) => go.go.do('right', { ...o, id: Memo })),\n      click: (g,v,o) => go.do('exec', o),\n      right: (g,v,o) => go.do('exec', o),\n    }}>\n      <c.Button\n        w='3em' h='3em'\n        variant={isActive ? 'active' : undefined}\n        ref={ref}\n        onClick={() => go.do('exec')}\n      >\n        <GiBrain/>\n      </c.Button>\n    </go.On>;\n  };\n}",
        "link_id": 19243
      }
    },
    {
      "id": 19244,
      "type_id": 3,
      "from_id": 1849,
      "to_id": 19243,
      "value": {
        "id": 1723,
        "value": "MenuMemoComponent",
        "link_id": 19244
      }
    },
    {
      "id": 19247,
      "type_id": 35,
      "from_id": 145,
      "to_id": 19243
    },
    {
      "id": 19248,
      "type_id": 3,
      "from_id": 1849,
      "to_id": 19247,
      "value": {
        "id": 1725,
        "value": "MenuMemo",
        "link_id": 19248
      }
    },
    {
      "id": 19249,
      "type_id": 30,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 1727,
        "value": "async ({ deep, data, require }) => {\n    const React = require('react');\n    const { GiBrain } = require(\"react-icons/gi\");\n    const c = require('@chakra-ui/react');\n    const dpl = '@deep-foundation/perception-links';\n    const dml = '@deep-foundation/deepmemo-links';\n    const dc = '@deep-foundation/core';\n    const Memo = await deep.id(dml, 'Memo');\n    return ({ go, handlerId, isActive, }, ref) => {\n        return React.createElement(go.On, { do: {\n                exec: (g, v, o) => go.go.do('right', { ...o, id: Memo }),\n                click: (g, v, o) => go.do('exec', o),\n                right: (g, v, o) => go.do('exec', o),\n            } },\n            React.createElement(c.Button, { w: '3em', h: '3em', variant: isActive ? 'active' : undefined, ref: ref, onClick: () => go.do('exec') },\n                React.createElement(GiBrain, null)));\n    };\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsibW9kdWxlLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxLQUFLLEVBQUUsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLE9BQU8sRUFBRSxFQUFFLEVBQUU7SUFDaEMsTUFBTSxLQUFLLEdBQUcsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQy9CLE1BQU0sRUFBRSxPQUFPLEVBQUUsR0FBRyxPQUFPLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztJQUM5QyxNQUFNLENBQUMsR0FBRyxPQUFPLENBQUMsa0JBQWtCLENBQUMsQ0FBQztJQUV0QyxNQUFNLEdBQUcsR0FBRyxtQ0FBbUMsQ0FBQztJQUNoRCxNQUFNLEdBQUcsR0FBRyxpQ0FBaUMsQ0FBQztJQUM5QyxNQUFNLEVBQUUsR0FBRyx1QkFBdUIsQ0FBQztJQUVuQyxNQUFNLElBQUksR0FBRyxNQUFNLElBQUksQ0FBQyxFQUFFLENBQUMsR0FBRyxFQUFFLE1BQU0sQ0FBQyxDQUFDO0lBRXhDLE9BQU8sQ0FBQyxFQUNOLEVBQUUsRUFDRixTQUFTLEVBRVQsUUFBUSxHQUNULEVBQUUsR0FBRyxFQUFFLEVBQUU7UUFDUixPQUFPLG9CQUFDLEVBQUUsQ0FBQyxFQUFFLElBQUMsRUFBRSxFQUFFO2dCQUNoQixJQUFJLEVBQUUsQ0FBQyxDQUFDLEVBQUMsQ0FBQyxFQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsT0FBTyxFQUFFLEVBQUUsR0FBRyxDQUFDLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxDQUFDO2dCQUN0RCxLQUFLLEVBQUUsQ0FBQyxDQUFDLEVBQUMsQ0FBQyxFQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxDQUFDO2dCQUNsQyxLQUFLLEVBQUUsQ0FBQyxDQUFDLEVBQUMsQ0FBQyxFQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxDQUFDO2FBQ25DO1lBQ0Msb0JBQUMsQ0FBQyxDQUFDLE1BQU0sSUFDUCxDQUFDLEVBQUMsS0FBSyxFQUFDLENBQUMsRUFBQyxLQUFLLEVBQ2YsT0FBTyxFQUFFLFFBQVEsQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxTQUFTLEVBQ3hDLEdBQUcsRUFBRSxHQUFHLEVBQ1IsT0FBTyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsTUFBTSxDQUFDO2dCQUU1QixvQkFBQyxPQUFPLE9BQUUsQ0FDRCxDQUNMLENBQUM7SUFDWCxDQUFDLENBQUM7QUFDSixDQUFDLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJhc3luYyAoeyBkZWVwLCBkYXRhLCByZXF1aXJlIH0pID0+IHtcbiAgY29uc3QgUmVhY3QgPSByZXF1aXJlKCdyZWFjdCcpO1xuICBjb25zdCB7IEdpQnJhaW4gfSA9IHJlcXVpcmUoXCJyZWFjdC1pY29ucy9naVwiKTtcbiAgY29uc3QgYyA9IHJlcXVpcmUoJ0BjaGFrcmEtdWkvcmVhY3QnKTtcblxuICBjb25zdCBkcGwgPSAnQGRlZXAtZm91bmRhdGlvbi9wZXJjZXB0aW9uLWxpbmtzJztcbiAgY29uc3QgZG1sID0gJ0BkZWVwLWZvdW5kYXRpb24vZGVlcG1lbW8tbGlua3MnO1xuICBjb25zdCBkYyA9ICdAZGVlcC1mb3VuZGF0aW9uL2NvcmUnO1xuXG4gIGNvbnN0IE1lbW8gPSBhd2FpdCBkZWVwLmlkKGRtbCwgJ01lbW8nKTtcblxuICByZXR1cm4gKHtcbiAgICBnbyxcbiAgICBoYW5kbGVySWQsXG5cbiAgICBpc0FjdGl2ZSxcbiAgfSwgcmVmKSA9PiB7XG4gICAgcmV0dXJuIDxnby5PbiBkbz17e1xuICAgICAgZXhlYzogKGcsdixvKSA9PiBnby5nby5kbygncmlnaHQnLCB7IC4uLm8sIGlkOiBNZW1vIH0pKSxcbiAgICAgIGNsaWNrOiAoZyx2LG8pID0+IGdvLmRvKCdleGVjJywgbyksXG4gICAgICByaWdodDogKGcsdixvKSA9PiBnby5kbygnZXhlYycsIG8pLFxuICAgIH19PlxuICAgICAgPGMuQnV0dG9uXG4gICAgICAgIHc9JzNlbScgaD0nM2VtJ1xuICAgICAgICB2YXJpYW50PXtpc0FjdGl2ZSA/ICdhY3RpdmUnIDogdW5kZWZpbmVkfVxuICAgICAgICByZWY9e3JlZn1cbiAgICAgICAgb25DbGljaz17KCkgPT4gZ28uZG8oJ2V4ZWMnKX1cbiAgICAgID5cbiAgICAgICAgPEdpQnJhaW4vPlxuICAgICAgPC9jLkJ1dHRvbj5cbiAgICA8L2dvLk9uPjtcbiAgfTtcbn0iXX0=",
        "link_id": 19249
      }
    },
    {
      "id": 19250,
      "type_id": 3,
      "from_id": 19243,
      "to_id": 19249,
      "value": {
        "id": 1726,
        "value": "generated",
        "link_id": 19250
      }
    },
    {
      "id": 19251,
      "type_id": 143,
      "from_id": 19249,
      "to_id": 19243
    },
    {
      "id": 19252,
      "type_id": 3,
      "from_id": 19243,
      "to_id": 19251
    },
    {
      "id": 19297,
      "type_id": 3,
      "from_id": 1849,
      "to_id": 19296,
      "value": {
        "id": 1731,
        "value": "menuCompatable",
        "link_id": 19297
      }
    },
    {
      "id": 19296,
      "type_id": 5258,
      "from_id": 19247,
      "to_id": 5240
    },
    {
      "id": 19403,
      "type_id": 3,
      "from_id": 1849,
      "to_id": 19402,
      "value": {
        "id": 1736,
        "value": "MemoComponent",
        "link_id": 19403
      }
    },
    {
      "id": 19406,
      "type_id": 35,
      "from_id": 145,
      "to_id": 19402
    },
    {
      "id": 19407,
      "type_id": 3,
      "from_id": 1849,
      "to_id": 19406,
      "value": {
        "id": 1738,
        "value": "Memo",
        "link_id": 19407
      }
    },
    {
      "id": 21927,
      "type_id": 717,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 1812,
        "value": "async ({ deep, data, Go, require }) => {\n  const React = require('react');\n  const { FaNodeJs } = require(\"react-icons/fa\");\n  const c = require('@chakra-ui/react');\n  const _ = require('lodash');\n\n  const dpl = '@deep-foundation/perception-links';\n  const dc = '@deep-foundation/core';\n\n  return ({\n    go,\n    handlerId,\n\n    isActive,\n  }, ref) => {\n    const View = React.useCallback(({ event }) => {\n      let value = event.mode;\n  \n      const q = JSON.stringify(event.query, null, 2);\n      const r = JSON.stringify(event.remoteData).slice(1,30);\n      const v = JSON.stringify(event.value || {}, null, 2);\n\n      const _o = { ...event.options };\n      if (_o.table === 'links') delete _o.table;\n\n      const o = _.isEmpty(_o) ? '' : JSON.stringify(_o, null, 2);\n      const oo = o ? `, ${o}` : '';\n      \n      if (event.mode === 'useQuery' || event.mode === 'useSubscription' || event.mode === 'select' || event.mode === 'subscribe') {\n        value = `// request to links on remote server\n\n// load links once\nawait deep.select(${q}${o});\n// { error: ${event.error ? deep.stringify(event.error) : 'null'}, data: { ${r}... } }\n\n// load and subscribe to changes\ndeep.subscribe(${q}${o})\n.subscribe({ next: (links) => {}, error: (error) => {} });\n// links // ${r}...\n\n// hint: feel free to use deep variable in browser console!\n\n${!!_o.table && `// minilinks awailable only for { table: 'links' }`}\n${!_o.table && `// request to links in local memory (minilinks)\n\n// find once\ndeep.ml.select(${q}${o});\n// Link[]...\n\n// subscribe to changes locally\ndeep.ml.subscribe(${q}${o})\n.subscribe({ next: (links) => {}, error: (error) => {} });\n// links // Link[]...\n\n// loaded with deep.select and deep.subscribe plain links\nconst Contain = deep.idLocal('@deep-foundation/core', 'Contain');\nconst results = await deep.select({\n  in: { type: Contain, from: deep.linkId, },\n  return: { contain: { in: { type: Contain } } } // get related links too\n}),\n// can be added to minilinks with:\ndeep.minilinks.apply(\n  results,\n  'name', // STRICTLY UNIQUE\n);\n// you can update links stage in minilinks, by some select/subscription flow manually\n// in react hooks deep.useSubscription and deep.useQuery apply always automatically\n// then you can simply travel by it\nconst user = deep.get(deep.linkId);\nuser.travel().out({ type: Contain }).select();\n`}`;\n      }\n  \n      if (event.mode === 'insert') {\n        value = `// request to links on remote server\nawait deep.insert(${q}${oo});\n// { error: ${event.error ? deep.stringify(event.error) : 'null'}, data: { ${r}... } }\n\n// possible to insert multiple links at request\nawait deep.insert({\n  from: deep.idLocal('@deep-foundation/core', 'clientSupportsJs'),\n  type: deep.idLocal('@deep-foundation/core', 'Handler'),\n  to: {\n    // from/to/type as single relations can be\n    // Id of existed link or link to insert:\n    type_id: deep.idLocal('@deep-foundation/core', 'TSX'),\n    string: \\`({ deep, require }) => { var React = require('react'); return () => <div>my new component</div>; }\\`,\n  },\n  // short cut for create Contain links:\n  containerId: deep.linkId, // current user\n  name: 'my new component',\n});\n\n// hint: feel free to use deep variable in browser console!\n\n// by default only remote request\n// you can set option once\nawait deep.insert({ ... }, { local: true, ... });\n// or globally\ndeep.local = true;\n// and link will be inserted in local deep.minilinks\n// before transaction to server\n// links inserted on client side first is virtual with -123 negative id\n`;\n      }\n  \n      if (event.mode === 'update') {\n        value = `// request to links on remote server\nawait deep.update(${q}, ${v}${oo});\n// { error: ${event.error ? deep.stringify(event.error) : 'null'}, data: { ${r}... } }\n\n// hint: feel free to use deep variable in browser console!\n\n// by default only remote request\n// you can set option once\nawait deep.update({ ... }, { ... }, { local: true, ... });\n// or globally\ndeep.local = true;\n// and link will be updated in local deep.minilinks\n// before transaction to server\n`;\n      }\n  \n      if (event.mode === 'delete') {\n        value = `// request to links on remote server\nawait deep.delete(${q}${oo});\n// { error: ${event.error ? deep.stringify(event.error) : 'null'}, data: { ${r}... } }\n\n// hint: feel free to use deep variable in browser console!\n\n// by default only remote request\n// you can set option once\nawait deep.delete({ ... }, { ... }, { local: true, ... });\n// or globally\ndeep.local = true;\n// and link will be deleted in local deep.minilinks\n// before transaction to server\n`;\n      }\n  \n      return <Go.Editor editable={false} readOnly value={value} fillSize/>;\n    }, []);\n\n    return <go.On do={{\n      exec: (g,v,o) => go.do('view', { id: go.linkId, Component: View })),\n    }}>\n      <c.Button\n        w='3em' h='3em'\n        variant={isActive ? 'active' : undefined}\n        ref={ref}\n        onClick={() => go.do('exec')}\n      >\n        <FaNodeJs/>\n      </c.Button>\n    </go.On>;\n  };\n}",
        "link_id": 21927
      }
    },
    {
      "id": 21929,
      "type_id": 3,
      "from_id": 2586,
      "to_id": 21927,
      "value": {
        "id": 1811,
        "value": "QueriesClientComponent",
        "link_id": 21929
      }
    },
    {
      "id": 21936,
      "type_id": 35,
      "from_id": 145,
      "to_id": 21927
    },
    {
      "id": 21939,
      "type_id": 3,
      "from_id": 2586,
      "to_id": 21936,
      "value": {
        "id": 1815,
        "value": "QueriesClient",
        "link_id": 21939
      }
    },
    {
      "id": 21942,
      "type_id": 5258,
      "from_id": 21936,
      "to_id": 20478
    },
    {
      "id": 21944,
      "type_id": 3,
      "from_id": 2586,
      "to_id": 21942
    },
    {
      "id": 21925,
      "type_id": 717,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 1810,
        "value": "async ({ deep, data, Go, require }) => {\n  const React = require('react');\n  const { FaReact } = require(\"react-icons/fa\");\n  const c = require('@chakra-ui/react');\n  const _ = require('lodash');\n\n  const dpl = '@deep-foundation/perception-links';\n  const dc = '@deep-foundation/core';\n\n  return ({\n    go,\n    handlerId,\n\n    isActive,\n  }, ref) => {\n    const View = React.useCallback(({ event }) => {\n      let value = event.mode;\n  \n      const q = JSON.stringify(event.query, null, 2);\n      const r = JSON.stringify(event.remoteData).slice(1,30);\n      const v = JSON.stringify(event.value || {}, null, 2);\n\n      const _o = { ...event.options };\n      if (_o.table === 'links') delete _o.table;\n\n      const o = _.isEmpty(_o) ? '' : JSON.stringify(_o, null, 2);\n      const oo = o ? `, ${o}` : '';\n      \n      if (event.mode === 'useQuery' || event.mode === 'useSubscription' || event.mode === 'select' || event.mode === 'subscribe') {\n        value = `// basically deep.select and deep.subscribe returns plain data\n// but deep.useQuery and deep.useSubscriptions always\n// apply synced from server to deep.minilinks local memory\n\n// load links once\nconst { data } = deep.useQuery(${q}${o});\n// { error: ${event.error ? deep.stringify(event.error) : 'null'}, data: { ${r}... }, loading: false }\n\n// load and subscribe to reactive links\nconst { data } = deep.useSubscription(${q}${o})\n// { error: ${event.error ? deep.stringify(event.error) : 'null'}, data: { ${r}... }, loading: false }\n\n// equal queries can be used in local memory\n\n// find links once\nconst data = deep.useLocalSubscription(${q}${o});\n// data // Link[];\n\n// find links with reactive subscription\nconst data = deep.useLocalSubscription(${q}${o});\n// data // Link[];\n\n// links fetched from hooks already exists in minilinks and\n// related each other\n// you can travel by it simply:\nhandler.to.value // { value: \\`my new component\\` }\n\n// you can get reactive links from static links or ids\nconst [user, handler] = deep.useLinks(deep.linkId, notReactiveLink);\n\n// pretty handy use traveler:\nconst data = deep.useSubscription(myLink.travel().out({ type: Contain }).to().query());\n`;\n      }\n  \n      if (event.mode === 'insert') {\n        value = `// hints for react\n\n// if not need to await result\nReact.useEffect(() => {\n  deep.insert(${q}${oo});\n}, []);\n\n// if need to await\nReact.useEffect(() => { (async () => {\n  deep.insert(${q}${oo});\n})() }, []);\n\n<c.Box onChange={async () => {\n  await deep.insert(${q}${oo});\n}}>button</Button>`\n      }\n  \n      if (event.mode === 'update') {\n        value = `// hints for react\n\n// if not need to await result\nReact.useEffect(() => {\n  deep.update(${q}, ${v}${oo});\n}, []);\n\n// if need to await\nReact.useEffect(() => { (async () => {\n  deep.update(${q}, ${v}${oo});\n})() }, []);\n\n<c.Box onChange={async () => {\n  await deep.update(${q}, ${v}${oo});\n}}>button</Button>`\n      }\n  \n      if (event.mode === 'delete') {\n        value = `// hints for react\n\n// if not need to await result\nReact.useEffect(() => {\n  deep.delete(${q}${oo});\n}, []);\n\n// if need to await\nReact.useEffect(() => { (async () => {\n  deep.delete(${q}${oo});\n})() }, []);\n\n<c.Box onChange={async () => {\n  await deep.delete(${q}${oo});\n}}>button</Button>`\n      }\n  \n      return <Go.Editor editable={false} readOnly value={value} fillSize/>;\n    }, []);\n\n    return <go.On do={{\n      exec: (g,v,o) => go.do('view', { id: go.linkId, Component: View })),\n    }}>\n      <c.Button\n        w='3em' h='3em'\n        variant={isActive ? 'active' : undefined}\n        ref={ref}\n        onClick={() => go.do('exec')}\n      >\n        <FaReact/>\n      </c.Button>\n    </go.On>;\n  };\n}",
        "link_id": 21925
      }
    },
    {
      "id": 21928,
      "type_id": 3,
      "from_id": 2586,
      "to_id": 21925,
      "value": {
        "id": 1809,
        "value": "QueriesReactComponent",
        "link_id": 21928
      }
    },
    {
      "id": 21938,
      "type_id": 35,
      "from_id": 145,
      "to_id": 21925
    },
    {
      "id": 21941,
      "type_id": 3,
      "from_id": 2586,
      "to_id": 21938,
      "value": {
        "id": 1816,
        "value": "QueriesReact",
        "link_id": 21941
      }
    },
    {
      "id": 21945,
      "type_id": 5258,
      "from_id": 21938,
      "to_id": 20478
    },
    {
      "id": 21946,
      "type_id": 3,
      "from_id": 2586,
      "to_id": 21945
    },
    {
      "id": 21949,
      "type_id": 30,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 1819,
        "value": "async ({ deep, data, Go, require }) => {\n    const React = require('react');\n    const { VscJson } = require(\"react-icons/vsc\");\n    const c = require('@chakra-ui/react');\n    const _ = require('lodash');\n    const dpl = '@deep-foundation/perception-links';\n    const dc = '@deep-foundation/core';\n    return ({ go, handlerId, isActive, }, ref) => {\n        const View = React.useCallback(({ event }) => {\n            const value = JSON.stringify(event.remoteData, null, 2);\n            return React.createElement(Go.Editor, { editable: false, readOnly: true, value: value, fillSize: true });\n        }, []);\n        return React.createElement(go.On, { do: {\n                exec: (g, v, o) => go.do('view', { id: go.linkId, Component: View })\n            } },\n            React.createElement(c.Button, { w: '3em', h: '3em', variant: isActive ? 'active' : undefined, ref: ref, onClick: () => go.do('exec') },\n                React.createElement(VscJson, null)));\n    };\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsibW9kdWxlLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxLQUFLLEVBQUUsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLEVBQUUsRUFBRSxPQUFPLEVBQUUsRUFBRSxFQUFFO0lBQ3BDLE1BQU0sS0FBSyxHQUFHLE9BQU8sQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUMvQixNQUFNLEVBQUUsT0FBTyxFQUFFLEdBQUcsT0FBTyxDQUFDLGlCQUFpQixDQUFDLENBQUM7SUFDL0MsTUFBTSxDQUFDLEdBQUcsT0FBTyxDQUFDLGtCQUFrQixDQUFDLENBQUM7SUFDdEMsTUFBTSxDQUFDLEdBQUcsT0FBTyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBRTVCLE1BQU0sR0FBRyxHQUFHLG1DQUFtQyxDQUFDO0lBQ2hELE1BQU0sRUFBRSxHQUFHLHVCQUF1QixDQUFDO0lBRW5DLE9BQU8sQ0FBQyxFQUNOLEVBQUUsRUFDRixTQUFTLEVBRVQsUUFBUSxHQUNULEVBQUUsR0FBRyxFQUFFLEVBQUU7UUFDUixNQUFNLElBQUksR0FBRyxLQUFLLENBQUMsV0FBVyxDQUFDLENBQUMsRUFBRSxLQUFLLEVBQUUsRUFBRSxFQUFFO1lBQzNDLE1BQU0sS0FBSyxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsS0FBSyxDQUFDLFVBQVUsRUFBRSxJQUFJLEVBQUUsQ0FBQyxDQUFDLENBQUM7WUFFeEQsT0FBTyxvQkFBQyxFQUFFLENBQUMsTUFBTSxJQUFDLFFBQVEsRUFBRSxLQUFLLEVBQUUsUUFBUSxRQUFDLEtBQUssRUFBRSxLQUFLLEVBQUUsUUFBUSxTQUFFLENBQUM7UUFDdkUsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDO1FBRVAsT0FBTyxvQkFBQyxFQUFFLENBQUMsRUFBRSxJQUFDLEVBQUUsRUFBRTtnQkFDaEIsSUFBSSxFQUFFLENBQUMsQ0FBQyxFQUFDLENBQUMsRUFBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsTUFBTSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsQ0FBQyxNQUFNLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxDQUFDO2FBQ25FO1lBQ0Msb0JBQUMsQ0FBQyxDQUFDLE1BQU0sSUFDUCxDQUFDLEVBQUMsS0FBSyxFQUFDLENBQUMsRUFBQyxLQUFLLEVBQ2YsT0FBTyxFQUFFLFFBQVEsQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxTQUFTLEVBQ3hDLEdBQUcsRUFBRSxHQUFHLEVBQ1IsT0FBTyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsTUFBTSxDQUFDO2dCQUU1QixvQkFBQyxPQUFPLE9BQUUsQ0FDRCxDQUNMLENBQUM7SUFDWCxDQUFDLENBQUM7QUFDSixDQUFDLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJhc3luYyAoeyBkZWVwLCBkYXRhLCBHbywgcmVxdWlyZSB9KSA9PiB7XG4gIGNvbnN0IFJlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcbiAgY29uc3QgeyBWc2NKc29uIH0gPSByZXF1aXJlKFwicmVhY3QtaWNvbnMvdnNjXCIpO1xuICBjb25zdCBjID0gcmVxdWlyZSgnQGNoYWtyYS11aS9yZWFjdCcpO1xuICBjb25zdCBfID0gcmVxdWlyZSgnbG9kYXNoJyk7XG5cbiAgY29uc3QgZHBsID0gJ0BkZWVwLWZvdW5kYXRpb24vcGVyY2VwdGlvbi1saW5rcyc7XG4gIGNvbnN0IGRjID0gJ0BkZWVwLWZvdW5kYXRpb24vY29yZSc7XG5cbiAgcmV0dXJuICh7XG4gICAgZ28sXG4gICAgaGFuZGxlcklkLFxuXG4gICAgaXNBY3RpdmUsXG4gIH0sIHJlZikgPT4ge1xuICAgIGNvbnN0IFZpZXcgPSBSZWFjdC51c2VDYWxsYmFjaygoeyBldmVudCB9KSA9PiB7XG4gICAgICBjb25zdCB2YWx1ZSA9IEpTT04uc3RyaW5naWZ5KGV2ZW50LnJlbW90ZURhdGEsIG51bGwsIDIpO1xuICBcbiAgICAgIHJldHVybiA8R28uRWRpdG9yIGVkaXRhYmxlPXtmYWxzZX0gcmVhZE9ubHkgdmFsdWU9e3ZhbHVlfSBmaWxsU2l6ZS8+O1xuICAgIH0sIFtdKTtcblxuICAgIHJldHVybiA8Z28uT24gZG89e3tcbiAgICAgIGV4ZWM6IChnLHYsbykgPT4gZ28uZG8oJ3ZpZXcnLCB7IGlkOiBnby5saW5rSWQsIENvbXBvbmVudDogVmlldyB9KSksXG4gICAgfX0+XG4gICAgICA8Yy5CdXR0b25cbiAgICAgICAgdz0nM2VtJyBoPSczZW0nXG4gICAgICAgIHZhcmlhbnQ9e2lzQWN0aXZlID8gJ2FjdGl2ZScgOiB1bmRlZmluZWR9XG4gICAgICAgIHJlZj17cmVmfVxuICAgICAgICBvbkNsaWNrPXsoKSA9PiBnby5kbygnZXhlYycpfVxuICAgICAgPlxuICAgICAgICA8VnNjSnNvbi8+XG4gICAgICA8L2MuQnV0dG9uPlxuICAgIDwvZ28uT24+O1xuICB9O1xufSJdfQ==",
        "link_id": 21949
      }
    },
    {
      "id": 21952,
      "type_id": 3,
      "from_id": 21926,
      "to_id": 21949,
      "value": {
        "id": 1818,
        "value": "generated",
        "link_id": 21952
      }
    },
    {
      "id": 21953,
      "type_id": 143,
      "from_id": 21949,
      "to_id": 21926
    },
    {
      "id": 21956,
      "type_id": 3,
      "from_id": 21926,
      "to_id": 21953
    },
    {
      "id": 21926,
      "type_id": 717,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 1814,
        "value": "async ({ deep, data, Go, require }) => {\n  const React = require('react');\n  const { VscJson } = require(\"react-icons/vsc\");\n  const c = require('@chakra-ui/react');\n  const _ = require('lodash');\n\n  const dpl = '@deep-foundation/perception-links';\n  const dc = '@deep-foundation/core';\n\n  return ({\n    go,\n    handlerId,\n\n    isActive,\n  }, ref) => {\n    const View = React.useCallback(({ event }) => {\n      const value = JSON.stringify(event.remoteData, null, 2);\n  \n      return <Go.Editor editable={false} readOnly value={value} fillSize/>;\n    }, []);\n\n    return <go.On do={{\n      exec: (g,v,o) => go.do('view', { id: go.linkId, Component: View })),\n    }}>\n      <c.Button\n        w='3em' h='3em'\n        variant={isActive ? 'active' : undefined}\n        ref={ref}\n        onClick={() => go.do('exec')}\n      >\n        <VscJson/>\n      </c.Button>\n    </go.On>;\n  };\n}",
        "link_id": 21926
      }
    },
    {
      "id": 21930,
      "type_id": 3,
      "from_id": 2586,
      "to_id": 21926,
      "value": {
        "id": 1813,
        "value": "QueriesResultsComponent",
        "link_id": 21930
      }
    },
    {
      "id": 21940,
      "type_id": 35,
      "from_id": 145,
      "to_id": 21926
    },
    {
      "id": 21943,
      "type_id": 3,
      "from_id": 2586,
      "to_id": 21940,
      "value": {
        "id": 1817,
        "value": "QueriesResults",
        "link_id": 21943
      }
    },
    {
      "id": 21947,
      "type_id": 5258,
      "from_id": 21940,
      "to_id": 20478
    },
    {
      "id": 21948,
      "type_id": 3,
      "from_id": 2586,
      "to_id": 21947
    },
    {
      "id": 21950,
      "type_id": 30,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 1822,
        "value": "async ({ deep, data, Go, require }) => {\n    const React = require('react');\n    const { FaNodeJs } = require(\"react-icons/fa\");\n    const c = require('@chakra-ui/react');\n    const _ = require('lodash');\n    const dpl = '@deep-foundation/perception-links';\n    const dc = '@deep-foundation/core';\n    return ({ go, handlerId, isActive, }, ref) => {\n        const View = React.useCallback(({ event }) => {\n            let value = event.mode;\n            const q = JSON.stringify(event.query, null, 2);\n            const r = JSON.stringify(event.remoteData).slice(1, 30);\n            const v = JSON.stringify(event.value || {}, null, 2);\n            const _o = { ...event.options };\n            if (_o.table === 'links')\n                delete _o.table;\n            const o = _.isEmpty(_o) ? '' : JSON.stringify(_o, null, 2);\n            const oo = o ? `, ${o}` : '';\n            if (event.mode === 'useQuery' || event.mode === 'useSubscription' || event.mode === 'select' || event.mode === 'subscribe') {\n                value = `// request to links on remote server\n\n// load links once\nawait deep.select(${q}${o});\n// { error: ${event.error ? deep.stringify(event.error) : 'null'}, data: { ${r}... } }\n\n// load and subscribe to changes\ndeep.subscribe(${q}${o})\n.subscribe({ next: (links) => {}, error: (error) => {} });\n// links // ${r}...\n\n// hint: feel free to use deep variable in browser console!\n\n${!!_o.table && `// minilinks awailable only for { table: 'links' }`}\n${!_o.table && `// request to links in local memory (minilinks)\n\n// find once\ndeep.ml.select(${q}${o});\n// Link[]...\n\n// subscribe to changes locally\ndeep.ml.subscribe(${q}${o})\n.subscribe({ next: (links) => {}, error: (error) => {} });\n// links // Link[]...\n\n// loaded with deep.select and deep.subscribe plain links\nconst Contain = deep.idLocal('@deep-foundation/core', 'Contain');\nconst results = await deep.select({\n  in: { type: Contain, from: deep.linkId, },\n  return: { contain: { in: { type: Contain } } } // get related links too\n}),\n// can be added to minilinks with:\ndeep.minilinks.apply(\n  results,\n  'name', // STRICTLY UNIQUE\n);\n// you can update links stage in minilinks, by some select/subscription flow manually\n// in react hooks deep.useSubscription and deep.useQuery apply always automatically\n// then you can simply travel by it\nconst user = deep.get(deep.linkId);\nuser.travel().out({ type: Contain }).select();\n`}`;\n            }\n            if (event.mode === 'insert') {\n                value = `// request to links on remote server\nawait deep.insert(${q}${oo});\n// { error: ${event.error ? deep.stringify(event.error) : 'null'}, data: { ${r}... } }\n\n// possible to insert multiple links at request\nawait deep.insert({\n  from: deep.idLocal('@deep-foundation/core', 'clientSupportsJs'),\n  type: deep.idLocal('@deep-foundation/core', 'Handler'),\n  to: {\n    // from/to/type as single relations can be\n    // Id of existed link or link to insert:\n    type_id: deep.idLocal('@deep-foundation/core', 'TSX'),\n    string: \\`({ deep, require }) => { var React = require('react'); return () => <div>my new component</div>; }\\`,\n  },\n  // short cut for create Contain links:\n  containerId: deep.linkId, // current user\n  name: 'my new component',\n});\n\n// hint: feel free to use deep variable in browser console!\n\n// by default only remote request\n// you can set option once\nawait deep.insert({ ... }, { local: true, ... });\n// or globally\ndeep.local = true;\n// and link will be inserted in local deep.minilinks\n// before transaction to server\n// links inserted on client side first is virtual with -123 negative id\n`;\n            }\n            if (event.mode === 'update') {\n                value = `// request to links on remote server\nawait deep.update(${q}, ${v}${oo});\n// { error: ${event.error ? deep.stringify(event.error) : 'null'}, data: { ${r}... } }\n\n// hint: feel free to use deep variable in browser console!\n\n// by default only remote request\n// you can set option once\nawait deep.update({ ... }, { ... }, { local: true, ... });\n// or globally\ndeep.local = true;\n// and link will be updated in local deep.minilinks\n// before transaction to server\n`;\n            }\n            if (event.mode === 'delete') {\n                value = `// request to links on remote server\nawait deep.delete(${q}${oo});\n// { error: ${event.error ? deep.stringify(event.error) : 'null'}, data: { ${r}... } }\n\n// hint: feel free to use deep variable in browser console!\n\n// by default only remote request\n// you can set option once\nawait deep.delete({ ... }, { ... }, { local: true, ... });\n// or globally\ndeep.local = true;\n// and link will be deleted in local deep.minilinks\n// before transaction to server\n`;\n            }\n            return React.createElement(Go.Editor, { editable: false, readOnly: true, value: value, fillSize: true });\n        }, []);\n        return React.createElement(go.On, { do: {\n                exec: (g, v, o) => go.do('view', { id: go.linkId, Component: View })\n            } },\n            React.createElement(c.Button, { w: '3em', h: '3em', variant: isActive ? 'active' : undefined, ref: ref, onClick: () => go.do('exec') },\n                React.createElement(FaNodeJs, null)));\n    };\n};\n//# sourceMappingURL=data:application/json;base64,",
        "link_id": 21950
      }
    },
    {
      "id": 21955,
      "type_id": 3,
      "from_id": 21927,
      "to_id": 21950,
      "value": {
        "id": 1821,
        "value": "generated",
        "link_id": 21955
      }
    },
    {
      "id": 21957,
      "type_id": 143,
      "from_id": 21950,
      "to_id": 21927
    },
    {
      "id": 21959,
      "type_id": 3,
      "from_id": 21927,
      "to_id": 21957
    },
    {
      "id": 21951,
      "type_id": 30,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 1823,
        "value": "async ({ deep, data, Go, require }) => {\n    const React = require('react');\n    const { FaReact } = require(\"react-icons/fa\");\n    const c = require('@chakra-ui/react');\n    const _ = require('lodash');\n    const dpl = '@deep-foundation/perception-links';\n    const dc = '@deep-foundation/core';\n    return ({ go, handlerId, isActive, }, ref) => {\n        const View = React.useCallback(({ event }) => {\n            let value = event.mode;\n            const q = JSON.stringify(event.query, null, 2);\n            const r = JSON.stringify(event.remoteData).slice(1, 30);\n            const v = JSON.stringify(event.value || {}, null, 2);\n            const _o = { ...event.options };\n            if (_o.table === 'links')\n                delete _o.table;\n            const o = _.isEmpty(_o) ? '' : JSON.stringify(_o, null, 2);\n            const oo = o ? `, ${o}` : '';\n            if (event.mode === 'useQuery' || event.mode === 'useSubscription' || event.mode === 'select' || event.mode === 'subscribe') {\n                value = `// basically deep.select and deep.subscribe returns plain data\n// but deep.useQuery and deep.useSubscriptions always\n// apply synced from server to deep.minilinks local memory\n\n// load links once\nconst { data } = deep.useQuery(${q}${o});\n// { error: ${event.error ? deep.stringify(event.error) : 'null'}, data: { ${r}... }, loading: false }\n\n// load and subscribe to reactive links\nconst { data } = deep.useSubscription(${q}${o})\n// { error: ${event.error ? deep.stringify(event.error) : 'null'}, data: { ${r}... }, loading: false }\n\n// equal queries can be used in local memory\n\n// find links once\nconst data = deep.useLocalSubscription(${q}${o});\n// data // Link[];\n\n// find links with reactive subscription\nconst data = deep.useLocalSubscription(${q}${o});\n// data // Link[];\n\n// links fetched from hooks already exists in minilinks and\n// related each other\n// you can travel by it simply:\nhandler.to.value // { value: \\`my new component\\` }\n\n// you can get reactive links from static links or ids\nconst [user, handler] = deep.useLinks(deep.linkId, notReactiveLink);\n\n// pretty handy use traveler:\nconst data = deep.useSubscription(myLink.travel().out({ type: Contain }).to().query());\n`;\n            }\n            if (event.mode === 'insert') {\n                value = `// hints for react\n\n// if not need to await result\nReact.useEffect(() => {\n  deep.insert(${q}${oo});\n}, []);\n\n// if need to await\nReact.useEffect(() => { (async () => {\n  deep.insert(${q}${oo});\n})() }, []);\n\n<c.Box onChange={async () => {\n  await deep.insert(${q}${oo});\n}}>button</Button>`;\n            }\n            if (event.mode === 'update') {\n                value = `// hints for react\n\n// if not need to await result\nReact.useEffect(() => {\n  deep.update(${q}, ${v}${oo});\n}, []);\n\n// if need to await\nReact.useEffect(() => { (async () => {\n  deep.update(${q}, ${v}${oo});\n})() }, []);\n\n<c.Box onChange={async () => {\n  await deep.update(${q}, ${v}${oo});\n}}>button</Button>`;\n            }\n            if (event.mode === 'delete') {\n                value = `// hints for react\n\n// if not need to await result\nReact.useEffect(() => {\n  deep.delete(${q}${oo});\n}, []);\n\n// if need to await\nReact.useEffect(() => { (async () => {\n  deep.delete(${q}${oo});\n})() }, []);\n\n<c.Box onChange={async () => {\n  await deep.delete(${q}${oo});\n}}>button</Button>`;\n            }\n            return React.createElement(Go.Editor, { editable: false, readOnly: true, value: value, fillSize: true });\n        }, []);\n        return React.createElement(go.On, { do: {\n                exec: (g, v, o) => go.do('view', { id: go.linkId, Component: View })\n            } },\n            React.createElement(c.Button, { w: '3em', h: '3em', variant: isActive ? 'active' : undefined, ref: ref, onClick: () => go.do('exec') },\n                React.createElement(FaReact, null)));\n    };\n};\n//# sourceMappingURL=data:application/json;base64,",
        "link_id": 21951
      }
    },
    {
      "id": 21954,
      "type_id": 3,
      "from_id": 21925,
      "to_id": 21951,
      "value": {
        "id": 1820,
        "value": "generated",
        "link_id": 21954
      }
    },
    {
      "id": 21958,
      "type_id": 143,
      "from_id": 21951,
      "to_id": 21925
    },
    {
      "id": 21960,
      "type_id": 3,
      "from_id": 21925,
      "to_id": 21958
    },
    {
      "id": 22426,
      "type_id": 717,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 1825,
        "value": "({ deep, data, require, Go }) => {\n  const React = require('react');\n  \n  const c = require('@chakra-ui/react');\n  const _ = require('lodash');\n  const moment = require('moment');\n  const { useDebounceCallback } = require('@react-hook/debounce');\n\n  var dpl = '@deep-foundation/perception-links';\n  var dc = '@deep-foundation/core';\n\n  const Stack = deep.idLocal(dpl, 'Stack');\n  const Queries = deep.idLocal(dpl, 'Queries');\n  const Compatable = deep.idLocal(dpl, 'Compatable');\n  const Handler = deep.idLocal(dc, 'Handler');\n  const QueriesClient = deep.idLocal(dpl, 'QueriesClient');\n\n  return ({\n    go,\n\n    event,\n\n    children,\n  }, ref) => {\n    const { data: views } = deep.useQuery({\n      type_id: Handler,\n      out: {\n        type_id: Compatable,\n        to_id: Queries,\n      },\n    });\n  \n    const ViewItem = React.useMemo(() => React.memo(({ link: handler, isActive }) => {\n      return <Go.Handler handlerId={handler.id} event={event} isActive={isActive}/>;\n    }), []);\n\n    const [o, setO] = React.useState();\n    React.useEffect(() => go.set(Stack), []);\n\n    return <go.On\n      do={{\n        view: (g,v,o) => setO(o),\n      }}\n    >\n      <c.Flex ref={ref} direction='column' h='100%'>\n        <c.Box h='3em'><go.Provider linkId={Stack}>\n          <go.Component path={[dpl, 'Stack']} direction='horizontal' links={views} Item={ViewItem}/>\n        </go.Provider></c.Box>\n        {typeof(o?.Component) === 'function' && [<go.Provider key={o.id} linkId={o.id}>\n          <c.Box flex='1' position='relative'>\n            <o.Component event={event}/>\n          </c.Box>\n        </go.Provider>]}\n      </c.Flex>\n    </go.On>;\n  };\n}",
        "link_id": 22426
      }
    },
    {
      "id": 22427,
      "type_id": 3,
      "from_id": 2586,
      "to_id": 22426,
      "value": {
        "id": 1824,
        "value": "QueryComponent",
        "link_id": 22427
      }
    },
    {
      "id": 22430,
      "type_id": 35,
      "from_id": 145,
      "to_id": 22426
    },
    {
      "id": 22431,
      "type_id": 3,
      "from_id": 2586,
      "to_id": 22430,
      "value": {
        "id": 1826,
        "value": "Query",
        "link_id": 22431
      }
    },
    {
      "id": 22432,
      "type_id": 30,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 1828,
        "value": "({ deep, data, require, Go }) => {\n    const React = require('react');\n    const c = require('@chakra-ui/react');\n    const _ = require('lodash');\n    const moment = require('moment');\n    const { useDebounceCallback } = require('@react-hook/debounce');\n    var dpl = '@deep-foundation/perception-links';\n    var dc = '@deep-foundation/core';\n    const Stack = deep.idLocal(dpl, 'Stack');\n    const Queries = deep.idLocal(dpl, 'Queries');\n    const Compatable = deep.idLocal(dpl, 'Compatable');\n    const Handler = deep.idLocal(dc, 'Handler');\n    const QueriesClient = deep.idLocal(dpl, 'QueriesClient');\n    return ({ go, event, children, }, ref) => {\n        const { data: views } = deep.useQuery({\n            type_id: Handler,\n            out: {\n                type_id: Compatable,\n                to_id: Queries,\n            },\n        });\n        const ViewItem = React.useMemo(() => React.memo(({ link: handler, isActive }) => {\n            return React.createElement(Go.Handler, { handlerId: handler.id, event: event, isActive: isActive });\n        }), []);\n        const [o, setO] = React.useState();\n        React.useEffect(() => go.set(Stack), []);\n        return React.createElement(go.On, { do: {\n                view: (g, v, o) => setO(o),\n            } },\n            React.createElement(c.Flex, { ref: ref, direction: 'column', h: '100%' },\n                React.createElement(c.Box, { h: '3em' },\n                    React.createElement(go.Provider, { linkId: Stack },\n                        React.createElement(go.Component, { path: [dpl, 'Stack'], direction: 'horizontal', links: views, Item: ViewItem }))),\n                typeof (o?.Component) === 'function' && [React.createElement(go.Provider, { key: o.id, linkId: o.id },\n                        React.createElement(c.Box, { flex: '1', position: 'relative' },\n                            React.createElement(o.Component, { event: event })))]));\n    };\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsibW9kdWxlLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxDQUFDLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRTtJQUM5QixNQUFNLEtBQUssR0FBRyxPQUFPLENBQUMsT0FBTyxDQUFDLENBQUM7SUFFL0IsTUFBTSxDQUFDLEdBQUcsT0FBTyxDQUFDLGtCQUFrQixDQUFDLENBQUM7SUFDdEMsTUFBTSxDQUFDLEdBQUcsT0FBTyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQzVCLE1BQU0sTUFBTSxHQUFHLE9BQU8sQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUNqQyxNQUFNLEVBQUUsbUJBQW1CLEVBQUUsR0FBRyxPQUFPLENBQUMsc0JBQXNCLENBQUMsQ0FBQztJQUVoRSxJQUFJLEdBQUcsR0FBRyxtQ0FBbUMsQ0FBQztJQUM5QyxJQUFJLEVBQUUsR0FBRyx1QkFBdUIsQ0FBQztJQUVqQyxNQUFNLEtBQUssR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxPQUFPLENBQUMsQ0FBQztJQUN6QyxNQUFNLE9BQU8sR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxTQUFTLENBQUMsQ0FBQztJQUM3QyxNQUFNLFVBQVUsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxZQUFZLENBQUMsQ0FBQztJQUNuRCxNQUFNLE9BQU8sR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLEVBQUUsRUFBRSxTQUFTLENBQUMsQ0FBQztJQUM1QyxNQUFNLGFBQWEsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxlQUFlLENBQUMsQ0FBQztJQUV6RCxPQUFPLENBQUMsRUFDTixFQUFFLEVBRUYsS0FBSyxFQUVMLFFBQVEsR0FDVCxFQUFFLEdBQUcsRUFBRSxFQUFFO1FBQ1IsTUFBTSxFQUFFLElBQUksRUFBRSxLQUFLLEVBQUUsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDO1lBQ3BDLE9BQU8sRUFBRSxPQUFPO1lBQ2hCLEdBQUcsRUFBRTtnQkFDSCxPQUFPLEVBQUUsVUFBVTtnQkFDbkIsS0FBSyxFQUFFLE9BQU87YUFDZjtTQUNGLENBQUMsQ0FBQztRQUVILE1BQU0sUUFBUSxHQUFHLEtBQUssQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDLEVBQUUsSUFBSSxFQUFFLE9BQU8sRUFBRSxRQUFRLEVBQUUsRUFBRSxFQUFFO1lBQzlFLE9BQU8sb0JBQUMsRUFBRSxDQUFDLE9BQU8sSUFBQyxTQUFTLEVBQUUsT0FBTyxDQUFDLEVBQUUsRUFBRSxLQUFLLEVBQUUsS0FBSyxFQUFFLFFBQVEsRUFBRSxRQUFRLEdBQUcsQ0FBQztRQUNoRixDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQztRQUVSLE1BQU0sQ0FBQyxDQUFDLEVBQUUsSUFBSSxDQUFDLEdBQUcsS0FBSyxDQUFDLFFBQVEsRUFBRSxDQUFDO1FBQ25DLEtBQUssQ0FBQyxTQUFTLENBQUMsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQztRQUV6QyxPQUFPLG9CQUFDLEVBQUUsQ0FBQyxFQUFFLElBQ1gsRUFBRSxFQUFFO2dCQUNGLElBQUksRUFBRSxDQUFDLENBQUMsRUFBQyxDQUFDLEVBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO2FBQ3pCO1lBRUQsb0JBQUMsQ0FBQyxDQUFDLElBQUksSUFBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLFNBQVMsRUFBQyxRQUFRLEVBQUMsQ0FBQyxFQUFDLE1BQU07Z0JBQzNDLG9CQUFDLENBQUMsQ0FBQyxHQUFHLElBQUMsQ0FBQyxFQUFDLEtBQUs7b0JBQUMsb0JBQUMsRUFBRSxDQUFDLFFBQVEsSUFBQyxNQUFNLEVBQUUsS0FBSzt3QkFDdkMsb0JBQUMsRUFBRSxDQUFDLFNBQVMsSUFBQyxJQUFJLEVBQUUsQ0FBQyxHQUFHLEVBQUUsT0FBTyxDQUFDLEVBQUUsU0FBUyxFQUFDLFlBQVksRUFBQyxLQUFLLEVBQUUsS0FBSyxFQUFFLElBQUksRUFBRSxRQUFRLEdBQUcsQ0FDOUUsQ0FBUTtnQkFDckIsT0FBTSxDQUFDLENBQUMsRUFBRSxTQUFTLENBQUMsS0FBSyxVQUFVLElBQUksQ0FBQyxvQkFBQyxFQUFFLENBQUMsUUFBUSxJQUFDLEdBQUcsRUFBRSxDQUFDLENBQUMsRUFBRSxFQUFFLE1BQU0sRUFBRSxDQUFDLENBQUMsRUFBRTt3QkFDM0Usb0JBQUMsQ0FBQyxDQUFDLEdBQUcsSUFBQyxJQUFJLEVBQUMsR0FBRyxFQUFDLFFBQVEsRUFBQyxVQUFVOzRCQUNqQyxvQkFBQyxDQUFDLENBQUMsU0FBUyxJQUFDLEtBQUssRUFBRSxLQUFLLEdBQUcsQ0FDdEIsQ0FDSSxDQUFDLENBQ1IsQ0FDSCxDQUFDO0lBQ1gsQ0FBQyxDQUFDO0FBQ0osQ0FBQyxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiKHsgZGVlcCwgZGF0YSwgcmVxdWlyZSwgR28gfSkgPT4ge1xuICBjb25zdCBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XG4gIFxuICBjb25zdCBjID0gcmVxdWlyZSgnQGNoYWtyYS11aS9yZWFjdCcpO1xuICBjb25zdCBfID0gcmVxdWlyZSgnbG9kYXNoJyk7XG4gIGNvbnN0IG1vbWVudCA9IHJlcXVpcmUoJ21vbWVudCcpO1xuICBjb25zdCB7IHVzZURlYm91bmNlQ2FsbGJhY2sgfSA9IHJlcXVpcmUoJ0ByZWFjdC1ob29rL2RlYm91bmNlJyk7XG5cbiAgdmFyIGRwbCA9ICdAZGVlcC1mb3VuZGF0aW9uL3BlcmNlcHRpb24tbGlua3MnO1xuICB2YXIgZGMgPSAnQGRlZXAtZm91bmRhdGlvbi9jb3JlJztcblxuICBjb25zdCBTdGFjayA9IGRlZXAuaWRMb2NhbChkcGwsICdTdGFjaycpO1xuICBjb25zdCBRdWVyaWVzID0gZGVlcC5pZExvY2FsKGRwbCwgJ1F1ZXJpZXMnKTtcbiAgY29uc3QgQ29tcGF0YWJsZSA9IGRlZXAuaWRMb2NhbChkcGwsICdDb21wYXRhYmxlJyk7XG4gIGNvbnN0IEhhbmRsZXIgPSBkZWVwLmlkTG9jYWwoZGMsICdIYW5kbGVyJyk7XG4gIGNvbnN0IFF1ZXJpZXNDbGllbnQgPSBkZWVwLmlkTG9jYWwoZHBsLCAnUXVlcmllc0NsaWVudCcpO1xuXG4gIHJldHVybiAoe1xuICAgIGdvLFxuXG4gICAgZXZlbnQsXG5cbiAgICBjaGlsZHJlbixcbiAgfSwgcmVmKSA9PiB7XG4gICAgY29uc3QgeyBkYXRhOiB2aWV3cyB9ID0gZGVlcC51c2VRdWVyeSh7XG4gICAgICB0eXBlX2lkOiBIYW5kbGVyLFxuICAgICAgb3V0OiB7XG4gICAgICAgIHR5cGVfaWQ6IENvbXBhdGFibGUsXG4gICAgICAgIHRvX2lkOiBRdWVyaWVzLFxuICAgICAgfSxcbiAgICB9KTtcbiAgXG4gICAgY29uc3QgVmlld0l0ZW0gPSBSZWFjdC51c2VNZW1vKCgpID0+IFJlYWN0Lm1lbW8oKHsgbGluazogaGFuZGxlciwgaXNBY3RpdmUgfSkgPT4ge1xuICAgICAgcmV0dXJuIDxHby5IYW5kbGVyIGhhbmRsZXJJZD17aGFuZGxlci5pZH0gZXZlbnQ9e2V2ZW50fSBpc0FjdGl2ZT17aXNBY3RpdmV9Lz47XG4gICAgfSksIFtdKTtcblxuICAgIGNvbnN0IFtvLCBzZXRPXSA9IFJlYWN0LnVzZVN0YXRlKCk7XG4gICAgUmVhY3QudXNlRWZmZWN0KCgpID0+IGdvLnNldChTdGFjayksIFtdKTtcblxuICAgIHJldHVybiA8Z28uT25cbiAgICAgIGRvPXt7XG4gICAgICAgIHZpZXc6IChnLHYsbykgPT4gc2V0TyhvKSxcbiAgICAgIH19XG4gICAgPlxuICAgICAgPGMuRmxleCByZWY9e3JlZn0gZGlyZWN0aW9uPSdjb2x1bW4nIGg9JzEwMCUnPlxuICAgICAgICA8Yy5Cb3ggaD0nM2VtJz48Z28uUHJvdmlkZXIgbGlua0lkPXtTdGFja30+XG4gICAgICAgICAgPGdvLkNvbXBvbmVudCBwYXRoPXtbZHBsLCAnU3RhY2snXX0gZGlyZWN0aW9uPSdob3Jpem9udGFsJyBsaW5rcz17dmlld3N9IEl0ZW09e1ZpZXdJdGVtfS8+XG4gICAgICAgIDwvZ28uUHJvdmlkZXI+PC9jLkJveD5cbiAgICAgICAge3R5cGVvZihvPy5Db21wb25lbnQpID09PSAnZnVuY3Rpb24nICYmIFs8Z28uUHJvdmlkZXIga2V5PXtvLmlkfSBsaW5rSWQ9e28uaWR9PlxuICAgICAgICAgIDxjLkJveCBmbGV4PScxJyBwb3NpdGlvbj0ncmVsYXRpdmUnPlxuICAgICAgICAgICAgPG8uQ29tcG9uZW50IGV2ZW50PXtldmVudH0vPlxuICAgICAgICAgIDwvYy5Cb3g+XG4gICAgICAgIDwvZ28uUHJvdmlkZXI+XX1cbiAgICAgIDwvYy5GbGV4PlxuICAgIDwvZ28uT24+O1xuICB9O1xufSJdfQ==",
        "link_id": 22432
      }
    },
    {
      "id": 22433,
      "type_id": 3,
      "from_id": 22426,
      "to_id": 22432,
      "value": {
        "id": 1827,
        "value": "generated",
        "link_id": 22433
      }
    },
    {
      "id": 22434,
      "type_id": 143,
      "from_id": 22432,
      "to_id": 22426
    },
    {
      "id": 22435,
      "type_id": 3,
      "from_id": 22426,
      "to_id": 22434
    },
    {
      "id": 19402,
      "type_id": 717,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 1737,
        "value": "",
        "link_id": 19402
      }
    },
    {
      "id": 19978,
      "type_id": 717,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 1753,
        "value": "async ({ deep, data, Go, require }) => {\n  const React = require('react');\n  const { LuChevronLast, LuChevronFirst } = require(\"react-icons/lu\");\n  const { IoInfiniteSharp } = require(\"react-icons/io5\");\n  const { Planet } = require('react-planet');\n  const c = require('@chakra-ui/react');\n\n  const {\n    TypedIcon, DownIcon, UpIcon, TypeIcon, InIcon, OutIcon, FromIcon, ToIcon,\n  } = require('@deep-foundation/perception-app');\n\n  const dpl = '@deep-foundation/perception-links';\n\n  const TreeList = deep.idLocal(dpl, 'TreeList');\n\n  const _Item = ({ link, isActive, Item, index, position }) => {\n    const go = Go.useGo();\n    const Component = link?.Component || Item;\n    return <Component link={link} go={go} isActive={isActive} position={position} index={index}/>;\n  }\n\n  return ({\n    go,\n\n    links: _links,\n\n    Component,\n    ErrorComponent,\n    UnhandledComponent,\n\n    Item,\n\n    saveHistory = false,\n\n    linkId,\n    link,\n    handlerId,\n    goHandler,\n\n    ...props\n  }, ref) => {\n    const links = React.useMemo(() => _links.filter(l => !!l?.id), [_links]);\n    const list = links.map((link, i) => !!link ? <go.Provider key={link.id} linkId={link.id}>\n      <_Item\n        link={link} isActive={go.value === link.id} Item={Item} saveHistory={saveHistory}\n        index={i} position={i / (links.length - 1)}\n      />\n    </go.Provider> : <React.Fragment/>);\n\n    const index = React.useMemo(() => links.findIndex(l => l?.id === go.value), [go.value]);\n    const position = React.useMemo(() => index / (links.length - 1), [index]);\n\n    return <go.On do={{\n      focus: (g,v,id,o) => !id && go.do('use', o),\n      exec: (g,v,o) => !!go.value && go.go.do('exec', { id: go.value, index, position }),\n      up: (g,v,o) => go.set().go.go.do('up', { ...o, id: go.value, index, position }),\n      down: (g,v,o) => go.set().go.go.do('down', { ...o, id: go.value, index, position }),\n      left: (g,v,o) => go.focus(go.prev(links)),\n      right: (g,v,o) => go.focus(go.next(links)),\n      use: (g,v,o) => {\n        let id = o?.id;\n        if (typeof(o?.position) === 'number') {\n          id = links?.[Math.round((links.length - 1) * o.position)]?.id;\n        console.log('XXXX', o, id, links, Math.round((links.length - 1) * o.position));\n        }\n        if (typeof(id) === 'number' || typeof(id) === 'string') id != go.value && go(id) && go.set(id).go(id)?.go?.do('use');\n      },\n    }} focus={{\n    }}>\n      <Planet\n        orbitRadius={70}\n        mass={1}\n        tension={500}\n        friction={19}\n        {...props}\n      >\n        {list}\n      </Planet>\n    </go.On>;\n  };\n}",
        "link_id": 19978
      }
    },
    {
      "id": 19979,
      "type_id": 3,
      "from_id": 2586,
      "to_id": 19978,
      "value": {
        "id": 1752,
        "value": "PlanetComponent",
        "link_id": 19979
      }
    },
    {
      "id": 19982,
      "type_id": 35,
      "from_id": 145,
      "to_id": 19978
    },
    {
      "id": 19983,
      "type_id": 3,
      "from_id": 2586,
      "to_id": 19982,
      "value": {
        "id": 1754,
        "value": "Planet",
        "link_id": 19983
      }
    },
    {
      "id": 19984,
      "type_id": 30,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 1756,
        "value": "async ({ deep, data, Go, require }) => {\n    const React = require('react');\n    const { LuChevronLast, LuChevronFirst } = require(\"react-icons/lu\");\n    const { IoInfiniteSharp } = require(\"react-icons/io5\");\n    const { Planet } = require('react-planet');\n    const c = require('@chakra-ui/react');\n    const { TypedIcon, DownIcon, UpIcon, TypeIcon, InIcon, OutIcon, FromIcon, ToIcon, } = require('@deep-foundation/perception-app');\n    const dpl = '@deep-foundation/perception-links';\n    const TreeList = deep.idLocal(dpl, 'TreeList');\n    const _Item = ({ link, isActive, Item, index, position }) => {\n        const go = Go.useGo();\n        const Component = link?.Component || Item;\n        return React.createElement(Component, { link: link, go: go, isActive: isActive, position: position, index: index });\n    };\n    return ({ go, links: _links, Component, ErrorComponent, UnhandledComponent, Item, saveHistory = false, linkId, link, handlerId, goHandler, ...props }, ref) => {\n        const links = React.useMemo(() => _links.filter(l => !!l?.id), [_links]);\n        const list = links.map((link, i) => !!link ? React.createElement(go.Provider, { key: link.id, linkId: link.id },\n            React.createElement(_Item, { link: link, isActive: go.value === link.id, Item: Item, saveHistory: saveHistory, index: i, position: i / (links.length - 1) })) : React.createElement(React.Fragment, null));\n        const index = React.useMemo(() => links.findIndex(l => l?.id === go.value), [go.value]);\n        const position = React.useMemo(() => index / (links.length - 1), [index]);\n        return React.createElement(go.On, { do: {\n                focus: (g, v, id, o) => !id && go.do('use', o),\n                exec: (g, v, o) => !!go.value && go.go.do('exec', { id: go.value, index, position }),\n                up: (g, v, o) => go.set().go.go.do('up', { ...o, id: go.value, index, position }),\n                down: (g, v, o) => go.set().go.go.do('down', { ...o, id: go.value, index, position }),\n                left: (g, v, o) => go.focus(go.prev(links)),\n                right: (g, v, o) => go.focus(go.next(links)),\n                use: (g, v, o) => {\n                    let id = o?.id;\n                    if (typeof (o?.position) === 'number') {\n                        id = links?.[Math.round((links.length - 1) * o.position)]?.id;\n                        console.log('XXXX', o, id, links, Math.round((links.length - 1) * o.position));\n                    }\n                    if (typeof (id) === 'number' || typeof (id) === 'string')\n                        id != go.value && go(id) && go.set(id).go(id)?.go?.do('use');\n                },\n            }, focus: {} },\n            React.createElement(Planet, { orbitRadius: 70, mass: 1, tension: 500, friction: 19, ...props }, list));\n    };\n};\n//# sourceMappingURL=data:application/json;base64,",
        "link_id": 19984
      }
    },
    {
      "id": 19985,
      "type_id": 3,
      "from_id": 19978,
      "to_id": 19984,
      "value": {
        "id": 1755,
        "value": "generated",
        "link_id": 19985
      }
    },
    {
      "id": 19986,
      "type_id": 143,
      "from_id": 19984,
      "to_id": 19978
    },
    {
      "id": 19987,
      "type_id": 3,
      "from_id": 19978,
      "to_id": 19986
    },
    {
      "id": 20114,
      "type_id": 717,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 1760,
        "value": "async ({ deep, data, Go, require }) => {\n  const React = require('react');\n  const { LuChevronLast, LuChevronFirst } = require(\"react-icons/lu\");\n  const { IoInfiniteSharp } = require(\"react-icons/io5\");\n  const { Planet } = require('react-planet');\n  const c = require('@chakra-ui/react');\n\n  const {\n    TypedIcon, DownIcon, UpIcon, TypeIcon, InIcon, OutIcon, FromIcon, ToIcon,\n  } = require('@deep-foundation/perception-app');\n\n  const dpl = '@deep-foundation/perception-links';\n\n  const TreeList = deep.idLocal(dpl, 'TreeList');\n\n  const Item = ({ isActive, link, position }) => {\n    const go = Go.useGo();\n    return <c.Button variant={isActive ? 'planetActive' : 'planet'}\n      onClick={() => go.go.focus(link.id).go.do(link.id)}\n    >{link.icon}</c.Button>;\n  };\n\n  let i = 1;\n\n  return ({\n    go,\n\n    linkId,\n    deleteDisclosure: _deleteDisclosure,\n    finderDisclosure: _finderDisclosure,\n\n    isActive = false,\n  }, ref) => {\n    const { cy } = go.useGraph();\n\n    const links = [\n      { id: 'ups', icon: <UpIcon/> },\n      { id: 'out', icon: <OutIcon/> },\n      { id: 'from', icon: <FromIcon/> },\n      { id: 'type', icon: <TypeIcon/> },\n      { id: 'typed', icon: <TypedIcon/> },\n      { id: 'to', icon: <ToIcon/> },\n      { id: 'in', icon: <InIcon/> },\n      { id: 'downs', icon: <DownIcon/> },\n    ];\n\n    const focus = {};\n    for (let l in links) {\n      focus[links[l].id] = (g,v,o) => {}\n    }\n\n    const [queries, setQueries] = React.useState({});\n    const qs = React.useMemo(() => Object.keys(queries), [queries]);\n\n    return <go.On do={{\n      exec: () => go.do(go.value),\n      typed: async (g,v,o) => setQueries({ ...queries, [v]: { type_id: linkId } }),\n      out: async (g,v,o) => setQueries({ ...queries, [v]: { from_id: linkId } }),\n      in: async (g,v,o) => setQueries({ ...queries, [v]: { to_id: linkId } }),\n\n      type: async (g,v,o) => setQueries({ ...queries, [v]: { id: deep.get(linkId).type_id } }),\n      from: async (g,v,o) => setQueries({ ...queries, [v]: { id: deep.get(linkId).from_id } }),\n      to: async (g,v,o) => setQueries({ ...queries, [v]: { id: deep.get(linkId).to_id } }),\n\n      ups: async (g,v,o) => setQueries({ ...queries, [v]: { down: { link_id: linkId } } }),\n      downs: async (g,v,o) => setQueries({ ...queries, [v]: { up: { parent_id: linkId } } }),\n    }} focus={focus}>\n      {qs.map(q => <go.Query key={JSON.stringify(queries[q])} query={queries[q]} onChange={({ data }) => go.do('open', { ids: data.map(l => l.id), parentId: linkId })}/>)}\n      <go.Component\n        open={isActive}\n        path={[dpl, 'Planet']} links={links}\n        Item={Item}\n        orbitRadius={70} mass={1}\n      />\n    </go.On>;\n  };\n}",
        "link_id": 20114
      }
    },
    {
      "id": 20115,
      "type_id": 3,
      "from_id": 2586,
      "to_id": 20114,
      "value": {
        "id": 1759,
        "value": "PlanetRelationsComponent",
        "link_id": 20115
      }
    },
    {
      "id": 20118,
      "type_id": 35,
      "from_id": 145,
      "to_id": 20114
    },
    {
      "id": 20119,
      "type_id": 3,
      "from_id": 2586,
      "to_id": 20118,
      "value": {
        "id": 1761,
        "value": "PlanetRelations",
        "link_id": 20119
      }
    },
    {
      "id": 20120,
      "type_id": 30,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 1763,
        "value": "async ({ deep, data, Go, require }) => {\n    const React = require('react');\n    const { LuChevronLast, LuChevronFirst } = require(\"react-icons/lu\");\n    const { IoInfiniteSharp } = require(\"react-icons/io5\");\n    const { Planet } = require('react-planet');\n    const c = require('@chakra-ui/react');\n    const { TypedIcon, DownIcon, UpIcon, TypeIcon, InIcon, OutIcon, FromIcon, ToIcon, } = require('@deep-foundation/perception-app');\n    const dpl = '@deep-foundation/perception-links';\n    const TreeList = deep.idLocal(dpl, 'TreeList');\n    const Item = ({ isActive, link, position }) => {\n        const go = Go.useGo();\n        return React.createElement(c.Button, { variant: isActive ? 'planetActive' : 'planet', onClick: () => go.go.focus(link.id).go.do(link.id) }, link.icon);\n    };\n    let i = 1;\n    return ({ go, linkId, deleteDisclosure: _deleteDisclosure, finderDisclosure: _finderDisclosure, isActive = false, }, ref) => {\n        const { cy } = go.useGraph();\n        const links = [\n            { id: 'ups', icon: React.createElement(UpIcon, null) },\n            { id: 'out', icon: React.createElement(OutIcon, null) },\n            { id: 'from', icon: React.createElement(FromIcon, null) },\n            { id: 'type', icon: React.createElement(TypeIcon, null) },\n            { id: 'typed', icon: React.createElement(TypedIcon, null) },\n            { id: 'to', icon: React.createElement(ToIcon, null) },\n            { id: 'in', icon: React.createElement(InIcon, null) },\n            { id: 'downs', icon: React.createElement(DownIcon, null) },\n        ];\n        const focus = {};\n        for (let l in links) {\n            focus[links[l].id] = (g, v, o) => { };\n        }\n        const [queries, setQueries] = React.useState({});\n        const qs = React.useMemo(() => Object.keys(queries), [queries]);\n        return React.createElement(go.On, { do: {\n                exec: () => go.do(go.value),\n                typed: async (g, v, o) => setQueries({ ...queries, [v]: { type_id: linkId } }),\n                out: async (g, v, o) => setQueries({ ...queries, [v]: { from_id: linkId } }),\n                in: async (g, v, o) => setQueries({ ...queries, [v]: { to_id: linkId } }),\n                type: async (g, v, o) => setQueries({ ...queries, [v]: { id: deep.get(linkId).type_id } }),\n                from: async (g, v, o) => setQueries({ ...queries, [v]: { id: deep.get(linkId).from_id } }),\n                to: async (g, v, o) => setQueries({ ...queries, [v]: { id: deep.get(linkId).to_id } }),\n                ups: async (g, v, o) => setQueries({ ...queries, [v]: { down: { link_id: linkId } } }),\n                downs: async (g, v, o) => setQueries({ ...queries, [v]: { up: { parent_id: linkId } } }),\n            }, focus: focus },\n            qs.map(q => React.createElement(go.Query, { key: JSON.stringify(queries[q]), query: queries[q], onChange: ({ data }) => go.do('open', { ids: data.map(l => l.id), parentId: linkId }) })),\n            React.createElement(go.Component, { open: isActive, path: [dpl, 'Planet'], links: links, Item: Item, orbitRadius: 70, mass: 1 }));\n    };\n};\n//# sourceMappingURL=data:application/json;base64,",
        "link_id": 20120
      }
    },
    {
      "id": 20121,
      "type_id": 3,
      "from_id": 20114,
      "to_id": 20120,
      "value": {
        "id": 1762,
        "value": "generated",
        "link_id": 20121
      }
    },
    {
      "id": 20122,
      "type_id": 143,
      "from_id": 20120,
      "to_id": 20114
    },
    {
      "id": 20123,
      "type_id": 3,
      "from_id": 20114,
      "to_id": 20122
    },
    {
      "id": 20144,
      "type_id": 717,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 1767,
        "value": "async ({ deep, data, Go, require }) => {\n  const React = require('react');\n  const { LuChevronLast, LuChevronFirst } = require(\"react-icons/lu\");\n  const { IoInfiniteSharp } = require(\"react-icons/io5\");\n  const { Planet } = require('react-planet');\n  const c = require('@chakra-ui/react');\n\n  const {\n    TypedIcon, DownIcon, UpIcon, TypeIcon, InIcon, OutIcon, FromIcon, ToIcon,\n  } = require('@deep-foundation/perception-app');\n\n  const dpl = '@deep-foundation/perception-links';\n\n  const TreeList = deep.idLocal(dpl, 'TreeList');\n\n  const Item = ({ isActive, link, position }) => {\n    const go = Go.useGo();\n    return <c.Button variant={isActive ? 'planetActive' : 'planet'}\n      onClick={() => go.go.focus(link.id).go.do(link.id)}\n    >{link.icon}</c.Button>;\n  };\n\n  return ({\n    go,\n\n    linkId,\n    deleteDisclosure: _deleteDisclosure,\n    finderDisclosure: _finderDisclosure,\n\n    isActive = false,\n  }, ref) => {\n    const { cy } = go.useGraph();\n\n    const links = [\n      { id: 'contains', icon: <>🗂️</> },\n      { id: 'finder', icon: <>🪬</> },\n      { id: 'delete', icon: <>❌</> },\n      { id: 'handlers', icon: <>👁️</> },\n      { id: 'trees', icon: <>🎄</> },\n    ];\n\n    const focus = {};\n    for (let l in links) {\n      focus[links[l].id] = (g,v,o) => {}\n    }\n\n    return <go.On do={{\n    }} focus={focus}>\n      <go.Component\n        open={isActive}\n        path={[dpl, 'Planet']} links={links}\n        Item={Item}\n        orbitRadius={130} mass={3}\n      />\n    </go.On>;\n  };\n}",
        "link_id": 20144
      }
    },
    {
      "id": 20146,
      "type_id": 3,
      "from_id": 2586,
      "to_id": 20144,
      "value": {
        "id": 1766,
        "value": "PlanetOperationsComponent",
        "link_id": 20146
      }
    },
    {
      "id": 20152,
      "type_id": 35,
      "from_id": 145,
      "to_id": 20144
    },
    {
      "id": 20153,
      "type_id": 3,
      "from_id": 2586,
      "to_id": 20152,
      "value": {
        "id": 1769,
        "value": "PlanetOperations",
        "link_id": 20153
      }
    },
    {
      "id": 20154,
      "type_id": 30,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 1771,
        "value": "async ({ deep, data, Go, require }) => {\n    const React = require('react');\n    const { LuChevronLast, LuChevronFirst } = require(\"react-icons/lu\");\n    const { IoInfiniteSharp } = require(\"react-icons/io5\");\n    const { Planet } = require('react-planet');\n    const c = require('@chakra-ui/react');\n    const { TypedIcon, DownIcon, UpIcon, TypeIcon, InIcon, OutIcon, FromIcon, ToIcon, } = require('@deep-foundation/perception-app');\n    const dpl = '@deep-foundation/perception-links';\n    const TreeList = deep.idLocal(dpl, 'TreeList');\n    const Item = ({ isActive, link, position }) => {\n        const go = Go.useGo();\n        return React.createElement(c.Button, { variant: isActive ? 'planetActive' : 'planet', onClick: () => go.go.focus(link.id).go.do(link.id) }, link.icon);\n    };\n    return ({ go, linkId, deleteDisclosure: _deleteDisclosure, finderDisclosure: _finderDisclosure, isActive = false, }, ref) => {\n        const { cy } = go.useGraph();\n        const links = [\n            { id: 'contains', icon: React.createElement(React.Fragment, null, \"\\uD83D\\uDDC2\\uFE0F\") },\n            { id: 'finder', icon: React.createElement(React.Fragment, null, \"\\uD83E\\uDEAC\") },\n            { id: 'delete', icon: React.createElement(React.Fragment, null, \"\\u274C\") },\n            { id: 'handlers', icon: React.createElement(React.Fragment, null, \"\\uD83D\\uDC41\\uFE0F\") },\n            { id: 'trees', icon: React.createElement(React.Fragment, null, \"\\uD83C\\uDF84\") },\n        ];\n        const focus = {};\n        for (let l in links) {\n            focus[links[l].id] = (g, v, o) => { };\n        }\n        return React.createElement(go.On, { do: {}, focus: focus },\n            React.createElement(go.Component, { open: isActive, path: [dpl, 'Planet'], links: links, Item: Item, orbitRadius: 130, mass: 3 }));\n    };\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsibW9kdWxlLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxLQUFLLEVBQUUsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLEVBQUUsRUFBRSxPQUFPLEVBQUUsRUFBRSxFQUFFO0lBQ3BDLE1BQU0sS0FBSyxHQUFHLE9BQU8sQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUMvQixNQUFNLEVBQUUsYUFBYSxFQUFFLGNBQWMsRUFBRSxHQUFHLE9BQU8sQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO0lBQ3BFLE1BQU0sRUFBRSxlQUFlLEVBQUUsR0FBRyxPQUFPLENBQUMsaUJBQWlCLENBQUMsQ0FBQztJQUN2RCxNQUFNLEVBQUUsTUFBTSxFQUFFLEdBQUcsT0FBTyxDQUFDLGNBQWMsQ0FBQyxDQUFDO0lBQzNDLE1BQU0sQ0FBQyxHQUFHLE9BQU8sQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDO0lBRXRDLE1BQU0sRUFDSixTQUFTLEVBQUUsUUFBUSxFQUFFLE1BQU0sRUFBRSxRQUFRLEVBQUUsTUFBTSxFQUFFLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxHQUN6RSxHQUFHLE9BQU8sQ0FBQyxpQ0FBaUMsQ0FBQyxDQUFDO0lBRS9DLE1BQU0sR0FBRyxHQUFHLG1DQUFtQyxDQUFDO0lBRWhELE1BQU0sUUFBUSxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLFVBQVUsQ0FBQyxDQUFDO0lBRS9DLE1BQU0sSUFBSSxHQUFHLENBQUMsRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFFLFFBQVEsRUFBRSxFQUFFLEVBQUU7UUFDNUMsTUFBTSxFQUFFLEdBQUcsRUFBRSxDQUFDLEtBQUssRUFBRSxDQUFDO1FBQ3RCLE9BQU8sb0JBQUMsQ0FBQyxDQUFDLE1BQU0sSUFBQyxPQUFPLEVBQUUsUUFBUSxDQUFDLENBQUMsQ0FBQyxjQUFjLENBQUMsQ0FBQyxDQUFDLFFBQVEsRUFDNUQsT0FBTyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsSUFDbEQsSUFBSSxDQUFDLElBQUksQ0FBWSxDQUFDO0lBQzFCLENBQUMsQ0FBQztJQUVGLE9BQU8sQ0FBQyxFQUNOLEVBQUUsRUFFRixNQUFNLEVBQ04sZ0JBQWdCLEVBQUUsaUJBQWlCLEVBQ25DLGdCQUFnQixFQUFFLGlCQUFpQixFQUVuQyxRQUFRLEdBQUcsS0FBSyxHQUNqQixFQUFFLEdBQUcsRUFBRSxFQUFFO1FBQ1IsTUFBTSxFQUFFLEVBQUUsRUFBRSxHQUFHLEVBQUUsQ0FBQyxRQUFRLEVBQUUsQ0FBQztRQUU3QixNQUFNLEtBQUssR0FBRztZQUNaLEVBQUUsRUFBRSxFQUFFLFVBQVUsRUFBRSxJQUFJLEVBQUUsK0RBQVEsRUFBRTtZQUNsQyxFQUFFLEVBQUUsRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFFLHlEQUFPLEVBQUU7WUFDL0IsRUFBRSxFQUFFLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBRSxtREFBTSxFQUFFO1lBQzlCLEVBQUUsRUFBRSxFQUFFLFVBQVUsRUFBRSxJQUFJLEVBQUUsK0RBQVEsRUFBRTtZQUNsQyxFQUFFLEVBQUUsRUFBRSxPQUFPLEVBQUUsSUFBSSxFQUFFLHlEQUFPLEVBQUU7U0FDL0IsQ0FBQztRQUVGLE1BQU0sS0FBSyxHQUFHLEVBQUUsQ0FBQztRQUNqQixLQUFLLElBQUksQ0FBQyxJQUFJLEtBQUssRUFBRSxDQUFDO1lBQ3BCLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxDQUFDLEVBQUMsQ0FBQyxFQUFDLENBQUMsRUFBRSxFQUFFLEdBQUUsQ0FBQyxDQUFBO1FBQ3BDLENBQUM7UUFFRCxPQUFPLG9CQUFDLEVBQUUsQ0FBQyxFQUFFLElBQUMsRUFBRSxFQUFFLEVBQ2pCLEVBQUUsS0FBSyxFQUFFLEtBQUs7WUFDYixvQkFBQyxFQUFFLENBQUMsU0FBUyxJQUNYLElBQUksRUFBRSxRQUFRLEVBQ2QsSUFBSSxFQUFFLENBQUMsR0FBRyxFQUFFLFFBQVEsQ0FBQyxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQ25DLElBQUksRUFBRSxJQUFJLEVBQ1YsV0FBVyxFQUFFLEdBQUcsRUFBRSxJQUFJLEVBQUUsQ0FBQyxHQUN6QixDQUNJLENBQUM7SUFDWCxDQUFDLENBQUM7QUFDSixDQUFDLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJhc3luYyAoeyBkZWVwLCBkYXRhLCBHbywgcmVxdWlyZSB9KSA9PiB7XG4gIGNvbnN0IFJlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcbiAgY29uc3QgeyBMdUNoZXZyb25MYXN0LCBMdUNoZXZyb25GaXJzdCB9ID0gcmVxdWlyZShcInJlYWN0LWljb25zL2x1XCIpO1xuICBjb25zdCB7IElvSW5maW5pdGVTaGFycCB9ID0gcmVxdWlyZShcInJlYWN0LWljb25zL2lvNVwiKTtcbiAgY29uc3QgeyBQbGFuZXQgfSA9IHJlcXVpcmUoJ3JlYWN0LXBsYW5ldCcpO1xuICBjb25zdCBjID0gcmVxdWlyZSgnQGNoYWtyYS11aS9yZWFjdCcpO1xuXG4gIGNvbnN0IHtcbiAgICBUeXBlZEljb24sIERvd25JY29uLCBVcEljb24sIFR5cGVJY29uLCBJbkljb24sIE91dEljb24sIEZyb21JY29uLCBUb0ljb24sXG4gIH0gPSByZXF1aXJlKCdAZGVlcC1mb3VuZGF0aW9uL3BlcmNlcHRpb24tYXBwJyk7XG5cbiAgY29uc3QgZHBsID0gJ0BkZWVwLWZvdW5kYXRpb24vcGVyY2VwdGlvbi1saW5rcyc7XG5cbiAgY29uc3QgVHJlZUxpc3QgPSBkZWVwLmlkTG9jYWwoZHBsLCAnVHJlZUxpc3QnKTtcblxuICBjb25zdCBJdGVtID0gKHsgaXNBY3RpdmUsIGxpbmssIHBvc2l0aW9uIH0pID0+IHtcbiAgICBjb25zdCBnbyA9IEdvLnVzZUdvKCk7XG4gICAgcmV0dXJuIDxjLkJ1dHRvbiB2YXJpYW50PXtpc0FjdGl2ZSA/ICdwbGFuZXRBY3RpdmUnIDogJ3BsYW5ldCd9XG4gICAgICBvbkNsaWNrPXsoKSA9PiBnby5nby5mb2N1cyhsaW5rLmlkKS5nby5kbyhsaW5rLmlkKX1cbiAgICA+e2xpbmsuaWNvbn08L2MuQnV0dG9uPjtcbiAgfTtcblxuICByZXR1cm4gKHtcbiAgICBnbyxcblxuICAgIGxpbmtJZCxcbiAgICBkZWxldGVEaXNjbG9zdXJlOiBfZGVsZXRlRGlzY2xvc3VyZSxcbiAgICBmaW5kZXJEaXNjbG9zdXJlOiBfZmluZGVyRGlzY2xvc3VyZSxcblxuICAgIGlzQWN0aXZlID0gZmFsc2UsXG4gIH0sIHJlZikgPT4ge1xuICAgIGNvbnN0IHsgY3kgfSA9IGdvLnVzZUdyYXBoKCk7XG5cbiAgICBjb25zdCBsaW5rcyA9IFtcbiAgICAgIHsgaWQ6ICdjb250YWlucycsIGljb246IDw+8J+Xgu+4jzwvPiB9LFxuICAgICAgeyBpZDogJ2ZpbmRlcicsIGljb246IDw+8J+qrDwvPiB9LFxuICAgICAgeyBpZDogJ2RlbGV0ZScsIGljb246IDw+4p2MPC8+IH0sXG4gICAgICB7IGlkOiAnaGFuZGxlcnMnLCBpY29uOiA8PvCfkYHvuI88Lz4gfSxcbiAgICAgIHsgaWQ6ICd0cmVlcycsIGljb246IDw+8J+OhDwvPiB9LFxuICAgIF07XG5cbiAgICBjb25zdCBmb2N1cyA9IHt9O1xuICAgIGZvciAobGV0IGwgaW4gbGlua3MpIHtcbiAgICAgIGZvY3VzW2xpbmtzW2xdLmlkXSA9IChnLHYsbykgPT4ge31cbiAgICB9XG5cbiAgICByZXR1cm4gPGdvLk9uIGRvPXt7XG4gICAgfX0gZm9jdXM9e2ZvY3VzfT5cbiAgICAgIDxnby5Db21wb25lbnRcbiAgICAgICAgb3Blbj17aXNBY3RpdmV9XG4gICAgICAgIHBhdGg9e1tkcGwsICdQbGFuZXQnXX0gbGlua3M9e2xpbmtzfVxuICAgICAgICBJdGVtPXtJdGVtfVxuICAgICAgICBvcmJpdFJhZGl1cz17MTMwfSBtYXNzPXszfVxuICAgICAgLz5cbiAgICA8L2dvLk9uPjtcbiAgfTtcbn0iXX0=",
        "link_id": 20154
      }
    },
    {
      "id": 20156,
      "type_id": 3,
      "from_id": 20144,
      "to_id": 20154,
      "value": {
        "id": 1770,
        "value": "generated",
        "link_id": 20156
      }
    },
    {
      "id": 20157,
      "type_id": 143,
      "from_id": 20154,
      "to_id": 20144
    },
    {
      "id": 20158,
      "type_id": 3,
      "from_id": 20144,
      "to_id": 20157
    },
    {
      "id": 20474,
      "type_id": 717,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 1783,
        "value": "({ deep, data, require, Go }) => {\n  const React = require('react');\n  \n  const c = require('@chakra-ui/react');\n  const _ = require('lodash');\n  const moment = require('moment');\n  const { useDebounceCallback } = require('@react-hook/debounce');\n\n  var dpl = '@deep-foundation/perception-links';\n  var dc = '@deep-foundation/core';\n\n  const Stack = deep.idLocal(dpl, 'Stack');\n  const Queries = deep.idLocal(dpl, 'Queries');\n  const Compatable = deep.idLocal(dpl, 'Compatable');\n  const Handler = deep.idLocal(dc, 'Handler');\n  const Query = deep.idLocal(dpl, 'Query');\n  const QueriesClient = deep.idLocal(dpl, 'QueriesClient');\n\n  let initialMemoryObject = {\n    useQuery: {}, useSubscription: {}, select: {}, subscribe: {}, insert: {}, update: {}, 'delete': {},\n  };\n  if (typeof(window) === 'object') {\n    if (window._deep_perception_queries_memory) initialMemoryObject = window._deep_perception_queries_memory;\n    window._deep_perception_queries_memory = initialMemoryObject;\n  }\n\n  return ({\n    go,\n\n    isActive = false,\n\n    children,\n  }, ref) => {\n    const containerRef = React.useMemo(() => go.root().ref, []);\n\n    const { sync, setSync } = React.useContext(go.HandlerConfigContext);\n    const mode = React.useState('useQuery');\n    const modeRef = React.useRef(mode); modeRef.current = mode[0];\n\n    const modes = Object.keys(initialMemoryObject);\n\n    const [list, setList] = React.useState([]);\n    const generateList = React.useCallback(() => {\n      if (!modeRef.current) return;\n      const list = _.chain(Object.values(initialMemoryObject[modeRef.current] || {})).sortBy('mounted').reverse().value();\n      setList(list);\n    }, []);\n    const generateListDebounced = useDebounceCallback(generateList, 1000);\n\n    const apply = React.useCallback((mode, event) => {\n      const prev = initialMemoryObject[mode][event.name] || {};\n      const next = initialMemoryObject[mode][event.name] = { id: event.name, mode, ...prev, ...event, count: (prev?.count || 0) + 1 };\n      next[next.mounted ? 'updated' : 'mounted'] = new Date().valueOf();\n      if (mode === modeRef.current) generateListDebounced();\n    }, []);\n\n    const unapply = React.useCallback((mode, event) => {\n      delete initialMemoryObject[mode][event.name];\n      if (mode === modeRef.current) generateListDebounced();\n    }, []);\n\n    const events = React.useMemo(() => ({\n      'useQuery.mount': (event) => apply('useQuery', event),\n      'useQuery': (event) => apply('useQuery', event),\n      'useQuery.unmount': (event) => unapply('useQuery', event),\n      'useSubscription.mount': (event) => apply('useSubscription', event),\n      'useSubscription': (event) => apply('useSubscription', event),\n      'useSubscription.unmount': (event) => unapply('useSubscription', event),\n      'select': (event) => apply('select', event),\n      'subscribe.before': (event) => apply('subscribe', event),\n      'subscribe': (event) => apply('subscribe', event),\n      'insert': (event) => apply('insert', event),\n      'update': (event) => apply('update', event),\n      'delete': (event) => apply('delete', event),\n    }), []);\n\n    React.useEffect(() => {\n      const sub = (name) => events?.[name] && deep.emitter.on(name, events?.[name]);\n      Object.keys(events).forEach(name => sub(name));\n    }, []);\n\n    const [opened, setOpened] = React.useState();\n\n    const Item = React.useMemo(() => React.memo(({ link, isActive }) => {\n      const go = Go.useGo();\n\n      const q = JSON.stringify(link?.query);\n\n      return <go.On do={{\n        exec: (g,v,o) => setOpened(link),\n      }}>\n        <c.Button bg={isActive ? 'deepBgDark' : undefined} onClick={() => go.do('exec')} w='100%'>\n          <c.Flex w='100%'>\n            <c.Box flex='1' p='0.5em' pl='1em'>\n              <c.Box noOfLines={1} textAlign='left'>\n                {q.slice(0, 43)}{q.length > 43 ? '...' : ''}\n              </c.Box>\n              {!!link?.value && <c.Box noOfLines={1}>\n                {JSON.stringify(link?.value)}\n              </c.Box>}\n            </c.Box>\n            <c.Box p='0.25em' pr='1em' fontSize='xs'>\n              <c.Box>{moment(link.mounted).format('HH:mm:ss')}</c.Box>\n              {!!link.updated && <c.Box>{moment(link.updated).format('HH:mm:ss')}</c.Box>}\n            </c.Box>\n          </c.Flex>\n        </go.Button>\n      </go.On>\n    }, _.isEqual), []);\n\n    React.useMemo(() => {\n      setOpened();\n      generateList();\n    }, [mode[0]]);\n\n    React.useMemo(() => {\n      if (!go.value) mode[1]();\n      else if (!mode) mode[1]('useQuery');\n    }, [go.value]);\n\n    React.useMemo(() => {\n      opened && go.focus(Query);\n    }, [opened]);\n\n    return <go.On\n      do={{\n        focus: (g,v,id,o) => {\n          if (!v) go.set('useQuery');\n          else if (modes.includes(v)) setMode(v);\n        },\n        right: (g,v,o) => {\n          mode[1](go.next(modes.map(m => ({ id: m })), mode[0]));\n        },\n        left: (g,v,o) => {\n          modes[0] === mode[0]  ? go.set() : mode[1](go.prev(modes.map(m => ({ id: m })), mode[0]));\n        },\n      }}\n    >\n      <c.Popover placement='right-end' closeOnBlur={false} isOpen={!!go.value} onClose={() => go.set()}>\n        <c.PopoverTrigger>\n          <c.Button\n            ref={ref} w='3em' h='3em' variant={!!go.value || isActive ? 'active' : undefined}\n            onClick={() => go.value ? go.set() : go.set('useQuery')}\n          >\n            {children}\n          </c.Button>\n        </c.PopoverTrigger>\n        <c.Portal containerRef={containerRef}>\n          <c.PopoverContent w='30em' maxH='30em' minH='30em' position='relative'>\n            <c.PopoverArrow />\n            <c.Flex direction='column' position='absolute' top='0' left='0' w='100%' h='100%'>\n              <c.Flex overflowX='scroll' css={go.noScrollBar}>\n                <c.Flex columns={modes.length} flex='1'>\n                  {modes.map(m => <c.Button {...go.activator(mode, m)}>{m}</c.Button>)}\n                </c.Flex>\n                <c.Divider orientation='vertical' />\n                <c.Button {...go.activator([sync, setSync], true)}>sync</c.Button>\n              </c.Flex>\n              <c.Divider/>\n              <go.Provider linkId={Stack} value={list?.[0]?.id}>\n                {!opened && <go.Component key={mode[0]} path={[dpl, 'Stack']} direction='vertical' links={list} Item={Item} flex='1'/>}\n              </go.Provider>\n              {!!opened && <>\n                <go.Provider linkId={Query} value={list?.[0]?.id}>\n                  <go.Component path={[dpl, 'Query']} event={opened}/>\n                </go.Provider>\n                {/* <go.Component path={[dpl, 'Stack']} direction='horizontal' links={views} Item={ViewItem}/> */}\n                {/* <go.Component path={[dpl, 'QueriesGQL']} extendInsert={{ out: { type_id: Compatable, to_id: Queries } }}/>\n                <go.Component path={[dpl, 'QueriesReact']} extendInsert={{ out: { type_id: Compatable, to_id: Queries } }}/>\n                <go.Component path={[dpl, 'QueriesClient']} extendInsert={{ out: { type_id: Compatable, to_id: Queries } }}/>\n                <go.Component path={[dpl, 'QueriesResults']} extendInsert={{ out: { type_id: Compatable, to_id: Queries } }}/> */}\n              </>}\n            </c.Flex>\n          </c.PopoverContent>\n        </c.Portal>\n      </c.Popover>\n    </go.On>;\n  };\n}",
        "link_id": 20474
      }
    },
    {
      "id": 20475,
      "type_id": 3,
      "from_id": 2586,
      "to_id": 20474,
      "value": {
        "id": 1782,
        "value": "QueriesComponent",
        "link_id": 20475
      }
    },
    {
      "id": 20478,
      "type_id": 35,
      "from_id": 145,
      "to_id": 20474
    },
    {
      "id": 20479,
      "type_id": 3,
      "from_id": 2586,
      "to_id": 20478,
      "value": {
        "id": 1784,
        "value": "Queries",
        "link_id": 20479
      }
    },
    {
      "id": 20480,
      "type_id": 30,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 1788,
        "value": "({ deep, data, require, Go }) => {\n    const React = require('react');\n    const c = require('@chakra-ui/react');\n    const _ = require('lodash');\n    const moment = require('moment');\n    const { useDebounceCallback } = require('@react-hook/debounce');\n    var dpl = '@deep-foundation/perception-links';\n    var dc = '@deep-foundation/core';\n    const Stack = deep.idLocal(dpl, 'Stack');\n    const Queries = deep.idLocal(dpl, 'Queries');\n    const Compatable = deep.idLocal(dpl, 'Compatable');\n    const Handler = deep.idLocal(dc, 'Handler');\n    const Query = deep.idLocal(dpl, 'Query');\n    const QueriesClient = deep.idLocal(dpl, 'QueriesClient');\n    let initialMemoryObject = {\n        useQuery: {}, useSubscription: {}, select: {}, subscribe: {}, insert: {}, update: {}, 'delete': {},\n    };\n    if (typeof (window) === 'object') {\n        if (window._deep_perception_queries_memory)\n            initialMemoryObject = window._deep_perception_queries_memory;\n        window._deep_perception_queries_memory = initialMemoryObject;\n    }\n    return ({ go, isActive = false, children, }, ref) => {\n        const containerRef = React.useMemo(() => go.root().ref, []);\n        const { sync, setSync } = React.useContext(go.HandlerConfigContext);\n        const mode = React.useState('useQuery');\n        const modeRef = React.useRef(mode);\n        modeRef.current = mode[0];\n        const modes = Object.keys(initialMemoryObject);\n        const [list, setList] = React.useState([]);\n        const generateList = React.useCallback(() => {\n            if (!modeRef.current)\n                return;\n            const list = _.chain(Object.values(initialMemoryObject[modeRef.current] || {})).sortBy('mounted').reverse().value();\n            setList(list);\n        }, []);\n        const generateListDebounced = useDebounceCallback(generateList, 1000);\n        const apply = React.useCallback((mode, event) => {\n            const prev = initialMemoryObject[mode][event.name] || {};\n            const next = initialMemoryObject[mode][event.name] = { id: event.name, mode, ...prev, ...event, count: (prev?.count || 0) + 1 };\n            next[next.mounted ? 'updated' : 'mounted'] = new Date().valueOf();\n            if (mode === modeRef.current)\n                generateListDebounced();\n        }, []);\n        const unapply = React.useCallback((mode, event) => {\n            delete initialMemoryObject[mode][event.name];\n            if (mode === modeRef.current)\n                generateListDebounced();\n        }, []);\n        const events = React.useMemo(() => ({\n            'useQuery.mount': (event) => apply('useQuery', event),\n            'useQuery': (event) => apply('useQuery', event),\n            'useQuery.unmount': (event) => unapply('useQuery', event),\n            'useSubscription.mount': (event) => apply('useSubscription', event),\n            'useSubscription': (event) => apply('useSubscription', event),\n            'useSubscription.unmount': (event) => unapply('useSubscription', event),\n            'select': (event) => apply('select', event),\n            'subscribe.before': (event) => apply('subscribe', event),\n            'subscribe': (event) => apply('subscribe', event),\n            'insert': (event) => apply('insert', event),\n            'update': (event) => apply('update', event),\n            'delete': (event) => apply('delete', event),\n        }), []);\n        React.useEffect(() => {\n            const sub = (name) => events?.[name] && deep.emitter.on(name, events?.[name]);\n            Object.keys(events).forEach(name => sub(name));\n        }, []);\n        const [opened, setOpened] = React.useState();\n        const Item = React.useMemo(() => React.memo(({ link, isActive }) => {\n            const go = Go.useGo();\n            const q = JSON.stringify(link?.query);\n            return React.createElement(go.On, { do: {\n                    exec: (g, v, o) => setOpened(link),\n                } },\n                React.createElement(c.Button, { bg: isActive ? 'deepBgDark' : undefined, onClick: () => go.do('exec'), w: '100%' },\n                    React.createElement(c.Flex, { w: '100%' },\n                        React.createElement(c.Box, { flex: '1', p: '0.5em', pl: '1em' },\n                            React.createElement(c.Box, { noOfLines: 1, textAlign: 'left' },\n                                q.slice(0, 43),\n                                q.length > 43 ? '...' : ''),\n                            !!link?.value && React.createElement(c.Box, { noOfLines: 1 }, JSON.stringify(link?.value))),\n                        React.createElement(c.Box, { p: '0.25em', pr: '1em', fontSize: 'xs' },\n                            React.createElement(c.Box, null, moment(link.mounted).format('HH:mm:ss')),\n                            !!link.updated && React.createElement(c.Box, null, moment(link.updated).format('HH:mm:ss'))))));\n        }, _.isEqual), []);\n        React.useMemo(() => {\n            setOpened();\n            generateList();\n        }, [mode[0]]);\n        React.useMemo(() => {\n            if (!go.value)\n                mode[1]();\n            else if (!mode)\n                mode[1]('useQuery');\n        }, [go.value]);\n        React.useMemo(() => {\n            opened && go.focus(Query);\n        }, [opened]);\n        return React.createElement(go.On, { do: {\n                focus: (g, v, id, o) => {\n                    if (!v)\n                        go.set('useQuery');\n                    else if (modes.includes(v))\n                        setMode(v);\n                },\n                right: (g, v, o) => {\n                    mode[1](go.next(modes.map(m => ({ id: m })), mode[0]));\n                },\n                left: (g, v, o) => {\n                    modes[0] === mode[0] ? go.set() : mode[1](go.prev(modes.map(m => ({ id: m })), mode[0]));\n                },\n            } },\n            React.createElement(c.Popover, { placement: 'right-end', closeOnBlur: false, isOpen: !!go.value, onClose: () => go.set() },\n                React.createElement(c.PopoverTrigger, null,\n                    React.createElement(c.Button, { ref: ref, w: '3em', h: '3em', variant: !!go.value || isActive ? 'active' : undefined, onClick: () => go.value ? go.set() : go.set('useQuery') }, children)),\n                React.createElement(c.Portal, { containerRef: containerRef },\n                    React.createElement(c.PopoverContent, { w: '30em', maxH: '30em', minH: '30em', position: 'relative' },\n                        React.createElement(c.PopoverArrow, null),\n                        React.createElement(c.Flex, { direction: 'column', position: 'absolute', top: '0', left: '0', w: '100%', h: '100%' },\n                            React.createElement(c.Flex, { overflowX: 'scroll', css: go.noScrollBar },\n                                React.createElement(c.Flex, { columns: modes.length, flex: '1' }, modes.map(m => React.createElement(c.Button, { ...go.activator(mode, m) }, m))),\n                                React.createElement(c.Divider, { orientation: 'vertical' }),\n                                React.createElement(c.Button, { ...go.activator([sync, setSync], true) }, \"sync\")),\n                            React.createElement(c.Divider, null),\n                            React.createElement(go.Provider, { linkId: Stack, value: list?.[0]?.id }, !opened && React.createElement(go.Component, { key: mode[0], path: [dpl, 'Stack'], direction: 'vertical', links: list, Item: Item, flex: '1' })),\n                            !!opened && React.createElement(React.Fragment, null,\n                                React.createElement(go.Provider, { linkId: Query, value: list?.[0]?.id },\n                                    React.createElement(go.Component, { path: [dpl, 'Query'], event: opened }))))))));\n    };\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsibW9kdWxlLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxDQUFDLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRTtJQUM5QixNQUFNLEtBQUssR0FBRyxPQUFPLENBQUMsT0FBTyxDQUFDLENBQUM7SUFFL0IsTUFBTSxDQUFDLEdBQUcsT0FBTyxDQUFDLGtCQUFrQixDQUFDLENBQUM7SUFDdEMsTUFBTSxDQUFDLEdBQUcsT0FBTyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQzVCLE1BQU0sTUFBTSxHQUFHLE9BQU8sQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUNqQyxNQUFNLEVBQUUsbUJBQW1CLEVBQUUsR0FBRyxPQUFPLENBQUMsc0JBQXNCLENBQUMsQ0FBQztJQUVoRSxJQUFJLEdBQUcsR0FBRyxtQ0FBbUMsQ0FBQztJQUM5QyxJQUFJLEVBQUUsR0FBRyx1QkFBdUIsQ0FBQztJQUVqQyxNQUFNLEtBQUssR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxPQUFPLENBQUMsQ0FBQztJQUN6QyxNQUFNLE9BQU8sR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxTQUFTLENBQUMsQ0FBQztJQUM3QyxNQUFNLFVBQVUsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxZQUFZLENBQUMsQ0FBQztJQUNuRCxNQUFNLE9BQU8sR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLEVBQUUsRUFBRSxTQUFTLENBQUMsQ0FBQztJQUM1QyxNQUFNLEtBQUssR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxPQUFPLENBQUMsQ0FBQztJQUN6QyxNQUFNLGFBQWEsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxlQUFlLENBQUMsQ0FBQztJQUV6RCxJQUFJLG1CQUFtQixHQUFHO1FBQ3hCLFFBQVEsRUFBRSxFQUFFLEVBQUUsZUFBZSxFQUFFLEVBQUUsRUFBRSxNQUFNLEVBQUUsRUFBRSxFQUFFLFNBQVMsRUFBRSxFQUFFLEVBQUUsTUFBTSxFQUFFLEVBQUUsRUFBRSxNQUFNLEVBQUUsRUFBRSxFQUFFLFFBQVEsRUFBRSxFQUFFO0tBQ25HLENBQUM7SUFDRixJQUFJLE9BQU0sQ0FBQyxNQUFNLENBQUMsS0FBSyxRQUFRLEVBQUUsQ0FBQztRQUNoQyxJQUFJLE1BQU0sQ0FBQywrQkFBK0I7WUFBRSxtQkFBbUIsR0FBRyxNQUFNLENBQUMsK0JBQStCLENBQUM7UUFDekcsTUFBTSxDQUFDLCtCQUErQixHQUFHLG1CQUFtQixDQUFDO0lBQy9ELENBQUM7SUFFRCxPQUFPLENBQUMsRUFDTixFQUFFLEVBRUYsUUFBUSxHQUFHLEtBQUssRUFFaEIsUUFBUSxHQUNULEVBQUUsR0FBRyxFQUFFLEVBQUU7UUFDUixNQUFNLFlBQVksR0FBRyxLQUFLLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxJQUFJLEVBQUUsQ0FBQyxHQUFHLEVBQUUsRUFBRSxDQUFDLENBQUM7UUFFNUQsTUFBTSxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUUsR0FBRyxLQUFLLENBQUMsVUFBVSxDQUFDLEVBQUUsQ0FBQyxvQkFBb0IsQ0FBQyxDQUFDO1FBQ3BFLE1BQU0sSUFBSSxHQUFHLEtBQUssQ0FBQyxRQUFRLENBQUMsVUFBVSxDQUFDLENBQUM7UUFDeEMsTUFBTSxPQUFPLEdBQUcsS0FBSyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUFDLE9BQU8sQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBRTlELE1BQU0sS0FBSyxHQUFHLE1BQU0sQ0FBQyxJQUFJLENBQUMsbUJBQW1CLENBQUMsQ0FBQztRQUUvQyxNQUFNLENBQUMsSUFBSSxFQUFFLE9BQU8sQ0FBQyxHQUFHLEtBQUssQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLENBQUM7UUFDM0MsTUFBTSxZQUFZLEdBQUcsS0FBSyxDQUFDLFdBQVcsQ0FBQyxHQUFHLEVBQUU7WUFDMUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPO2dCQUFFLE9BQU87WUFDN0IsTUFBTSxJQUFJLEdBQUcsQ0FBQyxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLG1CQUFtQixDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsSUFBSSxFQUFFLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxLQUFLLEVBQUUsQ0FBQztZQUNwSCxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDaEIsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDO1FBQ1AsTUFBTSxxQkFBcUIsR0FBRyxtQkFBbUIsQ0FBQyxZQUFZLEVBQUUsSUFBSSxDQUFDLENBQUM7UUFFdEUsTUFBTSxLQUFLLEdBQUcsS0FBSyxDQUFDLFdBQVcsQ0FBQyxDQUFDLElBQUksRUFBRSxLQUFLLEVBQUUsRUFBRTtZQUM5QyxNQUFNLElBQUksR0FBRyxtQkFBbUIsQ0FBQyxJQUFJLENBQUMsQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDO1lBQ3pELE1BQU0sSUFBSSxHQUFHLG1CQUFtQixDQUFDLElBQUksQ0FBQyxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsR0FBRyxFQUFFLEVBQUUsRUFBRSxLQUFLLENBQUMsSUFBSSxFQUFFLElBQUksRUFBRSxHQUFHLElBQUksRUFBRSxHQUFHLEtBQUssRUFBRSxLQUFLLEVBQUUsQ0FBQyxJQUFJLEVBQUUsS0FBSyxJQUFJLENBQUMsQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDO1lBQ2hJLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxHQUFHLElBQUksSUFBSSxFQUFFLENBQUMsT0FBTyxFQUFFLENBQUM7WUFDbEUsSUFBSSxJQUFJLEtBQUssT0FBTyxDQUFDLE9BQU87Z0JBQUUscUJBQXFCLEVBQUUsQ0FBQztRQUN4RCxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUM7UUFFUCxNQUFNLE9BQU8sR0FBRyxLQUFLLENBQUMsV0FBVyxDQUFDLENBQUMsSUFBSSxFQUFFLEtBQUssRUFBRSxFQUFFO1lBQ2hELE9BQU8sbUJBQW1CLENBQUMsSUFBSSxDQUFDLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDO1lBQzdDLElBQUksSUFBSSxLQUFLLE9BQU8sQ0FBQyxPQUFPO2dCQUFFLHFCQUFxQixFQUFFLENBQUM7UUFDeEQsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDO1FBRVAsTUFBTSxNQUFNLEdBQUcsS0FBSyxDQUFDLE9BQU8sQ0FBQyxHQUFHLEVBQUUsQ0FBQyxDQUFDO1lBQ2xDLGdCQUFnQixFQUFFLENBQUMsS0FBSyxFQUFFLEVBQUUsQ0FBQyxLQUFLLENBQUMsVUFBVSxFQUFFLEtBQUssQ0FBQztZQUNyRCxVQUFVLEVBQUUsQ0FBQyxLQUFLLEVBQUUsRUFBRSxDQUFDLEtBQUssQ0FBQyxVQUFVLEVBQUUsS0FBSyxDQUFDO1lBQy9DLGtCQUFrQixFQUFFLENBQUMsS0FBSyxFQUFFLEVBQUUsQ0FBQyxPQUFPLENBQUMsVUFBVSxFQUFFLEtBQUssQ0FBQztZQUN6RCx1QkFBdUIsRUFBRSxDQUFDLEtBQUssRUFBRSxFQUFFLENBQUMsS0FBSyxDQUFDLGlCQUFpQixFQUFFLEtBQUssQ0FBQztZQUNuRSxpQkFBaUIsRUFBRSxDQUFDLEtBQUssRUFBRSxFQUFFLENBQUMsS0FBSyxDQUFDLGlCQUFpQixFQUFFLEtBQUssQ0FBQztZQUM3RCx5QkFBeUIsRUFBRSxDQUFDLEtBQUssRUFBRSxFQUFFLENBQUMsT0FBTyxDQUFDLGlCQUFpQixFQUFFLEtBQUssQ0FBQztZQUN2RSxRQUFRLEVBQUUsQ0FBQyxLQUFLLEVBQUUsRUFBRSxDQUFDLEtBQUssQ0FBQyxRQUFRLEVBQUUsS0FBSyxDQUFDO1lBQzNDLGtCQUFrQixFQUFFLENBQUMsS0FBSyxFQUFFLEVBQUUsQ0FBQyxLQUFLLENBQUMsV0FBVyxFQUFFLEtBQUssQ0FBQztZQUN4RCxXQUFXLEVBQUUsQ0FBQyxLQUFLLEVBQUUsRUFBRSxDQUFDLEtBQUssQ0FBQyxXQUFXLEVBQUUsS0FBSyxDQUFDO1lBQ2pELFFBQVEsRUFBRSxDQUFDLEtBQUssRUFBRSxFQUFFLENBQUMsS0FBSyxDQUFDLFFBQVEsRUFBRSxLQUFLLENBQUM7WUFDM0MsUUFBUSxFQUFFLENBQUMsS0FBSyxFQUFFLEVBQUUsQ0FBQyxLQUFLLENBQUMsUUFBUSxFQUFFLEtBQUssQ0FBQztZQUMzQyxRQUFRLEVBQUUsQ0FBQyxLQUFLLEVBQUUsRUFBRSxDQUFDLEtBQUssQ0FBQyxRQUFRLEVBQUUsS0FBSyxDQUFDO1NBQzVDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQztRQUVSLEtBQUssQ0FBQyxTQUFTLENBQUMsR0FBRyxFQUFFO1lBQ25CLE1BQU0sR0FBRyxHQUFHLENBQUMsSUFBSSxFQUFFLEVBQUUsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsSUFBSSxJQUFJLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQyxJQUFJLEVBQUUsTUFBTSxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztZQUM5RSxNQUFNLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO1FBQ2pELENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQztRQUVQLE1BQU0sQ0FBQyxNQUFNLEVBQUUsU0FBUyxDQUFDLEdBQUcsS0FBSyxDQUFDLFFBQVEsRUFBRSxDQUFDO1FBRTdDLE1BQU0sSUFBSSxHQUFHLEtBQUssQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDLEVBQUUsSUFBSSxFQUFFLFFBQVEsRUFBRSxFQUFFLEVBQUU7WUFDakUsTUFBTSxFQUFFLEdBQUcsRUFBRSxDQUFDLEtBQUssRUFBRSxDQUFDO1lBRXRCLE1BQU0sQ0FBQyxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxFQUFFLEtBQUssQ0FBQyxDQUFDO1lBRXRDLE9BQU8sb0JBQUMsRUFBRSxDQUFDLEVBQUUsSUFBQyxFQUFFLEVBQUU7b0JBQ2hCLElBQUksRUFBRSxDQUFDLENBQUMsRUFBQyxDQUFDLEVBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDO2lCQUNqQztnQkFDQyxvQkFBQyxDQUFDLENBQUMsTUFBTSxJQUFDLEVBQUUsRUFBRSxRQUFRLENBQUMsQ0FBQyxDQUFDLFlBQVksQ0FBQyxDQUFDLENBQUMsU0FBUyxFQUFFLE9BQU8sRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLE1BQU0sQ0FBQyxFQUFFLENBQUMsRUFBQyxNQUFNO29CQUN2RixvQkFBQyxDQUFDLENBQUMsSUFBSSxJQUFDLENBQUMsRUFBQyxNQUFNO3dCQUNkLG9CQUFDLENBQUMsQ0FBQyxHQUFHLElBQUMsSUFBSSxFQUFDLEdBQUcsRUFBQyxDQUFDLEVBQUMsT0FBTyxFQUFDLEVBQUUsRUFBQyxLQUFLOzRCQUNoQyxvQkFBQyxDQUFDLENBQUMsR0FBRyxJQUFDLFNBQVMsRUFBRSxDQUFDLEVBQUUsU0FBUyxFQUFDLE1BQU07Z0NBQ2xDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQztnQ0FBRSxDQUFDLENBQUMsTUFBTSxHQUFHLEVBQUUsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQ3JDOzRCQUNQLENBQUMsQ0FBQyxJQUFJLEVBQUUsS0FBSyxJQUFJLG9CQUFDLENBQUMsQ0FBQyxHQUFHLElBQUMsU0FBUyxFQUFFLENBQUMsSUFDbEMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLEVBQUUsS0FBSyxDQUFDLENBQ3RCLENBQ0Y7d0JBQ1Isb0JBQUMsQ0FBQyxDQUFDLEdBQUcsSUFBQyxDQUFDLEVBQUMsUUFBUSxFQUFDLEVBQUUsRUFBQyxLQUFLLEVBQUMsUUFBUSxFQUFDLElBQUk7NEJBQ3RDLG9CQUFDLENBQUMsQ0FBQyxHQUFHLFFBQUUsTUFBTSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQyxNQUFNLENBQUMsVUFBVSxDQUFDLENBQVM7NEJBQ3ZELENBQUMsQ0FBQyxJQUFJLENBQUMsT0FBTyxJQUFJLG9CQUFDLENBQUMsQ0FBQyxHQUFHLFFBQUUsTUFBTSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQyxNQUFNLENBQUMsVUFBVSxDQUFDLENBQVMsQ0FDckUsQ0FDRCxDQUNDLENBQ04sQ0FBQTtRQUNWLENBQUMsRUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUM7UUFFbkIsS0FBSyxDQUFDLE9BQU8sQ0FBQyxHQUFHLEVBQUU7WUFDakIsU0FBUyxFQUFFLENBQUM7WUFDWixZQUFZLEVBQUUsQ0FBQztRQUNqQixDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBRWQsS0FBSyxDQUFDLE9BQU8sQ0FBQyxHQUFHLEVBQUU7WUFDakIsSUFBSSxDQUFDLEVBQUUsQ0FBQyxLQUFLO2dCQUFFLElBQUksQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDO2lCQUNwQixJQUFJLENBQUMsSUFBSTtnQkFBRSxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsVUFBVSxDQUFDLENBQUM7UUFDdEMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUM7UUFFZixLQUFLLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRTtZQUNqQixNQUFNLElBQUksRUFBRSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUM1QixDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDO1FBRWIsT0FBTyxvQkFBQyxFQUFFLENBQUMsRUFBRSxJQUNYLEVBQUUsRUFBRTtnQkFDRixLQUFLLEVBQUUsQ0FBQyxDQUFDLEVBQUMsQ0FBQyxFQUFDLEVBQUUsRUFBQyxDQUFDLEVBQUUsRUFBRTtvQkFDbEIsSUFBSSxDQUFDLENBQUM7d0JBQUUsRUFBRSxDQUFDLEdBQUcsQ0FBQyxVQUFVLENBQUMsQ0FBQzt5QkFDdEIsSUFBSSxLQUFLLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQzt3QkFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUM7Z0JBQ3pDLENBQUM7Z0JBQ0QsS0FBSyxFQUFFLENBQUMsQ0FBQyxFQUFDLENBQUMsRUFBQyxDQUFDLEVBQUUsRUFBRTtvQkFDZixJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztnQkFDekQsQ0FBQztnQkFDRCxJQUFJLEVBQUUsQ0FBQyxDQUFDLEVBQUMsQ0FBQyxFQUFDLENBQUMsRUFBRSxFQUFFO29CQUNkLEtBQUssQ0FBQyxDQUFDLENBQUMsS0FBSyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7Z0JBQzVGLENBQUM7YUFDRjtZQUVELG9CQUFDLENBQUMsQ0FBQyxPQUFPLElBQUMsU0FBUyxFQUFDLFdBQVcsRUFBQyxXQUFXLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLEtBQUssRUFBRSxPQUFPLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEdBQUcsRUFBRTtnQkFDOUYsb0JBQUMsQ0FBQyxDQUFDLGNBQWM7b0JBQ2Ysb0JBQUMsQ0FBQyxDQUFDLE1BQU0sSUFDUCxHQUFHLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBQyxLQUFLLEVBQUMsQ0FBQyxFQUFDLEtBQUssRUFBQyxPQUFPLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxLQUFLLElBQUksUUFBUSxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLFNBQVMsRUFDaEYsT0FBTyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxVQUFVLENBQUMsSUFFdEQsUUFBUSxDQUNBLENBQ007Z0JBQ25CLG9CQUFDLENBQUMsQ0FBQyxNQUFNLElBQUMsWUFBWSxFQUFFLFlBQVk7b0JBQ2xDLG9CQUFDLENBQUMsQ0FBQyxjQUFjLElBQUMsQ0FBQyxFQUFDLE1BQU0sRUFBQyxJQUFJLEVBQUMsTUFBTSxFQUFDLElBQUksRUFBQyxNQUFNLEVBQUMsUUFBUSxFQUFDLFVBQVU7d0JBQ3BFLG9CQUFDLENBQUMsQ0FBQyxZQUFZLE9BQUc7d0JBQ2xCLG9CQUFDLENBQUMsQ0FBQyxJQUFJLElBQUMsU0FBUyxFQUFDLFFBQVEsRUFBQyxRQUFRLEVBQUMsVUFBVSxFQUFDLEdBQUcsRUFBQyxHQUFHLEVBQUMsSUFBSSxFQUFDLEdBQUcsRUFBQyxDQUFDLEVBQUMsTUFBTSxFQUFDLENBQUMsRUFBQyxNQUFNOzRCQUMvRSxvQkFBQyxDQUFDLENBQUMsSUFBSSxJQUFDLFNBQVMsRUFBQyxRQUFRLEVBQUMsR0FBRyxFQUFFLEVBQUUsQ0FBQyxXQUFXO2dDQUM1QyxvQkFBQyxDQUFDLENBQUMsSUFBSSxJQUFDLE9BQU8sRUFBRSxLQUFLLENBQUMsTUFBTSxFQUFFLElBQUksRUFBQyxHQUFHLElBQ3BDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxvQkFBQyxDQUFDLENBQUMsTUFBTSxPQUFLLEVBQUUsQ0FBQyxTQUFTLENBQUMsSUFBSSxFQUFFLENBQUMsQ0FBQyxJQUFHLENBQUMsQ0FBWSxDQUFDLENBQzdEO2dDQUNULG9CQUFDLENBQUMsQ0FBQyxPQUFPLElBQUMsV0FBVyxFQUFDLFVBQVUsR0FBRztnQ0FDcEMsb0JBQUMsQ0FBQyxDQUFDLE1BQU0sT0FBSyxFQUFFLENBQUMsU0FBUyxDQUFDLENBQUMsSUFBSSxFQUFFLE9BQU8sQ0FBQyxFQUFFLElBQUksQ0FBQyxXQUFpQixDQUMzRDs0QkFDVCxvQkFBQyxDQUFDLENBQUMsT0FBTyxPQUFFOzRCQUNaLG9CQUFDLEVBQUUsQ0FBQyxRQUFRLElBQUMsTUFBTSxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsSUFBSSxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxJQUM3QyxDQUFDLE1BQU0sSUFBSSxvQkFBQyxFQUFFLENBQUMsU0FBUyxJQUFDLEdBQUcsRUFBRSxJQUFJLENBQUMsQ0FBQyxDQUFDLEVBQUUsSUFBSSxFQUFFLENBQUMsR0FBRyxFQUFFLE9BQU8sQ0FBQyxFQUFFLFNBQVMsRUFBQyxVQUFVLEVBQUMsS0FBSyxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBQyxHQUFHLEdBQUUsQ0FDMUc7NEJBQ2IsQ0FBQyxDQUFDLE1BQU0sSUFBSTtnQ0FDWCxvQkFBQyxFQUFFLENBQUMsUUFBUSxJQUFDLE1BQU0sRUFBRSxLQUFLLEVBQUUsS0FBSyxFQUFFLElBQUksRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUU7b0NBQzlDLG9CQUFDLEVBQUUsQ0FBQyxTQUFTLElBQUMsSUFBSSxFQUFFLENBQUMsR0FBRyxFQUFFLE9BQU8sQ0FBQyxFQUFFLEtBQUssRUFBRSxNQUFNLEdBQUcsQ0FDeEMsQ0FNYixDQUNJLENBQ1EsQ0FDVixDQUNELENBQ04sQ0FBQztJQUNYLENBQUMsQ0FBQztBQUNKLENBQUMsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbIih7IGRlZXAsIGRhdGEsIHJlcXVpcmUsIEdvIH0pID0+IHtcbiAgY29uc3QgUmVhY3QgPSByZXF1aXJlKCdyZWFjdCcpO1xuICBcbiAgY29uc3QgYyA9IHJlcXVpcmUoJ0BjaGFrcmEtdWkvcmVhY3QnKTtcbiAgY29uc3QgXyA9IHJlcXVpcmUoJ2xvZGFzaCcpO1xuICBjb25zdCBtb21lbnQgPSByZXF1aXJlKCdtb21lbnQnKTtcbiAgY29uc3QgeyB1c2VEZWJvdW5jZUNhbGxiYWNrIH0gPSByZXF1aXJlKCdAcmVhY3QtaG9vay9kZWJvdW5jZScpO1xuXG4gIHZhciBkcGwgPSAnQGRlZXAtZm91bmRhdGlvbi9wZXJjZXB0aW9uLWxpbmtzJztcbiAgdmFyIGRjID0gJ0BkZWVwLWZvdW5kYXRpb24vY29yZSc7XG5cbiAgY29uc3QgU3RhY2sgPSBkZWVwLmlkTG9jYWwoZHBsLCAnU3RhY2snKTtcbiAgY29uc3QgUXVlcmllcyA9IGRlZXAuaWRMb2NhbChkcGwsICdRdWVyaWVzJyk7XG4gIGNvbnN0IENvbXBhdGFibGUgPSBkZWVwLmlkTG9jYWwoZHBsLCAnQ29tcGF0YWJsZScpO1xuICBjb25zdCBIYW5kbGVyID0gZGVlcC5pZExvY2FsKGRjLCAnSGFuZGxlcicpO1xuICBjb25zdCBRdWVyeSA9IGRlZXAuaWRMb2NhbChkcGwsICdRdWVyeScpO1xuICBjb25zdCBRdWVyaWVzQ2xpZW50ID0gZGVlcC5pZExvY2FsKGRwbCwgJ1F1ZXJpZXNDbGllbnQnKTtcblxuICBsZXQgaW5pdGlhbE1lbW9yeU9iamVjdCA9IHtcbiAgICB1c2VRdWVyeToge30sIHVzZVN1YnNjcmlwdGlvbjoge30sIHNlbGVjdDoge30sIHN1YnNjcmliZToge30sIGluc2VydDoge30sIHVwZGF0ZToge30sICdkZWxldGUnOiB7fSxcbiAgfTtcbiAgaWYgKHR5cGVvZih3aW5kb3cpID09PSAnb2JqZWN0Jykge1xuICAgIGlmICh3aW5kb3cuX2RlZXBfcGVyY2VwdGlvbl9xdWVyaWVzX21lbW9yeSkgaW5pdGlhbE1lbW9yeU9iamVjdCA9IHdpbmRvdy5fZGVlcF9wZXJjZXB0aW9uX3F1ZXJpZXNfbWVtb3J5O1xuICAgIHdpbmRvdy5fZGVlcF9wZXJjZXB0aW9uX3F1ZXJpZXNfbWVtb3J5ID0gaW5pdGlhbE1lbW9yeU9iamVjdDtcbiAgfVxuXG4gIHJldHVybiAoe1xuICAgIGdvLFxuXG4gICAgaXNBY3RpdmUgPSBmYWxzZSxcblxuICAgIGNoaWxkcmVuLFxuICB9LCByZWYpID0+IHtcbiAgICBjb25zdCBjb250YWluZXJSZWYgPSBSZWFjdC51c2VNZW1vKCgpID0+IGdvLnJvb3QoKS5yZWYsIFtdKTtcblxuICAgIGNvbnN0IHsgc3luYywgc2V0U3luYyB9ID0gUmVhY3QudXNlQ29udGV4dChnby5IYW5kbGVyQ29uZmlnQ29udGV4dCk7XG4gICAgY29uc3QgbW9kZSA9IFJlYWN0LnVzZVN0YXRlKCd1c2VRdWVyeScpO1xuICAgIGNvbnN0IG1vZGVSZWYgPSBSZWFjdC51c2VSZWYobW9kZSk7IG1vZGVSZWYuY3VycmVudCA9IG1vZGVbMF07XG5cbiAgICBjb25zdCBtb2RlcyA9IE9iamVjdC5rZXlzKGluaXRpYWxNZW1vcnlPYmplY3QpO1xuXG4gICAgY29uc3QgW2xpc3QsIHNldExpc3RdID0gUmVhY3QudXNlU3RhdGUoW10pO1xuICAgIGNvbnN0IGdlbmVyYXRlTGlzdCA9IFJlYWN0LnVzZUNhbGxiYWNrKCgpID0+IHtcbiAgICAgIGlmICghbW9kZVJlZi5jdXJyZW50KSByZXR1cm47XG4gICAgICBjb25zdCBsaXN0ID0gXy5jaGFpbihPYmplY3QudmFsdWVzKGluaXRpYWxNZW1vcnlPYmplY3RbbW9kZVJlZi5jdXJyZW50XSB8fCB7fSkpLnNvcnRCeSgnbW91bnRlZCcpLnJldmVyc2UoKS52YWx1ZSgpO1xuICAgICAgc2V0TGlzdChsaXN0KTtcbiAgICB9LCBbXSk7XG4gICAgY29uc3QgZ2VuZXJhdGVMaXN0RGVib3VuY2VkID0gdXNlRGVib3VuY2VDYWxsYmFjayhnZW5lcmF0ZUxpc3QsIDEwMDApO1xuXG4gICAgY29uc3QgYXBwbHkgPSBSZWFjdC51c2VDYWxsYmFjaygobW9kZSwgZXZlbnQpID0+IHtcbiAgICAgIGNvbnN0IHByZXYgPSBpbml0aWFsTWVtb3J5T2JqZWN0W21vZGVdW2V2ZW50Lm5hbWVdIHx8IHt9O1xuICAgICAgY29uc3QgbmV4dCA9IGluaXRpYWxNZW1vcnlPYmplY3RbbW9kZV1bZXZlbnQubmFtZV0gPSB7IGlkOiBldmVudC5uYW1lLCBtb2RlLCAuLi5wcmV2LCAuLi5ldmVudCwgY291bnQ6IChwcmV2Py5jb3VudCB8fCAwKSArIDEgfTtcbiAgICAgIG5leHRbbmV4dC5tb3VudGVkID8gJ3VwZGF0ZWQnIDogJ21vdW50ZWQnXSA9IG5ldyBEYXRlKCkudmFsdWVPZigpO1xuICAgICAgaWYgKG1vZGUgPT09IG1vZGVSZWYuY3VycmVudCkgZ2VuZXJhdGVMaXN0RGVib3VuY2VkKCk7XG4gICAgfSwgW10pO1xuXG4gICAgY29uc3QgdW5hcHBseSA9IFJlYWN0LnVzZUNhbGxiYWNrKChtb2RlLCBldmVudCkgPT4ge1xuICAgICAgZGVsZXRlIGluaXRpYWxNZW1vcnlPYmplY3RbbW9kZV1bZXZlbnQubmFtZV07XG4gICAgICBpZiAobW9kZSA9PT0gbW9kZVJlZi5jdXJyZW50KSBnZW5lcmF0ZUxpc3REZWJvdW5jZWQoKTtcbiAgICB9LCBbXSk7XG5cbiAgICBjb25zdCBldmVudHMgPSBSZWFjdC51c2VNZW1vKCgpID0+ICh7XG4gICAgICAndXNlUXVlcnkubW91bnQnOiAoZXZlbnQpID0+IGFwcGx5KCd1c2VRdWVyeScsIGV2ZW50KSxcbiAgICAgICd1c2VRdWVyeSc6IChldmVudCkgPT4gYXBwbHkoJ3VzZVF1ZXJ5JywgZXZlbnQpLFxuICAgICAgJ3VzZVF1ZXJ5LnVubW91bnQnOiAoZXZlbnQpID0+IHVuYXBwbHkoJ3VzZVF1ZXJ5JywgZXZlbnQpLFxuICAgICAgJ3VzZVN1YnNjcmlwdGlvbi5tb3VudCc6IChldmVudCkgPT4gYXBwbHkoJ3VzZVN1YnNjcmlwdGlvbicsIGV2ZW50KSxcbiAgICAgICd1c2VTdWJzY3JpcHRpb24nOiAoZXZlbnQpID0+IGFwcGx5KCd1c2VTdWJzY3JpcHRpb24nLCBldmVudCksXG4gICAgICAndXNlU3Vic2NyaXB0aW9uLnVubW91bnQnOiAoZXZlbnQpID0+IHVuYXBwbHkoJ3VzZVN1YnNjcmlwdGlvbicsIGV2ZW50KSxcbiAgICAgICdzZWxlY3QnOiAoZXZlbnQpID0+IGFwcGx5KCdzZWxlY3QnLCBldmVudCksXG4gICAgICAnc3Vic2NyaWJlLmJlZm9yZSc6IChldmVudCkgPT4gYXBwbHkoJ3N1YnNjcmliZScsIGV2ZW50KSxcbiAgICAgICdzdWJzY3JpYmUnOiAoZXZlbnQpID0+IGFwcGx5KCdzdWJzY3JpYmUnLCBldmVudCksXG4gICAgICAnaW5zZXJ0JzogKGV2ZW50KSA9PiBhcHBseSgnaW5zZXJ0JywgZXZlbnQpLFxuICAgICAgJ3VwZGF0ZSc6IChldmVudCkgPT4gYXBwbHkoJ3VwZGF0ZScsIGV2ZW50KSxcbiAgICAgICdkZWxldGUnOiAoZXZlbnQpID0+IGFwcGx5KCdkZWxldGUnLCBldmVudCksXG4gICAgfSksIFtdKTtcblxuICAgIFJlYWN0LnVzZUVmZmVjdCgoKSA9PiB7XG4gICAgICBjb25zdCBzdWIgPSAobmFtZSkgPT4gZXZlbnRzPy5bbmFtZV0gJiYgZGVlcC5lbWl0dGVyLm9uKG5hbWUsIGV2ZW50cz8uW25hbWVdKTtcbiAgICAgIE9iamVjdC5rZXlzKGV2ZW50cykuZm9yRWFjaChuYW1lID0+IHN1YihuYW1lKSk7XG4gICAgfSwgW10pO1xuXG4gICAgY29uc3QgW29wZW5lZCwgc2V0T3BlbmVkXSA9IFJlYWN0LnVzZVN0YXRlKCk7XG5cbiAgICBjb25zdCBJdGVtID0gUmVhY3QudXNlTWVtbygoKSA9PiBSZWFjdC5tZW1vKCh7IGxpbmssIGlzQWN0aXZlIH0pID0+IHtcbiAgICAgIGNvbnN0IGdvID0gR28udXNlR28oKTtcblxuICAgICAgY29uc3QgcSA9IEpTT04uc3RyaW5naWZ5KGxpbms/LnF1ZXJ5KTtcblxuICAgICAgcmV0dXJuIDxnby5PbiBkbz17e1xuICAgICAgICBleGVjOiAoZyx2LG8pID0+IHNldE9wZW5lZChsaW5rKSxcbiAgICAgIH19PlxuICAgICAgICA8Yy5CdXR0b24gYmc9e2lzQWN0aXZlID8gJ2RlZXBCZ0RhcmsnIDogdW5kZWZpbmVkfSBvbkNsaWNrPXsoKSA9PiBnby5kbygnZXhlYycpfSB3PScxMDAlJz5cbiAgICAgICAgICA8Yy5GbGV4IHc9JzEwMCUnPlxuICAgICAgICAgICAgPGMuQm94IGZsZXg9JzEnIHA9JzAuNWVtJyBwbD0nMWVtJz5cbiAgICAgICAgICAgICAgPGMuQm94IG5vT2ZMaW5lcz17MX0gdGV4dEFsaWduPSdsZWZ0Jz5cbiAgICAgICAgICAgICAgICB7cS5zbGljZSgwLCA0Myl9e3EubGVuZ3RoID4gNDMgPyAnLi4uJyA6ICcnfVxuICAgICAgICAgICAgICA8L2MuQm94PlxuICAgICAgICAgICAgICB7ISFsaW5rPy52YWx1ZSAmJiA8Yy5Cb3ggbm9PZkxpbmVzPXsxfT5cbiAgICAgICAgICAgICAgICB7SlNPTi5zdHJpbmdpZnkobGluaz8udmFsdWUpfVxuICAgICAgICAgICAgICA8L2MuQm94Pn1cbiAgICAgICAgICAgIDwvYy5Cb3g+XG4gICAgICAgICAgICA8Yy5Cb3ggcD0nMC4yNWVtJyBwcj0nMWVtJyBmb250U2l6ZT0neHMnPlxuICAgICAgICAgICAgICA8Yy5Cb3g+e21vbWVudChsaW5rLm1vdW50ZWQpLmZvcm1hdCgnSEg6bW06c3MnKX08L2MuQm94PlxuICAgICAgICAgICAgICB7ISFsaW5rLnVwZGF0ZWQgJiYgPGMuQm94Pnttb21lbnQobGluay51cGRhdGVkKS5mb3JtYXQoJ0hIOm1tOnNzJyl9PC9jLkJveD59XG4gICAgICAgICAgICA8L2MuQm94PlxuICAgICAgICAgIDwvYy5GbGV4PlxuICAgICAgICA8L2dvLkJ1dHRvbj5cbiAgICAgIDwvZ28uT24+XG4gICAgfSwgXy5pc0VxdWFsKSwgW10pO1xuXG4gICAgUmVhY3QudXNlTWVtbygoKSA9PiB7XG4gICAgICBzZXRPcGVuZWQoKTtcbiAgICAgIGdlbmVyYXRlTGlzdCgpO1xuICAgIH0sIFttb2RlWzBdXSk7XG5cbiAgICBSZWFjdC51c2VNZW1vKCgpID0+IHtcbiAgICAgIGlmICghZ28udmFsdWUpIG1vZGVbMV0oKTtcbiAgICAgIGVsc2UgaWYgKCFtb2RlKSBtb2RlWzFdKCd1c2VRdWVyeScpO1xuICAgIH0sIFtnby52YWx1ZV0pO1xuXG4gICAgUmVhY3QudXNlTWVtbygoKSA9PiB7XG4gICAgICBvcGVuZWQgJiYgZ28uZm9jdXMoUXVlcnkpO1xuICAgIH0sIFtvcGVuZWRdKTtcblxuICAgIHJldHVybiA8Z28uT25cbiAgICAgIGRvPXt7XG4gICAgICAgIGZvY3VzOiAoZyx2LGlkLG8pID0+IHtcbiAgICAgICAgICBpZiAoIXYpIGdvLnNldCgndXNlUXVlcnknKTtcbiAgICAgICAgICBlbHNlIGlmIChtb2Rlcy5pbmNsdWRlcyh2KSkgc2V0TW9kZSh2KTtcbiAgICAgICAgfSxcbiAgICAgICAgcmlnaHQ6IChnLHYsbykgPT4ge1xuICAgICAgICAgIG1vZGVbMV0oZ28ubmV4dChtb2Rlcy5tYXAobSA9PiAoeyBpZDogbSB9KSksIG1vZGVbMF0pKTtcbiAgICAgICAgfSxcbiAgICAgICAgbGVmdDogKGcsdixvKSA9PiB7XG4gICAgICAgICAgbW9kZXNbMF0gPT09IG1vZGVbMF0gID8gZ28uc2V0KCkgOiBtb2RlWzFdKGdvLnByZXYobW9kZXMubWFwKG0gPT4gKHsgaWQ6IG0gfSkpLCBtb2RlWzBdKSk7XG4gICAgICAgIH0sXG4gICAgICB9fVxuICAgID5cbiAgICAgIDxjLlBvcG92ZXIgcGxhY2VtZW50PSdyaWdodC1lbmQnIGNsb3NlT25CbHVyPXtmYWxzZX0gaXNPcGVuPXshIWdvLnZhbHVlfSBvbkNsb3NlPXsoKSA9PiBnby5zZXQoKX0+XG4gICAgICAgIDxjLlBvcG92ZXJUcmlnZ2VyPlxuICAgICAgICAgIDxjLkJ1dHRvblxuICAgICAgICAgICAgcmVmPXtyZWZ9IHc9JzNlbScgaD0nM2VtJyB2YXJpYW50PXshIWdvLnZhbHVlIHx8IGlzQWN0aXZlID8gJ2FjdGl2ZScgOiB1bmRlZmluZWR9XG4gICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiBnby52YWx1ZSA/IGdvLnNldCgpIDogZ28uc2V0KCd1c2VRdWVyeScpfVxuICAgICAgICAgID5cbiAgICAgICAgICAgIHtjaGlsZHJlbn1cbiAgICAgICAgICA8L2MuQnV0dG9uPlxuICAgICAgICA8L2MuUG9wb3ZlclRyaWdnZXI+XG4gICAgICAgIDxjLlBvcnRhbCBjb250YWluZXJSZWY9e2NvbnRhaW5lclJlZn0+XG4gICAgICAgICAgPGMuUG9wb3ZlckNvbnRlbnQgdz0nMzBlbScgbWF4SD0nMzBlbScgbWluSD0nMzBlbScgcG9zaXRpb249J3JlbGF0aXZlJz5cbiAgICAgICAgICAgIDxjLlBvcG92ZXJBcnJvdyAvPlxuICAgICAgICAgICAgPGMuRmxleCBkaXJlY3Rpb249J2NvbHVtbicgcG9zaXRpb249J2Fic29sdXRlJyB0b3A9JzAnIGxlZnQ9JzAnIHc9JzEwMCUnIGg9JzEwMCUnPlxuICAgICAgICAgICAgICA8Yy5GbGV4IG92ZXJmbG93WD0nc2Nyb2xsJyBjc3M9e2dvLm5vU2Nyb2xsQmFyfT5cbiAgICAgICAgICAgICAgICA8Yy5GbGV4IGNvbHVtbnM9e21vZGVzLmxlbmd0aH0gZmxleD0nMSc+XG4gICAgICAgICAgICAgICAgICB7bW9kZXMubWFwKG0gPT4gPGMuQnV0dG9uIHsuLi5nby5hY3RpdmF0b3IobW9kZSwgbSl9PnttfTwvYy5CdXR0b24+KX1cbiAgICAgICAgICAgICAgICA8L2MuRmxleD5cbiAgICAgICAgICAgICAgICA8Yy5EaXZpZGVyIG9yaWVudGF0aW9uPSd2ZXJ0aWNhbCcgLz5cbiAgICAgICAgICAgICAgICA8Yy5CdXR0b24gey4uLmdvLmFjdGl2YXRvcihbc3luYywgc2V0U3luY10sIHRydWUpfT5zeW5jPC9jLkJ1dHRvbj5cbiAgICAgICAgICAgICAgPC9jLkZsZXg+XG4gICAgICAgICAgICAgIDxjLkRpdmlkZXIvPlxuICAgICAgICAgICAgICA8Z28uUHJvdmlkZXIgbGlua0lkPXtTdGFja30gdmFsdWU9e2xpc3Q/LlswXT8uaWR9PlxuICAgICAgICAgICAgICAgIHshb3BlbmVkICYmIDxnby5Db21wb25lbnQga2V5PXttb2RlWzBdfSBwYXRoPXtbZHBsLCAnU3RhY2snXX0gZGlyZWN0aW9uPSd2ZXJ0aWNhbCcgbGlua3M9e2xpc3R9IEl0ZW09e0l0ZW19IGZsZXg9JzEnLz59XG4gICAgICAgICAgICAgIDwvZ28uUHJvdmlkZXI+XG4gICAgICAgICAgICAgIHshIW9wZW5lZCAmJiA8PlxuICAgICAgICAgICAgICAgIDxnby5Qcm92aWRlciBsaW5rSWQ9e1F1ZXJ5fSB2YWx1ZT17bGlzdD8uWzBdPy5pZH0+XG4gICAgICAgICAgICAgICAgICA8Z28uQ29tcG9uZW50IHBhdGg9e1tkcGwsICdRdWVyeSddfSBldmVudD17b3BlbmVkfS8+XG4gICAgICAgICAgICAgICAgPC9nby5Qcm92aWRlcj5cbiAgICAgICAgICAgICAgICB7LyogPGdvLkNvbXBvbmVudCBwYXRoPXtbZHBsLCAnU3RhY2snXX0gZGlyZWN0aW9uPSdob3Jpem9udGFsJyBsaW5rcz17dmlld3N9IEl0ZW09e1ZpZXdJdGVtfS8+ICovfVxuICAgICAgICAgICAgICAgIHsvKiA8Z28uQ29tcG9uZW50IHBhdGg9e1tkcGwsICdRdWVyaWVzR1FMJ119IGV4dGVuZEluc2VydD17eyBvdXQ6IHsgdHlwZV9pZDogQ29tcGF0YWJsZSwgdG9faWQ6IFF1ZXJpZXMgfSB9fS8+XG4gICAgICAgICAgICAgICAgPGdvLkNvbXBvbmVudCBwYXRoPXtbZHBsLCAnUXVlcmllc1JlYWN0J119IGV4dGVuZEluc2VydD17eyBvdXQ6IHsgdHlwZV9pZDogQ29tcGF0YWJsZSwgdG9faWQ6IFF1ZXJpZXMgfSB9fS8+XG4gICAgICAgICAgICAgICAgPGdvLkNvbXBvbmVudCBwYXRoPXtbZHBsLCAnUXVlcmllc0NsaWVudCddfSBleHRlbmRJbnNlcnQ9e3sgb3V0OiB7IHR5cGVfaWQ6IENvbXBhdGFibGUsIHRvX2lkOiBRdWVyaWVzIH0gfX0vPlxuICAgICAgICAgICAgICAgIDxnby5Db21wb25lbnQgcGF0aD17W2RwbCwgJ1F1ZXJpZXNSZXN1bHRzJ119IGV4dGVuZEluc2VydD17eyBvdXQ6IHsgdHlwZV9pZDogQ29tcGF0YWJsZSwgdG9faWQ6IFF1ZXJpZXMgfSB9fS8+ICovfVxuICAgICAgICAgICAgICA8Lz59XG4gICAgICAgICAgICA8L2MuRmxleD5cbiAgICAgICAgICA8L2MuUG9wb3ZlckNvbnRlbnQ+XG4gICAgICAgIDwvYy5Qb3J0YWw+XG4gICAgICA8L2MuUG9wb3Zlcj5cbiAgICA8L2dvLk9uPjtcbiAgfTtcbn0iXX0=",
        "link_id": 20480
      }
    },
    {
      "id": 20482,
      "type_id": 3,
      "from_id": 20474,
      "to_id": 20480,
      "value": {
        "id": 1785,
        "value": "generated",
        "link_id": 20482
      }
    },
    {
      "id": 20485,
      "type_id": 143,
      "from_id": 20480,
      "to_id": 20474
    },
    {
      "id": 20486,
      "type_id": 3,
      "from_id": 20474,
      "to_id": 20485
    },
    {
      "id": 21151,
      "type_id": 717,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 1793,
        "value": "({ deep, data, require, Go }) => {\n  const React = require('react');\n  \n  const c = require('@chakra-ui/react');\n\n  return ({\n    go,\n\n    children,\n  }, ref) => {\n    return <go.On\n      do={{\n      }}\n    >\n      <c.Box ref={ref} h='3em'>{`${go}`}</c.Box>\n    </go.On>;\n  };\n}",
        "link_id": 21151
      }
    },
    {
      "id": 21152,
      "type_id": 3,
      "from_id": 2586,
      "to_id": 21151,
      "value": {
        "id": 1792,
        "value": "useThemeHook",
        "link_id": 21152
      }
    },
    {
      "id": 21155,
      "type_id": 35,
      "from_id": 145,
      "to_id": 21151
    },
    {
      "id": 21156,
      "type_id": 3,
      "from_id": 2586,
      "to_id": 21155,
      "value": {
        "id": 1794,
        "value": "useTheme",
        "link_id": 21156
      }
    },
    {
      "id": 21157,
      "type_id": 30,
      "from_id": 0,
      "to_id": 0,
      "value": {
        "id": 1796,
        "value": "({ deep, data, require, Go }) => {\n    const React = require('react');\n    const c = require('@chakra-ui/react');\n    return ({ go, children, }, ref) => {\n        return React.createElement(go.On, { do: {} },\n            React.createElement(c.Box, { ref: ref, h: '3em' }, `${go}`));\n    };\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsibW9kdWxlLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxDQUFDLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRTtJQUM5QixNQUFNLEtBQUssR0FBRyxPQUFPLENBQUMsT0FBTyxDQUFDLENBQUM7SUFFL0IsTUFBTSxDQUFDLEdBQUcsT0FBTyxDQUFDLGtCQUFrQixDQUFDLENBQUM7SUFFdEMsT0FBTyxDQUFDLEVBQ04sRUFBRSxFQUVGLFFBQVEsR0FDVCxFQUFFLEdBQUcsRUFBRSxFQUFFO1FBQ1IsT0FBTyxvQkFBQyxFQUFFLENBQUMsRUFBRSxJQUNYLEVBQUUsRUFBRSxFQUNIO1lBRUQsb0JBQUMsQ0FBQyxDQUFDLEdBQUcsSUFBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBQyxLQUFLLElBQUUsR0FBRyxFQUFFLEVBQUUsQ0FBUyxDQUNwQyxDQUFDO0lBQ1gsQ0FBQyxDQUFDO0FBQ0osQ0FBQyxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiKHsgZGVlcCwgZGF0YSwgcmVxdWlyZSwgR28gfSkgPT4ge1xuICBjb25zdCBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XG4gIFxuICBjb25zdCBjID0gcmVxdWlyZSgnQGNoYWtyYS11aS9yZWFjdCcpO1xuXG4gIHJldHVybiAoe1xuICAgIGdvLFxuXG4gICAgY2hpbGRyZW4sXG4gIH0sIHJlZikgPT4ge1xuICAgIHJldHVybiA8Z28uT25cbiAgICAgIGRvPXt7XG4gICAgICB9fVxuICAgID5cbiAgICAgIDxjLkJveCByZWY9e3JlZn0gaD0nM2VtJz57YCR7Z299YH08L2MuQm94PlxuICAgIDwvZ28uT24+O1xuICB9O1xufSJdfQ==",
        "link_id": 21157
      }
    },
    {
      "id": 21158,
      "type_id": 3,
      "from_id": 21151,
      "to_id": 21157,
      "value": {
        "id": 1795,
        "value": "generated",
        "link_id": 21158
      }
    },
    {
      "id": 21159,
      "type_id": 143,
      "from_id": 21157,
      "to_id": 21151
    },
    {
      "id": 21160,
      "type_id": 3,
      "from_id": 21151,
      "to_id": 21159
    }
  ],
  "handlers": [
    {
      "dist_id": 86,
      "src_id": 86,
      "handler_id": 87,
      "execution_provider_id": 33,
      "isolation_provider_id": 81,
      "dist": {
        "id": 86,
        "type_id": 30,
        "from_id": 0,
        "to_id": 0,
        "value": {
          "id": 3,
          "value": "\nasync ({ deep, require, gql, data: { newLink } }) => {\n  const { data: [pq] } = await deep.select({ id: newLink.to_id });\n  const { data: { packager_install: imported }, error } = await deep.apolloClient.query({\n    query: gql`query PACKAGE_INSTALL($address: String!) {\n      packager_install(input: { address: $address }) {\n        ids\n        packageId\n        errors\n      }\n    }`,\n    variables: {\n      address: pq?.value?.value,\n    },\n  });\n  if (error) throw error;\n  if (imported?.errors?.length) throw imported.errors;\n  await deep.insert({\n    type_id: deep.idLocal('@deep-foundation/core', 'Contain'),\n    from_id: newLink.from_id,\n    to_id: imported.packageId,\n  });\n  return imported;\n}\n    ",
          "link_id": 86
        },
        "__typename": "links"
      },
      "__typename": "handlers"
    },
    {
      "dist_id": 89,
      "src_id": 89,
      "handler_id": 90,
      "execution_provider_id": 33,
      "isolation_provider_id": 81,
      "dist": {
        "id": 89,
        "type_id": 30,
        "from_id": 0,
        "to_id": 0,
        "value": {
          "id": 4,
          "value": "\nasync ({ deep, require, gql, data: { newLink } }) => {\n  const { data: [pq] } = await deep.select({ id: newLink.to_id });\n  const { data: { packager_publish: exported }, error } = await deep.apolloClient.query({\n    query: gql`query PACKAGE_PUBLISH($address: String!, $id: Int) {\n      packager_publish(input: { address: $address, id: $id }) {\n        address\n        errors\n      }\n    }`,\n    variables: {\n      address: pq?.value?.value,\n      id: newLink.from_id,\n    },\n  });\n  if (error) throw error;\n  if (exported?.errors?.length) throw exported.errors;\n  return exported;\n}\n    ",
          "link_id": 89
        },
        "__typename": "links"
      },
      "__typename": "handlers"
    },
    {
      "dist_id": 715,
      "src_id": 715,
      "handler_id": 716,
      "execution_provider_id": 33,
      "isolation_provider_id": 81,
      "dist": {
        "id": 715,
        "type_id": 30,
        "from_id": 0,
        "to_id": 0,
        "value": {
          "id": 314,
          "value": "\nasync ({ deep, require, gql, data: { newLink } }) => {\n    const ts = require('typescript');\n  const { data: [generatedFrom] } = await deep.select({\n      type_id: await deep.id('@deep-foundation/core', 'GeneratedFrom'),\n    to_id: newLink.id, \n  });\n  const value = newLink?.value?.value;\n  let compiledString = '';\n  if (value) {\n    const result = ts.transpileModule(value, {\n      \"compilerOptions\": {\n        \"allowSyntheticDefaultImports\": true,\n        \"experimentalDecorators\": true,\n        \"inlineSourceMap\": true,\n        inlineSources: true,\n        \"noImplicitAny\": false,\n        \"removeComments\": true,\n        \"jsx\": \"react\",\n        \"module\": \"ESNext\",\n        \"moduleResolution\": \"node\",\n        \"target\": \"ESNext\",\n        \"skipLibCheck\": true,\n        \"resolveJsonModule\": true,\n        \"esModuleInterop\": true,\n        \"isolatedModules\": true\n      }\n    });\n    if (!result.outputText) {\n      throw result;\n    }\n    compiledString = result.outputText || '';\n  }\n  if (!generatedFrom) {\n      await deep.insert({\n        type_id: await deep.id('@deep-foundation/core', 'GeneratedFrom'),\n      to_id: newLink.id,\n      in: { data: {\n          type_id: await deep.id('@deep-foundation/core', 'Contain'),\n        from_id: newLink.id,\n      } },\n      from: { data: {\n          type_id: await deep.id('@deep-foundation/core', 'SyncTextFile'),\n        string: { data: { value: compiledString } },\n        in: { data: {\n            type_id: await deep.id('@deep-foundation/core', 'Contain'),\n          from_id: newLink.id,\n          string: { data: { value: 'generated' } },\n        } },\n      } },\n    });\n  } else {\n      await deep.update({\n        link_id: { _eq: generatedFrom.from_id },\n    }, {\n        value: compiledString,\n    }, { table: 'strings' });\n  }\n}\n",
          "link_id": 715
        },
        "__typename": "links"
      },
      "__typename": "handlers"
    },
    {
      "dist_id": 744,
      "src_id": 744,
      "handler_id": 745,
      "execution_provider_id": 33,
      "isolation_provider_id": 81,
      "dist": {
        "id": 744,
        "type_id": 30,
        "from_id": 0,
        "to_id": 0,
        "value": {
          "id": 326,
          "value": "async ({ deep, require, gql, data: { triggeredByLinkId, newLink } }) => {\n  const fs = await deep.import('fs');\n  const encoding = 'utf8';\n  const deepPackageKeyWord = 'deep-package';\n  \n  const makeTempDirectory = async () => {\n    const os = await deep.import('os');\n    const { v4: uuid } = await deep.import('uuid');\n    \n    const baseTempDirectory = os.tmpdir();\n    const randomId = uuid();\n    const tempDirectory = [baseTempDirectory,randomId].join('/');\n    fs.mkdirSync(tempDirectory);\n    console.log(tempDirectory);\n    return tempDirectory;\n  };\n  const npmInstall = async (packageName, installationPath, setTildaPrefix) => {\n    const execSync = (await deep.import('child_process')).execSync;\n\n    if (setTildaPrefix === true) {\n      const savePrefixCommand = `npm --prefix \"${installationPath}\" config set save-prefix=\"~\"`;\n      try {\n        const output = execSync(savePrefixCommand, { \n          encoding: 'utf-8',\n          cwd: installationPath\n        }).toString();\n        console.log(`${savePrefixCommand}\\n`, output);\n      } catch(error) {\n        return {\n          rejected: error\n        };\n      }\n    }\n  \n    let result;\n    const command = `npm --prefix \"${installationPath}\" i ${packageName}`;\n    try {\n      const output = execSync(command, { \n        encoding: 'utf-8',\n        cwd: installationPath\n      }).toString();\n      console.log(`${command}\\n`, output);\n      result = {\n        resolved: {\n          status: 0,\n          stdout: output\n        }\n      };\n    } catch(error) {\n      return {\n        rejected: error\n      };\n    }\n\n    if (setTildaPrefix === true) {\n      const deletePrefixCommand = `npm --prefix \"${installationPath}\" config delete save-prefix`;\n      try {\n        const output = execSync(deletePrefixCommand, { \n          encoding: 'utf-8',\n          cwd: installationPath\n        }).toString();\n        console.log(`${deletePrefixCommand}\\n`, output);\n      } catch(error) {\n        return {\n          rejected: error\n        };\n      }\n    }\n\n    return result;\n  };\n  const npmLogin = async (token, tempDirectory) => {\n    const execSync = (await deep.import('child_process')).execSync;\n  \n    const command = `npm set \"//registry.npmjs.org/:_authToken\" ${token}`;\n    const output = execSync(command, { \n        encoding: 'utf-8',\n        cwd: tempDirectory\n    });\n    console.log(`${command}\\n`, output);\n    return output;\n  };\n  const npmPublish = async (tempDirectory) => {\n    const execSync = (await deep.import('child_process')).execSync;\n  \n    const command = `npm publish --access public`;\n    const output = execSync(command, { \n        encoding: 'utf-8',\n        cwd: tempDirectory\n    });\n    console.log(`${command}\\n`, output);\n    return output;\n  };\n  const makeDeepPackagePath = (tempDirectory, packageName) => [tempDirectory, 'node_modules', packageName].join('/');\n  const makeDeepJsonPath = (packagePath) => [packagePath, 'deep.json'].join('/');\n  const makePackageJsonPath = (packagePath) => [packagePath, 'package.json'].join('/');\n  const deepExport = async (packageId) => {\n    const packager = new (await deep.import('@deep-foundation/deeplinks/imports/packager.js')).Packager(deep);\n    const exported = await packager.export({ packageLinkId: packageId });\n    console.log(exported);\n    if (exported?.errors?.length) throw exported;\n    return exported;\n  };\n  const loadNpmToken = async () => {\n    const containTreeId = await deep.id('@deep-foundation/core', 'containTree');\n    const tokenTypeId = await deep.id('@deep-foundation/npm-packager', 'Token');\n    const { data: [{ value: { value: npmToken = undefined } = {}} = {}] = []} = await deep.select({\n      up: {\n        tree_id: { _eq: containTreeId },\n        parent: { id: { _eq: triggeredByLinkId } },\n        link: { type_id: { _eq: tokenTypeId } }\n      }\n    });\n    return npmToken;\n  };\n  const loadFromJson = (path) => {\n    if (!fs.existsSync(path)) {\n      throw new Error(`${path} is not found.`);\n    }\n    const json = fs.readFileSync(path, { encoding });\n    if (!json) {\n      throw new Error(`${path} is empty or was not read properly.`);\n    }\n    console.log(`Parsing ${path} ...`);\n    const data = JSON.parse(json);\n    console.log(`Parsing ${path} finished.`);\n    return data;\n  }\n  const saveAsJson = (path, data) => {\n    fs.writeFileSync(path, JSON.stringify(data, null, 2), { encoding });\n  }\n  const updateVersion = async (deepJsonPath, packageJsonPath, localVersion) => {\n    const semver = await deep.import('semver');\n\n    const deepPackage = loadFromJson(deepJsonPath);\n    const npmPackage = loadFromJson(packageJsonPath);\n\n    const oldNpmVersion = npmPackage?.version || '0.0.0';\n\n    const nextVersion = semver.gt(localVersion, oldNpmVersion) ? localVersion : semver.inc(oldNpmVersion, 'patch');\n\n    npmPackage.version = nextVersion;\n    if (!deepPackage.package) {\n      deepPackage.package = {};\n    }\n    deepPackage.package.version = nextVersion;  \n\n    saveAsJson(deepJsonPath, deepPackage);\n    saveAsJson(packageJsonPath, npmPackage);\n\n    return nextVersion;\n  };\n  const addKeyword = (packageJsonPath, keyword) => {\n    const npmPackage = loadFromJson(packageJsonPath);\n    if (npmPackage?.keywords?.length > 0) {\n      if (!npmPackage.keywords.includes(keyword)) {\n        npmPackage.keywords.push(keyword); \n      }\n    } else {\n      npmPackage.keywords = [ keyword ];\n    }\n    saveAsJson(packageJsonPath, npmPackage);\n  };\n  const installDependencies = async (packagePath, dependencies) => {\n    for (const dependency of dependencies) {\n      const dependencyPackageName = `${dependency.name}@${dependency.version}`;\n      const installationResult = await npmInstall(dependencyPackageName, packagePath, true);\n      if (installationResult?.rejected) {\n        console.log(`Unable to install ${dependencyPackageName} dependency.`)\n        throw installationResult.rejected;\n      } else if (!installationResult?.resolved) {\n        throw new Error(`Unsupported NPM dependency installation result for ${dependencyPackageName} dependency package.`);\n      }\n    }\n  }\n\n  if (!triggeredByLinkId) {\n    throw new Error('Publish link should be inserted using JWT token (role link), it cannot be inserted using hasura secret (role admin).');\n  }\n\n  const { data: [packageQuery] } = await deep.select({ id: newLink.to_id });\n  const packageName = packageQuery?.value?.value;\n  if (!packageName) {\n    throw new Error('Package query value is empty.');\n  }\n  const packageVersionTypeId = await deep.id('@deep-foundation/core', 'PackageVersion');\n  const { data: [{ versions: [{ version: { value: localVersion = undefined } = {}} = {}] = []} = {}] = []} = await deep.select({ id: newLink.from_id }, { returning: `id versions: in(where: { type_id: { _eq: ${packageVersionTypeId} } }) { id type_id version: value }` });\n  if (!localVersion) {\n    throw new Error('Package must have a version.');\n  }\n\n  const packageId = newLink.from_id;\n  const { data: [{ value: actualPackageName }]} = await deep.select(\n    { link_id: { _eq: packageId } },\n    {\n      table: 'strings',\n      returning: 'value'\n    }\n  );\n  if (packageName !== actualPackageName) {\n    throw new Error('Package query value should be equal to actual package name.');\n  }\n  const tempDirectory = await makeTempDirectory();\n  try {\n    const npmToken = await loadNpmToken();\n    if (!npmToken) {\n      throw new Error('NPM token is required to publish package. NPM token should be contained by user that does insert publish link.');\n    }\n    await npmLogin(npmToken, tempDirectory);\n    const installationResult = await npmInstall(packageName, tempDirectory, false);\n    let deepPackagePath; \n    let packageJsonPath;\n    if (installationResult?.resolved) {\n      deepPackagePath = makeDeepPackagePath(tempDirectory, packageName);\n      packageJsonPath = makePackageJsonPath(deepPackagePath);\n    } else if(installationResult?.rejected) {\n      deepPackagePath = tempDirectory;\n      packageJsonPath = makePackageJsonPath(deepPackagePath);\n      const packageJson = {\n        name: packageName\n      };\n      saveAsJson(packageJsonPath, packageJson);\n    } else {\n      throw new Error(`Unsupported NPM installation result for ${packageName} package.`);\n    }\n    console.log('deepPackagePath', deepPackagePath);\n    console.log('packageJsonPath', packageJsonPath);\n    \n    const pkg = await deepExport(packageId);\n    console.log(pkg);\n    await installDependencies(deepPackagePath, pkg.dependencies);\n    const deepJsonPath = makeDeepJsonPath(deepPackagePath);\n    saveAsJson(deepJsonPath, pkg);\n    const nextVersion = await updateVersion(deepJsonPath, packageJsonPath, localVersion);\n    addKeyword(packageJsonPath, deepPackageKeyWord);\n    await npmPublish(deepPackagePath);\n    if (nextVersion !== localVersion) {\n      await deep.update({\n        link: {\n          type_id: { _eq: await deep.id('@deep-foundation/core', 'PackageVersion') },\n          to_id: { _eq: packageId },\n        },\n      }, { value: nextVersion }, { table: 'strings' });\n    }\n  } finally {\n    fs.rmSync(tempDirectory, { recursive: true, force: true });\n  }\n}",
          "link_id": 744
        },
        "__typename": "links"
      },
      "__typename": "handlers"
    },
    {
      "dist_id": 746,
      "src_id": 746,
      "handler_id": 747,
      "execution_provider_id": 33,
      "isolation_provider_id": 81,
      "dist": {
        "id": 746,
        "type_id": 30,
        "from_id": 0,
        "to_id": 0,
        "value": {
          "id": 327,
          "value": "async ({ deep, gql, data: { triggeredByLinkId, newLink } }) => {\n  const deepFileName = 'deep.json';\n  const fs = await deep.import('fs');\n\n  const makeTempDirectory = async () => {\n    const os = await deep.import('os');\n    const { v4: uuid } = await deep.import('uuid');\n    \n    const baseTempDirectory = os.tmpdir();\n    const randomId = uuid();\n    const tempDirectory = [baseTempDirectory,randomId].join('/');\n    fs.mkdirSync(tempDirectory);\n    console.log(tempDirectory);\n    return tempDirectory;\n  };\n  const npmInstall = async (packageName, tempDirectory) => {\n    const execSync = (await deep.import('child_process')).execSync;\n\n    const command = `npm --prefix \"${tempDirectory}\" i ${packageName}`;\n    const output = execSync(command, { \n        encoding: 'utf-8',\n        cwd: tempDirectory\n    });\n    console.log(`${command}\\n`, output);\n    return output;\n  };\n  const npmLogin = async (token, tempDirectory) => {\n    const execSync = (await deep.import('child_process')).execSync;\n  \n    const command = `npm set \"//registry.npmjs.org/:_authToken\" ${token}`;\n    const output = execSync(command, { \n        encoding: 'utf-8',\n        cwd: tempDirectory\n    });\n    console.log(`${command}\\n`, output);\n    return output;\n  };\n  const makePackagePath = (tempDirectory, packageName) => [tempDirectory, 'node_modules', packageName].join('/');\n  const makeDeepJsonPath = (packagePath) => [packagePath, deepFileName].join('/');\n  const makePackageJsonPath = (packagePath) => [packagePath, 'package.json'].join('/');\n  const loadNpmToken = async () => {\n    const containTreeId = await deep.id('@deep-foundation/core', 'containTree');\n    const tokenTypeId = await deep.id('@deep-foundation/npm-packager', 'Token');\n    const { data: [{ value: { value: npmToken = undefined } = {}} = {}] = []} = await deep.select({\n      up: {\n        tree_id: { _eq: containTreeId },\n        parent: { id: { _eq: triggeredByLinkId } },\n        link: { type_id: { _eq: tokenTypeId } }\n      }\n    });\n    return npmToken;\n  };\n  const deepImport = async (deepJson, packageJson) => {\n    if (deepJson.package.name !== packageJson.name) {\n      throw new Error(`Package name is not synchronized between ${deepFileName} and package.json files.\n  ${deepFileName} package name: ${deepJson.package.name}.\n  package.json package name: ${packageJson.name}.`);\n    }\n    if (deepJson.package.version !== packageJson.version) {\n      throw new Error(`Package version is not synchronized between ${deepFileName} and package.json files.\n  ${deepFileName} package version: ${deepJson.package.version}.\n  package.json package version: ${packageJson.version}.`);\n    }\n    const packager = new (await deep.import('@deep-foundation/deeplinks/imports/packager.js')).Packager(deep);\n    const imported = await packager.import(deepJson);\n    console.log(imported);\n    if (imported?.errors?.length) throw imported;\n    return imported;\n  };\n  const getDeepPackagesList = async (rootPath) => {\n    const execSync = (await deep.import('child_process')).execSync;\n\n    const deepFileName = 'deep.json';\n    const deepFileNameLength = deepFileName.length;\n\n    const command = `find . -name ${deepFileName}`;\n    const output = execSync(command, { \n        encoding: 'utf-8',\n        cwd: rootPath\n    });\n    console.log('', `${command}\\n`, output);\n\n    const packages = output\n      .split(/\\r?\\n/)\n      .filter(line => line.trim())\n      .map(line => line.slice(2).slice(0, -deepFileNameLength - 1))\n      .map(line => line.split('/node_modules/'));\n    return packages;\n  };\n  const getDeepPackagesDependencies = async (rootPath, packages, packageName) => {\n    const dictionary = {};\n    for (const pkg of packages) {\n      const packagePath = [rootPath, pkg.join('/node_modules/')].join('/');\n      console.log('packagePath', packagePath);\n      const packageJsonPath = makePackageJsonPath(packagePath);\n      console.log('packageJsonPath', packageJsonPath);\n      if (!fs.existsSync(packageJsonPath)) {\n        throw new Error(`package.json for dependency ${pkg} is not found at ${packageJsonPath}. Looks like ${packageName} does not contain ${pkg} dependency in package.json.`);\n      }\n      const packageJson = await deep.import(packageJsonPath);\n      console.log('packageJson', packageJson);\n      const deepJsonPath = makeDeepJsonPath(packagePath);\n      console.log('deepJsonPath', deepJsonPath);\n      if (!fs.existsSync(deepJsonPath)) {\n        throw new Error(`deep.json for dependency ${pkg} is not found at ${deepJsonPath}. Looks like ${pkg} installed, but it does not contain deep.json. Make sure ${pkg} is a deep package.`);\n      }\n      const deepJson = await deep.import(deepJsonPath);\n      console.log('deepJson', deepJson);\n      const dependencies = packageJson.dependencies ?? {};\n      console.log('dependencies', dependencies);\n      const dependencyPackageName = pkg.at(-1);\n      console.log('dependencyPackageName', dependencyPackageName);\n      if (dictionary[dependencyPackageName]) {\n        if (packageJson.version === dictionary[dependencyPackageName].packageJson.version) {\n          console.log(`${dependencyPackageName}@${packageJson.version} was already added to a list of dependencies, no need to add it again.`)\n          continue;\n        } else {\n          throw new Error(`Multiple versions of the same package are not supported yet.\n${dependencyPackageName}@${dictionary[dependencyPackageName].packageJson.version} was already added to a list of dependencies from ${dictionary[dependencyPackageName].packagePath}.\nBut ${packageName} also contains ${dependencyPackageName}@${packageJson.version} dependency at ${packagePath}.`);\n        }\n      }\n      dictionary[dependencyPackageName] = { deepJson, packageJson, dependencies, packagePath };\n    }\n    for (const pkg in dictionary) {\n      const sourceDependencies = dictionary[pkg].dependencies;\n      const targetDependencies = [];\n      for (const dependency in sourceDependencies)\n      {\n        if (dictionary[dependency]) {\n          targetDependencies.push(dependency);\n        }\n      }\n      dictionary[pkg].dependencies = targetDependencies;\n    }\n    return dictionary;\n  }\n  const buildInstallationQueueCore = (deepPackagesDependencies, queue, set, packageName) => {\n    const dependencies = deepPackagesDependencies[packageName].dependencies;\n    for (const dependency of dependencies) {\n      if (!set[dependency]) {\n        buildInstallationQueueCore(deepPackagesDependencies, queue, set, dependency);\n      }\n    }\n    if(!set[packageName]) {\n      const deepJson = deepPackagesDependencies[packageName].deepJson;\n      const packageJson = deepPackagesDependencies[packageName].packageJson;\n      queue.push({ name: packageName, deepJson, packageJson });\n      set[packageName] = true;\n    }\n  }\n  const buildInstallationQueue = (deepPackagesDependencies, queue, set) => {\n    for (const packageName in deepPackagesDependencies) {\n      buildInstallationQueueCore(deepPackagesDependencies, queue, set, packageName);\n    }\n  }\n  const getExistingPackages = async (packageNames) => {\n    const packageTypeId = await deep.id('@deep-foundation/core', 'Package');\n    const packageVersionTypeId = await deep.id('@deep-foundation/core', 'PackageVersion');\n    const { data: packages } = await deep.select({\n      type_id: { _eq: packageTypeId },\n      string: { value: { _in: packageNames } }\n    }, {\n      name: 'GET_EXISTING_PACKAGES_WITH_VERSIONS',\n      returning: `\n        id\n        name: value\n        versions: in(where: {type_id: {_eq: ${packageVersionTypeId}}, string: {value: {_is_null: false}}}) {\n          id\n          version: value\n        }\n      `\n    })\n    console.log('packages', packages);\n    const existingPackages = packages.reduce(\n      (accumulator, currentValue) => {\n        const packageId = currentValue?.id;\n        const packageName = currentValue?.name?.value;\n        if (currentValue?.versions.length !== 1) {\n          throw new Error(`'${packageName}' package must have exactly one version. Now it has ${currentValue?.versions.length} versions.`);\n        }\n        if (accumulator[packageName]) {\n          throw new Error(`Multiple packages with name '${packageName}' exist.`)\n        }\n        const packageVersion = currentValue?.versions?.[0]?.version?.value;\n        accumulator[packageName] = { id: packageId, version: packageVersion };\n        return accumulator;\n      },\n      {}\n    );\n    console.log('existingPackages', existingPackages);\n    return existingPackages;\n  };\n\n  if (!triggeredByLinkId) {\n    throw new Error('Install link should be inserted using JWT token (role link), it cannot be inserted using hasura secret (role admin).');\n  }\n\n  const { data: [{ value: { value: packageQuery } }] } = await deep.select({ id: newLink.to_id });\n  const packageQueryParts = packageQuery.split('@');\n  if (packageQueryParts.length === 3) {\n    const packageVersion = packageQueryParts.pop();\n  }\n  const packageName = packageQueryParts.join('@');\n  if (!packageName) {\n    throw new Error('Package query value is empty.');\n  }\n  const tempDirectory = await makeTempDirectory();\n  let deepJson;\n  let packageJson;\n  const installationQueue = [];\n  const installationSet = {};\n  try {\n    const npmToken = await loadNpmToken();\n    if (npmToken) {\n      await npmLogin(npmToken, tempDirectory);\n    }\n    const nodeModulesPath = [tempDirectory, 'node_modules'].join('/');\n    await npmInstall(packageQuery, tempDirectory);\n    const packagePath = makePackagePath(tempDirectory, packageName);\n    const deepJsonPath = makeDeepJsonPath(packagePath);\n    const packageJsonPath = makePackageJsonPath(packagePath);\n    deepJson = await deep.import(deepJsonPath);\n    packageJson = await deep.import(packageJsonPath);\n\n    const packages = await getDeepPackagesList(nodeModulesPath);\n    console.log('packages', packages);\n    \n    const deepPackagesDependencies = await getDeepPackagesDependencies(nodeModulesPath, packages, packageName);\n    delete deepPackagesDependencies[packageName];\n    console.log('deepPackagesDependencies', deepPackagesDependencies);\n    \n    buildInstallationQueue(deepPackagesDependencies, installationQueue, installationSet);\n    \n    console.log('installationQueue', installationQueue);\n    console.log('installationSet', installationSet);\n  } finally {\n    fs.rmSync(tempDirectory, { recursive: true, force: true });\n  }\n  \n  const existingPackages = await getExistingPackages(installationQueue.map(e => e.name));\n  console.log('existingPackages', existingPackages);\n\n  for (const dependencyPackage of installationQueue) {\n    const dependencyPackageName = dependencyPackage.name;\n    const existingPackage = existingPackages[dependencyPackageName];\n    if (existingPackage) {\n      await deep.insert({\n        type_id: await deep.id('@deep-foundation/npm-packager', 'Used'),\n        from_id: newLink.id,\n        to_id: existingPackage.id,\n      });\n    } else {\n      const importedDependency = await deepImport(dependencyPackage.deepJson, dependencyPackage.packageJson);\n      if (importedDependency?.errors?.length > 0 || !importedDependency?.packageId) {\n        console.log(`Unable to install dependency ${dependencyPackageName}.`, importedDependency);\n        throw new Error(`Unable to install dependency ${dependencyPackageName}.`);\n      }\n      await deep.insert({\n        type_id: await deep.id('@deep-foundation/npm-packager', 'Installed'),\n        from_id: newLink.id,\n        to_id: importedDependency.packageId,\n      });\n      // TODO: Should it be inserted?\n      // await deep.insert({\n      //   type_id: await deep.id('@deep-foundation/core', 'Contain'),\n      //   from_id: newLink.from_id,\n      //   to_id: importedDependency.packageId,\n      // });\n    }\n  }\n\n  const imported = await deepImport(deepJson, packageJson);\n  await deep.insert({\n    type_id: await deep.id('@deep-foundation/core', 'Contain'),\n    from_id: newLink.from_id,\n    to_id: imported.packageId,\n  });\n  await deep.insert({\n    type_id: await deep.id('@deep-foundation/npm-packager', 'Installed'),\n    from_id: newLink.id,\n    to_id: imported.packageId,\n  });\n  return imported;\n}",
          "link_id": 746
        },
        "__typename": "links"
      },
      "__typename": "handlers"
    },
    {
      "dist_id": 853,
      "src_id": 798,
      "handler_id": 799,
      "execution_provider_id": 33,
      "isolation_provider_id": 144,
      "dist": {
        "id": 853,
        "type_id": 30,
        "from_id": 0,
        "to_id": 0,
        "value": {
          "id": 347,
          "value": "({ deep, require }) => {\n    const React = require('react');\n    const { useState } = React;\n    const json5 = require('json5');\n    const { useContainer, CytoEditorPreview } = require('@deep-foundation/deepcase');\n    const { Box, SimpleGrid } = require('@chakra-ui/react');\n    return ({ fillSize, style, link }) => {\n        const currentValue = deep.stringify(link?.value?.value) || '';\n        const [value, setValue] = useState(currentValue);\n        const isSaved = value == currentValue;\n        const [container] = useContainer();\n        const { data } = deep.useDeepSubscription({\n            type_id: { _in: [\n                    deep.idLocal('@deep-foundation/core', 'Active'),\n                    deep.idLocal('@deep-foundation/core', 'Contain'),\n                ] },\n            to_id: { _eq: link.id },\n        });\n        const contain = data?.find(l => l.type_id === deep.idLocal('@deep-foundation/core', 'Contain'));\n        const active = data?.find(l => l.type_id === deep.idLocal('@deep-foundation/core', 'Active'));\n        return React.createElement(\"div\", { style: {\n                width: 600,\n                height: 600,\n                ...style,\n                position: 'relative',\n            } },\n            React.createElement(CytoEditorPreview, { link: link, compact: true }));\n    };\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsibW9kdWxlLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxDQUFDLEVBQUUsSUFBSSxFQUFFLE9BQU8sRUFBRSxFQUFFLEVBQUU7SUFDcEIsTUFBTSxLQUFLLEdBQUcsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQy9CLE1BQU0sRUFBRSxRQUFRLEVBQUUsR0FBRyxLQUFLLENBQUM7SUFDM0IsTUFBTSxLQUFLLEdBQUcsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQy9CLE1BQU0sRUFBRSxZQUFZLEVBQUUsaUJBQWlCLEVBQUUsR0FBRyxPQUFPLENBQUMsMkJBQTJCLENBQUMsQ0FBQztJQUNqRixNQUFNLEVBQUUsR0FBRyxFQUFFLFVBQVUsRUFBRSxHQUFHLE9BQU8sQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDO0lBRXhELE9BQU8sQ0FBQyxFQUFFLFFBQVEsRUFBRSxLQUFLLEVBQUUsSUFBSSxFQUFFLEVBQUUsRUFBRTtRQUNuQyxNQUFNLFlBQVksR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksRUFBRSxLQUFLLEVBQUUsS0FBSyxDQUFDLElBQUksRUFBRSxDQUFDO1FBQzlELE1BQU0sQ0FBQyxLQUFLLEVBQUUsUUFBUSxDQUFDLEdBQUcsUUFBUSxDQUFDLFlBQVksQ0FBQyxDQUFDO1FBQ2pELE1BQU0sT0FBTyxHQUFHLEtBQUssSUFBSSxZQUFZLENBQUM7UUFDdEMsTUFBTSxDQUFDLFNBQVMsQ0FBQyxHQUFHLFlBQVksRUFBRSxDQUFDO1FBQ25DLE1BQU0sRUFBRSxJQUFJLEVBQUUsR0FBRyxJQUFJLENBQUMsbUJBQW1CLENBQUM7WUFDeEMsT0FBTyxFQUFFLEVBQUUsR0FBRyxFQUFFO29CQUNkLElBQUksQ0FBQyxPQUFPLENBQUMsdUJBQXVCLEVBQUUsUUFBUSxDQUFDO29CQUMvQyxJQUFJLENBQUMsT0FBTyxDQUFDLHVCQUF1QixFQUFFLFNBQVMsQ0FBQztpQkFDakQsRUFBRTtZQUNILEtBQUssRUFBRSxFQUFFLEdBQUcsRUFBRSxJQUFJLENBQUMsRUFBRSxFQUFFO1NBQ3hCLENBQUMsQ0FBQztRQUNILE1BQU0sT0FBTyxHQUFHLElBQUksRUFBRSxJQUFJLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsT0FBTyxLQUFLLElBQUksQ0FBQyxPQUFPLENBQUMsdUJBQXVCLEVBQUUsU0FBUyxDQUFDLENBQUMsQ0FBQTtRQUMvRixNQUFNLE1BQU0sR0FBRyxJQUFJLEVBQUUsSUFBSSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLE9BQU8sS0FBSyxJQUFJLENBQUMsT0FBTyxDQUFDLHVCQUF1QixFQUFFLFFBQVEsQ0FBQyxDQUFDLENBQUE7UUFDN0YsT0FBTyw2QkFDTCxLQUFLLEVBQUU7Z0JBQ0wsS0FBSyxFQUFFLEdBQUc7Z0JBQ1YsTUFBTSxFQUFFLEdBQUc7Z0JBQ1gsR0FBRyxLQUFLO2dCQUNSLFFBQVEsRUFBRSxVQUFVO2FBQ3JCO1lBRUQsb0JBQUMsaUJBQWlCLElBQUMsSUFBSSxFQUFFLElBQUksRUFBRSxPQUFPLFNBQUUsQ0FDcEMsQ0FBQztJQUNULENBQUMsQ0FBQTtBQUNILENBQUMsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbIih7IGRlZXAsIHJlcXVpcmUgfSkgPT4ge1xuICBjb25zdCBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XG4gIGNvbnN0IHsgdXNlU3RhdGUgfSA9IFJlYWN0O1xuICBjb25zdCBqc29uNSA9IHJlcXVpcmUoJ2pzb241Jyk7XG4gIGNvbnN0IHsgdXNlQ29udGFpbmVyLCBDeXRvRWRpdG9yUHJldmlldyB9ID0gcmVxdWlyZSgnQGRlZXAtZm91bmRhdGlvbi9kZWVwY2FzZScpO1xuICBjb25zdCB7IEJveCwgU2ltcGxlR3JpZCB9ID0gcmVxdWlyZSgnQGNoYWtyYS11aS9yZWFjdCcpO1xuICAvLyBPbmx5IG9iamVjdHMgZWRpdG9yLlxuICByZXR1cm4gKHsgZmlsbFNpemUsIHN0eWxlLCBsaW5rIH0pID0+IHtcbiAgICBjb25zdCBjdXJyZW50VmFsdWUgPSBkZWVwLnN0cmluZ2lmeShsaW5rPy52YWx1ZT8udmFsdWUpIHx8ICcnO1xuICAgIGNvbnN0IFt2YWx1ZSwgc2V0VmFsdWVdID0gdXNlU3RhdGUoY3VycmVudFZhbHVlKTtcbiAgICBjb25zdCBpc1NhdmVkID0gdmFsdWUgPT0gY3VycmVudFZhbHVlO1xuICAgIGNvbnN0IFtjb250YWluZXJdID0gdXNlQ29udGFpbmVyKCk7XG4gICAgY29uc3QgeyBkYXRhIH0gPSBkZWVwLnVzZURlZXBTdWJzY3JpcHRpb24oe1xuICAgICAgdHlwZV9pZDogeyBfaW46IFtcbiAgICAgICAgZGVlcC5pZExvY2FsKCdAZGVlcC1mb3VuZGF0aW9uL2NvcmUnLCAnQWN0aXZlJyksXG4gICAgICAgIGRlZXAuaWRMb2NhbCgnQGRlZXAtZm91bmRhdGlvbi9jb3JlJywgJ0NvbnRhaW4nKSxcbiAgICAgIF0gfSxcbiAgICAgIHRvX2lkOiB7IF9lcTogbGluay5pZCB9LFxuICAgIH0pO1xuICAgIGNvbnN0IGNvbnRhaW4gPSBkYXRhPy5maW5kKGwgPT4gbC50eXBlX2lkID09PSBkZWVwLmlkTG9jYWwoJ0BkZWVwLWZvdW5kYXRpb24vY29yZScsICdDb250YWluJykpXG4gICAgY29uc3QgYWN0aXZlID0gZGF0YT8uZmluZChsID0+IGwudHlwZV9pZCA9PT0gZGVlcC5pZExvY2FsKCdAZGVlcC1mb3VuZGF0aW9uL2NvcmUnLCAnQWN0aXZlJykpXG4gICAgcmV0dXJuIDxkaXZcbiAgICAgIHN0eWxlPXt7XG4gICAgICAgIHdpZHRoOiA2MDAsXG4gICAgICAgIGhlaWdodDogNjAwLFxuICAgICAgICAuLi5zdHlsZSxcbiAgICAgICAgcG9zaXRpb246ICdyZWxhdGl2ZScsXG4gICAgICB9fVxuICAgID5cbiAgICAgIDxDeXRvRWRpdG9yUHJldmlldyBsaW5rPXtsaW5rfSBjb21wYWN0Lz5cbiAgICA8L2Rpdj47XG4gIH1cbn0iXX0=",
          "link_id": 853
        },
        "__typename": "links"
      },
      "__typename": "handlers"
    },
    {
      "dist_id": 862,
      "src_id": 802,
      "handler_id": 803,
      "execution_provider_id": 33,
      "isolation_provider_id": 144,
      "dist": {
        "id": 862,
        "type_id": 30,
        "from_id": 0,
        "to_id": 0,
        "value": {
          "id": 353,
          "value": "({ deep, require }) => {\n    const React = require('react');\n    const { useState, useEffect } = React;\n    const json5 = require('json5');\n    const { useContainer, Resize, CustomizableIcon } = require('@deep-foundation/deepcase');\n    const MonacoEditor = require('@monaco-editor/react');\n    const { Box, IconButton, useColorModeValue, useColorMode } = require('@chakra-ui/react');\n    const { BsCheck2, BsLightbulbFill, BsLightbulbOff } = require('react-icons/bs');\n    const { motion, useAnimation } = require('framer-motion');\n    const variants = {\n        view: {\n            opacity: 1,\n            scale: 1,\n            transition: {\n                duration: 1,\n                delay: 0.3,\n                scale: { delay: 0.5, }\n            }\n        },\n        hide: {\n            opacity: 0,\n            scale: 0,\n            transition: {\n                type: 'spring'\n            }\n        },\n        initial: {\n            originX: 1,\n            opacity: 1,\n            scale: 1,\n        }\n    };\n    const stackVariants = {\n        outside: {\n            x: '0%',\n            opacity: 1,\n            scale: 1,\n            originX: 0,\n            transition: {\n                type: 'spring',\n                duration: 0.5,\n                delay: 0.2,\n                scale: { delay: 0.3, }\n            }\n        },\n        nested: {\n            x: '-100%',\n            opacity: 1,\n            scale: 1,\n            originX: 1,\n            transition: {\n                type: 'spring',\n                duration: 0.5,\n                delay: 0.2,\n                scale: { delay: 0.3, }\n            }\n        },\n        initial: {\n            x: '0%',\n            opacity: 0,\n            scale: 0,\n        }\n    };\n    return ({ fillSize, style, link }) => {\n        const currentValue = deep.stringify(link?.value?.value) || '';\n        const [value, setValue] = useState(currentValue);\n        const isSaved = value == currentValue;\n        const [container] = useContainer();\n        const { data } = deep.useDeepSubscription({\n            type_id: { _in: [\n                    deep.idLocal('@deep-foundation/core', 'Active'),\n                    deep.idLocal('@deep-foundation/core', 'Contain'),\n                ] },\n            to_id: { _eq: link.id },\n        });\n        const contain = data?.find(l => l.type_id === deep.idLocal('@deep-foundation/core', 'Contain'));\n        const active = data?.find(l => l.type_id === deep.idLocal('@deep-foundation/core', 'Active'));\n        const [viewSize, setViewSize] = useState({ width: 300, height: 300 });\n        const terminalBorderWidth = viewSize.width - 1;\n        const terminalBorderHeight = viewSize.height - 1;\n        const control = useAnimation();\n        const controlStack = useAnimation();\n        useEffect(() => {\n            if (value) {\n                control.start('view');\n            }\n            else {\n                control.start('hide');\n            }\n            ;\n            if (fillSize === true) {\n                controlStack.start('nested');\n            }\n            else {\n                controlStack.start('outside');\n            }\n            ;\n        }, [control, controlStack, value, fillSize]);\n        const { colorMode } = useColorMode();\n        const body = React.createElement(\"div\", { style: {\n                width: viewSize.width,\n                height: viewSize.height,\n                ...style,\n                position: 'relative',\n            } },\n            React.createElement(Box, { position: 'relative', display: 'grid', gridTemplateColumns: '1fr max-content', height: 'inherit' },\n                React.createElement(Box, { position: 'relative', overflow: 'hidden', sx: { borderRadius: 5 }, border: '1px dashed #605c60' },\n                    React.createElement(MonacoEditor, { options: {\n                            minimap: {\n                                enabled: false\n                            },\n                            lineNumbers: 'off',\n                            wordWrap: true,\n                        }, height: \"100%\", width: \"100%\", theme: colorMode === 'light' ? 'light' : \"vs-dark\", defaultLanguage: \"json\", defaultValue: value || '', onChange: (value) => setValue(value) })),\n                React.createElement(Box, { as: motion.div, animate: controlStack, variants: stackVariants, initial: 'initial', height: fillSize ? '100%' : viewSize.height, display: 'flex', justifyContent: 'space-between', flexDirection: 'column', ml: fillSize ? 0 : '0.2rem' },\n                    React.createElement(IconButton, { as: motion.div, variants: variants, initial: 'initial', animate: 'view', \"aria-label\": 'activate/inactivate button', bg: active && colorMode === 'dark' ? 'gray.700' : 'blue.50', _hover: {\n                            bg: 'blue.100'\n                        }, isRound: true, variant: 'outline', sx: { borderColor: active ? '#111' : 'rgb(0, 128, 255)' }, mr: fillSize ? '0.2rem' : 0, mt: fillSize ? '0.2rem' : 0, size: 'xs', onClick: async () => {\n                            if (active) {\n                                await deep.delete({\n                                    _or: [{\n                                            id: { _eq: active?.id },\n                                        }, {\n                                            type_id: deep.idLocal('@deep-foundation/core', 'Contain'),\n                                            from_id: link.id,\n                                            to_id: active.id,\n                                        }],\n                                });\n                            }\n                            else {\n                                await deep.insert({\n                                    type_id: deep.idLocal('@deep-foundation/core', 'Active'),\n                                    from_id: contain.from_id,\n                                    to_id: contain.to_id,\n                                    in: { data: {\n                                            type_id: deep.idLocal('@deep-foundation/core', 'Contain'),\n                                            from_id: link.id,\n                                        } },\n                                });\n                            }\n                        }, icon: active ? React.createElement(BsLightbulbOff, null) : React.createElement(CustomizableIcon, { Component: BsLightbulbFill, value: { color: 'rgb(0, 128, 255)' } }) }),\n                    React.createElement(IconButton, { as: motion.div, variants: variants, initial: 'initial', animate: control, whileInView: 'view', \"aria-label\": 'save button', isRound: true, bg: 'blue.50', _hover: {\n                            bg: 'blue.100'\n                        }, variant: 'outline', sx: { borderColor: 'rgb(0, 128, 255)' }, mr: fillSize ? '0.2rem' : 0, mb: fillSize ? '0.2rem' : 0, size: 'xs', icon: React.createElement(CustomizableIcon, { Component: BsCheck2, value: { color: 'rgb(0, 128, 255)' } }), onClick: () => {\n                            try {\n                                const _value = json5.parse(value);\n                                if (!link.value)\n                                    deep.insert({\n                                        link_id: link.id, value: _value,\n                                    }, { table: 'objects' });\n                                deep.update({ link_id: link.id }, { value: _value }, { table: 'objects' });\n                            }\n                            catch (error) { }\n                        } }))));\n        return React.createElement(React.Fragment, null, fillSize\n            ? body\n            : React.createElement(Resize, { onChangeSize: (viewSize) => setViewSize(viewSize), style: {\n                    borderRadius: 5,\n                    border: 'none',\n                } }, body));\n    };\n};\n//# sourceMappingURL=data:application/json;base64,",
          "link_id": 862
        },
        "__typename": "links"
      },
      "__typename": "handlers"
    },
    {
      "dist_id": 871,
      "src_id": 805,
      "handler_id": 806,
      "execution_provider_id": 33,
      "isolation_provider_id": 144,
      "dist": {
        "id": 871,
        "type_id": 30,
        "from_id": 0,
        "to_id": 0,
        "value": {
          "id": 358,
          "value": "({ deep, require }) => {\n    const React = require('react');\n    const { useState, useEffect } = React;\n    const json5 = require('json5');\n    const { Input, useColorModeValue } = require('@chakra-ui/react');\n    const { useHotkeys } = require('react-hotkeys-hook');\n    const { useDebounceCallback } = require('@react-hook/debounce');\n    const { useContainer } = require('@deep-foundation/deepcase');\n    return ({ fillSize, style, link, onClose }) => {\n        const currentValue = deep.stringify(link?.value?.value) || '';\n        const [value, setValue] = useState(currentValue);\n        const save = async (value) => {\n            if (!link.value)\n                await deep.insert({\n                    link_id: link.id, value: value,\n                }, { table: 'strings' });\n            deep.update({ link_id: link.id }, { value: value }, { table: 'strings' });\n        };\n        const ref = useHotkeys('enter', async () => {\n            await save(value);\n            onClose && onClose();\n        }, { enableOnTags: [\"INPUT\"] });\n        const setValuesDebounced = useDebounceCallback(async (value) => { await save(value); }, 500);\n        useEffect(() => {\n            setValuesDebounced(value);\n        }, [value]);\n        const bg = useColorModeValue('#eeeeee', '#434343');\n        const hover = useColorModeValue('white', '#1e1e1e');\n        const borderColor = useColorModeValue('#434343', '#eeeeee');\n        const color = useColorModeValue('#1e1e1e', 'white');\n        return React.createElement(\"div\", { style: {\n                width: 300,\n                ...style,\n                position: 'relative',\n            } },\n            React.createElement(Input, { ref: ref, autoFocus: true, type: \"text\", variant: 'filled', variant: 'filled', bg: bg, color: color, borderWidth: 'thin', borderColor: borderColor, _hover: { bg: hover }, _focus: { bg: bg }, sx: {\n                    width: '100%',\n                }, onChange: (e) => setValue(e.target.value), value: value }));\n    };\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsibW9kdWxlLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxDQUFDLEVBQUUsSUFBSSxFQUFFLE9BQU8sRUFBRSxFQUFFLEVBQUU7SUFDaEIsTUFBTSxLQUFLLEdBQUcsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQ2pDLE1BQU0sRUFBRSxRQUFRLEVBQUUsU0FBUyxFQUFFLEdBQUcsS0FBSyxDQUFDO0lBQ3RDLE1BQU0sS0FBSyxHQUFHLE9BQU8sQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUMvQixNQUFNLEVBQUUsS0FBSyxFQUFFLGlCQUFpQixFQUFFLEdBQUcsT0FBTyxDQUFDLGtCQUFrQixDQUFDLENBQUM7SUFDakUsTUFBTSxFQUFFLFVBQVUsRUFBRSxHQUFHLE9BQU8sQ0FBQyxvQkFBb0IsQ0FBQyxDQUFDO0lBQ3JELE1BQU0sRUFBRSxtQkFBbUIsRUFBRSxHQUFHLE9BQU8sQ0FBQyxzQkFBc0IsQ0FBQyxDQUFDO0lBQ2hFLE1BQU0sRUFBRSxZQUFZLEVBQUUsR0FBRyxPQUFPLENBQUMsMkJBQTJCLENBQUMsQ0FBQztJQUU5RCxPQUFPLENBQUMsRUFBRSxRQUFRLEVBQUUsS0FBSyxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUUsRUFBRSxFQUFFO1FBRzVDLE1BQU0sWUFBWSxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxFQUFFLEtBQUssRUFBRSxLQUFLLENBQUMsSUFBSSxFQUFFLENBQUM7UUFDOUQsTUFBTSxDQUFDLEtBQUssRUFBRSxRQUFRLENBQUMsR0FBRyxRQUFRLENBQUMsWUFBWSxDQUFDLENBQUM7UUFDakQsTUFBTSxJQUFJLEdBQUcsS0FBSyxFQUFFLEtBQUssRUFBRSxFQUFFO1lBQ3pCLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSztnQkFBRSxNQUFNLElBQUksQ0FBQyxNQUFNLENBQUM7b0JBQ2pDLE9BQU8sRUFBRSxJQUFJLENBQUMsRUFBRSxFQUFFLEtBQUssRUFBRSxLQUFLO2lCQUNqQyxFQUFFLEVBQUUsS0FBSyxFQUFFLFNBQVMsRUFBRSxDQUFDLENBQUM7WUFDekIsSUFBSSxDQUFDLE1BQU0sQ0FBQyxFQUFFLE9BQU8sRUFBRSxJQUFJLENBQUMsRUFBRSxFQUFFLEVBQUUsRUFBRSxLQUFLLEVBQUUsS0FBSyxFQUFFLEVBQUUsRUFBRSxLQUFLLEVBQUUsU0FBUyxFQUFFLENBQUMsQ0FBQztRQUU1RSxDQUFDLENBQUM7UUFDRixNQUFNLEdBQUcsR0FBRyxVQUFVLENBQUMsT0FBTyxFQUFFLEtBQUssSUFBSSxFQUFFO1lBQ3pDLE1BQU0sSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO1lBQ2xCLE9BQU8sSUFBSSxPQUFPLEVBQUUsQ0FBQztRQUN2QixDQUFDLEVBQUUsRUFBRSxZQUFZLEVBQUUsQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUFDLENBQUM7UUFFaEMsTUFBTSxrQkFBa0IsR0FBRyxtQkFBbUIsQ0FBQyxLQUFLLEVBQUMsS0FBSyxFQUFFLEVBQUUsR0FBRSxNQUFNLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQSxDQUFBLENBQUMsRUFBRSxHQUFHLENBQUMsQ0FBQztRQUV6RixTQUFTLENBQUMsR0FBRyxFQUFFO1lBQ2Isa0JBQWtCLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDNUIsQ0FBQyxFQUFFLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQTtRQUVYLE1BQU0sRUFBRSxHQUFHLGlCQUFpQixDQUFDLFNBQVMsRUFBRSxTQUFTLENBQUMsQ0FBQztRQUNuRCxNQUFNLEtBQUssR0FBRyxpQkFBaUIsQ0FBQyxPQUFPLEVBQUUsU0FBUyxDQUFDLENBQUM7UUFDcEQsTUFBTSxXQUFXLEdBQUcsaUJBQWlCLENBQUMsU0FBUyxFQUFFLFNBQVMsQ0FBQyxDQUFDO1FBQzVELE1BQU0sS0FBSyxHQUFHLGlCQUFpQixDQUFDLFNBQVMsRUFBRSxPQUFPLENBQUMsQ0FBQztRQUV0RCxPQUFPLDZCQUNILEtBQUssRUFBRTtnQkFDTCxLQUFLLEVBQUUsR0FBRztnQkFDVixHQUFHLEtBQUs7Z0JBQ1IsUUFBUSxFQUFFLFVBQVU7YUFFckI7WUFFRCxvQkFBQyxLQUFLLElBQ0osR0FBRyxFQUFFLEdBQUcsRUFDUixTQUFTLFFBQ1QsSUFBSSxFQUFDLE1BQU0sRUFDWCxPQUFPLEVBQUMsUUFBUSxFQUNoQixPQUFPLEVBQUMsUUFBUSxFQUNoQixFQUFFLEVBQUUsRUFBRSxFQUNOLEtBQUssRUFBRSxLQUFLLEVBQ1osV0FBVyxFQUFDLE1BQU0sRUFDbEIsV0FBVyxFQUFFLFdBQVcsRUFDeEIsTUFBTSxFQUFFLEVBQUMsRUFBRSxFQUFFLEtBQUssRUFBQyxFQUNuQixNQUFNLEVBQUUsRUFBQyxFQUFFLEVBQUUsRUFBRSxFQUFDLEVBQ2hCLEVBQUUsRUFBRTtvQkFDRixLQUFLLEVBQUUsTUFBTTtpQkFDZCxFQUNELFFBQVEsRUFBRSxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLEVBQ3pDLEtBQUssRUFBRSxLQUFLLEdBQ1osQ0FDRSxDQUFDO0lBQ1QsQ0FBQyxDQUFBO0FBQ0gsQ0FBQyxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiKHsgZGVlcCwgcmVxdWlyZSB9KSA9PiB7XG4gICAgICBjb25zdCBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XG4gICAgY29uc3QgeyB1c2VTdGF0ZSwgdXNlRWZmZWN0IH0gPSBSZWFjdDtcbiAgICBjb25zdCBqc29uNSA9IHJlcXVpcmUoJ2pzb241Jyk7XG4gICAgY29uc3QgeyBJbnB1dCwgdXNlQ29sb3JNb2RlVmFsdWUgfSA9IHJlcXVpcmUoJ0BjaGFrcmEtdWkvcmVhY3QnKTtcbiAgICBjb25zdCB7IHVzZUhvdGtleXMgfSA9IHJlcXVpcmUoJ3JlYWN0LWhvdGtleXMtaG9vaycpO1xuICAgIGNvbnN0IHsgdXNlRGVib3VuY2VDYWxsYmFjayB9ID0gcmVxdWlyZSgnQHJlYWN0LWhvb2svZGVib3VuY2UnKTtcbiAgICBjb25zdCB7IHVzZUNvbnRhaW5lciB9ID0gcmVxdWlyZSgnQGRlZXAtZm91bmRhdGlvbi9kZWVwY2FzZScpO1xuICAgIC8vIE9ubHkgc3RyaW5nIGVkaXRvci5cbiAgICByZXR1cm4gKHsgZmlsbFNpemUsIHN0eWxlLCBsaW5rLCBvbkNsb3NlIH0pID0+IHtcbiAgICAgIFxuICAgICAgXG4gICAgICBjb25zdCBjdXJyZW50VmFsdWUgPSBkZWVwLnN0cmluZ2lmeShsaW5rPy52YWx1ZT8udmFsdWUpIHx8ICcnO1xuICAgICAgY29uc3QgW3ZhbHVlLCBzZXRWYWx1ZV0gPSB1c2VTdGF0ZShjdXJyZW50VmFsdWUpO1xuICAgICAgY29uc3Qgc2F2ZSA9IGFzeW5jICh2YWx1ZSkgPT4ge1xuICAgICAgICAgIGlmICghbGluay52YWx1ZSkgYXdhaXQgZGVlcC5pbnNlcnQoe1xuICAgICAgICAgICAgbGlua19pZDogbGluay5pZCwgdmFsdWU6IHZhbHVlLFxuICAgICAgICB9LCB7IHRhYmxlOiAnc3RyaW5ncycgfSk7XG4gICAgICAgIGRlZXAudXBkYXRlKHsgbGlua19pZDogbGluay5pZCB9LCB7IHZhbHVlOiB2YWx1ZSB9LCB7IHRhYmxlOiAnc3RyaW5ncycgfSk7XG4gICAgICAgIFxuICAgICAgfTtcbiAgICAgIGNvbnN0IHJlZiA9IHVzZUhvdGtleXMoJ2VudGVyJywgYXN5bmMgKCkgPT4ge1xuICAgICAgICBhd2FpdCBzYXZlKHZhbHVlKTtcbiAgICAgICAgb25DbG9zZSAmJiBvbkNsb3NlKCk7XG4gICAgICB9LCB7IGVuYWJsZU9uVGFnczogW1wiSU5QVVRcIl0gfSk7XG4gICAgICBcbiAgICAgIGNvbnN0IHNldFZhbHVlc0RlYm91bmNlZCA9IHVzZURlYm91bmNlQ2FsbGJhY2soYXN5bmModmFsdWUpID0+IHthd2FpdCBzYXZlKHZhbHVlKX0sIDUwMCk7XG5cbiAgICAgIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgICAgIHNldFZhbHVlc0RlYm91bmNlZCh2YWx1ZSk7XG4gICAgICB9LCBbdmFsdWVdKVxuXG4gICAgICBjb25zdCBiZyA9IHVzZUNvbG9yTW9kZVZhbHVlKCcjZWVlZWVlJywgJyM0MzQzNDMnKTtcbiAgICAgIGNvbnN0IGhvdmVyID0gdXNlQ29sb3JNb2RlVmFsdWUoJ3doaXRlJywgJyMxZTFlMWUnKTtcbiAgICAgIGNvbnN0IGJvcmRlckNvbG9yID0gdXNlQ29sb3JNb2RlVmFsdWUoJyM0MzQzNDMnLCAnI2VlZWVlZScpO1xuICAgICAgY29uc3QgY29sb3IgPSB1c2VDb2xvck1vZGVWYWx1ZSgnIzFlMWUxZScsICd3aGl0ZScpO1xuXG4gICAgcmV0dXJuIDxkaXZcbiAgICAgICAgc3R5bGU9e3tcbiAgICAgICAgICB3aWR0aDogMzAwLFxuICAgICAgICAgIC4uLnN0eWxlLFxuICAgICAgICAgIHBvc2l0aW9uOiAncmVsYXRpdmUnLCBcbiAgICAgICAgICAvLyBiYWNrZ3JvdW5kOiAncmVkJ1xuICAgICAgICB9fVxuICAgICAgPlxuICAgICAgICA8SW5wdXRcbiAgICAgICAgICByZWY9e3JlZn1cbiAgICAgICAgICBhdXRvRm9jdXNcbiAgICAgICAgICB0eXBlPVwidGV4dFwiXG4gICAgICAgICAgdmFyaWFudD0nZmlsbGVkJ1xuICAgICAgICAgIHZhcmlhbnQ9J2ZpbGxlZCdcbiAgICAgICAgICBiZz17Ymd9XG4gICAgICAgICAgY29sb3I9e2NvbG9yfVxuICAgICAgICAgIGJvcmRlcldpZHRoPSd0aGluJ1xuICAgICAgICAgIGJvcmRlckNvbG9yPXtib3JkZXJDb2xvcn1cbiAgICAgICAgICBfaG92ZXI9e3tiZzogaG92ZXJ9fVxuICAgICAgICAgIF9mb2N1cz17e2JnOiBiZ319XG4gICAgICAgICAgc3g9e3tcbiAgICAgICAgICAgIHdpZHRoOiAnMTAwJScsXG4gICAgICAgICAgfX1cbiAgICAgICAgICBvbkNoYW5nZT17KGUpID0+IHNldFZhbHVlKGUudGFyZ2V0LnZhbHVlKX1cbiAgICAgICAgICB2YWx1ZT17dmFsdWV9XG4gICAgICAgIC8+XG4gICAgICA8L2Rpdj47XG4gICAgfVxuICB9Il19",
          "link_id": 871
        },
        "__typename": "links"
      },
      "__typename": "handlers"
    },
    {
      "dist_id": 880,
      "src_id": 810,
      "handler_id": 811,
      "execution_provider_id": 33,
      "isolation_provider_id": 144,
      "dist": {
        "id": 880,
        "type_id": 30,
        "from_id": 0,
        "to_id": 0,
        "value": {
          "id": 365,
          "value": "({ deep, require }) => {\n    const React = require('react');\n    const { useState } = require('react');\n    const axiosHooks = require(\"axios-hooks\");\n    const axios = require(\"axios\");\n    const useAxios = axiosHooks.makeUseAxios({ axios: axios.create() });\n    return ({ fillSize, style, link }) => {\n        const ssl = deep.apolloClient.ssl;\n        const path = deep.apolloClient.path.slice(0, -4);\n        const url = `${ssl ? \"https://\" : \"http://\"}${path}/file?linkId=${link.id}`;\n        const [{ data, loading, error }, refetch] = useAxios({\n            method: 'get',\n            url,\n            headers: {\n                'Authorization': `Bearer ${deep.token}`\n            },\n            responseType: \"blob\",\n        });\n        const [src, setSrc] = useState(\"test\");\n        if (!loading && data) {\n            const reader = new window.FileReader();\n            reader.onload = () => {\n                setSrc(reader.result);\n            };\n            reader.readAsDataURL(data);\n        }\n        const renderMedia = () => {\n            if (src.startsWith('data:image')) {\n                return React.createElement(\"img\", { src: src, alt: \"An image from Deep file storage.\", style: style });\n            }\n            else if (src.startsWith('data:audio')) {\n                return React.createElement(\"audio\", { src: src, controls: true, style: style }, \"Your browser does not support the audio element.\");\n            }\n            else {\n                return React.createElement(\"div\", null, \"Unsupported file type.\");\n            }\n        };\n        return renderMedia();\n    };\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsibW9kdWxlLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxDQUFDLEVBQUUsSUFBSSxFQUFFLE9BQU8sRUFBRSxFQUFFLEVBQUU7SUFDcEIsTUFBTSxLQUFLLEdBQUcsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQy9CLE1BQU0sRUFBRSxRQUFRLEVBQUUsR0FBRyxPQUFPLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDdEMsTUFBTSxVQUFVLEdBQUcsT0FBTyxDQUFDLGFBQWEsQ0FBQyxDQUFDO0lBQzFDLE1BQU0sS0FBSyxHQUFHLE9BQU8sQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUMvQixNQUFNLFFBQVEsR0FBRyxVQUFVLENBQUMsWUFBWSxDQUFDLEVBQUUsS0FBSyxFQUFFLEtBQUssQ0FBQyxNQUFNLEVBQUUsRUFBRSxDQUFDLENBQUM7SUFFcEUsT0FBTyxDQUFDLEVBQUUsUUFBUSxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUUsRUFBRSxFQUFFO1FBRW5DLE1BQU0sR0FBRyxHQUFHLElBQUksQ0FBQyxZQUFZLENBQUMsR0FBRyxDQUFDO1FBQ2xDLE1BQU0sSUFBSSxHQUFHLElBQUksQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUNqRCxNQUFNLEdBQUcsR0FBRyxHQUFHLEdBQUcsQ0FBQyxDQUFDLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxTQUFTLEdBQUcsSUFBSSxnQkFBZ0IsSUFBSSxDQUFDLEVBQUUsRUFBRSxDQUFDO1FBRTVFLE1BQU0sQ0FBQyxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUUsS0FBSyxFQUFFLEVBQUUsT0FBTyxDQUFDLEdBQUcsUUFBUSxDQUFDO1lBQ25ELE1BQU0sRUFBRSxLQUFLO1lBQ2IsR0FBRztZQUNILE9BQU8sRUFBRTtnQkFDUCxlQUFlLEVBQUUsVUFBVSxJQUFJLENBQUMsS0FBSyxFQUFFO2FBQ3hDO1lBRUQsWUFBWSxFQUFFLE1BQU07U0FDckIsQ0FBQyxDQUFDO1FBRUgsTUFBTSxDQUFDLEdBQUcsRUFBRSxNQUFNLENBQUMsR0FBRyxRQUFRLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDdkMsSUFBSSxDQUFDLE9BQU8sSUFBSSxJQUFJLEVBQUUsQ0FBQztZQUNyQixNQUFNLE1BQU0sR0FBRyxJQUFJLE1BQU0sQ0FBQyxVQUFVLEVBQUUsQ0FBQztZQUN2QyxNQUFNLENBQUMsTUFBTSxHQUFHLEdBQUcsRUFBRTtnQkFDbkIsTUFBTSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQztZQUN4QixDQUFDLENBQUE7WUFDRCxNQUFNLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQzdCLENBQUM7UUFFRCxNQUFNLFdBQVcsR0FBRyxHQUFHLEVBQUU7WUFDdkIsSUFBSSxHQUFHLENBQUMsVUFBVSxDQUFDLFlBQVksQ0FBQyxFQUFFLENBQUM7Z0JBQ2pDLE9BQU8sNkJBQUssR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUMsa0NBQWtDLEVBQUMsS0FBSyxFQUFFLEtBQUssR0FBUSxDQUFDO1lBQ3BGLENBQUM7aUJBQU0sSUFBSSxHQUFHLENBQUMsVUFBVSxDQUFDLFlBQVksQ0FBQyxFQUFFLENBQUM7Z0JBQ3hDLE9BQU8sK0JBQU8sR0FBRyxFQUFFLEdBQUcsRUFBRSxRQUFRLFFBQUMsS0FBSyxFQUFFLEtBQUssdURBQTBELENBQUM7WUFDMUcsQ0FBQztpQkFBTSxDQUFDO2dCQUNOLE9BQU8sMERBQWlDLENBQUM7WUFDM0MsQ0FBQztRQUNILENBQUMsQ0FBQTtRQUVELE9BQU8sV0FBVyxFQUFFLENBQUM7SUFDdkIsQ0FBQyxDQUFBO0FBQ0gsQ0FBQyxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiKHsgZGVlcCwgcmVxdWlyZSB9KSA9PiB7XG4gIGNvbnN0IFJlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcbiAgY29uc3QgeyB1c2VTdGF0ZSB9ID0gcmVxdWlyZSgncmVhY3QnKTtcbiAgY29uc3QgYXhpb3NIb29rcyA9IHJlcXVpcmUoXCJheGlvcy1ob29rc1wiKTtcbiAgY29uc3QgYXhpb3MgPSByZXF1aXJlKFwiYXhpb3NcIik7XG4gIGNvbnN0IHVzZUF4aW9zID0gYXhpb3NIb29rcy5tYWtlVXNlQXhpb3MoeyBheGlvczogYXhpb3MuY3JlYXRlKCkgfSk7XG5cbiAgcmV0dXJuICh7IGZpbGxTaXplLCBzdHlsZSwgbGluayB9KSA9PiB7XG5cbiAgICBjb25zdCBzc2wgPSBkZWVwLmFwb2xsb0NsaWVudC5zc2w7XG4gICAgY29uc3QgcGF0aCA9IGRlZXAuYXBvbGxvQ2xpZW50LnBhdGguc2xpY2UoMCwgLTQpO1xuICAgIGNvbnN0IHVybCA9IGAke3NzbCA/IFwiaHR0cHM6Ly9cIiA6IFwiaHR0cDovL1wifSR7cGF0aH0vZmlsZT9saW5rSWQ9JHtsaW5rLmlkfWA7XG5cbiAgICBjb25zdCBbeyBkYXRhLCBsb2FkaW5nLCBlcnJvciB9LCByZWZldGNoXSA9IHVzZUF4aW9zKHsgXG4gICAgICBtZXRob2Q6ICdnZXQnLFxuICAgICAgdXJsLFxuICAgICAgaGVhZGVyczoge1xuICAgICAgICAnQXV0aG9yaXphdGlvbic6IGBCZWFyZXIgJHtkZWVwLnRva2VufWBcbiAgICAgIH0sXG4gICAgICBcbiAgICAgIHJlc3BvbnNlVHlwZTogXCJibG9iXCIsXG4gICAgfSk7XG5cbiAgICBjb25zdCBbc3JjLCBzZXRTcmNdID0gdXNlU3RhdGUoXCJ0ZXN0XCIpO1xuICAgIGlmICghbG9hZGluZyAmJiBkYXRhKSB7XG4gICAgICBjb25zdCByZWFkZXIgPSBuZXcgd2luZG93LkZpbGVSZWFkZXIoKTtcbiAgICAgIHJlYWRlci5vbmxvYWQgPSAoKSA9PiB7XG4gICAgICAgIHNldFNyYyhyZWFkZXIucmVzdWx0KTtcbiAgICAgIH1cbiAgICAgIHJlYWRlci5yZWFkQXNEYXRhVVJMKGRhdGEpO1xuICAgIH1cblxuICAgIGNvbnN0IHJlbmRlck1lZGlhID0gKCkgPT4ge1xuICAgICAgaWYgKHNyYy5zdGFydHNXaXRoKCdkYXRhOmltYWdlJykpIHtcbiAgICAgICAgcmV0dXJuIDxpbWcgc3JjPXtzcmN9IGFsdD1cIkFuIGltYWdlIGZyb20gRGVlcCBmaWxlIHN0b3JhZ2UuXCIgc3R5bGU9e3N0eWxlfT48L2ltZz47XG4gICAgICB9IGVsc2UgaWYgKHNyYy5zdGFydHNXaXRoKCdkYXRhOmF1ZGlvJykpIHtcbiAgICAgICAgcmV0dXJuIDxhdWRpbyBzcmM9e3NyY30gY29udHJvbHMgc3R5bGU9e3N0eWxlfT5Zb3VyIGJyb3dzZXIgZG9lcyBub3Qgc3VwcG9ydCB0aGUgYXVkaW8gZWxlbWVudC48L2F1ZGlvPjtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiA8ZGl2PlVuc3VwcG9ydGVkIGZpbGUgdHlwZS48L2Rpdj47XG4gICAgICB9XG4gICAgfSBcblxuICAgIHJldHVybiByZW5kZXJNZWRpYSgpO1xuICB9XG59XG4iXX0=",
          "link_id": 880
        },
        "__typename": "links"
      },
      "__typename": "handlers"
    },
    {
      "dist_id": 925,
      "src_id": 906,
      "handler_id": 907,
      "execution_provider_id": 33,
      "isolation_provider_id": 144,
      "dist": {
        "id": 925,
        "type_id": 30,
        "from_id": 0,
        "to_id": 0,
        "value": {
          "id": 391,
          "value": "async ({ deep, require }) => {\n    const React = require('react');\n    const { useState, useEffect, useRef } = React;\n    const { Text, Box, Button, Link, Input, VStack, useColorModeValue } = require('@chakra-ui/react');\n    const { ExternalLinkIcon } = require('@chakra-ui/icons');\n    const { useEditorTabs, useCytoEditor } = require('@deep-foundation/deepcase');\n    const Publish = await deep.id('@deep-foundation/npm-packager', 'Publish');\n    return ({ fillSize, style, link, setHandlerId }) => {\n        const axiosHooks = require(\"axios-hooks\");\n        const axios = require(\"axios\");\n        const useAxios = axiosHooks.makeUseAxios({ axios: axios.create() });\n        const packageId = link.id;\n        const packageTypeId = deep.idLocal('@deep-foundation/core', 'Package');\n        const packageNamespaceTypeId = deep.idLocal('@deep-foundation/core', 'PackageNamespace');\n        const packageVersionTypeId = deep.idLocal('@deep-foundation/core', 'PackageVersion');\n        const packageActiveTypeId = deep.idLocal('@deep-foundation/core', 'PackageActive');\n        const packageQueryTypeId = deep.idLocal('@deep-foundation/core', 'PackageQuery');\n        const { data: prefetchedNpmPackageLinks } = deep.useDeepSubscription({\n            up: {\n                parent: {\n                    type_id: { _eq: packageTypeId },\n                    string: { value: { _in: [\"@deep-foundation/npm-packager\"] } }\n                }\n            }\n        });\n        const { data: prefetchedPackageActiveLinksAndNamespace } = deep.useDeepSubscription({\n            type_id: { _in: [packageNamespaceTypeId, packageVersionTypeId, packageTypeId, packageActiveTypeId] }\n        });\n        const pkg = deep.minilinks.byId[packageId];\n        const pkgVersion = pkg?.in?.filter(v => v.type_id === packageVersionTypeId)?.[0];\n        const pkgVersionValue = pkgVersion?.value?.value || \"\";\n        const packageNamespaceId = pkgVersion?.from_id;\n        const packageName = pkg?.value?.value || \"\";\n        const [currentPackageName, setCurrentPackageName] = useState(packageName);\n        const [currentPackageVersion, setCurrentPackageVersion] = useState(pkgVersionValue);\n        let packageUrl = `https://registry.npmjs.com/${currentPackageName}`;\n        let displayUrl = `npmjs.com/package/${currentPackageName}`;\n        const { data: [Published], loading: pubLoading } = deep.useDeepSubscription({\n            type_id: Publish,\n            from_id: link.id,\n            order_by: { id: 'desc' },\n            limit: 1,\n        });\n        const { data: [Result], loading: resLoading } = deep.useDeepSubscription(Published ? {\n            type_id: { _in: [\n                    deep.idLocal('@deep-foundation/core', 'Rejected'),\n                    deep.idLocal('@deep-foundation/core', 'Resolved'),\n                ] },\n            up: {\n                tree_id: deep.idLocal('@deep-foundation/core', 'promiseTree'),\n                parent_id: Published?.id,\n            },\n            limit: 1,\n        } : { id: 0 });\n        const publishingLoading = pubLoading || resLoading;\n        const bg = useColorModeValue('#eeeeee', '#1e1e1e');\n        const borderColor = useColorModeValue('#a3a3a3', '#4d4d4d');\n        const { addTab, activeTab } = useEditorTabs();\n        const [cytoEditor, setCytoEditor] = useCytoEditor();\n        const [disabled, setDisabled] = useState(false);\n        const resultRef = useRef();\n        useEffect(() => {\n            if (!!Result && Result?.id != resultRef?.current?.id && disabled) {\n                setDisabled(false);\n                setCurrentPackageVersion(pkgVersionValue);\n            }\n            if (!!Result && Result?.id != resultRef?.current?.id) {\n                resultRef.current = Result;\n            }\n        }, [Result]);\n        return (React.createElement(\"div\", { style: {\n                ...style,\n                position: 'relative',\n            } },\n            React.createElement(Box, { maxW: 'md', minW: 'sm', w: 'sm', borderColor: borderColor, borderWidth: '1px', borderRadius: 'lg', overflow: 'hidden', bg: bg },\n                displayUrl ? React.createElement(Box, { p: 2 },\n                    React.createElement(Link, { fontSize: 'xs', href: `https://${displayUrl}`, isExternal: true },\n                        displayUrl,\n                        \" \",\n                        React.createElement(ExternalLinkIcon, { mx: '2px' })),\n                    \" \") : null,\n                React.createElement(VStack, { p: 2 },\n                    React.createElement(Input, { placeholder: 'package name', value: currentPackageName, borderColor: borderColor, size: 'sm', onChange: (e) => setCurrentPackageName(e.target.value) }),\n                    React.createElement(Input, { placeholder: 'package version', value: currentPackageVersion, borderColor: borderColor, size: 'sm', onChange: (e) => setCurrentPackageVersion(e.target.value) }),\n                    React.createElement(Button, { colorScheme: 'blue', size: 'sm', w: '100%', disabled: disabled, isLoading: disabled, onClick: async () => {\n                            let actualNamespaceId = packageNamespaceId;\n                            if (!packageNamespaceId && currentPackageName) {\n                                const { data: [packageNamespaceLink] } = await deep.insert({\n                                    type_id: packageNamespaceTypeId,\n                                    string: { data: { value: currentPackageName } },\n                                }, { returning: deep.selectReturning });\n                                deep.minilinks.apply([packageNamespaceLink]);\n                                actualNamespaceId = packageNamespaceLink.id;\n                            }\n                            else if (currentPackageName) {\n                                const { data: [{ link: packageNamespaceLink }] } = await deep.update({ link_id: packageNamespaceId }, { value: currentPackageName }, { table: 'strings', returning: `link { ${deep.selectReturning} }` });\n                                deep.minilinks.apply([packageNamespaceLink]);\n                                actualNamespaceId = packageNamespaceId;\n                            }\n                            const packageActiveLinks = deep.minilinks.byId[actualNamespaceId]?.out?.filter(l => l.type_id == packageActiveTypeId) || [];\n                            if (!packageActiveLinks?.length) {\n                                const { data: [packageActiveLink] } = await deep.insert({\n                                    from_id: actualNamespaceId,\n                                    type_id: packageActiveTypeId,\n                                    to_id: packageId,\n                                }, { returning: deep.selectReturning });\n                                deep.minilinks.apply([packageActiveLink]);\n                            }\n                            if (currentPackageName) {\n                                if (pkg?.value?.value) {\n                                    await deep.update({ link_id: pkg?.id }, { value: currentPackageName }, { table: 'strings' });\n                                }\n                                else {\n                                    await deep.insert({\n                                        link_id: pkg?.id,\n                                        value: currentPackageName\n                                    }, { table: 'strings' });\n                                }\n                            }\n                            if (!pkgVersion?.id) {\n                                const { data: [{ id: packageVersionId }] } = await deep.insert({\n                                    from_id: actualNamespaceId,\n                                    type_id: packageVersionTypeId,\n                                    to_id: pkg?.id,\n                                    string: { data: { value: currentPackageVersion || '0.0.0' } },\n                                });\n                            }\n                            else if (currentPackageVersion) {\n                                await deep.update({ link_id: pkgVersion?.id }, { value: currentPackageVersion }, { table: 'strings' });\n                            }\n                        } }, \"save\"),\n                    React.createElement(Button, { colorScheme: 'blue', size: 'sm', w: '100%', disabled: disabled, isLoading: disabled, onClick: async () => {\n                            if (!(prefetchedNpmPackageLinks?.length > 0)) {\n                                return;\n                            }\n                            const { data: [{ id: packageQueryId }] } = await deep.insert({\n                                type_id: packageQueryTypeId,\n                                string: { data: { value: currentPackageName } },\n                            });\n                            const { data: [{ id: publishId }] } = await deep.insert({\n                                from_id: pkg?.id,\n                                type_id: Publish,\n                                to_id: packageQueryId\n                            });\n                            setDisabled(true);\n                        } }, \"publish\"),\n                    !!Published && React.createElement(Button, { isLoading: !!Published && (!Result || publishingLoading), variant: \"outline\", colorScheme: publishingLoading ? 'default' : Result ? Result.type_id === deep.idLocal('@deep-foundation/core', 'Resolved') ? 'green' : 'red' : 'default', loadingText: publishingLoading ? 'Loading' : 'Publishing', disabled: true, onClick: async () => {\n                            if (Result) {\n                                addTab({\n                                    id: Result.to_id,\n                                    initialValue: deep.stringify((await deep.select(Result.to_id))?.data?.[0]?.value?.value)\n                                });\n                                activeTab(Result.to_id);\n                                setCytoEditor(Result.to_id);\n                            }\n                        } },\n                        React.createElement(\"div\", null,\n                            Result ? Result.type_id === deep.idLocal('@deep-foundation/core', 'Resolved') ? 'Published' : 'Failed' : 'Publishing',\n                            React.createElement(\"br\", null),\n                            React.createElement(Text, { fontSize: \"xs\" }, Result ? '(click open in editor)' : '')))))));\n    };\n};\n//# sourceMappingURL=data:application/json;base64,",
          "link_id": 925
        },
        "__typename": "links"
      },
      "__typename": "handlers"
    },
    {
      "dist_id": 967,
      "src_id": 946,
      "handler_id": 947,
      "execution_provider_id": 33,
      "isolation_provider_id": 144,
      "dist": {
        "id": 967,
        "type_id": 30,
        "from_id": 0,
        "to_id": 0,
        "value": {
          "id": 401,
          "value": "({ deep, require }) => {\n    const React = require('react');\n    const { Wrap, WrapItem, Stack, HStack, VStack, Flex, StackDivider, Box, Button, Text, Input } = require('@chakra-ui/react');\n    const { Resize } = require('@deep-foundation/deepcase');\n    const MonacoEditor = require('@monaco-editor/react');\n    const json5 = require('json5');\n    const { TbArrowMoveLeft, TbArrowMoveRight } = require('react-icons/tb');\n    const { useDebounceCallback } = require('@react-hook/debounce');\n    const { useColorModeValue, useColorMode } = require('@chakra-ui/react');\n    const getSymbol = (link) => link?.inByType?.[deep.idLocal('@deep-foundation/core', 'Symbol')]?.[0]?.value?.value;\n    const getTypes = (link) => {\n        const types = [];\n        for (let l = link; l?.type && l?.id !== 1; l = link?.type)\n            types.push(link?.type_id);\n        return types;\n    };\n    const Contain = deep.idLocal('@deep-foundation/core', 'Contain');\n    const ListItem = ({ link, current, setCurrent, setMode, ...props }) => {\n        const _symbol = getSymbol(link) || getSymbol(link?.type) || getSymbol(link?.type?.type);\n        const _value = deep.stringify(link?.value?.value);\n        const __value = _value?.length > 29 ? _value.slice(0, 20) + '...' + _value.slice(-9, _value.length) : _value;\n        const [fromL] = deep.useMinilinksSubscription({\n            out: { id: link.id, type_id: Contain }\n        });\n        const [parentL] = deep.useMinilinksSubscription(link.type_id === Contain ? {\n            out: { type_id: Contain, to_id: link.from_id },\n        } : {\n            out: { type_id: Contain, to_id: link.id },\n        });\n        const broadcrumbs = [];\n        if (fromL)\n            broadcrumbs.push(fromL.id);\n        let next = parentL;\n        do {\n            if (next) {\n                if (deep.nameLocal(next?.id))\n                    broadcrumbs.push(next?.id);\n                next = next?.inByType?.[Contain]?.[0]?.from;\n            }\n        } while (next);\n        return (React.createElement(Box, { background: 'backgroundModal', p: '0.2rem', ...props, xs: {\n                border: current?.id === link?.id ? '3px #ffffff solid' : '0px transparent solid',\n                transition: 'all 1s ease',\n                cursor: 'pointer',\n            }, _hover: { border: '3px #ffffff7d solid' } },\n            React.createElement(Box, { mr: '0.5rem' },\n                React.createElement(Text, null,\n                    _symbol,\n                    \" \",\n                    link?.id,\n                    \" \",\n                    deep.nameLocal(link?.id))),\n            React.createElement(Box, { mr: '0.5rem' },\n                React.createElement(Text, null, broadcrumbs.map(id => React.createElement(Button, { key: id, size: \"xs\", onClick: async () => {\n                        const { data: [next] } = await deep.select(id);\n                        setCurrent(next);\n                        setMode('Contains');\n                    } }, deep.nameLocal(id))))),\n            React.createElement(Box, { mr: '0.5rem' },\n                React.createElement(Text, null, __value)),\n            React.createElement(Flex, { divider: React.createElement(StackDivider, { borderColor: 'borderColor' }), spacing: 2, justifyContent: 'space-between', alignItems: 'center', sx: {\n                    '& > *:not(:last-of-type)': {\n                        mr: '0.5rem'\n                    }\n                } },\n                !!link?.from_id && React.createElement(Button, { size: 'sm', variant: \"outline\", width: 'max-content', rightIcon: React.createElement(TbArrowMoveLeft, { size: '1.3rem' }), onClick: async () => {\n                        const { data: [next] } = await deep.select(link?.from_id);\n                        setCurrent(next);\n                    } },\n                    React.createElement(Text, { fontSize: 'sm' }, link?.from_id || 0)),\n                !!link?.to_id && React.createElement(Button, { size: 'sm', fontSize: 'sm', variant: \"outline\", leftIcon: React.createElement(TbArrowMoveRight, { size: '1.3rem' }), onClick: async () => {\n                        const { data: [next] } = await deep.select(link?.to_id);\n                        setCurrent(next);\n                    } },\n                    React.createElement(Text, null, link?.to_id || 0)),\n                !!link?.type_id && React.createElement(Button, { size: 'sm', fontSize: 'sm', variant: \"outline\", onClick: async () => {\n                        const { data: [next] } = await deep.select(link?.type_id);\n                        setCurrent(next);\n                    } },\n                    React.createElement(Text, null,\n                        link?.type_id,\n                        \" \",\n                        deep.nameLocal(link?.type_id))))));\n    };\n    const List = ({ link, parentsQuery, childrenQuery, current, setCurrent, setMode }) => {\n        const { data: parents } = deep.useDeepSubscription(parentsQuery);\n        const { data: children } = deep.useDeepSubscription(childrenQuery);\n        const descriptionQuery = React.useMemo(() => {\n            return {\n                to: { down: {\n                        tree_id: deep.idLocal('@deep-foundation/core', 'typesTree'),\n                        link_id: { _in: [\n                                ...(current?.id ? [current.id] : []),\n                                ...parents?.map(l => l.id),\n                                ...children?.map(l => l.id),\n                                ...parents?.map(l => l.from_id),\n                                ...children?.map(l => l.from_id),\n                                ...parents?.map(l => l.to_id),\n                                ...children?.map(l => l.to_id),\n                            ] },\n                    } },\n                type_id: { _in: [deep.idLocal('@deep-foundation/core', 'Contain'), deep.idLocal('@deep-foundation/core', 'Symbol')] },\n            };\n        }, [current, parents, children]);\n        const description = deep.useDeepSubscription(descriptionQuery);\n        deep.useDeepSubscription({\n            down: {\n                tree_id: { _in: [\n                        deep.idLocal('@deep-foundation/core', 'typesTree'),\n                        deep.idLocal('@deep-foundation/core', 'containTree'),\n                    ] },\n                link_id: { _in: [\n                        ...(current?.id ? [current.id] : []),\n                        ...parents?.map(l => l.id),\n                        ...children?.map(l => l.id),\n                        ...parents?.map(l => l.from_id),\n                        ...children?.map(l => l.from_id),\n                        ...parents?.map(l => l.to_id),\n                        ...children?.map(l => l.to_id),\n                    ] },\n            },\n        });\n        return React.createElement(React.Fragment, null, !description.loading &&\n            React.createElement(VStack, { divider: React.createElement(StackDivider, { borderColor: 'borderColor' }), spacing: 1, align: 'stretch', fontSize: 'sm' },\n                parents?.map(c => (React.createElement(ListItem, { key: c?.id, current: current, setMode: setMode, setCurrent: setCurrent, link: c, onClick: () => setCurrent(c), bg: 'backgroundModal', p: '0.2rem' }))),\n                !!current && React.createElement(ListItem, { current: current, setMode: setMode, setCurrent: setCurrent, link: current, p: '0.2rem' }),\n                children?.map(c => (React.createElement(ListItem, { key: c?.id, current: current, setMode: setMode, setCurrent: setCurrent, link: c, onClick: () => setCurrent(c) })))));\n    };\n    return ({ style, link, onChange, search, query, fillSize, children = null, }) => {\n        const [currentId, setCurrentId] = React.useState(link?.id || 0);\n        const setCurrent = React.useCallback((link) => setCurrentId(link?.id || 0));\n        const { data: [current] = [] } = deep.useDeepSubscription({ id: currentId });\n        const [mode, setMode] = React.useState(typeof (search) === 'string' ? 'Search' : typeof (query) === 'object' ? 'Query' : 'Contains');\n        const [viewSize, setViewSize] = React.useState({ height: 400, width: 450 });\n        React.useEffect(() => onChange && onChange(current), [current]);\n        const [trees, setTrees] = React.useState([]);\n        React.useEffect(() => {\n            mode === 'Trees' && (async () => {\n                setTrees((await deep.select({\n                    link_id: { _eq: current?.id },\n                    parent_id: { _eq: current?.id },\n                    distinct_on: ['tree_id'],\n                }, {\n                    table: 'tree',\n                    returning: `\n          id link_id tree_id root_id depth position_id\n        `,\n                }))?.data);\n            })();\n        }, [mode, current]);\n        const [tree, setTree] = React.useState();\n        React.useEffect(() => setTree(), [mode, current]);\n        const [q, setQ] = React.useState(query);\n        const setQoDebounce = useDebounceCallback((q) => {\n            try {\n                setQo(json5.parse(q));\n            }\n            catch (error) { }\n        }, 1000);\n        const [qo, setQo] = React.useState(q);\n        const [s, setS] = React.useState(search || '');\n        const setSoDebounce = useDebounceCallback((s) => {\n            const num = parseFloat(s);\n            const _or = [];\n            if (!Number.isNaN(num)) {\n                _or.push({ id: num }, { number: { value: num } });\n            }\n            _or.push({ string: { value: s } }, { string: { value: { _ilike: `%${s}%` } } }, { string: { value: { _similar: s } } }, { in: { type_id: deep.idLocal('@deep-foundation/core', 'Contain'), string: { value: s } } }, { in: { type_id: deep.idLocal('@deep-foundation/core', 'Contain'), string: { value: { _ilike: `%${s}%` } } } }, { in: { type_id: deep.idLocal('@deep-foundation/core', 'Contain'), string: { value: { _similar: s } } } });\n            const query = JSON.stringify({\n                _not: { type_id: deep.idLocal('@deep-foundation/core', 'Contain') },\n                _or,\n            });\n            setQ(query);\n            try {\n                setQo(json5.parse(query));\n            }\n            catch (error) { }\n        }, 1000);\n        const { colorMode } = useColorMode();\n        const bg = useColorModeValue('#eeeeee', '#434343');\n        const hover = useColorModeValue('white', '#1e1e1e');\n        const borderColor = useColorModeValue('#434343', '#eeeeee');\n        const color = useColorModeValue('#1e1e1e', 'white');\n        const body = React.createElement(Box, { sx: {\n                height: fillSize ? '100%' : viewSize.height,\n                width: fillSize ? '100%' : viewSize.width,\n                overflowY: 'auto',\n                position: 'relative',\n                borderColor: 'borderColor',\n                borderWidth: 'thin',\n                borderRadius: '0.5rem',\n                p: '0.2rem',\n                ...style\n            } },\n            React.createElement(HStack, { align: 'stretch', justifyContent: 'space-between', sx: { position: 'sticky', top: 0, mb: '0.3rem' }, bg: 'transparent' },\n                React.createElement(Button, { variant: 'solid', size: 'sm', background: !(mode === 'Search') ? 'backgroundModal' : 'gray.400', borderColor: !(mode === 'Search') ? 'borderColor' : 'backgroundModal', borderWidth: 'thin', onClick: () => setMode('Search') }, \"\\uD83E\\uDEAC\"),\n                React.createElement(Button, { variant: 'solid', size: 'sm', background: !(mode === 'Query') ? 'backgroundModal' : 'gray.400', borderColor: !(mode === 'Query') ? 'borderColor' : 'backgroundModal', borderWidth: 'thin', onClick: () => setMode('Query') }, \"\\uD83D\\uDD0D\"),\n                React.createElement(Button, { variant: 'solid', size: 'sm', background: !(mode === 'Contains') ? 'backgroundModal' : 'gray.400', borderColor: !(mode === 'Contains') ? 'borderColor' : 'backgroundModal', borderWidth: 'thin', onClick: () => setMode('Contains') }, \"\\uD83D\\uDDC2\"),\n                React.createElement(Button, { variant: 'solid', size: 'sm', background: !(mode === 'In/Out') ? 'backgroundModal' : 'gray.400', borderColor: !(mode === 'In/Out') ? 'borderColor' : 'backgroundModal', borderWidth: 'thin', onClick: () => setMode('In/Out') }, \"In/Out\"),\n                React.createElement(Button, { variant: 'solid', size: 'sm', background: !(mode === 'Trees') ? 'backgroundModal' : 'gray.400', borderColor: !(mode === 'Trees') ? 'borderColor' : 'backgroundModal', borderWidth: 'thin', onClick: () => setMode('Trees') }, \"\\uD83C\\uDF32\")),\n            mode === 'Search' && React.createElement(React.Fragment, null,\n                current && React.createElement(List, { link: link, current: current, setMode: setMode, setCurrent: setCurrent, parentsQuery: { id: 0 }, childrenQuery: { id: 0 } }),\n                React.createElement(Input, { autoFocus: true, type: \"text\", variant: 'filled', variant: 'filled', bg: bg, color: color, borderWidth: 'thin', borderColor: borderColor, _hover: { bg: hover }, _focus: { bg: bg }, sx: {\n                        width: '100%',\n                    }, onChange: (e) => {\n                        setS(e.target.value);\n                        setSoDebounce(e.target.value);\n                    }, value: s }),\n                React.createElement(List, { link: link, current: null, setMode: setMode, setCurrent: setCurrent, parentsQuery: { id: 0 }, childrenQuery: {\n                        ...qo,\n                        limit: 30,\n                    } })),\n            mode === 'Query' && React.createElement(React.Fragment, null,\n                current && React.createElement(List, { link: link, current: current, setMode: setMode, setCurrent: setCurrent, parentsQuery: { id: 0 }, childrenQuery: { id: 0 } }),\n                React.createElement(MonacoEditor, { options: {\n                        minimap: {\n                            enabled: false\n                        },\n                        lineNumbers: 'off',\n                        wordWrap: true,\n                    }, height: \"200px\", width: \"100%\", theme: colorMode === 'light' ? 'light' : \"vs-dark\", defaultLanguage: \"json\", defaultValue: q || '', onChange: (value) => {\n                        setQ(value);\n                        setQoDebounce(value);\n                    } }),\n                React.createElement(List, { link: link, current: null, setMode: setMode, setCurrent: setCurrent, parentsQuery: { id: 0 }, childrenQuery: {\n                        ...qo,\n                        limit: 30,\n                    } })),\n            mode === 'Contains' && current && React.createElement(List, { link: link, current: current, setMode: setMode, setCurrent: setCurrent, parentsQuery: {\n                    out: {\n                        type_id: deep.idLocal('@deep-foundation/core', 'Contain'),\n                        to_id: current?.id,\n                    }\n                }, childrenQuery: {\n                    in: {\n                        type_id: deep.idLocal('@deep-foundation/core', 'Contain'),\n                        from_id: current?.id,\n                    }\n                } }),\n            mode === 'In/Out' && current && React.createElement(React.Fragment, null,\n                React.createElement(List, { link: link, current: current, setMode: setMode, setCurrent: setCurrent, parentsQuery: {\n                        to_id: current?.id\n                    }, childrenQuery: {\n                        from_id: current?.id\n                    } })),\n            mode === 'Trees' && React.createElement(React.Fragment, null,\n                React.createElement(VStack, { divider: React.createElement(StackDivider, { borderColor: 'borderColor' }), spacing: 1, align: 'stretch', bg: 'gray.800' }, [React.createElement(Wrap, { key: tree?.id || 0, spacing: 1, justify: 'center' }, trees?.map(t => React.createElement(WrapItem, { key: t?.id },\n                        React.createElement(Button, { size: 'sm', variant: tree?.id === t?.id ? 'solid' : \"outline\", onClick: () => setTree(t) }, deep.nameLocal(t?.tree_id)))))]),\n                !tree && React.createElement(React.Fragment, null,\n                    React.createElement(List, { link: link, current: current, setMode: setMode, setCurrent: setCurrent, parentsQuery: {\n                            id: 0\n                        }, childrenQuery: {\n                            id: 0\n                        } })),\n                !!tree && !!current?.id && React.createElement(React.Fragment, null, [React.createElement(List, { key: tree?.id, link: link, current: current, setMode: setMode, setCurrent: setCurrent, parentsQuery: {\n                            down: {\n                                tree_id: tree?.tree_id,\n                                position_id: tree?.position_id,\n                                link_id: current?.id\n                            },\n                        }, childrenQuery: { _and: [\n                                { up: {\n                                        tree_id: tree?.tree_id,\n                                        root_id: tree?.root_id,\n                                        parent_id: tree?.link_id,\n                                        depth: tree?.depth,\n                                    } },\n                                { down: {\n                                        tree_id: tree?.tree_id,\n                                        root_id: tree?.root_id,\n                                        depth: tree?.depth + 1,\n                                    } },\n                            ] } })])),\n            children);\n        return React.createElement(React.Fragment, null, fillSize\n            ? body\n            : React.createElement(Resize, { onChangeSize: (viewSize) => setViewSize(viewSize), style: {\n                    borderRadius: 5,\n                    border: 'none',\n                } }, body));\n    };\n};\n//# sourceMappingURL=data:application/json;base64,",
          "link_id": 967
        },
        "__typename": "links"
      },
      "__typename": "handlers"
    },
    {
      "dist_id": 1208,
      "src_id": 1208,
      "handler_id": 1210,
      "execution_provider_id": 33,
      "isolation_provider_id": 81,
      "dist": {
        "id": 1208,
        "type_id": 30,
        "from_id": 0,
        "to_id": 0,
        "value": {
          "id": 477,
          "value": "async ({ data: { newLink: reply, triggeredByLinkId }, deep }) => {\n  const ml = deep.minilinks;\n\n  const startTime = Date.now();\n  const axios = await deep.import('axios');\n\n  const ChatGPT = await deep.id(deep.linkId, 'ChatGPT');\n  const Conversation = await deep.id(deep.linkId, 'Conversation');\n  const ApiKey = await deep.id('@deep-foundation/openai', 'ApiKey');\n  const UsesApiKey = await deep.id('@deep-foundation/openai', 'UsesApiKey');\n  const Model = await deep.id('@deep-foundation/openai', 'Model');\n  const UsesModel = await deep.id('@deep-foundation/openai', 'UsesModel');\n  const Message = await deep.id('@deep-foundation/messaging', 'Message');\n  const Reply = await deep.id('@deep-foundation/chatgpt-azure', 'Reply');\n  const Author = await deep.id('@deep-foundation/messaging', 'Author');\n  const messagingTree = await deep.id('@deep-foundation/messaging', 'messagingTree');\n  const System = await deep.id('@deep-foundation/chatgpt-azure', 'System');\n  const Tokens = await deep.id(\"@deep-foundation/tokens\", \"Tokens\")\n  const ProvidedBy = await deep.id(\"@deep-foundation/chatgpt-azure\", \"ProvidedBy\")\n\n  await deep.await(reply.from_id);  const { data: [message] } = await deep.select({\n    id: reply.from_id,\n    _not: { out: { to_id: ChatGPT, type_id: Author } },\n  });\n  if (!message) return 'No need to react to message of this reply.';\n  if (!message.value?.value) throw new Error(`Message (##${message?.id}) must have a value`);\n\n  ml.apply(await deep.select({\n    type_id: ApiKey,\n    in: { from_id: triggeredByLinkId, type_id: UsesApiKey },\n    return: {\n      uses: { relation: 'in', type_id: UsesApiKey },\n    },\n  }), 'apikey');\n\n  const apikeys = ml.select({ type_id: ApiKey });\n  const useses = ml.select({ tyoe_id: UsesApiKey, to: { type_id: ApiKey } });\n  \n  if (!apikeys.length) throw new Error(`ApiKey not founded`);\n  if (useses.length > 1) throw new Error(`More than 1 links of type UsesApiKey are found`);\n  if (!apikeys[0]?.value?.value) throw new Error(`ApiKey ##${apikeys[0]?.id} has no value`);\n\n  const { data: [conversation] } = await deep.select({\n    type_id: Conversation,\n    down: { tree_id: messagingTree, link_id: reply.id }\n  });\n  if (!conversation) return 'Conversation upper not founded.';\n\n  const messagesByReply = await deep.select({\n    type_id: Message,\n    down: { tree_id: messagingTree, link_id: reply.from_id },\n    order_by: { id: 'asc' },\n    return: {\n      authors: { relation: 'out', type_id: Author },\n      tokens: { relation: 'out', type_id: Tokens },\n    }\n  });\n  ml.apply(messagesByReply, 'messagesByReply');\n\n  const messagesById = await deep.select({\n    id: { _nin: messagesByReply.data.map(l => l.id) },\n    type_id: Message,\n    up: { tree_id: messagingTree, parent_id: conversation.id },\n    order_by: { id: 'asc' },\n    return: {\n      authors: { relation: 'out', type_id: Author },\n      tokens: { relation: 'out', type_id: Tokens },\n    }\n  });\n  ml.apply(messagesById, 'messagesById');\n\n  const messagesToSend = [...messagesById.data, ...messagesByReply.data];\n  const models = await deep.select({\n    type_id: Model,\n    in: { type_id: UsesModel, from_id: { _in: [conversation.id, triggeredByLinkId] } },\n    return: {\n      usesModel: { relation: 'in', type_id: UsesModel },\n      tokens: { relation: 'out', type_id: Tokens },\n      providedBy: {\n        relation: 'out', type_id: ProvidedBy,\n        return: {\n          endpoint: { relation: 'to' }\n        },\n      },\n    },\n  });\n  ml.apply(models, 'models');\n\n  const [userLinkedModel] = ml.select({ type_id: Model, in: { type_id: UsesModel, from_id: triggeredByLinkId } });\n  if (!userLinkedModel) throw new Error(`UsersModel from triggeredByLinkId ${triggeredByLinkId} to Model not founded.`);\n  const [userLinkedModelTokens] = ml.select({ type_id: Tokens, from_id: userLinkedModel?.id });\n  const [linkedModel] = ml.select({ type_id: Model, in: { type_id: UsesModel, from_id: conversation.id } });\n  \n  const MAX_TOKENS = userLinkedModelTokens?.value?.value;\n  if (!MAX_TOKENS) throw new Error(`MAX_TOKENS Tokens (##${userLinkedModelTokens?.id}) .value from model not founded.`);\n  \n  const endpoint = ml.select({ in: { type_id: ProvidedBy } })[0];\n  const API_ENDPOINT = endpoint?.value?.value;\n  if (!API_ENDPOINT) throw new Error(`API_ENDPOINT Endpoint (##${endpoint?.id}) instance.value nout founded.`);\n  \n  const model = linkedModel?.value?.value || userLinkedModel?.value?.value;\n  if(!model) throw new Error(`UsersModel from conversation.id (##${conversation.id}) to Model not founded.`);\n\n  let preparedMessages = messagesToSend.map((link) => {\n    const tokens = ml.select({ type_id: Tokens, from_id: link.id })[0]?.value?.value;\n    return {\n      role: ml.select({ type_id: Author, from_id: link.id })[0]?.to_id === ChatGPT ? 'assistant' : 'user',\n      content: link.value.value,\n      tokens: ml.select({ type_id: Tokens, from_id: link.id })[0]?.value?.value,\n    }\n  });\n\n  const systems = await deep.select({\n    type_id: System, to_id: { _in: [triggeredByLinkId, conversation.id] },\n    return: {\n      message: { relation: 'from' },\n      conversation: { relation: 'to' },\n      tokens: { relation: 'in', type_id: Tokens },\n    },\n  });\n  ml.apply(systems, 'systems');\n\n  const conversationSystem = ml.select({ type_id: System, to_id: conversation.id })?.[0];\n  if (!!conversationSystem && !conversationSystem?.value?.value) throw new Error(`System .value to conversation not defined`);\n  const userSystems = ml.select({ type_id: System, to_id: triggeredByLinkId });\n  if (userSystems.length > 1) throw new Error(\"Multiple system messages linked to the user are found\");\n  const userSystem = userSystems[0];\n\n  const systemMessage = conversationSystem?.from || userSystem?.from;\n  if (systemMessage) {\n    if (!systemMessage?.value?.value) throw new Error(`System (##${systemMessage?.id}) .from Message.value not founded`);\n    preparedMessages.unshift({ role: 'system', content: systemMessage?.value?.value });\n  }\n\n  const tokenLimit = MAX_TOKENS * 7 / 8;\n  let totalTokens = 0;\n  let messages = [];\n\n  for (let i = preparedMessages.length - 1; i >= 0; i--) {\n    const message = preparedMessages[i];\n    if (message.role === 'system' || totalTokens + message.tokens <= tokenLimit) {\n      messages.unshift({ role: message.role, content: message.content });\n      totalTokens += message.tokens;\n    } else {\n      break;\n    }\n  }\n\n  let response;\n  try {\n    response = await axios.post(API_ENDPOINT, { messages }, {\n      headers: { 'Content-Type': 'application/json', 'api-key': apikeys[0]?.value?.value },\n    });\n  } catch (error) {\n    console.error('Error making API call:', error.response ? error.response.data : error.message);\n  }\n\n  const content = response.data.choices[0]?.message?.content;\n  await deep.insert({\n    type_id: Message,\n    string: { data: { value: content } },\n    out: { data: [\n      { type_id: Author, to_id: ChatGPT },\n      { type_id: Reply, to_id: reply.from_id },\n    ] },\n  });\n\n  const endTime = Date.now();\n  const duration = (endTime - startTime) / 1000;\n\n  ml.remove(Object.keys(ml.byId));\n\n  return {\n    request: { model, messages },\n    response: response.data,\n    duration, totalTokens,\n  };\n};",
          "link_id": 1208
        },
        "__typename": "links"
      },
      "__typename": "handlers"
    },
    {
      "dist_id": 1268,
      "src_id": 1211,
      "handler_id": 1212,
      "execution_provider_id": 33,
      "isolation_provider_id": 144,
      "dist": {
        "id": 1268,
        "type_id": 30,
        "from_id": 0,
        "to_id": 0,
        "value": {
          "id": 480,
          "value": "async ({ deep, require }) => {\n    const PACKAGE_NAME = \"@deep-foundation/chatgpt-azure-discord-bot\";\n    const logsPrefix = \"@chatgpt-azure\" + \" \" + \"manager\" + \"ClientHandler\";\n    const React = await deep.import(\"react\");\n    const { useState, useMemo, useRef } = React;\n    const Chakra = await deep.import(\"@chakra-ui/react\");\n    console.log(logsPrefix, { Chakra });\n    const { Input, InputGroup, InputRightElement, IconButton, Popover, PopoverTrigger, PopoverContent, PopoverArrow, PopoverBody, FormControl, FormLabel, Box, PopoverHeader, PopoverCloseButton, HStack, Stack, Text, Link, Select, Tooltip, Button, NumberInput, NumberInputField, FormHelperText, FormErrorMessage, Divider, } = Chakra;\n    const ChakraIcons = await deep.import(\"@chakra-ui/icons\");\n    const { InfoOutlineIcon } = ChakraIcons;\n    console.log(logsPrefix, ChakraIcons);\n    const DeepCase = await deep.import(\"@deep-foundation/deepcase\");\n    const { FinderPopover } = await deep.import(\"./cyto/hooks\");\n    const { ClientHandler } = DeepCase;\n    console.log(logsPrefix, { DeepCase });\n    console.log(logsPrefix, { FinderPopover });\n    const ReactHookForm = await deep.import(\"react-hook-form\");\n    console.log(logsPrefix, { ReactHookForm });\n    const { useForm, Controller } = ReactHookForm;\n    const containTypeLinkId = await deep.id(\"@deep-foundation/core\", \"Contain\");\n    const chatGPTAzureClientHandlerLinkId = await deep.id(\"@deep-foundation/chatgpt-azure\", \"managerClientHandler\");\n    return ({ fillSize, style, link }) => {\n        const { handleSubmit, register, formState: { errors, isSubmitting }, control, setValue, setError, } = useForm();\n        async function onSubmit(values) {\n            const { apiKey, chatGPTModelLinkId, userLinkId, containerLinkId } = values;\n            const containTypeLinkId = await deep.id(\"@deep-foundation/core\", \"Contain\");\n            const reservedLinkIds = await deep.reserve(6);\n            const apiKeyLinkId = reservedLinkIds.pop();\n            const containForApiKeyLinkId = reservedLinkIds.pop();\n            const usesApiKeyLinkId = reservedLinkIds.pop();\n            const containForUsesApiKeyLinkId = reservedLinkIds.pop();\n            const usesModelLinkId = reservedLinkIds.pop();\n            const containForUsesModelLinkId = reservedLinkIds.pop();\n            await deep\n                .serial({\n                operations: [\n                    {\n                        type: \"insert\",\n                        table: \"links\",\n                        objects: {\n                            id: apiKeyLinkId,\n                            type_id: await deep.id(\"@deep-foundation/openai\", \"ApiKey\"),\n                        },\n                    },\n                    {\n                        type: \"insert\",\n                        table: \"strings\",\n                        objects: {\n                            link_id: apiKeyLinkId,\n                            value: apiKey,\n                        },\n                    },\n                    {\n                        type: \"insert\",\n                        table: \"links\",\n                        objects: {\n                            id: containForApiKeyLinkId,\n                            type_id: containTypeLinkId,\n                            from_id: containerLinkId,\n                            to_id: apiKeyLinkId,\n                        },\n                    },\n                    {\n                        type: \"insert\",\n                        table: \"links\",\n                        objects: {\n                            id: usesApiKeyLinkId,\n                            type_id: await deep.id(\"@deep-foundation/openai\", \"UsesApiKey\"),\n                            from_id: userLinkId,\n                            to_id: apiKeyLinkId,\n                        },\n                    },\n                    {\n                        type: \"insert\",\n                        table: \"links\",\n                        objects: {\n                            id: containForUsesApiKeyLinkId,\n                            type_id: containTypeLinkId,\n                            from_id: containerLinkId,\n                            to_id: usesApiKeyLinkId,\n                        },\n                    },\n                    {\n                        type: \"insert\",\n                        table: \"links\",\n                        objects: {\n                            id: usesModelLinkId,\n                            type_id: await deep.id(\"@deep-foundation/openai\", \"UsesModel\"),\n                            from_id: userLinkId,\n                            to_id: chatGPTModelLinkId,\n                        },\n                    },\n                    {\n                        type: \"insert\",\n                        table: \"links\",\n                        objects: {\n                            id: containForUsesModelLinkId,\n                            type_id: containTypeLinkId,\n                            from_id: containerLinkId,\n                            to_id: usesModelLinkId,\n                        },\n                    },\n                ],\n            })\n                .catch(setError);\n        }\n        return (React.createElement(Box, { style: { minWidth: 450, ...style }, bg: \"bgColor\", color: \"text\", borderColor: \"borderColor\", borderWidth: \"1px\", borderRadius: \"lg\", padding: 4 },\n            React.createElement(\"form\", { onSubmit: handleSubmit(onSubmit) },\n                React.createElement(FormControl, { isInvalid: errors.root },\n                    React.createElement(Stack, { spacing: 6, divider: React.createElement(Divider, null), display: \"flex\", justifyContent: \"center\" },\n                        React.createElement(ApiKeyTextField, { register: register, error: errors.apiKey && errors.apiKey.message }),\n                        React.createElement(ModelLinkIdSelect, { register: register, error: errors.chatGPTModelLinkId && errors.chatGPTModelLinkId.message }),\n                        React.createElement(UserLinkIdTextField, { control: control, error: errors.userLinkId && errors.userLinkId.message, setValue: setValue }),\n                        React.createElement(ContainerLinkIdTextField, { control: control, setValue: setValue, error: errors.containerLinkId && errors.containerLinkId.message }),\n                        errors.root && React.createElement(FormErrorMessage, null, JSON.stringify(errors.root, null, 2)),\n                        React.createElement(Button, { isLoading: isSubmitting, type: \"submit\" }, \"Submit\"))))));\n    };\n    function ModelLinkIdSelect(options) {\n        const { register, error } = options;\n        const { data: modelLinks } = deep.useDeepSubscription({\n            type_id: {\n                _id: [\"@deep-foundation/openai\", \"Model\"],\n            },\n        });\n        const modelOptions = useMemo(() => {\n            if (!modelLinks || modelLinks.length === 0)\n                return null;\n            return modelLinks.map((link) => {\n                const name = link.value.value;\n                return React.createElement(\"option\", { value: link.id }, name);\n            });\n        }, [modelLinks]);\n        console.log({ modelOptions });\n        return (React.createElement(Tooltip, { label: `No model links of type [\"@deep-foundation/openai\", \"Model\"] available to choose from. You can install \"@deep-foundation/chatgpt-azure-deep\" for already configured chatgpt models`, isDisabled: modelLinks.length > 0 },\n            React.createElement(FormControl, { isInvalid: error },\n                React.createElement(FormLabel, { htmlFor: \"chatGPTModelLinkId\" }, \"ChatGPT Model Link ID\"),\n                React.createElement(Select, { placeholder: \"ChatGPT Model link ID\", ...register(\"chatGPTModelLinkId\", {\n                        required: \"ChatGPT Model link ID is required\",\n                    }), isDisabled: modelLinks.length === 0 }, modelOptions),\n                React.createElement(FormErrorMessage, null, error),\n                React.createElement(FormHelperText, null, \"ChatGPT model is required to know which model should be used for requests\"))));\n    }\n    function ApiKeyTextField(options) {\n        const { error, register } = options;\n        return (React.createElement(HStack, null,\n            React.createElement(FormControl, { isInvalid: error },\n                React.createElement(FormLabel, { htmlFor: \"apiKey\" }, \"ApiKey Link ID\"),\n                React.createElement(Input, { ...register(\"apiKey\", {\n                        required: \"Api Key is required\",\n                    }) }),\n                React.createElement(FormErrorMessage, null, error),\n                React.createElement(FormHelperText, null,\n                    React.createElement(Stack, null,\n                        React.createElement(Text, null, \"Api Key is required to make requests to openai on your behalf\"),\n                        React.createElement(Link, { isExternal: true, href: \"https://platform.openai.com/api-keys\" }, \"Obtain Api Key\"))))));\n    }\n    function UserLinkIdTextField(options) {\n        const { setValue, error, control } = options;\n        return (React.createElement(FormControl, { isInvalid: error },\n            React.createElement(FormLabel, { htmlFor: \"userLinkId\" }, \"User Link ID\"),\n            React.createElement(Controller, { name: \"userLinkId\", control: control, defaultValue: undefined, rules: {\n                    required: {\n                        value: true,\n                        message: \"User link ID is required\",\n                    },\n                    validate: async (value) => {\n                        const valueNumber = parseInt(value);\n                        if (isNaN(valueNumber)) {\n                            return \"User link ID must be a number\";\n                        }\n                        const { data: [link], } = await deep.select({ id: valueNumber });\n                        if (!link) {\n                            return `Link ${valueNumber} does not exist`;\n                        }\n                        else {\n                            return true;\n                        }\n                    },\n                }, render: ({ field }) => (React.createElement(HStack, null,\n                    React.createElement(NumberInput, { ...field, min: 0 },\n                        React.createElement(NumberInputField, { ref: field.ref, name: field.name })),\n                    React.createElement(FinderPopover, { link: deep.linkId, onSubmit: async (link) => {\n                            setValue(\"containerLinkId\", link.id);\n                        } },\n                        React.createElement(IconButton, { \"aria-label\": \"finder\", icon: React.createElement(React.Fragment, null, \"\\uD83E\\uDEAC\") })))) }),\n            React.createElement(FormErrorMessage, null, error),\n            React.createElement(FormHelperText, null, \"User link is a link that is considered as a user of ApiKey. User link will be \\\"from\\\" for UsesApiKey\")));\n    }\n    function ContainerLinkIdTextField(options) {\n        const { setValue, error, control } = options;\n        const helpContent = `Container link is a link that will contain newly created ApiKey, UsesApiKey`;\n        return (React.createElement(FormControl, { isInvalid: error },\n            React.createElement(FormLabel, { htmlFor: \"containerLinkId\" }, \"Container Link ID\"),\n            React.createElement(HStack, null,\n                React.createElement(Controller, { name: \"containerLinkId\", control: control, defaultValue: undefined, rules: {\n                        required: {\n                            value: true,\n                            message: \"Container link id is required\",\n                        },\n                        validate: async (value) => {\n                            const valueNumber = parseInt(value);\n                            if (isNaN(valueNumber)) {\n                                return \"Container link id must be a number\";\n                            }\n                            const { data: [link], } = await deep.select({ id: valueNumber });\n                            if (!link) {\n                                return `Link ${valueNumber} does not exist`;\n                            }\n                            else {\n                                return true;\n                            }\n                        },\n                    }, render: ({ field }) => (React.createElement(NumberInput, { ...field, min: 0 },\n                        React.createElement(NumberInputField, { ref: field.ref, name: field.name }))) }),\n                React.createElement(FinderPopover, { link: deep.linkId, onSubmit: async (link) => {\n                        setValue(\"containerLinkId\", link.id);\n                    } },\n                    React.createElement(IconButton, { \"aria-label\": \"finder\", icon: React.createElement(React.Fragment, null, \"\\uD83E\\uDEAC\") }))),\n            React.createElement(FormErrorMessage, null, error),\n            React.createElement(FormHelperText, null, \"Container link is a link that will contain newly created ApiKey, UsesApiKey\")));\n    }\n};\n//# sourceMappingURL=data:application/json;base64,",
          "link_id": 1268
        },
        "__typename": "links"
      },
      "__typename": "handlers"
    },
    {
      "dist_id": 1408,
      "src_id": 1408,
      "handler_id": 1409,
      "execution_provider_id": 33,
      "isolation_provider_id": 81,
      "dist": {
        "id": 1408,
        "type_id": 30,
        "from_id": 0,
        "to_id": 0,
        "value": {
          "id": 545,
          "value": "async ({ require, deep, data: { newLink, triggeredByLinkId } }) => {\r\n    const Conversation = await deep.id(\"@deep-foundation/chatgpt-azure\", \"Conversation\");\r\n    const Result = await deep.id(\"@deep-foundation/chatgpt-azure-templates\", \"Result\");\r\n    const Message = await deep.id(\"@deep-foundation/messaging\", \"Message\");\r\n    const Contain = await deep.id(\"@deep-foundation/core\", \"Contain\");\r\n    const Reply = await deep.id(\"@deep-foundation/chatgpt-azure\", 'Reply');\r\n    const Continue = await deep.id(deep.linkId, \"Continue\");\r\n\r\n    const { data: [template] } = await deep.select(newLink.from_id);\r\n    const { data: [cont] } = await deep.select({\r\n        type_id: Continue,\r\n        from_id: newLink.id,\r\n    });\r\n\r\n    const evalTemplate = async (options) => {\r\n        const { linkId, deep, template } = options;\r\n        const result = eval('(async () => (`'+template+'`))()');\r\n        return result;\r\n    }\r\n\r\n    const linkId = newLink.to_id;\r\n    const value = template?.value?.value || '';\r\n    const result = await evalTemplate({ linkId, deep, template: value });\r\n\r\n    const { data: [{ id: messageLinkId }] } = await deep.insert({\r\n        string: { data: { value: result } },\r\n        type_id: Message,\r\n        in: { data: [\r\n            {\r\n                type_id: Contain,\r\n                from_id: newLink.from_id,\r\n            },\r\n            {\r\n                type_id: Result,\r\n                from_id: newLink.id,\r\n                in: {\r\n                    data: {\r\n                        type_id: Contain,\r\n                        from_id: newLink.from_id,\r\n                    },\r\n                },\r\n            },\r\n        ] },\r\n    });\r\n\r\n    await deep.insert({\r\n        type_id: Reply,\r\n        from_id: messageLinkId,\r\n        ...(cont ? {\r\n            to_id: cont.to_id,\r\n        } : {\r\n            to: { data: {\r\n                type_id: Conversation,\r\n                in: { data: {\r\n                    type_id: Contain,\r\n                    from_id: newLink.id,\r\n                } },\r\n            } },\r\n        }),\r\n        in: { data: [{\r\n                type_id: Contain,\r\n                from_id: newLink.id,\r\n        }] }\r\n    });\r\n\r\n    return {\r\n        templateId: linkId,\r\n        template: template?.value?.value,\r\n        result,\r\n    };\r\n}",
          "link_id": 1408
        },
        "__typename": "links"
      },
      "__typename": "handlers"
    },
    {
      "dist_id": 1470,
      "src_id": 1470,
      "handler_id": 1471,
      "execution_provider_id": 33,
      "isolation_provider_id": 81,
      "dist": {
        "id": 1470,
        "type_id": 30,
        "from_id": 0,
        "to_id": 0,
        "value": {
          "id": 559,
          "value": "async ({ deep, data: { oldLink }, require }) => {\n    const axios = require('axios');\n    const router = await deep.id('@deep-foundation/telegram-bot', 'router');\n    const onTelegramInHandler = await deep.id('@deep-foundation/telegram-bot', 'onTelegramInHandler');\n\n    const containTree = deep.idLocal('@deep-foundation/core', 'containTree');\n    const Contain = deep.idLocal('@deep-foundation/core', 'Contain');\n\n    const { data: deletedLinks } = await deep.delete({\n        up: {\n            tree_id: containTree,\n            parent: {\n                type_id: Contain,\n                string: { value: { _in: [\n                    'route'+oldLink.from_id,\n                    'handle'+oldLink.from_id,\n                    'use'+oldLink.from_id,\n                    'include'+oldLink.from_id,\n                    'tree'+oldLink.from_id,\n                    'ruleInclude'+oldLink.from_id,\n                    'ruleTree'+oldLink.from_id,\n                ] } },\n            },\n        },\n    });\n\n    const { data: deletedWebhook } = await axios.get(`https://api.telegram.org/bot${token?.value?.value}/deleteWebhook`);\n\n    return {\n        deletedLinks,\n        deletedWebhook\n    };\n}",
          "link_id": 1470
        },
        "__typename": "links"
      },
      "__typename": "handlers"
    },
    {
      "dist_id": 1472,
      "src_id": 1472,
      "handler_id": 1473,
      "execution_provider_id": 33,
      "isolation_provider_id": 81,
      "dist": {
        "id": 1472,
        "type_id": 30,
        "from_id": 0,
        "to_id": 0,
        "value": {
          "id": 560,
          "value": "async ({ deep, data: { newLink, triggeredByLinkId }, require }) => {\n    const { Telegraf } = require('telegraf');\n    const Markup = require('telegraf/markup');\n\n    const Bot = await deep.id('@deep-foundation/telegram-bot', 'Bot');\n    const Token = await deep.id('@deep-foundation/telegram-bot', 'Token');\n    const Active = await deep.id('@deep-foundation/telegram-bot', 'Active');\n    const Conversation = await deep.id('@deep-foundation/telegram-bot', 'Conversation');\n    const HandleTelegramBotOut = await deep.id('@deep-foundation/telegram-bot', 'HandleTelegramBotOut');\n    const messagingTree = await deep.id('@deep-foundation/messaging', 'messagingTree');\n    const containTree = deep.idLocal('@deep-foundation/core', 'containTree');\n    const Contain = deep.idLocal('@deep-foundation/core', 'Contain');\n\n    function splitStringIntoChunks(str, chunkSize = 4096) {\n        const chunks = [];\n        for (let i = 0, len = str.length; i < len; i += chunkSize) {\n            chunks.push(str.substring(i, i + chunkSize));\n        }\n        return chunks;\n    }\n\n    const botId = (await deep.select({\n        type_id: Bot,\n        down: {\n            tree_id: containTree,\n            link_id: triggeredByLinkId\n        },\n    }))?.data?.[0]?.id;\n    if (!botId) {\n        const botId = (await deep.select({\n            type_id: Bot,\n            down: {\n                tree_id: messagingTree,\n                link_id: newLink.id,\n            },\n        }))?.data?.[0]?.id;\n        const token = (await deep.select({\n            type_id: Token,\n            in: {\n                type_id: Active,\n                from: {\n                    down: {\n                        tree_id: messagingTree,\n                        link_id: newLink.id,\n                    },\n                },\n            },\n        }))?.data?.[0];\n        const conversationId = (await deep.select({\n            type_id: Conversation,\n            down: {\n                tree_id: messagingTree,\n                link_id: newLink.id,\n            },\n        }))?.data?.[0]?.id;\n        const replyToId = newLink.to_id;\n\n        const message = (await deep.select(newLink.from_id))?.data?.[0];\n\n        const bot = new Telegraf(token?.value?.value);\n\n        const { data: handles } = await deep.select({\n            type_id: HandleTelegramBotOut,\n            from_id: botId,\n            order_by: { id: 'asc' },\n        });\n\n        const state = {\n            defaultHandling: true,\n        };\n        const handled = {};\n        for (let h in handles) {\n            const packageId = (await deep.select({\n                out: { type_id: Contain, to_id: handles[h].to_id },\n            }))?.data?.[0]?.id;\n            if (!packageId) {\n                handled[handles[h].to_id] = { error: `!packageId by handler(${handles[h].to_id}).in(Contain).from` };\n                continue;\n            }\n            const hdeep = new deep.DeepClient({\n                deep, ...(await deep.jwt({ linkId: packageId }))\n            })\n            handled[handles[h].to_id] = await hdeep.eval({\n                linkId: botId,\n                handlerId: handles[h].to_id,\n                input: {\n                    data: {\n                        state,\n                        bot,\n                        botId,\n                        userId: triggeredByLinkId,\n                        conversationId,\n                        handlerId: handles[h].to_id,\n                        reply: newLink,\n                        message,\n                    },\n                },\n            });\n        }\n\n        if (state.defaultHandling) {\n            const chanks = splitStringIntoChunks(message?.value?.value);\n            for (let c in chanks) {\n                bot.telegram.sendMessage(\n                    await deep.name(conversationId),\n                    chanks[c],\n                );\n            }\n        }\n\n        return {\n            botId,\n            conversationId,\n            replyToId,\n            message,\n            token,\n        };\n    } else {\n        return { botId };\n    }\n}",
          "link_id": 1472
        },
        "__typename": "links"
      },
      "__typename": "handlers"
    },
    {
      "dist_id": 1475,
      "src_id": 1475,
      "handler_id": 1476,
      "execution_provider_id": 33,
      "isolation_provider_id": 81,
      "dist": {
        "id": 1475,
        "type_id": 30,
        "from_id": 0,
        "to_id": 0,
        "value": {
          "id": 561,
          "value": "async (req, res, next, { deep, require, data: { baseUrl, originalUrl, path } }) => {\n    const { DeepClient } = await import('@deep-foundation/deeplinks/imports/client.js');\n\n    const User = deep.idLocal('@deep-foundation/core', 'User');\n    const Join = deep.idLocal('@deep-foundation/core', 'Join');\n    const Contain = deep.idLocal('@deep-foundation/core', 'Contain');\n    const Message = await deep.id('@deep-foundation/messaging', 'Message');\n    const Reply = await deep.id('@deep-foundation/messaging', 'Reply');\n    const Conversation = await deep.id('@deep-foundation/telegram-bot', 'Conversation');\n\n    const HandleTelegramBotIn = await deep.id('@deep-foundation/telegram-bot', 'HandleTelegramBotIn');\n\n    const m = req?.body?.message || req?.body?.callback_query?.message;\n    const _message_id = m?.message_id;\n    const _date = m?.date;\n    const _message = m?.text;\n    const _voice = m?.voice;\n    const _audio = m?.audio;\n    const _userId = m?.from?.id;\n    const _is_bot = m?.from?.is_bot;\n    const _username = m?.from?.username;\n    const _conversationId = m?.chat?.id;\n    const _replyId = m?.reply_to_message?.message_id;\n\n    const botId = +baseUrl.split('/').slice(-1)[0];\n    \n    // found or insert user based on telegram nick\n    let userId;\n    userId = (await deep.select({\n        type_id: User,\n        in: {\n            type_id: Contain, from_id: botId,\n            string: { value: `${_userId}` },\n        },\n    }))?.data?.[0]?.id;\n    if (!userId) {\n        userId = (await deep.insert({\n            type_id: User,\n            out: { data: [\n                {\n                    type_id: Join,\n                    to_id: await deep.id('deep', 'users'),\n                },\n                {\n                    type_id: Join,\n                    to_id: botId,\n                },\n            ] },\n            in: { data: {\n                type_id: Contain, from_id: botId,\n                string: { data: { value: `${_userId}` } }, // telegram nick\n            } },\n        }))?.data?.[0]?.id;\n    }\n\n    const udeep = new DeepClient({ deep, ...(await deep.jwt({ linkId: userId })) });\n\n    // found or insert user based on telegram nick\n    let conversationId;\n    conversationId = (await deep.select({\n        type_id: Conversation,\n        in: {\n            type_id: Contain, from_id: userId,\n            string: { value: `${_conversationId}` },\n        },\n    }))?.data?.[0]?.id;\n    if (!conversationId) {\n        conversationId = (await deep.insert({\n            type_id: Conversation,\n            in: { data: {\n                type_id: Contain, from_id: userId,\n                string: { data: { value: `${_conversationId}` } }, // telegram conversation id\n            } },\n            out: { data: {\n                type_id: Reply,\n                to_id: botId,\n                in: { data: {\n                    type_id: Contain, from_id: userId,\n                } },\n            } },\n        }))?.data?.[0]?.id;\n    }\n\n    const { data: handles } = await deep.select({\n        type_id: HandleTelegramBotIn,\n        from_id: botId,\n        order_by: { id: 'asc' },\n    });\n\n    const state = {\n        defaultHandling: true,\n    };\n    const handled = {};\n    for (let h in handles) {\n        const packageId = (await deep.select({\n            out: { type_id: Contain, to_id: handles[h].to_id },\n        }))?.data?.[0]?.id;\n        if (!packageId) {\n            handled[handles[h].to_id] = { error: `!packageId by handler(${handles[h].to_id}).in(Contain).from` };\n            continue;\n        }\n        const hdeep = new deep.DeepClient({\n            deep, ...(await deep.jwt({ linkId: packageId }))\n        });\n        handled[handles[h].to_id] = await hdeep.eval({\n            linkId: botId,\n            handlerId: handles[h].to_id,\n            input: {\n                data: {\n                    state,\n                    req, res,\n                    botId,\n                    userId,\n                    conversationId,\n                    handlerId: handles[h].to_id,\n                    udeep,\n                },\n            },\n        });\n    }\n\n    if (state.defaultHandling) {\n        // found or insert user based on telegram nick\n        let replyId = conversationId; // if not exists, then convers\n        if (_replyId) replyId = (await deep.select({ \n            type_id: Contain,\n            string: { value: `${_replyId}` },\n        }))?.data?.[0]?.to_id;\n        const messageInserted = await udeep.insert({\n            type_id: Message,\n            string: { data: { value: _message } },\n            in: { data: {\n                type_id: Contain, from_id: userId,\n                string: { data: { value: `${_message_id}` } },\n            } },\n            out: { data: {\n                type_id: Reply,\n                to_id: replyId,\n                in: { data: {\n                    type_id: Contain, from_id: userId,\n                } },\n            } },\n        });\n        const { data: messageId } = messageInserted;\n        res.send(JSON.stringify({\n            userId,\n            conversationId,\n            messageId,\n        }));\n    }\n}",
          "link_id": 1475
        },
        "__typename": "links"
      },
      "__typename": "handlers"
    },
    {
      "dist_id": 1477,
      "src_id": 1477,
      "handler_id": 1478,
      "execution_provider_id": 33,
      "isolation_provider_id": 81,
      "dist": {
        "id": 1477,
        "type_id": 30,
        "from_id": 0,
        "to_id": 0,
        "value": {
          "id": 562,
          "value": "async ({ deep, data: { newLink, deeplinksUrl }, require }) => {\n    const axios = require('axios');\n    const router = await deep.id('@deep-foundation/telegram-bot', 'router');\n    const onTelegramInHandler = await deep.id('@deep-foundation/telegram-bot', 'onTelegramInHandler');\n    const selector = await deep.id('@deep-foundation/telegram-bot', 'botSelector');\n    const tuaimRuleSubjectSelector = await deep.id('@deep-foundation/telegram-bot', 'tuaimRuleSubjectSelector');\n    const messagingTree = await deep.id('@deep-foundation/messaging', 'messagingTree');\n    const joinTree = await deep.id('@deep-foundation/core', 'joinTree');\n\n    let { data: [token] } = await deep.select({ id: newLink.to_id });\n\n    const Route = deep.idLocal('@deep-foundation/core', 'Route');\n    const RouterStringUse = deep.idLocal('@deep-foundation/core', 'RouterStringUse');\n    const HandleRoute = deep.idLocal('@deep-foundation/core', 'HandleRoute');\n    const Contain = deep.idLocal('@deep-foundation/core', 'Contain');\n    const SelectorTree = deep.idLocal('@deep-foundation/core', 'SelectorTree');\n    const SelectorInclude = deep.idLocal('@deep-foundation/core', 'SelectorInclude');\n\n    const contain = (value, from_id) => ({\n        in: { data: {\n            type_id: Contain,\n            from_id: from_id,\n            string: { data: { value } },\n        } },\n    });\n\n    const { data: insertedLinks } = await deep.insert([\n        {\n            type_id: SelectorInclude,\n            from_id: tuaimRuleSubjectSelector,\n            to_id: newLink.from_id,\n            ...contain('ruleInclude'+newLink.from_id, tuaimRuleSubjectSelector),\n            out: { data: {\n                type_id: SelectorTree,\n                to_id: joinTree,\n                ...contain('ruleTree'+newLink.from_id, tuaimRuleSubjectSelector),\n            } },\n        },\n        {\n            type_id: SelectorInclude,\n            from_id: selector,\n            to_id: newLink.from_id,\n            ...contain('include'+newLink.from_id, selector),\n            out: { data: {\n                type_id: SelectorTree,\n                to_id: messagingTree,\n                ...contain('tree'+newLink.from_id, selector),\n            } },\n        },\n        {\n            type_id: Route,\n            ...contain('route'+newLink.from_id, router),\n            out: { data: [\n                {\n                    type_id: HandleRoute,\n                    to_id: onTelegramInHandler,\n                    ...contain('handle'+newLink.from_id, router),\n                },\n                {\n                    type_id: RouterStringUse,\n                    to_id: router,\n                    string: { data: { value: '/packages/deep-foundation/telegram-bot/'+newLink.from_id } },\n                    ...contain('use'+newLink.from_id, router),\n                },\n            ] },\n        },\n    ]);\n\n    const { data: insertedWebhook } = await axios.get(`https://api.telegram.org/bot${token?.value?.value}/setWebhook?url=${deeplinksUrl}/packages/deep-foundation/telegram-bot/${newLink.from_id}`);\n\n    return {\n        insertedLinks,\n        insertedWebhook,\n    };\n}",
          "link_id": 1477
        },
        "__typename": "links"
      },
      "__typename": "handlers"
    },
    {
      "dist_id": 1601,
      "src_id": 1601,
      "handler_id": 1602,
      "execution_provider_id": 33,
      "isolation_provider_id": 81,
      "dist": {
        "id": 1601,
        "type_id": 30,
        "from_id": 0,
        "to_id": 0,
        "value": {
          "id": 615,
          "value": "async ({ deep, data: { newLink } }) => {\n    const selector = await deep.id(deep.linkId, 'inSelector');\n    const executor = await deep.id(deep.linkId, 'executor');\n    const reader = await deep.id(deep.linkId, 'reader');\n    const HandleTelegramBotIn = await deep.id('@deep-foundation/telegram-bot', 'HandleTelegramBotIn');\n    const onTelegramBotInHandler = await deep.id(deep.linkId, 'onTelegramBotInHandler');\n    const HandleTelegramBotOut = await deep.id('@deep-foundation/telegram-bot', 'HandleTelegramBotOut');\n    const onTelegramBotOutHandler = await deep.id(deep.linkId, 'onTelegramBotOutHandler');\n    const messagingTree = await deep.id('@deep-foundation/messaging', 'messagingTree');\n    const systemMessage = await deep.id(deep.linkId, 'systemMessage');\n    const System = await deep.id('@deep-foundation/chatgpt-azure', 'System');\n\n    const Join = deep.idLocal('@deep-foundation/core', 'Join');\n    const Contain = deep.idLocal('@deep-foundation/core', 'Contain');\n    const SelectorTree = deep.idLocal('@deep-foundation/core', 'SelectorTree');\n    const SelectorInclude = deep.idLocal('@deep-foundation/core', 'SelectorInclude');\n\n    const contain = (value, from_id) => ({\n        in: { data: {\n            type_id: Contain,\n            from_id: from_id,\n            string: { data: { value } },\n        } },\n    });\n\n    await deep.insert([\n        {\n            type_id: SelectorInclude,\n            from_id: selector,\n            to_id: newLink.to_id,\n            ...contain('include'+newLink.to_id, selector),\n            out: { data: {\n                type_id: SelectorTree,\n                to_id: messagingTree,\n                ...contain('tree'+newLink.to_id, selector),\n            } },\n        },\n        {\n            type_id: HandleTelegramBotIn,\n            from_id: newLink.to_id,\n            to_id: onTelegramBotInHandler,\n            ...contain('handleTelegramBotIn'+newLink.to_id, selector),\n        },\n        {\n            type_id: HandleTelegramBotOut,\n            from_id: newLink.to_id,\n            to_id: onTelegramBotOutHandler,\n            ...contain('handleTelegramBotOut'+newLink.to_id, selector),\n        },\n        {\n            type_id: Join,\n            from_id: executor,\n            to_id: deep.linkId,\n            ...contain('executorJoin'+newLink.to_id, selector),\n        },\n        {\n            type_id: System,\n            from_id: systemMessage,\n            to_id: await deep.id('@deep-foundation/chatgpt-azure-templates'),\n            ...contain('system'+newLink.to_id, selector),\n        },\n    ]);\n}",
          "link_id": 1601
        },
        "__typename": "links"
      },
      "__typename": "handlers"
    },
    {
      "dist_id": 1604,
      "src_id": 1604,
      "handler_id": 1605,
      "execution_provider_id": 33,
      "isolation_provider_id": 81,
      "dist": {
        "id": 1604,
        "type_id": 30,
        "from_id": 0,
        "to_id": 0,
        "value": {
          "id": 616,
          "value": "async ({ deep, data: { oldLink } }) => {\n    const router = await deep.id('@deep-foundation/telegram-bot', 'router');\n    const onTelegramInHandler = await deep.id('@deep-foundation/telegram-bot', 'onTelegramInHandler');\n\n    const containTree = deep.idLocal('@deep-foundation/core', 'containTree');\n    const Contain = deep.idLocal('@deep-foundation/core', 'Contain');\n\n    await deep.delete({\n        up: {\n            tree_id: containTree,\n            parent: {\n                type_id: Contain,\n                string: { value: { _in: [\n                    'include'+oldLink.to_id,\n                    'tree'+oldLink.to_id,\n                    'handleTelegramBotIn'+oldLink.to_id,\n                    'handleTelegramBotOut'+oldLink.to_id,\n                    'system'+oldLink.to_id,\n                    'executorJoin'+oldLink.to_id,\n                ] } },\n            },\n        },\n    });\n}",
          "link_id": 1604
        },
        "__typename": "links"
      },
      "__typename": "handlers"
    },
    {
      "dist_id": 1607,
      "src_id": 1607,
      "handler_id": 1608,
      "execution_provider_id": 33,
      "isolation_provider_id": 81,
      "dist": {
        "id": 1607,
        "type_id": 30,
        "from_id": 0,
        "to_id": 0,
        "value": {
          "id": 617,
          "value": "async ({ deep, data: { newLink, triggeredByLinkId } }) => {\n    const Bot = await deep.id('@deep-foundation/telegram-bot', 'Bot');\n    const Token = await deep.id('@deep-foundation/telegram-bot', 'Token');\n    const Active = await deep.id('@deep-foundation/deepmemorybot', 'Active');\n    const Contain = await deep.id('@deep-foundation/core', 'Contain');\n    const Message = await deep.id('@deep-foundation/messaging', 'Message');\n    const messagingTree = await deep.id('@deep-foundation/messaging', 'messagingTree');\n    const Reply = await deep.id('@deep-foundation/messaging', 'Reply');\n    const containTree = deep.idLocal('@deep-foundation/core', 'containTree');\n    var bConversation = await deep.id('@deep-foundation/telegram-bot', 'Conversation');\n    var gptConversation = await deep.id('@deep-foundation/chatgpt-azure', 'Conversation');\n\n    const reader = await deep.id('@deep-foundation/deepmemorybot', 'reader');\n    const executor = await deep.id('@deep-foundation/deepmemorybot', 'executor');\n\n    const botIdByContain = (await deep.select({\n        type_id: Bot,\n        down: {\n            tree_id: containTree,\n            link_id: triggeredByLinkId\n        },\n    }))?.data?.[0]?.id;\n    // found gpt convesations before\n    var { data: [bconv] } = await deep.select({ type_id: bConversation, down: { tree_id: messagingTree, link_id: newLink.id } });\n    const gptconv = bconv ? (await deep.select({\n        type_id: gptConversation,\n        down: {\n            tree_id: messagingTree,\n            link: {\n                up: {\n                    tree_id: messagingTree,\n                    parent_id: bconv.id,\n                },\n            },\n        },\n    }))?.data?.[0] : undefined;\n    // const conversationId = (await deep.select({\n    //     type_id: Conversation,\n    //     down: {\n    //         tree_id: messagingTree,\n    //         link_id: newLink.id,\n    //     },\n    // }))?.data?.[0]?.id;\n    if (!!botIdByContain || triggeredByLinkId == reader || triggeredByLinkId == executor) {\n        const botId = botIdByContain || (await deep.select({\n            type_id: Bot,\n            down: {\n                tree_id: messagingTree,\n                link_id: newLink.id,\n            },\n        }))?.data?.[0]?.id;\n        if (!botId) return { error: '!botId', botId, triggeredByLinkId, botIdByContain, executor, reader }\n        const { data: [active] } = await deep.select({\n            type_id: Active,\n            to_id: botId,\n        });\n        if (!active) return { error: '!active', botId, triggeredByLinkId }\n        const { data: [{ id }] } = await deep.insert({\n            type_id: await deep.id('@deep-foundation/chatgpt-azure-templates', 'Apply'),\n            from_id: await deep.id('@deep-foundation/deepmemorybot', 'template'),\n            to_id: newLink.from_id,\n            ...(gptconv ? {\n                out: { data: {\n                    type_id: await deep.id('@deep-foundation/chatgpt-azure-templates', 'Continue'),\n                    to_id: gptconv.id,\n                    in: { data: {\n                        type_id: Contain,\n                        from_id: active.id\n                    } },\n                } }\n            } : {}),\n            in: { data: {\n                type_id: Contain,\n                from_id: active.id\n            } },\n        });\n        const { data: [apply] } = await deep.select(id);\n        \n        const response = await new Promise(async (res, rej) => {\n            let counter = 0;\n            const interval = setInterval(async () => {\n                const { data: [response] } = await deep.Traveler([apply])\n                    .out({ type_id: await deep.id('@deep-foundation/chatgpt-azure-templates', 'Result') })\n                    .to().in({ type_id: await deep.id('@deep-foundation/chatgpt-azure', 'Reply') }).from()\n                    .select();\n                if (response) res(response);\n                else {\n                    if (counter > 500) {\n                        clearInterval(interval);\n                        rej(new Error(`timeout ${counter} times`));\n                    } else {\n                        counter++;\n                    }\n                }\n            }, 1000);\n        });\n\n        if (!response) return { error: '!response' };\n\n        await deep.insert({\n            type_id: Reply,\n            from_id: response?.id,\n            to_id: newLink.from_id,\n            in: { data: {\n                type_id: Contain,\n                from_id: active.id\n            } },\n        });\n        return { botId, triggeredByLinkId };\n    } else {\n        return { botId: botIdByContain, triggeredByLinkId };\n    }\n}",
          "link_id": 1607
        },
        "__typename": "links"
      },
      "__typename": "handlers"
    },
    {
      "dist_id": 1609,
      "src_id": 1609,
      "handler_id": 1610,
      "execution_provider_id": 33,
      "isolation_provider_id": 81,
      "dist": {
        "id": 1609,
        "type_id": 30,
        "from_id": 0,
        "to_id": 0,
        "value": {
          "id": 618,
          "value": "async ({ deep, data: {\n    state,\n    req, res,\n    botId,\n    userId,\n    conversationId,\n    handlerId,\n    udeep,\n}, require }) => {\n    const Active = await deep.id('@deep-foundation/deepmemorybot', 'Active');\n    const Contain = await deep.id('@deep-foundation/core', 'Contain');\n    const Message = await deep.id('@deep-foundation/messaging', 'Message');\n    const Reply = await deep.id('@deep-foundation/messaging', 'Reply');\n\n    const reader = await deep.id('@deep-foundation/deepmemorybot', 'reader');\n    const executor = await deep.id('@deep-foundation/deepmemorybot', 'executor');\n\n    const { serializeError } = await deep.import('serialize-error');\n\n    const edeep = new deep.DeepClient({\n        deep, ...(await deep.jwt({ linkId: executor }))\n    });\n\n    if (req?.body?.callback_query?.data) {\n        const data = JSON.parse(req?.body?.callback_query?.data);\n        if (data.messageId) {\n            state.defaultHandling = false;\n            const { data: [active] } = await edeep.select({\n                type_id: Active,\n                to_id: botId,\n            });\n            if (!active) return { error: '!active' }\n            let result;\n            try {\n                result = await edeep.eval({\n                    linkId: data.messageId,\n                    handlerId: data.handlerId,\n                });\n                if (result.error) result.error = serializeError(result.error);\n            } catch(error) {\n                result = { error: serializeError(error) };\n            }\n            const { data: [reply] } = await edeep.insert({\n                type_id: Reply,\n                from: { data: {\n                    type_id: Message,\n                    string: { data: { value: `${JSON.stringify(result, null, 2)}` } },\n                    in: { data: {\n                        type_id: Contain,\n                        from_id: executor,\n                    } },\n                } },\n                to_id: data.messageId,\n                in: { data: {\n                    type_id: Contain,\n                    from_id: executor,\n                } },\n            });\n            if (reply) await deep.await(reply.id);\n            res.send(JSON.stringify({\n                userId: executor,\n                replyId: reply.id,\n                result,\n            }));\n        }\n    }\n}",
          "link_id": 1609
        },
        "__typename": "links"
      },
      "__typename": "handlers"
    },
    {
      "dist_id": 1611,
      "src_id": 1611,
      "handler_id": 1612,
      "execution_provider_id": 33,
      "isolation_provider_id": 81,
      "dist": {
        "id": 1611,
        "type_id": 30,
        "from_id": 0,
        "to_id": 0,
        "value": {
          "id": 619,
          "value": "async ({ deep, data: {\n    state,\n    bot,\n    botId,\n    userId,\n    conversationId,\n    handlerId,\n    reply,\n    message,\n} }) => {\n    if ((message?.value?.value || '').includes('DEEP_MEMORY_EXECUTE')) {\n        const codeMatch = message?.value?.value.matchAll(/```javascript([\\s\\S]*?)```/g);\n        const codes = [...codeMatch].map(c => c[1].trim());\n        for (let c in codes) {\n            const { data: [{ id: newHandlerId }] } = await deep.insert({\n                type_id: deep.idLocal('@deep-foundation/core', 'Handler'),\n                to: { data: {\n                    type_id: deep.idLocal('@deep-foundation/core', 'SyncTextFile'),\n                    string: { data: { value: `async ({ deep, sql }) => { ${codes[c]} }` } },\n                    in: { data: {\n                        type_id: deep.idLocal('@deep-foundation/core', 'Contain'),\n                        from_id: await deep.id('@deep-foundation/deepmemorybot', 'executor'),\n                    } },\n                } },\n                from_id: 83,\n                in: { data: {\n                    type_id: deep.idLocal('@deep-foundation/core', 'Contain'),\n                    from_id: await deep.id('@deep-foundation/deepmemorybot', 'executor'),\n                } },\n            });\n            bot.telegram.sendMessage(\n                await deep.name(conversationId),\n                codes[c],\n                { reply_markup: { inline_keyboard: [[\n                    {\n                        text: 'Execute',\n                        callback_data: JSON.stringify({\n                            messageId: message.id,\n                            handlerId: newHandlerId,\n                        }),\n                    },\n                ]] } },\n            );\n        }\n    }\n}",
          "link_id": 1611
        },
        "__typename": "links"
      },
      "__typename": "handlers"
    },
    {
      "dist_id": 1733,
      "src_id": 1741,
      "handler_id": 1735,
      "execution_provider_id": 33,
      "isolation_provider_id": 81,
      "dist": {
        "id": 1733,
        "type_id": 30,
        "from_id": 0,
        "to_id": 0,
        "value": {
          "id": 663,
          "value": "async (options) => {\n    const { deep, data: { newLink: parseItLink }, } = options;\n    const { default: ts } = await import(\"typescript\");\n    const { default: util } = await import(\"util\");\n    try {\n        const result = await main();\n        return {\n            result: util.inspect(result),\n        };\n    }\n    catch (error) {\n        throw {\n            error: util.inspect(error),\n        };\n    }\n    async function main() {\n        const { data: [rootLink], } = await deep.select({\n            id: parseItLink.from_id,\n        });\n        if (!rootLink) {\n            throw new Error(`parseIt.to does not exist: ##${parseItLink.from_id}`);\n        }\n        let obj;\n        if (typeof rootLink.value?.value === 'object') {\n            obj = rootLink.value?.value;\n        }\n        else if (typeof rootLink.value?.value === 'string') {\n            try {\n                obj = JSON.parse(rootLink.value?.value);\n            }\n            catch (error) {\n                throw new Error(`##${rootLink.id} must be valid JSON if it is a string`);\n            }\n        }\n        else {\n            throw new Error(`##${rootLink.id} must have value`);\n        }\n        if (!obj) {\n            throw new Error(`##${rootLink.id} must have value`);\n        }\n        const clientHandlerResult = await callClientHandler({\n            deep,\n            linkId: await deep.id(deep.linkId, \"clientHandler\"),\n            args: [\n                {\n                    deep: deep,\n                    obj: obj,\n                    rootLinkId: rootLink.id,\n                    resultLinkId: parseItLink.to_id,\n                },\n            ],\n        });\n        return clientHandlerResult;\n    }\n    async function callClientHandler(options) {\n        const { linkId, deep, args } = options;\n        const code = await deep\n            .select({\n            in: {\n                id: linkId,\n            },\n        })\n            .then((result) => {\n            const link = result.data[0];\n            if (!link)\n                throw new Error(`Unable to find SyncTextFile for ##${linkId}`);\n            const code = link.value?.value;\n            if (!code)\n                throw new Error(`##${link.id} must have value`);\n            return code;\n        });\n        const functionExpressionString = ts\n            .transpileModule(code, {\n            compilerOptions: {\n                module: ts.ModuleKind.ESNext,\n                sourceMap: true,\n                target: ts.ScriptTarget.ESNext,\n            },\n        })\n            .outputText.replace(\"export {}\", \"\");\n        const fn = eval(functionExpressionString);\n        const result = await fn(...args);\n        return result;\n    }\n};\n//# sourceMappingURL=module.js.map",
          "link_id": 1733
        },
        "__typename": "links"
      },
      "__typename": "handlers"
    },
    {
      "dist_id": 1734,
      "src_id": 1739,
      "handler_id": 1736,
      "execution_provider_id": 33,
      "isolation_provider_id": 81,
      "dist": {
        "id": 1734,
        "type_id": 30,
        "from_id": 0,
        "to_id": 0,
        "value": {
          "id": 664,
          "value": "async (options) => {\n    const { deep, data: { newLink: rootLink }, } = options;\n    const { default: ts } = await import(\"typescript\");\n    const { default: util } = await import(\"util\");\n    try {\n        const result = await main();\n        return {\n            result: util.inspect(result),\n        };\n    }\n    catch (error) {\n        throw {\n            error: util.inspect(error),\n        };\n    }\n    async function main() {\n        let obj;\n        if (typeof rootLink.value?.value === \"object\") {\n            obj = rootLink.value?.value;\n        }\n        else if (typeof rootLink.value?.value === \"string\") {\n            try {\n                obj = JSON.parse(rootLink.value?.value);\n            }\n            catch (error) {\n                throw new Error(`##${rootLink.id} must be valid JSON if it is a string`);\n            }\n        }\n        else {\n            throw new Error(`##${rootLink.id} must have value`);\n        }\n        if (!obj) {\n            throw new Error(`##${rootLink.id} must have value`);\n        }\n        const clientHandlerResult = await callClientHandler({\n            deep,\n            linkId: await deep.id(deep.linkId, \"clientHandler\"),\n            args: [\n                {\n                    deep: deep,\n                    obj: obj,\n                    rootLinkId: rootLink.id,\n                    resultLinkId: rootLink.to_id,\n                },\n            ],\n        });\n        return clientHandlerResult;\n    }\n    async function callClientHandler(options) {\n        const { linkId, deep, args } = options;\n        const code = await deep\n            .select({\n            in: {\n                id: linkId,\n            },\n        })\n            .then((result) => {\n            const link = result.data[0];\n            if (!link)\n                throw new Error(`Unable to find SyncTextFile for ##${linkId}`);\n            const code = link.value?.value;\n            if (!code)\n                throw new Error(`##${link.id} must have value`);\n            return code;\n        });\n        const functionExpressionString = ts\n            .transpileModule(code, {\n            compilerOptions: {\n                module: ts.ModuleKind.ESNext,\n                sourceMap: true,\n                target: ts.ScriptTarget.ESNext,\n            },\n        })\n            .outputText.replace(\"export {}\", \"\");\n        const fn = eval(functionExpressionString);\n        const result = await fn(...args);\n        return result;\n    }\n};\n//# sourceMappingURL=module.js.map",
          "link_id": 1734
        },
        "__typename": "links"
      },
      "__typename": "handlers"
    },
    {
      "dist_id": 1805,
      "src_id": 1737,
      "handler_id": 1738,
      "execution_provider_id": 33,
      "isolation_provider_id": 144,
      "dist": {
        "id": 1805,
        "type_id": 30,
        "from_id": 0,
        "to_id": 0,
        "value": {
          "id": 667,
          "value": "async (options) => {\n    const { deep, rootLinkId, obj, customMethods, resultLinkId } = options;\n    const { createSerialOperation } = await import(\"@deep-foundation/deeplinks/imports/gql/index.js\");\n    const { pascalCase } = await import(\"case-anything\");\n    const { default: debug } = await import(\"debug\");\n    const { default: util } = await import(\"util\");\n    const logs = [];\n    const packageLog = debug(\"@deep-foundation/object-to-links-async-converter\");\n    packageLog({ options });\n    class ObjectToLinksConverter {\n        reservedLinkIds;\n        rootLink;\n        obj;\n        resultLink;\n        deep = deep;\n        static requiredPackageNames = {\n            core: \"@deep-foundation/core\",\n            boolean: \"@deep-foundation/boolean\",\n        };\n        static requiredPackagesInMinilinks = {\n            ...this.requiredPackageNames,\n            objectToLinksConverter: \"@deep-foundation/object-to-links-async-converter\",\n        };\n        constructor(options) {\n            this.rootLink = options.rootLink;\n            this.reservedLinkIds = options.reservedLinkIds;\n            this.obj = options.obj;\n            this.resultLink = options.resultLink;\n        }\n        static getLogger(namespace) {\n            const getLoggerLogger = debug(this.getLogger.name);\n            getLoggerLogger({ options });\n            const resultLogger = packageLog.extend(`${ObjectToLinksConverter.name}${namespace ? `:${namespace}` : \"\"}`);\n            resultLogger.enabled = true;\n            resultLogger.log = (...content) => {\n                logs.push(...content);\n            };\n            return resultLogger;\n        }\n        static async applyContainTreeLinksDownToParentToMinilinks(options) {\n            const log = ObjectToLinksConverter.getLogger(ObjectToLinksConverter.applyContainTreeLinksDownToParentToMinilinks\n                .name);\n            const links = (await this.getContainTreeLinksDownToParent({\n                linkExp: options.linkExp,\n            }));\n            log({ links });\n            const minilinksApplyResult = options.minilinks.apply(links.data);\n            log({ minilinksApplyResult });\n            return minilinksApplyResult;\n        }\n        static async getContainTreeLinksDownToParent(options) {\n            const log = ObjectToLinksConverter.getLogger(ObjectToLinksConverter.getContainTreeLinksDownToParent.name);\n            const { linkExp } = options;\n            const query = {\n                up: {\n                    tree_id: await deep.id(\"@deep-foundation/core\", \"containTree\"),\n                    parent: linkExp,\n                },\n            };\n            log({ query });\n            const result = await deep.select(query);\n            log({ result });\n            return result;\n        }\n        static async init(options) {\n            const log = ObjectToLinksConverter.getLogger(ObjectToLinksConverter.init.name);\n            const { obj } = options;\n            const containTreeLinksDownToCoreAndThisPackageLinkApplyMinilinksResult = await this.applyContainTreeLinksDownToParentToMinilinks({\n                linkExp: {\n                    _or: Object.values(ObjectToLinksConverter.requiredPackagesInMinilinks).map((packageName) => ({\n                        id: {\n                            _id: [packageName],\n                        },\n                    })),\n                },\n                minilinks: deep.minilinks,\n            });\n            log({ containTreeLinksDownToCoreAndThisPackageLinkApplyMinilinksResult });\n            const rootLink = options.rootLinkId\n                ? await deep.select(options.rootLinkId).then((result) => result.data[0])\n                : await deep\n                    .insert({\n                    type_id: await deep.id(deep.linkId, \"Root\"),\n                }, {\n                    returning: deep.linksSelectReturning,\n                })\n                    .then((result) => result.data[0]);\n            log({ rootLink });\n            const containTreeLinksDownToRootLinkApplyMinilinksResult = await this.applyContainTreeLinksDownToParentToMinilinks({\n                linkExp: {\n                    id: rootLink.id,\n                },\n                minilinks: deep.minilinks,\n            });\n            log({ containTreeLinksDownToRootLinkApplyMinilinksResult });\n            const linkIdsToReserveCount = this.getLinksToReserveCount({ value: obj });\n            log({ linkIdsToReserveCount });\n            const reservedLinkIds = await deep.reserve(linkIdsToReserveCount);\n            log({ reservedLinkIds });\n            const resultLink = options.resultLinkId\n                ? await deep\n                    .select(options.resultLinkId)\n                    .then((result) => result.data[0])\n                : rootLink;\n            if (options.resultLinkId && !resultLink) {\n                throw new Error(`Result link with id ${options.resultLinkId} not found`);\n            }\n            const converter = new this({\n                reservedLinkIds,\n                rootLink,\n                obj,\n                resultLink,\n            });\n            log({ converter });\n            return converter;\n        }\n        async convert() {\n            const log = ObjectToLinksConverter.getLogger(\"convert\");\n            const operations = await this.makeUpdateOperationsForObjectValue({\n                link: this.resultLink,\n                value: this.obj,\n            });\n            log({ operations });\n            const hasResultTypeLinkId = await deep.id(deep.linkId, \"HasResult\");\n            const { data: [hasResultLink], } = await deep.select({\n                type_id: hasResultTypeLinkId,\n                from_id: this.rootLink.id,\n            });\n            if (hasResultLink) {\n                operations.push(createSerialOperation({\n                    type: \"update\",\n                    table: \"links\",\n                    exp: {\n                        type_id: hasResultTypeLinkId,\n                        from_id: this.rootLink.id,\n                    },\n                    value: {\n                        to_id: this.resultLink.id,\n                    },\n                }));\n            }\n            else {\n                operations.push(createSerialOperation({\n                    type: \"insert\",\n                    table: \"links\",\n                    objects: {\n                        type_id: hasResultTypeLinkId,\n                        from_id: this.rootLink.id,\n                        to_id: this.resultLink.id,\n                    },\n                }));\n            }\n            const serialResult = await deep.serial({\n                operations,\n            });\n            log({ serialResult });\n            return {\n                serialResult,\n                rootLinkId: this.rootLink.id,\n                resultLinkId: this.resultLink.id,\n            };\n        }\n        static getLinksToReserveCount(options) {\n            const { value } = options;\n            const log = ObjectToLinksConverter.getLogger(ObjectToLinksConverter.getLinksToReserveCount.name);\n            let count = 0;\n            const typeOfValue = typeof value;\n            log({ typeOfValue });\n            const reservedLinksCountForOneLink = 1 +\n                1;\n            if (typeOfValue === \"string\") {\n                count = reservedLinksCountForOneLink;\n            }\n            else if (typeOfValue === \"number\") {\n                count = reservedLinksCountForOneLink;\n            }\n            else if (typeOfValue === \"boolean\") {\n                count = reservedLinksCountForOneLink;\n            }\n            else if (Array.isArray(value)) {\n                const array = value;\n                for (const arrayValue of array) {\n                    if (!arrayValue)\n                        return count;\n                    count += this.getLinksToReserveCount({ value: arrayValue });\n                }\n            }\n            else if (typeOfValue === \"object\") {\n                count += reservedLinksCountForOneLink;\n                for (const [propertyKey, propertyValue] of Object.entries(value)) {\n                    if (!value)\n                        return count;\n                    count += this.getLinksToReserveCount({ value: propertyValue });\n                }\n            }\n            log({ count });\n            return count;\n        }\n        async makeUpdateOperationsForBooleanValue(options) {\n            const log = ObjectToLinksConverter.getLogger(this.makeUpdateOperationsForBooleanValue.name);\n            log({ options });\n            const { link, value } = options;\n            const operations = [];\n            operations.push(createSerialOperation({\n                type: \"update\",\n                table: \"links\",\n                exp: {\n                    id: link.id,\n                },\n                value: {\n                    to_id: await deep.id(ObjectToLinksConverter.requiredPackageNames.boolean, value.toString()),\n                },\n            }));\n            log({ operations });\n            return operations;\n        }\n        async makeUpdateOperationsForStringValue(options) {\n            const log = ObjectToLinksConverter.getLogger(this.makeUpdateOperationsForStringValue.name);\n            log({ options });\n            const { link, value } = options;\n            const operations = [];\n            operations.push(createSerialOperation({\n                type: \"update\",\n                table: `strings`,\n                exp: {\n                    link_id: link.id,\n                },\n                value: {\n                    value: value,\n                },\n            }));\n            log({ operations });\n            return operations;\n        }\n        async makeUpdateOperationsForNumberValue(options) {\n            const log = ObjectToLinksConverter.getLogger(this.makeUpdateOperationsForNumberValue.name);\n            log({ options });\n            const { link, value } = options;\n            const operations = [];\n            operations.push(createSerialOperation({\n                type: \"update\",\n                table: `numbers`,\n                exp: {\n                    link_id: link.id,\n                },\n                value: {\n                    value: value,\n                },\n            }));\n            log({ operations });\n            return operations;\n        }\n        async makeUpdateOperationsForArrayValue(options) {\n            const log = ObjectToLinksConverter.getLogger(this.makeUpdateOperationsForAnyValue.name);\n            const { link, value } = options;\n            const operations = [];\n            await deep.delete({\n                up: {\n                    tree_id: await deep.id(ObjectToLinksConverter.requiredPackagesInMinilinks.core, \"ContainTree\"),\n                    parent_id: link.id,\n                },\n            });\n            for (let i = 0; i < value.length; i++) {\n                const element = value[i];\n                operations.push(...(await this.makeInsertOperationsForAnyValue({\n                    value: element,\n                    linkId: this.reservedLinkIds.pop(),\n                    name: i.toString(0),\n                    parentLinkId: link.id,\n                })));\n            }\n            return operations;\n        }\n        async makeUpdateOperationsForAnyValue(options) {\n            const log = ObjectToLinksConverter.getLogger(this.makeUpdateOperationsForAnyValue.name);\n            const { link, value } = options;\n            const operations = [];\n            if (typeof value === \"boolean\") {\n                operations.push(...(await this.makeUpdateOperationsForBooleanValue({\n                    ...options,\n                    value,\n                })));\n            }\n            else if (typeof value === \"string\") {\n                operations.push(...(await this.makeUpdateOperationsForStringValue({\n                    ...options,\n                    value,\n                })));\n            }\n            else if (typeof value === \"number\") {\n                operations.push(...(await this.makeUpdateOperationsForNumberValue({\n                    ...options,\n                    value,\n                })));\n            }\n            else if (Array.isArray(value)) {\n                operations.push(...(await this.makeUpdateOperationsForArrayValue({\n                    ...options,\n                    value,\n                })));\n            }\n            else if (typeof value === \"object\") {\n                operations.push(...(await this.makeUpdateOperationsForObjectValue({\n                    ...options,\n                    value,\n                })));\n            }\n            else {\n                throw new Error(`Type of value ${typeof value} is not supported`);\n            }\n            return operations;\n        }\n        async makeUpdateOperationsForObjectValue(options) {\n            const log = ObjectToLinksConverter.getLogger(this.makeUpdateOperationsForObjectValue.name);\n            const { link, value } = options;\n            log({ options });\n            const operations = [];\n            for (const [propertyKey, propertyValue] of Object.entries(value)) {\n                log({ propertyKey, propertyValue });\n                const [propertyLink] = deep.minilinks.query({\n                    id: {\n                        _id: [link.id, propertyKey],\n                    },\n                });\n                log({ propertyLink });\n                if (propertyLink) {\n                    let propertyUpdateOperations = [];\n                    propertyUpdateOperations = await this.makeUpdateOperationsForAnyValue({\n                        link: propertyLink,\n                        value: propertyValue,\n                    });\n                    log({ propertyUpdateOperations });\n                    operations.push(...propertyUpdateOperations);\n                }\n                else {\n                    if (typeof propertyValue !== \"string\" &&\n                        typeof propertyValue !== \"number\" &&\n                        typeof propertyValue !== \"boolean\" &&\n                        !Array.isArray(propertyValue) &&\n                        typeof propertyValue !== \"object\") {\n                        log(`Skipping property ${propertyKey} because its type ${typeof value} is not supported`);\n                        continue;\n                    }\n                    log(\"TEMPORARY! REMOVE THIS!\");\n                    log(`minilinks.links`, deep.minilinks.links);\n                    log(`package link`, deep.minilinks.query({\n                        id: deep.linkId,\n                    }));\n                    log(`contain to string`, deep.minilinks.query({\n                        type_id: await deep.id(\"@deep-foundation/core\", \"Contain\"),\n                        string: {\n                            value: \"String\",\n                        },\n                        from_id: deep.linkId,\n                    }));\n                    log(`contain to string`, deep.minilinks.query({\n                        id: {\n                            _id: [deep.linkId, \"String\"],\n                        },\n                    }));\n                    const propertyLinkId = this.reservedLinkIds.pop();\n                    log({ propertyLinkId });\n                    if (!propertyLinkId) {\n                        throw new Error(`Not enough reserved link ids`);\n                    }\n                    const propertyInsertOperations = await this.makeInsertOperationsForAnyValue({\n                        linkId: propertyLinkId,\n                        parentLinkId: link.id,\n                        value: propertyValue,\n                        name: propertyKey,\n                    });\n                    log({ propertyInsertOperations });\n                    operations.push(...propertyInsertOperations);\n                }\n                log({ operations });\n            }\n            return operations;\n        }\n        async makeInsertOperationsForBooleanValue(options) {\n            const operations = [];\n            const { value, parentLinkId, linkId, name } = options;\n            const log = ObjectToLinksConverter.getLogger(this.makeInsertOperationsForBooleanValue.name);\n            const linkInsertSerialOperation = createSerialOperation({\n                type: \"insert\",\n                table: \"links\",\n                objects: {\n                    id: linkId,\n                    type_id: await deep.id(deep.linkId, pascalCase(typeof value)),\n                    from_id: parentLinkId,\n                    to_id: await deep.id(ObjectToLinksConverter.requiredPackageNames.boolean, value.toString()),\n                },\n            });\n            log({ linkInsertSerialOperation });\n            operations.push(linkInsertSerialOperation);\n            const containInsertSerialOperation = createSerialOperation({\n                type: \"insert\",\n                table: \"links\",\n                objects: {\n                    type_id: await deep.id(\"@deep-foundation/core\", \"Contain\"),\n                    from_id: parentLinkId,\n                    to_id: linkId,\n                    string: {\n                        data: {\n                            value: name,\n                        },\n                    },\n                },\n            });\n            log({ containInsertSerialOperation });\n            operations.push(containInsertSerialOperation);\n            log({ operations });\n            return operations;\n        }\n        async makeInsertOperationsForStringValue(options) {\n            const operations = [];\n            const { value, parentLinkId, linkId, name } = options;\n            const log = ObjectToLinksConverter.getLogger(\"makeInsertOperationsForStringValue\");\n            const linkInsertSerialOperation = createSerialOperation({\n                type: \"insert\",\n                table: \"links\",\n                objects: {\n                    id: linkId,\n                    from_id: parentLinkId,\n                    to_id: parentLinkId,\n                    type_id: await deep.id(deep.linkId, pascalCase(typeof value)),\n                },\n            });\n            log({ linkInsertSerialOperation });\n            operations.push(linkInsertSerialOperation);\n            const stringValueInsertSerialOperation = createSerialOperation({\n                type: \"insert\",\n                table: `${typeof value}s`,\n                objects: {\n                    link_id: linkId,\n                    value: value,\n                },\n            });\n            log({ stringValueInsertSerialOperation });\n            operations.push(stringValueInsertSerialOperation);\n            const containInsertSerialOperation = createSerialOperation({\n                type: \"insert\",\n                table: \"links\",\n                objects: {\n                    type_id: await deep.id(\"@deep-foundation/core\", \"Contain\"),\n                    from_id: parentLinkId,\n                    to_id: linkId,\n                    string: {\n                        data: {\n                            value: name,\n                        },\n                    },\n                },\n            });\n            log({ containInsertSerialOperation });\n            operations.push(containInsertSerialOperation);\n            log({ operations });\n            return operations;\n        }\n        async makeInsertOperationsForNumberValue(options) {\n            const operations = [];\n            const { value, parentLinkId, linkId, name } = options;\n            const log = ObjectToLinksConverter.getLogger(\"makeInsertOperationsForStringValue\");\n            const linkInsertSerialOperation = createSerialOperation({\n                type: \"insert\",\n                table: \"links\",\n                objects: {\n                    id: linkId,\n                    from_id: parentLinkId,\n                    to_id: parentLinkId,\n                    type_id: await deep.id(deep.linkId, pascalCase(typeof value)),\n                },\n            });\n            log({ linkInsertSerialOperation });\n            operations.push(linkInsertSerialOperation);\n            const stringValueInsertSerialOperation = createSerialOperation({\n                type: \"insert\",\n                table: `${typeof value}s`,\n                objects: {\n                    link_id: linkId,\n                    value: value,\n                },\n            });\n            log({ stringValueInsertSerialOperation });\n            operations.push(stringValueInsertSerialOperation);\n            const containInsertSerialOperation = createSerialOperation({\n                type: \"insert\",\n                table: \"links\",\n                objects: {\n                    type_id: await deep.id(\"@deep-foundation/core\", \"Contain\"),\n                    from_id: parentLinkId,\n                    to_id: linkId,\n                    string: {\n                        data: {\n                            value: name,\n                        },\n                    },\n                },\n            });\n            log({ containInsertSerialOperation });\n            operations.push(containInsertSerialOperation);\n            log({ operations });\n            return operations;\n        }\n        async makeInsertOperationsForArrayValue(options) {\n            const operations = [];\n            const { value, linkId, name, parentLinkId } = options;\n            const log = ObjectToLinksConverter.getLogger(\"makeInsertOperationsForStringValue\");\n            const linkInsertSerialOperation = createSerialOperation({\n                type: \"insert\",\n                table: \"links\",\n                objects: {\n                    id: linkId,\n                    type_id: await deep.id(deep.linkId, pascalCase(typeof value)),\n                    from_id: parentLinkId,\n                    to_id: parentLinkId,\n                },\n            });\n            log({ linkInsertSerialOperation });\n            operations.push(linkInsertSerialOperation);\n            const containInsertSerialOperation = createSerialOperation({\n                type: \"insert\",\n                table: \"links\",\n                objects: {\n                    type_id: await deep.id(\"@deep-foundation/core\", \"Contain\"),\n                    from_id: parentLinkId,\n                    to_id: linkId,\n                    string: {\n                        data: {\n                            value: name,\n                        },\n                    },\n                },\n            });\n            log({ containInsertSerialOperation });\n            operations.push(containInsertSerialOperation);\n            for (let i = 0; i < value.length; i++) {\n                const element = value[i];\n                operations.push(...(await this.makeInsertOperationsForAnyValue({\n                    value: element,\n                    parentLinkId: linkId,\n                    linkId: this.reservedLinkIds.pop(),\n                    name: i.toString(),\n                })));\n            }\n            return operations;\n        }\n        async makeInsertOperationsForPrimitiveValue(options) {\n            const operations = [];\n            const { value } = options;\n            if (typeof value === \"string\") {\n                operations.push(...(await this.makeInsertOperationsForStringValue({\n                    ...options,\n                    value,\n                })));\n            }\n            else if (typeof value === \"number\") {\n                operations.push(...(await this.makeInsertOperationsForNumberValue({\n                    ...options,\n                    value,\n                })));\n            }\n            else if (typeof value === \"boolean\") {\n                operations.push(...(await this.makeInsertOperationsForBooleanValue({\n                    ...options,\n                    value,\n                })));\n            }\n            return operations;\n        }\n        async makeInsertOperationsForObjectValue(options) {\n            const operations = [];\n            const { value, linkId, name, parentLinkId } = options;\n            const log = ObjectToLinksConverter.getLogger(this.makeInsertOperationsForObjectValue.name);\n            const linkInsertSerialOperation = createSerialOperation({\n                type: \"insert\",\n                table: \"links\",\n                objects: {\n                    id: linkId,\n                    type_id: await deep.id(deep.linkId, pascalCase(typeof value)),\n                    from_id: parentLinkId,\n                    to_id: parentLinkId,\n                },\n            });\n            log({ linkInsertSerialOperation });\n            operations.push(linkInsertSerialOperation);\n            const containInsertSerialOperation = createSerialOperation({\n                type: \"insert\",\n                table: \"links\",\n                objects: {\n                    type_id: await deep.id(\"@deep-foundation/core\", \"Contain\"),\n                    from_id: parentLinkId,\n                    to_id: linkId,\n                    string: {\n                        data: {\n                            value: name,\n                        },\n                    },\n                },\n            });\n            log({ containInsertSerialOperation });\n            operations.push(containInsertSerialOperation);\n            for (const [propertyKey, propertyValue] of Object.entries(value)) {\n                if (typeof propertyValue !== \"string\" &&\n                    typeof propertyValue !== \"number\" &&\n                    typeof propertyValue !== \"boolean\" &&\n                    !Array.isArray(propertyValue) &&\n                    typeof propertyValue !== \"object\") {\n                    log(`Skipping property ${propertyKey} because its type ${typeof value} is not supported`);\n                    continue;\n                }\n                const propertyLinkId = this.reservedLinkIds.pop();\n                log({ propertyLinkId });\n                if (!propertyLinkId) {\n                    throw new Error(`Not enough reserved link ids`);\n                }\n                const propertyInsertOperations = await this.makeInsertOperationsForAnyValue({\n                    linkId: propertyLinkId,\n                    parentLinkId: linkId,\n                    value: propertyValue,\n                    name: propertyKey,\n                });\n                operations.push(...propertyInsertOperations);\n            }\n            return operations;\n        }\n        async makeInsertOperationsForAnyValue(options) {\n            const operations = [];\n            const { value } = options;\n            const log = ObjectToLinksConverter.getLogger(this.makeInsertOperationsForAnyValue.name);\n            if (typeof value === \"string\" ||\n                typeof value === \"number\" ||\n                typeof value === \"boolean\") {\n                operations.push(...(await this.makeInsertOperationsForPrimitiveValue({\n                    ...options,\n                    value,\n                })));\n            }\n            else if (Array.isArray(value)) {\n                operations.push(...(await this.makeInsertOperationsForArrayValue({\n                    ...options,\n                    value,\n                })));\n            }\n            else if (typeof value === \"object\") {\n                operations.push(...(await this.makeInsertOperationsForObjectValue({\n                    ...options,\n                    value,\n                })));\n            }\n            else {\n                throw new Error(`Type of value ${typeof value} is not supported`);\n            }\n            log({ operations });\n            return operations;\n        }\n    }\n    function getObjectToLinksConverterProxy(options) {\n        const { target, customMethods } = options;\n        return new Proxy(target, {\n            get: function (obj, prop) {\n                if (customMethods && prop in customMethods) {\n                    return customMethods[prop];\n                }\n                return obj[prop];\n            },\n        });\n    }\n    try {\n        const result = await main();\n        return {\n            result,\n            logs: logs,\n        };\n    }\n    catch (error) {\n        throw {\n            error: util.inspect(error),\n            logs: logs,\n        };\n    }\n    async function main() {\n        const log = ObjectToLinksConverter.getLogger(main.name);\n        if (Object.keys(obj).length === 0) {\n            return;\n        }\n        const objectToLinksConverter = await ObjectToLinksConverter.init({\n            obj,\n            rootLinkId,\n            resultLinkId,\n        });\n        log({ objectToLinksConverter });\n        const proxiedObjectToLinksConverter = getObjectToLinksConverterProxy({\n            target: objectToLinksConverter,\n            customMethods,\n        });\n        log({ proxiedObjectToLinksConverter });\n        const convertResult = await proxiedObjectToLinksConverter.convert();\n        log({ convertResult });\n        return convertResult;\n    }\n};\nexport {};\n//# sourceMappingURL=data:application/json;base64,",
          "link_id": 1805
        },
        "__typename": "links"
      },
      "__typename": "handlers"
    },
    {
      "dist_id": 1890,
      "src_id": 1834,
      "handler_id": 1835,
      "execution_provider_id": 33,
      "isolation_provider_id": 81,
      "dist": {
        "id": 1890,
        "type_id": 30,
        "from_id": 0,
        "to_id": 0,
        "value": {
          "id": 704,
          "value": "async (req, res, next, { deep, require, gql }) => {\n    const { PassThrough, Readable } = require('stream');\n    const express = require('express');\n    const http = require('http');\n    const ApolloServer = require('apollo-server-express').ApolloServer;\n    const { ApolloServerPluginDrainHttpServer, ApolloServerPluginLandingPageGraphQLPlayground } = require('apollo-server-core');\n    const axios = require('axios');\n    const ffmpeg = require('fluent-ffmpeg');\n    const FormData = require('form-data');\n    function base64ToStream(base64String) {\n        const base64Data = base64String.replace(/^data:[^;]+;base64,/, '');\n        const binaryData = Buffer.from(base64Data, 'base64');\n        const stream = new Readable();\n        stream.push(binaryData);\n        stream.push(null);\n        return stream;\n    }\n    const typeDefs = `\n        input Voice {\n            id: Int!\n            record: String!\n            duration: Float!\n            mimeType: String!\n        }\n        type Query { deepmemo_upload(voice: Voice!): String }\n    `;\n    const resolvers = {\n        Query: { deepmemo_upload: async (parent, { voice: { id, record, duration, mimeType } }, contextValue, info) => {\n                let inputFormat;\n                if (mimeType.includes('audio/webm')) {\n                    inputFormat = 'webm';\n                }\n                else if (mimeType.includes('audio/aac')) {\n                    inputFormat = 'aac';\n                }\n                else if (mimeType.includes('audio/mp4')) {\n                    inputFormat = 'mp4';\n                }\n                else\n                    return 'not supported type';\n                return new Promise((res, rej) => {\n                    const stream = new PassThrough();\n                    let chunkData = [];\n                    stream.on('data', chunk => {\n                        chunkData.push(chunk);\n                    });\n                    ffmpeg()\n                        .input(base64ToStream(record))\n                        .inputFormat(inputFormat)\n                        .outputFormat('mp3')\n                        .on('end', () => {\n                        stream.end();\n                        const byteArray = Buffer.concat(chunkData);\n                        const form = new FormData();\n                        form.append('file', byteArray, { type: 'audio/mp3', filename: `${id}.mp3` });\n                        axios.post(`http://${deep.client.path.slice(0, -4)}/file`, form, {\n                            headers: {\n                                linkId: id,\n                                Authorization: contextValue?.headers?.authorization,\n                                ...form.getHeaders(),\n                            },\n                        })\n                            .then((r) => {\n                            res('done');\n                        })\n                            .catch((e) => {\n                            console.error(e);\n                            rej('error');\n                        });\n                    })\n                        .pipe(stream, { end: true });\n                });\n            } },\n    };\n    const context = ({ req }) => { return { headers: req.headers }; };\n    const generateApolloServer = () => {\n        return new ApolloServer({\n            introspection: true,\n            typeDefs,\n            resolvers,\n            context,\n            plugins: [\n                ApolloServerPluginLandingPageGraphQLPlayground(),\n            ],\n        });\n    };\n    const router = express.Router();\n    const apolloServer = generateApolloServer();\n    await apolloServer.start();\n    apolloServer.applyMiddleware({ app: router, path: '/' });\n    router.handle(req, res);\n};\n//# sourceMappingURL=data:application/json;base64,",
          "link_id": 1890
        },
        "__typename": "links"
      },
      "__typename": "handlers"
    },
    {
      "dist_id": 1943,
      "src_id": 1911,
      "handler_id": 1912,
      "execution_provider_id": 33,
      "isolation_provider_id": 81,
      "dist": {
        "id": 1943,
        "type_id": 30,
        "from_id": 0,
        "to_id": 0,
        "value": {
          "id": 727,
          "value": "async ({ deep, data: { newLink, oldLink } }) => {\n    await deep.unsafe.hasura.query({\n        type: 'untrack_table',\n        args: {\n            table: {\n                schema: 'public',\n                name: `semantic`,\n            },\n            cascade: true,\n        },\n    });\n    await deep.unsafe.hasura.sql(`\ndrop view semantic;\ndrop view semantic_types;\n    `);\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsibW9kdWxlLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxLQUFLLEVBQUUsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLEVBQUUsT0FBTyxFQUFFLE9BQU8sRUFBRSxFQUFFLEVBQUUsRUFBRTtJQUMzQyxNQUFNLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQztRQUMzQixJQUFJLEVBQUUsZUFBZTtRQUNyQixJQUFJLEVBQUU7WUFDRixLQUFLLEVBQUU7Z0JBQ0gsTUFBTSxFQUFFLFFBQVE7Z0JBQ2hCLElBQUksRUFBRSxVQUFVO2FBQ25CO1lBQ0QsT0FBTyxFQUFFLElBQUk7U0FDaEI7S0FDSixDQUFDLENBQUM7SUFDSCxNQUFNLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQzs7O0tBRzVCLENBQUMsQ0FBQztBQUNQLENBQUMsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbImFzeW5jICh7IGRlZXAsIGRhdGE6IHsgbmV3TGluaywgb2xkTGluayB9IH0pID0+IHtcbiAgICBhd2FpdCBkZWVwLnVuc2FmZS5oYXN1cmEucXVlcnkoe1xuICAgICAgICB0eXBlOiAndW50cmFja190YWJsZScsXG4gICAgICAgIGFyZ3M6IHtcbiAgICAgICAgICAgIHRhYmxlOiB7XG4gICAgICAgICAgICAgICAgc2NoZW1hOiAncHVibGljJyxcbiAgICAgICAgICAgICAgICBuYW1lOiBgc2VtYW50aWNgLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGNhc2NhZGU6IHRydWUsXG4gICAgICAgIH0sXG4gICAgfSk7XG4gICAgYXdhaXQgZGVlcC51bnNhZmUuaGFzdXJhLnNxbChgXG5kcm9wIHZpZXcgc2VtYW50aWM7XG5kcm9wIHZpZXcgc2VtYW50aWNfdHlwZXM7XG4gICAgYCk7XG59Il19",
          "link_id": 1943
        },
        "__typename": "links"
      },
      "__typename": "handlers"
    },
    {
      "dist_id": 1952,
      "src_id": 1913,
      "handler_id": 1914,
      "execution_provider_id": 33,
      "isolation_provider_id": 81,
      "dist": {
        "id": 1952,
        "type_id": 30,
        "from_id": 0,
        "to_id": 0,
        "value": {
          "id": 730,
          "value": "async ({ deep, data: { newLink, oldLink } }) => {\n    await deep.unsafe.hasura.sql(`\nCREATE OR REPLACE VIEW \"public\".\"semantic_types\" AS \n  SELECT\n    instance.id AS id,\n    instance.type_id AS type_id,\n    instance.from_id AS from_id,\n    (CASE WHEN instance.from_id = 0 THEN 0 ELSE (\n      SELECT type_id FROM links WHERE id = instance.from_id\n    ) END) as type_from_id,\n    instance.to_id AS to_id,\n    (CASE WHEN instance.from_id = 0 THEN 0 ELSE (\n      SELECT type_id FROM links WHERE id = instance.to_id\n    ) END) as type_to_id\n  FROM\n    links instance\n  WHERE instance.type_id != 0\n ;\n    `);\n    await deep.unsafe.hasura.sql(`\nCREATE OR REPLACE VIEW \"public\".\"semantic\" AS \n  SELECT DISTINCT ON (cst.type_id, cst.type_from_id, cst.type_to_id)\n    cst.type_id as type_id, cst.type_from_id as type_from_id, cst.type_to_id as type_to_id,\n    (\n      SELECT count(*) FROM semantic_types as st WHERE\n      st.type_id = cst.type_id AND\n      st.type_from_id = cst.type_from_id AND\n      st.type_to_id = cst.type_to_id\n    ) AS count\n  FROM semantic_types as cst\n;\n    `);\n    await deep.unsafe.hasura.query({\n        type: 'track_table',\n        args: {\n            schema: 'public',\n            name: `semantic`,\n        },\n    });\n    return 'ok';\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsibW9kdWxlLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxLQUFLLEVBQUUsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLEVBQUUsT0FBTyxFQUFFLE9BQU8sRUFBRSxFQUFFLEVBQUUsRUFBRTtJQUMzQyxNQUFNLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7Ozs7S0FpQjVCLENBQUMsQ0FBQztJQUNILE1BQU0sSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDOzs7Ozs7Ozs7Ozs7S0FZNUIsQ0FBQyxDQUFDO0lBQ0gsTUFBTSxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUM7UUFDM0IsSUFBSSxFQUFFLGFBQWE7UUFDbkIsSUFBSSxFQUFFO1lBQ0YsTUFBTSxFQUFFLFFBQVE7WUFDaEIsSUFBSSxFQUFFLFVBQVU7U0FDbkI7S0FDSixDQUFDLENBQUM7SUFDSCxPQUFPLElBQUksQ0FBQztBQUNoQixDQUFDLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJhc3luYyAoeyBkZWVwLCBkYXRhOiB7IG5ld0xpbmssIG9sZExpbmsgfSB9KSA9PiB7XG4gICAgYXdhaXQgZGVlcC51bnNhZmUuaGFzdXJhLnNxbChgXG5DUkVBVEUgT1IgUkVQTEFDRSBWSUVXIFwicHVibGljXCIuXCJzZW1hbnRpY190eXBlc1wiIEFTIFxuICBTRUxFQ1RcbiAgICBpbnN0YW5jZS5pZCBBUyBpZCxcbiAgICBpbnN0YW5jZS50eXBlX2lkIEFTIHR5cGVfaWQsXG4gICAgaW5zdGFuY2UuZnJvbV9pZCBBUyBmcm9tX2lkLFxuICAgIChDQVNFIFdIRU4gaW5zdGFuY2UuZnJvbV9pZCA9IDAgVEhFTiAwIEVMU0UgKFxuICAgICAgU0VMRUNUIHR5cGVfaWQgRlJPTSBsaW5rcyBXSEVSRSBpZCA9IGluc3RhbmNlLmZyb21faWRcbiAgICApIEVORCkgYXMgdHlwZV9mcm9tX2lkLFxuICAgIGluc3RhbmNlLnRvX2lkIEFTIHRvX2lkLFxuICAgIChDQVNFIFdIRU4gaW5zdGFuY2UuZnJvbV9pZCA9IDAgVEhFTiAwIEVMU0UgKFxuICAgICAgU0VMRUNUIHR5cGVfaWQgRlJPTSBsaW5rcyBXSEVSRSBpZCA9IGluc3RhbmNlLnRvX2lkXG4gICAgKSBFTkQpIGFzIHR5cGVfdG9faWRcbiAgRlJPTVxuICAgIGxpbmtzIGluc3RhbmNlXG4gIFdIRVJFIGluc3RhbmNlLnR5cGVfaWQgIT0gMFxuIDtcbiAgICBgKTtcbiAgICBhd2FpdCBkZWVwLnVuc2FmZS5oYXN1cmEuc3FsKGBcbkNSRUFURSBPUiBSRVBMQUNFIFZJRVcgXCJwdWJsaWNcIi5cInNlbWFudGljXCIgQVMgXG4gIFNFTEVDVCBESVNUSU5DVCBPTiAoY3N0LnR5cGVfaWQsIGNzdC50eXBlX2Zyb21faWQsIGNzdC50eXBlX3RvX2lkKVxuICAgIGNzdC50eXBlX2lkIGFzIHR5cGVfaWQsIGNzdC50eXBlX2Zyb21faWQgYXMgdHlwZV9mcm9tX2lkLCBjc3QudHlwZV90b19pZCBhcyB0eXBlX3RvX2lkLFxuICAgIChcbiAgICAgIFNFTEVDVCBjb3VudCgqKSBGUk9NIHNlbWFudGljX3R5cGVzIGFzIHN0IFdIRVJFXG4gICAgICBzdC50eXBlX2lkID0gY3N0LnR5cGVfaWQgQU5EXG4gICAgICBzdC50eXBlX2Zyb21faWQgPSBjc3QudHlwZV9mcm9tX2lkIEFORFxuICAgICAgc3QudHlwZV90b19pZCA9IGNzdC50eXBlX3RvX2lkXG4gICAgKSBBUyBjb3VudFxuICBGUk9NIHNlbWFudGljX3R5cGVzIGFzIGNzdFxuO1xuICAgIGApO1xuICAgIGF3YWl0IGRlZXAudW5zYWZlLmhhc3VyYS5xdWVyeSh7XG4gICAgICAgIHR5cGU6ICd0cmFja190YWJsZScsXG4gICAgICAgIGFyZ3M6IHtcbiAgICAgICAgICAgIHNjaGVtYTogJ3B1YmxpYycsXG4gICAgICAgICAgICBuYW1lOiBgc2VtYW50aWNgLFxuICAgICAgICB9LFxuICAgIH0pO1xuICAgIHJldHVybiAnb2snO1xufSJdfQ==",
          "link_id": 1952
        },
        "__typename": "links"
      },
      "__typename": "handlers"
    },
    {
      "dist_id": 2643,
      "src_id": 2639,
      "handler_id": 2759,
      "execution_provider_id": 33,
      "isolation_provider_id": 144,
      "dist": {
        "id": 2643,
        "type_id": 30,
        "from_id": 0,
        "to_id": 0,
        "value": {
          "id": 791,
          "value": "({ deep, data, require, Go }) => {\n    const { MdEdit, MdPreview, MdSaveAlt } = require(\"react-icons/md\");\n    const React = require('react');\n    const { TypedIcon, DownIcon, UpIcon, TypeIcon, InIcon, OutIcon, FromIcon, ToIcon, } = require('@deep-foundation/perception-app');\n    const c = require('@chakra-ui/react');\n    const dpl = '@deep-foundation/perception-links';\n    const dc = '@deep-foundation/core';\n    const Stack = deep.idLocal(dpl, 'Stack');\n    const Selector = deep.idLocal(dc, 'Selector');\n    const Promise = deep.idLocal(dc, 'Promise');\n    const Rejected = deep.idLocal(dc, 'Rejected');\n    const promiseTree = deep.idLocal(dc, 'promiseTree');\n    const Value = deep.idLocal(dc, 'Value');\n    const String = deep.idLocal(dc, 'String');\n    const Number = deep.idLocal(dc, 'Number');\n    const Object = deep.idLocal(dc, 'Object');\n    const File = deep.idLocal(dc, 'File');\n    const Query = deep.idLocal(dc, 'Query');\n    const Contain = deep.idLocal(dc, 'Contain');\n    const History = deep.idLocal(dpl, 'History');\n    const Header = deep.idLocal(dpl, 'Header');\n    const TreeLink = deep.idLocal(dpl, 'TreeLink');\n    const TreeList = deep.idLocal(dpl, 'TreeList');\n    const TreeEditor = deep.idLocal(dpl, 'TreeEditor');\n    const TreeQuery = deep.idLocal(dpl, 'TreeQuery');\n    const TreeLinkInsert = deep.idLocal(dpl, 'TreeLinkInsert');\n    const TreeLinkDelete = deep.idLocal(dpl, 'TreeLinkDelete');\n    const TreeLinkButton = deep.idLocal(dpl, 'TreeLinkButton');\n    return ({ go, handlerId, isActive, isConcentrated, operations = true, fullWidth = null, }, ref) => {\n        const valueType = React.useMemo(() => go.link?.type?.outByType[Value]?.[0]?.to_id, [go]);\n        const fromDisclosure = c.useDisclosure();\n        const toDisclosure = c.useDisclosure();\n        const queries = React.useMemo(() => ({\n            'parents': ({ out: { type_id: Contain, to_id: go.linkId }, order_by: { id: 'desc' } }),\n            'contains': ({ in: { type_id: Contain, from_id: go.linkId }, order_by: { id: 'desc' } }),\n            'out': ({ from_id: go.linkId, order_by: { id: 'desc' } }),\n            'typed': ({ type_id: go.linkId, order_by: { id: 'desc' } }),\n            'in': ({ to_id: go.linkId, order_by: { id: 'desc' } }),\n            'selectors': ({ type_id: Selector, selected: { item_id: { _eq: go.linkId } }, order_by: { id: 'desc' } }),\n            'selected': ({ selected: { selector_id: { _eq: go.linkId } }, order_by: { id: 'desc' } }),\n            'promises': ({ type_id: Promise, up: { tree_id: { _eq: promiseTree }, parent_id: { _eq: go.linkId } }, order_by: { id: 'desc' } }),\n            'rejects': ({ type_id: Rejected, up: { tree_id: { _eq: promiseTree }, parent_id: { _eq: go.linkId } }, order_by: { id: 'desc' } }),\n        }), []);\n        const [query, setQuery] = React.useState(null);\n        const { data: links } = deep.useQuery(query || {}, { skip: !query });\n        const column = React.createElement(c.VStack, { position: 'relative', minW: fullWidth || '30em', maxW: fullWidth || '30em', h: '100%', spacing: 1, bg: isActive ? 'deepBgDark' : null },\n            React.createElement(c.Flex, { w: '100%' },\n                React.createElement(go.Handler, { handlerId: TreeLinkButton, linkId: go.linkId, flex: '1', onClick: () => go.focus('current').go.do('exec'), needParent: false, isActive: go.value === 'current' }),\n                React.createElement(c.Button, { minW: '3e,', w: '3em', h: '100%', minH: '3em', p: '0', onClick: () => go.focus('close').go.do('close'), variant: go.value === 'close' ? 'active' : null }, \"x\")),\n            React.createElement(c.SimpleGrid, { spacing: 1, w: '100%', columns: 2 + (operations ? 2 : 0) },\n                React.createElement(c.Button, { variant: go.value === 'parents' ? 'active' : null, justifyContent: 'center', onClick: () => go.focus('parents').go.do('parents') },\n                    React.createElement(c.Text, { pr: 1 }, \"\\uD83D\\uDDC2\\uFE0F\"),\n                    \" parents\"),\n                React.createElement(c.Button, { variant: go.value === 'contains' ? 'active' : null, justifyContent: 'center', onClick: () => go.focus('contains').go.do('contains') },\n                    React.createElement(c.Text, { pr: 1 }, \"\\uD83D\\uDDC2\\uFE0F\"),\n                    \" contains\"),\n                operations && React.createElement(React.Fragment, null,\n                    React.createElement(go.Provider, { linkId: TreeLinkInsert },\n                        React.createElement(go.Handler, { isActive: go.value === 'insert' ? go.ref : null, handlerId: TreeLinkInsert, defaultContainerId: go.linkId, defaultTypeId: 1 })),\n                    React.createElement(go.Provider, { linkId: TreeLinkDelete },\n                        React.createElement(go.Handler, { isActive: go.value === 'delete' ? go.ref : null, handlerId: TreeLinkDelete, linkId: go.linkId })))),\n            (!!go.link.type_id === 1 || !!go.link.from_id) && React.createElement(go.Component, { path: [dpl, 'Finder'], disclosure: fromDisclosure, initialId: go.link.from_id, initialHandlerId: TreeList, onSubmit: (id) => {\n                    deep.update(go.linkId, { from_id: id });\n                    fromDisclosure.onClose();\n                } }),\n            (!!go.link.type_id === 1 || !!go.link.to_id) && React.createElement(go.Component, { path: [dpl, 'Finder'], disclosure: toDisclosure, initialId: go.link.to_id, initialHandlerId: TreeList, onSubmit: (id) => {\n                    deep.update(go.linkId, { to_id: id });\n                    toDisclosure.onClose();\n                } }),\n            [React.createElement(go.Query, { key: `${fromDisclosure.isOpen}${toDisclosure.isOpen}`, query: { id: go.linkId } })],\n            React.createElement(c.SimpleGrid, { spacing: 1, w: '100%', columns: 3 },\n                React.createElement(c.Flex, null,\n                    React.createElement(c.Button, { variant: go.value === 'edit-from' ? 'active' : undefined, justifyContent: 'right', textAlign: 'right', h: '3em', disabled: !go.link?.from_id, onClick: () => go.focus('edit-from').go.do('edit-from') },\n                        React.createElement(c.Box, null,\n                            React.createElement(MdEdit, null))),\n                    React.createElement(c.Button, { variant: go.value === 'from' ? 'active' : undefined, justifyContent: 'right', textAlign: 'right', flex: '1', h: '3em', onClick: () => go.focus('from').go.do('from'), rightIcon: React.createElement(FromIcon, null), overflow: 'hidden' },\n                        React.createElement(c.Box, null,\n                            React.createElement(c.Text, null, \"from\"),\n                            React.createElement(c.Box, null,\n                                React.createElement(c.Text, { fontSize: 'xs' },\n                                    go.link?.from?.symbol,\n                                    \" \",\n                                    !!go.link?.from && go.link.from.name,\n                                    \" \",\n                                    go.link?.from_id))))),\n                React.createElement(c.Button, { variant: go.value === 'type' ? 'active' : undefined, disabled: !go.link?.type_id, leftIcon: React.createElement(TypeIcon, null), onClick: () => go.focus('type').go.do('type'), h: '3em', overflow: 'hidden' },\n                    React.createElement(c.Box, null,\n                        React.createElement(c.Text, null, \"type\"),\n                        React.createElement(c.Box, null,\n                            React.createElement(c.Text, { fontSize: 'xs' },\n                                go.link?.type?.symbol,\n                                \" \",\n                                !!go.link?.type && go.link.type.name,\n                                \" \",\n                                go.link?.type_id)))),\n                React.createElement(c.Flex, null,\n                    React.createElement(c.Button, { variant: go.value === 'to' ? 'active' : undefined, justifyContent: 'left', textAlign: 'left', flex: '1', h: '3em', rightIcon: React.createElement(ToIcon, null), onClick: () => go.focus('to').go.do('to'), overflow: 'hidden' },\n                        React.createElement(c.Box, null,\n                            React.createElement(c.Text, null, \"to\"),\n                            React.createElement(c.Box, null,\n                                React.createElement(c.Text, { fontSize: 'xs' },\n                                    go.link?.to?.symbol,\n                                    \" \",\n                                    !!go.link?.to && go.link.to.name,\n                                    \" \",\n                                    go.link?.to_id)))),\n                    React.createElement(c.Button, { variant: go.value === 'edit-to' ? 'active' : undefined, justifyContent: 'right', textAlign: 'right', h: '3em', disabled: !go.link?.to_id, onClick: () => go.focus('edit-to').go.do('edit-to') },\n                        React.createElement(c.Box, null,\n                            React.createElement(MdEdit, null))))),\n            React.createElement(c.SimpleGrid, { spacing: 1, w: '100%', columns: 5 },\n                React.createElement(c.Button, { variant: go.value === 'up-tree' ? 'active' : undefined, justifyContent: 'center', onClick: () => go.focus('up-tree').go.do('up-tree'), leftIcon: React.createElement(UpIcon, null) },\n                    React.createElement(c.Text, null, \"up\")),\n                React.createElement(c.Button, { variant: go.value === 'out' ? 'active' : undefined, justifyContent: 'left', textAlign: 'left', onClick: () => go.focus('out').go.do('out'), leftIcon: React.createElement(OutIcon, null) },\n                    React.createElement(c.Text, null, \"out\")),\n                React.createElement(c.Button, { variant: go.value === 'typed' ? 'active' : undefined, onClick: () => go.focus('typed').go.do('typed'), leftIcon: React.createElement(TypedIcon, null) },\n                    React.createElement(c.Text, null, \"typed\")),\n                React.createElement(c.Button, { variant: go.value === 'in' ? 'active' : undefined, justifyContent: 'right', textAlign: 'right', onClick: () => go.focus('in').go.do('in'), rightIcon: React.createElement(InIcon, null) },\n                    React.createElement(c.Text, null, \"in\")),\n                React.createElement(c.Button, { variant: go.value === 'down-tree' ? 'active' : undefined, justifyContent: 'center', onClick: () => go.focus('down-tree').go.do('down-tree'), leftIcon: React.createElement(DownIcon, null) },\n                    React.createElement(c.Text, null, \"down\"))),\n            React.createElement(c.SimpleGrid, { spacing: 1, w: '100%', columns: 4 },\n                React.createElement(c.Button, { variant: go.value === 'selectors' ? 'active' : undefined, justifyContent: 'center', onClick: () => go.focus('selectors').go.do('selectors') },\n                    React.createElement(c.Text, { pr: 1 }, \"\\uD83E\\uDEA1\"),\n                    \" selectors\"),\n                React.createElement(c.Button, { variant: go.value === 'selected' ? 'active' : undefined, justifyContent: 'center', onClick: () => go.focus('selected').go.do('selected') },\n                    React.createElement(c.Text, { pr: 1 }, \"\\uD83E\\uDEA1\"),\n                    \" selected\"),\n                React.createElement(c.Button, { variant: go.value === 'promises' ? 'active' : undefined, justifyContent: 'center', onClick: () => go.focus('promises').go.do('promises') },\n                    React.createElement(c.Text, { pr: 1 }, \"\\uD83E\\uDD1E\"),\n                    \" promises\"),\n                React.createElement(c.Button, { variant: go.value === 'rejects' ? 'active' : undefined, justifyContent: 'center', onClick: () => go.focus('rejects').go.do('rejects') },\n                    React.createElement(c.Text, { pr: 1 }, \"\\uD83D\\uDD34\"),\n                    \" rejects\")),\n            React.createElement(c.SimpleGrid, { spacing: 1, w: '100%' },\n                !valueType && React.createElement(React.Fragment, null,\n                    React.createElement(c.Button, { variant: go.value === 'value' ? 'active' : undefined, bg: go.value === TreeEditor ? 'deepBgDark' : null, justifyContent: 'center', disabled: true }, \"type can't have Value\")),\n                valueType === String && React.createElement(React.Fragment, null,\n                    React.createElement(c.Button, { variant: go.value === 'value' ? 'active' : undefined, bg: go.value === TreeEditor ? 'deepBgDark' : null, justifyContent: 'center', onClick: () => go.focus('value').go.do('value') },\n                        React.createElement(c.Text, { pr: 1 },\n                            \"\\\"\\\".length === \",\n                            go.link?.value?.value?.length || 0),\n                        \" string\")),\n                valueType === Number && React.createElement(React.Fragment, null,\n                    React.createElement(c.Button, { variant: go.value === 'value' ? 'active' : undefined, bg: go.value === TreeEditor ? 'deepBgDark' : null, justifyContent: 'center', onClick: () => go.focus('value').go.do('value') },\n                        React.createElement(c.Text, { pr: 1 }, +go.link?.value?.value),\n                        \" number\")),\n                valueType === Object && React.createElement(React.Fragment, null,\n                    React.createElement(c.Button, { variant: go.value === 'value' ? 'active' : undefined, bg: go.value === TreeEditor ? 'deepBgDark' : null, justifyContent: 'center', onClick: () => go.focus('value').go.do('value') },\n                        React.createElement(c.Text, { pr: 1 }, `{...}`),\n                        \" object\"))),\n            go.value === TreeEditor && React.createElement(c.Box, { minW: fullWidth || '30em', maxW: fullWidth || '30em', flex: '1', position: 'relative' },\n                React.createElement(go.Handler, { handlerId: TreeEditor, linkId: go.linkId, fillSize: true, autoFocus: true })),\n            !!links?.length && React.createElement(go.Provider, { linkId: Stack },\n                React.createElement(go.Component, { path: [dpl, 'Stack'], links: links, direction: 'vertical', flex: '1' })));\n        const nav = go.useNav();\n        nav('current', 'left', 'up', 'close', 'contains');\n        if (isConcentrated !== false) {\n            nav('close', 'current', 'up', 'right', 'contains');\n            nav('parents', 'left', 'current', 'contains', 'type');\n            nav('contains', 'parents', 'current', 'insert', 'type');\n            nav('insert', 'contains', 'current', 'delete', 'type');\n            nav('delete', 'insert', 'close', 'right', 'type');\n            nav('edit-from', 'left', 'contains', 'from', 'up-tree');\n            nav('from', 'edit-from', 'contains', 'to', 'out');\n            nav('type', 'from', 'contains', 'to', 'typed');\n            nav('to', 'type', 'contains', 'edit-to', 'in');\n            nav('edit-to', 'to', 'contains', 'right', 'down-tree');\n            nav('up-tree', 'left', 'edit-from', 'out', 'selectors');\n            nav('out', 'up-tree', 'from', 'typed', 'selected');\n            nav('typed', 'out', 'type', 'in', 'promises');\n            nav('in', 'typed', 'to', 'down-tree', 'promises');\n            nav('down-tree', 'in', 'edit-to', 'right', 'rejects');\n            nav('selectors', 'left', 'up-tree', 'selected', 'value');\n            nav('selected', 'selectors', 'out', 'promises', 'value');\n            nav('promises', 'selected', 'in', 'rejects', 'value');\n            nav('rejects', 'promises', 'down-tree', 'right', 'value');\n            nav('value', 'left', 'promises', 'right', Stack);\n            nav(Stack, 'left', 'value', 'right', 'down');\n        }\n        const openLink = async (id) => {\n            !!id && go.go.do('open', { handlerId: TreeLink, id: id, prevId: go.linkId });\n            await go.go.await(id);\n            go.go.focus(id);\n        };\n        const deconcentrated = React.createElement(c.Button, { h: '100%', w: '3em', pt: '1em', variant: isActive ? 'active' : undefined, alignItems: 'flex-start' }, go?.link?.symbol);\n        const content = isConcentrated === false ? deconcentrated : column;\n        return React.createElement(go.On, { do: {\n                focus: (g, v, linkId, o) => !go.value && go.focus('current'),\n                use: (g, v, o) => o?.id && go.value === Stack ? (go(Stack).do('use', o)) : (go.set('current')),\n                close: (g, v, o) => go.go.do('close', { id: go.linkId }),\n                exec: (g, v, o) => o?.id ? go.go.do('open', { id: o.id, prevId: go.linkId, focus: true }) : go.value && go.do(go.value, o),\n                left: (g, v, o) => go.focus(nav.get(go.value || 'current', 'left'), { prev: go.value }),\n                up: (g, v, o) => go.focus(nav.get(go.value || 'current', 'up'), { prev: go.value }),\n                right: (g, v, o) => go.focus(nav.get(go.value || 'current', 'right'), { prev: go.value }),\n                down: (g, v, o) => go.focus(nav.get(go.value || 'current', 'down'), { prev: go.value }),\n                'current': () => { },\n                'parents': () => setQuery({ ...queries.parents, limit: 100 }),\n                'contains': () => setQuery({ ...queries.contains, limit: 100 }),\n                'edit-from': () => fromDisclosure.onOpen(),\n                'from': () => openLink(go.link.from_id),\n                'type': () => openLink(go.link.type_id),\n                'to': () => openLink(go.link.to_id),\n                'edit-to': () => toDisclosure.onOpen(),\n                'up-tree': () => { },\n                'out': () => setQuery({ ...queries.out, limit: 100 }),\n                'typed': () => setQuery({ ...queries.typed, limit: 100 }),\n                'in': () => setQuery({ ...queries.in, limit: 100 }),\n                'down-tree': () => { },\n                'selectors': () => setQuery({ ...queries.selectors, limit: 100 }),\n                'selected': () => setQuery({ ...queries.selected, limit: 100 }),\n                'promises': () => setQuery({ ...queries.promises, limit: 100 }),\n                'rejects': () => setQuery({ ...queries.rejects, limit: 100 }),\n                'value': () => {\n                    setQuery(null);\n                    go.focus(go.value === TreeEditor ? 'value' : TreeEditor);\n                },\n                [Stack]: (g, v, o) => openLink(o?.id),\n            }, focus: {\n                up: (q, v, o) => go.set().go?.go?.do('up'),\n                down: (q, v, o) => go.set().go?.go?.do('down'),\n                left: (q, v, o) => go.set(o?.left).go?.go?.do('left'),\n                right: (q, v, o) => go.set(o?.right).go?.go?.do('right'),\n            } },\n            React.createElement(c.HStack, { ref: ref, h: '100%', overflow: 'hidden' }, content));\n    };\n};\n//# sourceMappingURL=data:application/json;base64,",
          "link_id": 2643
        },
        "__typename": "links"
      },
      "__typename": "handlers"
    },
    {
      "dist_id": 2656,
      "src_id": 2652,
      "handler_id": 5827,
      "execution_provider_id": 33,
      "isolation_provider_id": 144,
      "dist": {
        "id": 2656,
        "type_id": 30,
        "from_id": 0,
        "to_id": 0,
        "value": {
          "id": 796,
          "value": "async ({ deep, data, Go, require }) => {\n    const React = require('react');\n    const { PiGraphBold } = require(\"react-icons/pi\");\n    const c = require('@chakra-ui/react');\n    const _ = require('lodash');\n    const dpl = '@deep-foundation/perception-links';\n    const dc = '@deep-foundation/core';\n    const Dpl = deep.idLocal(dpl);\n    const Focus = deep.idLocal(dc, 'Focus');\n    const Active = deep.idLocal(dc, 'Active');\n    const History = deep.idLocal(dpl, 'History');\n    const Layer = deep.idLocal(dpl, 'Layer');\n    const Graph = deep.idLocal(dpl, 'Graph');\n    const GraphLink = deep.idLocal(dpl, 'GraphLink');\n    const containTree = deep.idLocal(dc, 'containTree');\n    const Link = React.memo(({ isActive, ...props }) => {\n        const go = Go.useGo();\n        return React.createElement(React.Fragment, null,\n            React.createElement(go.Handler, { handlerId: GraphLink, isActive: isActive, ...props }));\n    }, _.isEqual);\n    return ({ go, using = false, initialId = deep.linkId, }, ref) => {\n        const initialOpened = React.useMemo(() => {\n            if (!initialId)\n                return [];\n            return [{ link: deep.get(initialId) }];\n        }, []);\n        const [opened, setOpened] = React.useState(initialOpened);\n        const parental = React.useMemo(() => {\n            const byParent = {};\n            for (let i = 0; i < opened.length; i++) {\n                if (opened[i]?.parentId) {\n                    byParent[opened[i].parentId] = byParent[opened[i]?.parentId] || [];\n                    byParent[opened[i].parentId].push(opened[i]);\n                }\n            }\n            return byParent;\n        }, [opened]);\n        React.useEffect(() => {\n            if (initialId)\n                go.do('use', { id: initialId });\n        }, []);\n        React.useEffect(() => {\n            if (go?.current) {\n                if (using && go.root()?.data?.usedId != go.value)\n                    go.root().do('use', { id: go.value });\n                go.do('changed', { id: go.value });\n                go?.current?.do('scroll');\n            }\n        }, [go.value]);\n        const mapOpened = (opened, i) => React.createElement(go.Provider, { key: opened.link.id, linkId: opened.link.id },\n            React.createElement(Link, { isActive: go.value === opened.link.id }, !!parental[opened.link?.id] && parental[opened.link.id].map(mapOpened)));\n        return React.createElement(go.On, { do: {\n                focus: (g, v, o) => o?.id ? go.focus(o?.id) : initialId && !go.value ? go.focus(initialId) : undefined,\n                use: (g, v, o) => {\n                    o?.id && o?.id != go.value && go(o?.id) && go.set(o.id).go(o?.id).go?.do('scroll').go?.do('use');\n                },\n                open: (g, v, { id, ids: _ids, parentId, focus } = {}) => {\n                    const ids = id ? [id] : _ids;\n                    if (ids?.length) {\n                        const toAdd = [];\n                        for (let i in ids) {\n                            const id = ids[i];\n                            if (!opened.find(o => o?.link?.id === id))\n                                toAdd.push({ link: deep.get(id), parentId });\n                        }\n                        if (toAdd.length)\n                            setOpened([...opened, ...toAdd]);\n                        if (focus && ids[0])\n                            go.awaitRef(ids[0]).then(g => {\n                                go.focus(ids[0]).go(ids[0]).do('scroll');\n                            });\n                    }\n                },\n            } },\n            React.createElement(c.Box, { w: '100%', h: '100%', ref: ref },\n                React.createElement(go.Graph, { onLoaded: cy => {\n                        window.cy = cy;\n                    } },\n                    React.createElement(go.Provider, { linkId: deep.linkId },\n                        React.createElement(Link, null)),\n                    React.createElement(go.GraphStyle, { stylesheet: [\n                            {\n                                selector: '.link-children',\n                                style: {\n                                    'background-opacity': 0.05,\n                                    'background-color': 'deepBgGraphChildren',\n                                    opacity: 1,\n                                    'background-fit': 'cover',\n                                    'border-width': 0,\n                                }\n                            },\n                            {\n                                selector: '.link-file',\n                                style: {\n                                    color: 'deepColor',\n                                    width: 30,\n                                    height: 30,\n                                    'font-size': 16,\n                                    'text-margin-y': 23,\n                                    'text-margin-x': -2,\n                                    label: 'data(label)',\n                                    \"text-wrap\": \"wrap\",\n                                    'background-image': 'data(image)',\n                                    'background-fit': 'cover',\n                                }\n                            },\n                            {\n                                selector: '.link-ghost',\n                                style: {\n                                    color: 'deepLinkNodeColor',\n                                    'background-opacity': 0,\n                                    'background-color': 'deepLinkNodeBg',\n                                    width: 30,\n                                    height: 30,\n                                    'font-size': 16,\n                                    'text-margin-y': 23,\n                                    'text-margin-x': 1,\n                                    'label': 'data(label)',\n                                    \"text-wrap\": \"wrap\",\n                                    'background-fit': 'cover',\n                                    'border-color': 'deepLinkNodeColor',\n                                    'border-width': 3,\n                                }\n                            },\n                            {\n                                selector: '.link-node',\n                                style: {\n                                    color: 'deepLinkNodeColor',\n                                    'background-opacity': 1,\n                                    'background-color': 'deepLinkNodeBg',\n                                    opacity: 1,\n                                    width: 30,\n                                    height: 30,\n                                    'font-size': 16,\n                                    'text-margin-y': 23,\n                                    'text-margin-x': 1,\n                                    'label': 'data(label)',\n                                    \"text-wrap\": \"wrap\",\n                                    'background-fit': 'cover',\n                                }\n                            },\n                            {\n                                selector: '.link-node-active',\n                                style: {\n                                    \"border-color\": \"deepColorActive\",\n                                    'border-width': '3',\n                                }\n                            },\n                            {\n                                selector: '.link-edge',\n                                style: {\n                                    width: 1,\n                                    'curve-style': 'bezier',\n                                    'target-distance-from-node': 8,\n                                    'source-distance-from-node': 1,\n                                }\n                            },\n                            {\n                                selector: '.link-edge-active',\n                                style: {\n                                    \"line-color\": \"deepColorActive\",\n                                }\n                            },\n                            {\n                                selector: '.link-to',\n                                style: {\n                                    'target-arrow-shape': 'triangle',\n                                }\n                            },\n                            {\n                                selector: '.link-from',\n                                style: {\n                                    'target-arrow-shape': 'tee',\n                                }\n                            },\n                            {\n                                selector: '.link-type',\n                                style: {\n                                    'target-arrow-shape': 'triangle',\n                                    'line-style': 'dashed',\n                                    'line-dash-pattern': [5, 5]\n                                }\n                            },\n                        ] }),\n                    opened.map(mapOpened))));\n    };\n};\n//# sourceMappingURL=data:application/json;base64,",
          "link_id": 2656
        },
        "__typename": "links"
      },
      "__typename": "handlers"
    },
    {
      "dist_id": 2710,
      "src_id": 2637,
      "handler_id": 2739,
      "execution_provider_id": 33,
      "isolation_provider_id": 144,
      "dist": {
        "id": 2710,
        "type_id": 30,
        "from_id": 0,
        "to_id": 0,
        "value": {
          "id": 817,
          "value": "async ({ deep, data, Go, require }) => {\n    const React = require('react');\n    const c = require('@chakra-ui/react');\n    const dpl = '@deep-foundation/perception-links';\n    const dc = '@deep-foundation/core';\n    const Stack = deep.idLocal(dpl, 'Stack');\n    const Any = deep.idLocal(dc, 'Any');\n    const Query = deep.idLocal(dc, 'Query');\n    const TreeList = deep.idLocal(dpl, 'TreeList');\n    const TreeLink = deep.idLocal(dpl, 'TreeLink');\n    const TreeQuery = deep.idLocal(dpl, 'TreeQuery');\n    const Menu = deep.idLocal(dpl, 'Menu');\n    const Layer = deep.idLocal(dpl, 'Layer');\n    const Header = deep.idLocal(dpl, 'Header');\n    const History = deep.idLocal(dpl, 'History');\n    const HistoryHandler = deep.idLocal(dpl, 'HistoryHandler');\n    const handlers = {\n        [Any]: TreeLink,\n        [Query]: TreeQuery,\n    };\n    const getHandlerId = (linkId) => {\n        const l = deep.get(linkId);\n        console.log('getHandlerId', l);\n        return l?.type_id === Query ? TreeList : TreeLink;\n    };\n    function useStore(queryField, defaultValue) {\n        return React.useState(defaultValue);\n    }\n    return ({ go, using = false, queryField = '', saveHistory = false, fullWidth = null, initialId = deep.linkId, initialHandlerId, startProps = {}, }, ref) => {\n        const initialColumns = React.useMemo(() => {\n            if (!initialId)\n                return [];\n            return [[initialId, initialHandlerId || getHandlerId(initialId)]];\n        }, []);\n        const [columns, setColumns] = useStore(queryField, initialColumns);\n        const Item = React.useCallback(({ link, isActive, ...props }) => {\n            const go = Go.useGo();\n            return React.createElement(React.Fragment, null,\n                !!saveHistory && !!isActive && React.createElement(go.Save, { handlerId: link.handlerId }),\n                React.createElement(go.Handler, { linkId: link.id, handlerId: link.handlerId, isActive: isActive, fullWidth: fullWidth, saveHistory: saveHistory, ...props }));\n        }, [saveHistory, fullWidth]);\n        console.log({ columns });\n        const { data: list, ids } = React.useMemo(() => {\n            const ids = [];\n            const data = columns.map(c => {\n                ids.push(c[0]);\n                return { id: c[0], handlerId: c[1] };\n            });\n            return { data, ids };\n        }, [columns]);\n        const [concentrate, setConcentrate] = React.useState();\n        const { ids: concentrated } = deep.useSearch(concentrate, {\n            db: false, sort: false,\n            query: { id: { _in: ids } },\n            skip: !!concentrate,\n        });\n        return React.createElement(go.On, { do: {\n                focus: (g, v, linkId, o) => {\n                    !go.value && go.focus(Stack);\n                    o?.id && go.do('open', o);\n                },\n                use: (g, v, o) => go(Stack).do('use', o),\n                open: (g, v, { id, prevId, handlerId, focus } = {}) => {\n                    if (!id)\n                        throw new Error(`open options must contains id ({ id, prevId?, handlerId? })`);\n                    const founded = columns.find(c => c[0] === id);\n                    const _prevId = prevId || columns[columns.length - 1][0];\n                    if (founded)\n                        go.do('use', { id });\n                    else {\n                        const prevI = columns.findIndex(c => c[0] === _prevId);\n                        setColumns([\n                            ...(!!~prevI ? columns.slice(0, prevI + 1) : []),\n                            [id, handlerId || getHandlerId(id)],\n                            ...(!!~prevI ? columns.slice(prevI + 1) : []),\n                        ]);\n                    }\n                    if (focus)\n                        go(Stack).awaitRef(id).then(g => go(Stack).focus(id).go(id).scroll());\n                },\n                close: (g, v, o) => {\n                    if (!o.id)\n                        throw new Error(`close options must contains id ({ id })`);\n                    setColumns(columns.filter(c => c[0] !== o.id));\n                },\n                concentrate: (g, v, o) => {\n                    setConcentrate(o?.value);\n                },\n            } },\n            React.createElement(go.Provider, { linkId: Stack },\n                React.createElement(go.Component, { path: [dpl, 'Stack'], concentrated: !!concentrate && concentrated, links: list, direction: 'horizontal', Item: Item, using: using, saveHistory: saveHistory, startProps: startProps })));\n    };\n};\n//# sourceMappingURL=data:application/json;base64,",
          "link_id": 2710
        },
        "__typename": "links"
      },
      "__typename": "handlers"
    },
    {
      "dist_id": 2773,
      "src_id": 2650,
      "handler_id": 10114,
      "execution_provider_id": 33,
      "isolation_provider_id": 144,
      "dist": {
        "id": 2773,
        "type_id": 30,
        "from_id": 0,
        "to_id": 0,
        "value": {
          "id": 823,
          "value": "({ deep, data, require, Go }) => {\n    const { MdEdit, MdPreview, MdSaveAlt } = require(\"react-icons/md\");\n    const React = require('react');\n    const { TypedIcon, DownIcon, UpIcon, TypeIcon, InIcon, OutIcon, FromIcon, ToIcon, useSymbol, } = require('@deep-foundation/perception-app');\n    const c = require('@chakra-ui/react');\n    const dpl = '@deep-foundation/perception-links';\n    const dc = '@deep-foundation/core';\n    const History = deep.idLocal(dpl, 'History');\n    const Header = deep.idLocal(dpl, 'Header');\n    const Search = deep.idLocal(dpl, 'Search');\n    const TreeQuery = deep.idLocal(dpl, 'TreeQuery');\n    const TreeList = deep.idLocal(dpl, 'TreeList');\n    const TreeLink = deep.idLocal(dpl, 'TreeLink');\n    const TreeLinkInsert = deep.idLocal(dpl, 'TreeLinkInsert');\n    const TreeLinkDelete = deep.idLocal(dpl, 'TreeLinkDelete');\n    const TreeLinkButton = deep.idLocal(dpl, 'TreeLinkButton');\n    const Item = ({ l, isActive }) => {\n        const go = Go.useGo();\n        return React.createElement(c.Box, { ref: go.ref, w: '100%' },\n            React.createElement(go.Handler, { handlerId: TreeLinkButton, linkId: l.id, onClick: () => go.go.focus(l.id).go.do(l.id), variant: 'full', isActive: isActive, w: '100%' }));\n    };\n    return ({ go, handlerId, isActive, operations = true, saveHistory = false, children, }, ref) => {\n        const [results, setResults] = React.useState([]);\n        const content = React.createElement(c.Flex, { ref: ref, direction: 'column', position: 'relative', minW: '30em', maxW: '30em', h: '100%', bg: isActive ? 'deepBg' : 'deepBgDark' },\n            React.createElement(c.VStack, { ref: ref, flex: 1, w: '100%', h: '100%' },\n                React.createElement(go.Handler, { handlerId: TreeLinkButton, linkId: go.linkId, onClick: () => go.focus('current').go.do('current'), needParent: false, isActive: go.value === 'current', w: '100%' }),\n                React.createElement(c.Box, { w: '100%' },\n                    React.createElement(go.Provider, { linkId: Search },\n                        React.createElement(go.Handler, { handlerId: Search, linkId: go.linkId, isActive: go.value === Search, w: '100%', onSearch: (results) => setResults(results) }))),\n                React.createElement(go.Provider, { linkId: TreeList },\n                    React.createElement(go.Handler, { handlerId: TreeList, linkId: TreeList, links: results, isActive: go.value === TreeList, w: '100%', flex: '1' }))),\n            children);\n        React.useEffect(() => {\n            if (go?.current)\n                go?.current.scroll();\n        }, [go.value]);\n        const nav = go.useNav();\n        nav('current', 'prev', 'up', 'next', Search);\n        nav(Search, 'prev', 'current', 'next', TreeList);\n        nav(TreeList, 'prev', Search, 'next', TreeList);\n        return React.createElement(go.Provider, { onDo: {\n                current: () => go.do('next', { linkId: go.linkId, handlerId: TreeLink }),\n                focus: () => go.focus('current').go.scroll(),\n                up: () => go.focus(nav.get(go.value, 'up')),\n                down: () => go.focus(nav.get(go.value, 'down')),\n                space: () => go.go.do('next', {\n                    linkId: go.value === 'current' ? go.linkId : go.value === TreeList ? go(TreeList).linkId : go.linkId,\n                    handlerId: TreeLink\n                }),\n            }, onFocus: {\n                current: () => go.save(handlerId),\n                up: () => go?.go.do('up'),\n                down: () => go?.go.do('down'),\n            } }, content);\n    };\n};\n//# sourceMappingURL=data:application/json;base64,",
          "link_id": 2773
        },
        "__typename": "links"
      },
      "__typename": "handlers"
    },
    {
      "dist_id": 3936,
      "src_id": 3844,
      "handler_id": 17544,
      "execution_provider_id": 33,
      "isolation_provider_id": 144,
      "dist": {
        "id": 3936,
        "type_id": 30,
        "from_id": 0,
        "to_id": 0,
        "value": {
          "id": 951,
          "value": "({ deep, data, require, go }) => {\n    const React = require('react');\n    const { useSymbol } = require('@deep-foundation/perception-app');\n    const c = require('@chakra-ui/react');\n    const _ = require('lodash');\n    const dpl = '@deep-foundation/perception-links';\n    const dc = '@deep-foundation/core';\n    const Contain = deep.idLocal(dc, 'Contain');\n    return ({ go, linkId, isActive, onClick, variant = 'short', needParent = false, isConcentrated, children = null, ...props }, ref) => {\n        const [co] = deep.useLocalQuery({ type_id: Contain, to_id: linkId });\n        const link = deep.get(linkId);\n        const contain = link?.inByType?.[Contain]?.[0];\n        const name = link?.name;\n        const type = link?.type?.name;\n        const icon = link?.symbol;\n        const parent = contain?.from;\n        const parentName = parent?.name || '';\n        const parentIcon = parent?.symbol;\n        const [editing, setEditing] = React.useState(false);\n        const heightRef = React.useRef(0);\n        const [value, setValue] = React.useState(link?.name);\n        const editingRef = React.useRef(editing);\n        const afterEdit = (!!editingRef.current && !editing);\n        editingRef.current = editing;\n        return React.createElement(go.On, { do: {\n                enter: async () => {\n                    if (!isActive || !contain)\n                        return;\n                    heightRef.current = ref.current.clientHeight;\n                    if (!editing) {\n                        setEditing(true);\n                        setValue(link?.name);\n                    }\n                    else {\n                        await deep.value(contain?.id, value);\n                        setEditing(false);\n                    }\n                },\n                escape: () => {\n                    setEditing(false);\n                },\n            } },\n            isConcentrated != false && React.createElement(React.Fragment, null,\n                editing && React.createElement(c.Box, { ref: ref, height: `${heightRef.current}px`, w: '100%', overflow: 'hidden' },\n                    React.createElement(c.Input, { autoFocus: true, value: value, onChange: e => setValue(e.target.value), h: '100%', onKeyDown: event => event.key === 'Escape' ? go.do('escape') : null })),\n                !!afterEdit && React.createElement(go.Query, { query: { type_id: Contain, to_id: linkId } }),\n                !editing && React.createElement(c.Button, { ref: ref, ...props, variant: isActive ? 'active' : undefined, onClick: (e) => {\n                        e.stopPropagation();\n                        e.preventDefault();\n                        go.do('exec', { id: linkId });\n                        onClick && onClick(link);\n                    }, justifyContent: 'left', pt: 2, pb: 2, w: '100%', h: '100%' },\n                    icon,\n                    \" \",\n                    React.createElement(c.Box, { textAlign: 'left', pl: '0.5em', w: '100%', overflow: 'hidden', position: 'relative' },\n                        !!parent && !!needParent && React.createElement(c.Box, { fontSize: \"0.6em\", textAlign: 'right' },\n                            parentName,\n                            \" \",\n                            parentIcon),\n                        !!((name) || (type)) && React.createElement(c.Box, { fontSize: \"sm\" }, name || type),\n                        React.createElement(c.Box, { fontSize: \"xxs\" },\n                            name ? type : '',\n                            \" \",\n                            linkId),\n                        children,\n                        variant === 'full' && !!link?.value && React.createElement(React.Fragment, null,\n                            React.createElement(c.Text, { fontSize: \"xxs\", opacity: 0.5 }, \"value:\"),\n                            React.createElement(c.Text, { fontSize: \"xs\" },\n                                typeof (link?.value?.value) == 'string' && React.createElement(React.Fragment, null,\n                                    React.createElement(c.Heading, { as: 'pre', fontSize: 'xs', noOfLines: 1, w: '100%' }, link?.value?.value)),\n                                typeof (link?.value?.value) == 'number' && React.createElement(React.Fragment, null,\n                                    React.createElement(c.Heading, { as: 'pre', fontSize: 'xs', noOfLines: 1, w: '100%' }, link?.value?.value)),\n                                typeof (link?.value?.value) == 'object' && React.createElement(React.Fragment, null,\n                                    React.createElement(c.Heading, { as: 'pre', fontSize: 'xs', noOfLines: 1, w: '100%' }, JSON.stringify(link?.value?.value)))))))),\n            isConcentrated === false && React.createElement(React.Fragment, null,\n                React.createElement(c.Button, { ref: ref, ...props, variant: isActive ? 'active' : undefined, onClick: (e) => {\n                        e.stopPropagation();\n                        e.preventDefault();\n                        go.do('exec', { id: linkId });\n                        onClick && onClick(link);\n                    }, justifyContent: 'left', pt: 2, pb: 2, w: '0', h: '100%' }, icon)));\n    };\n};\n//# sourceMappingURL=data:application/json;base64,",
          "link_id": 3936
        },
        "__typename": "links"
      },
      "__typename": "handlers"
    },
    {
      "dist_id": 4545,
      "src_id": 4545,
      "handler_id": 4556,
      "execution_provider_id": 33,
      "isolation_provider_id": 144,
      "dist": {
        "id": 4545,
        "type_id": 717,
        "from_id": 0,
        "to_id": 0,
        "value": null,
        "__typename": "links"
      },
      "__typename": "handlers"
    },
    {
      "dist_id": 4549,
      "src_id": 4549,
      "handler_id": 4553,
      "execution_provider_id": 33,
      "isolation_provider_id": 144,
      "dist": {
        "id": 4549,
        "type_id": 717,
        "from_id": 0,
        "to_id": 0,
        "value": null,
        "__typename": "links"
      },
      "__typename": "handlers"
    },
    {
      "dist_id": 4586,
      "src_id": 4001,
      "handler_id": 4005,
      "execution_provider_id": 33,
      "isolation_provider_id": 144,
      "dist": {
        "id": 4586,
        "type_id": 30,
        "from_id": 0,
        "to_id": 0,
        "value": {
          "id": 1026,
          "value": "({ deep, data, require, go }) => {\n    const React = require('react');\n    const c = require('@chakra-ui/react');\n    const dpl = '@deep-foundation/perception-links';\n    const dc = '@deep-foundation/core';\n    return ({ go, disclosure: _disclosure, defaultContainerId, defaultTypeId, defaultFromId, defaultToId, isActive, }, ref) => {\n        const __disclosure = c.useDisclosure();\n        const disclosure = _disclosure || __disclosure;\n        return React.createElement(go.On, { do: {\n                'exec': () => disclosure.onOpen(),\n            } },\n            React.createElement(c.Button, { ref: ref, variant: isActive ? 'active' : undefined, justifyContent: 'center', position: 'relative', onClick: () => go.do('exec') },\n                React.createElement(c.Box, { position: 'absolute', right: 1, top: 1 }, true ? '🔓' : '🔒'),\n                React.createElement(c.Text, { pr: 1 }, \"+\"),\n                \" insert\"),\n            React.createElement(go.Component, { path: [dpl, 'LinkInsertModal'], disclosure: disclosure, defaultContainerId: defaultContainerId, defaultTypeId: defaultTypeId, defaultFromId: defaultFromId, defaultToId: defaultToId }));\n    };\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsibW9kdWxlLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxDQUFDLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRTtJQUM5QixNQUFNLEtBQUssR0FBRyxPQUFPLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDL0IsTUFBTSxDQUFDLEdBQUcsT0FBTyxDQUFDLGtCQUFrQixDQUFDLENBQUM7SUFFdEMsTUFBTSxHQUFHLEdBQUcsbUNBQW1DLENBQUM7SUFDaEQsTUFBTSxFQUFFLEdBQUcsdUJBQXVCLENBQUM7SUFFbkMsT0FBTyxDQUFDLEVBQ04sRUFBRSxFQUVGLFVBQVUsRUFBRSxXQUFXLEVBRXZCLGtCQUFrQixFQUNsQixhQUFhLEVBQ2IsYUFBYSxFQUNiLFdBQVcsRUFFWCxRQUFRLEdBQ1QsRUFBRSxHQUFHLEVBQUUsRUFBRTtRQUNSLE1BQU0sWUFBWSxHQUFHLENBQUMsQ0FBQyxhQUFhLEVBQUUsQ0FBQztRQUN2QyxNQUFNLFVBQVUsR0FBRyxXQUFXLElBQUksWUFBWSxDQUFDO1FBRS9DLE9BQU8sb0JBQUMsRUFBRSxDQUFDLEVBQUUsSUFBQyxFQUFFLEVBQUU7Z0JBQ2hCLE1BQU0sRUFBRSxHQUFHLEVBQUUsQ0FBQyxVQUFVLENBQUMsTUFBTSxFQUFFO2FBQ2xDO1lBQ0Msb0JBQUMsQ0FBQyxDQUFDLE1BQU0sSUFDUCxHQUFHLEVBQUUsR0FBRyxFQUNSLE9BQU8sRUFBRSxRQUFRLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsU0FBUyxFQUFFLGNBQWMsRUFBQyxRQUFRLEVBQUMsUUFBUSxFQUFDLFVBQVUsRUFDckYsT0FBTyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsTUFBTSxDQUFDO2dCQUU1QixvQkFBQyxDQUFDLENBQUMsR0FBRyxJQUFDLFFBQVEsRUFBQyxVQUFVLEVBQUMsS0FBSyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxJQUFHLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQVM7Z0JBQ3pFLG9CQUFDLENBQUMsQ0FBQyxJQUFJLElBQUMsRUFBRSxFQUFFLENBQUMsUUFBWTswQkFDaEI7WUFDWCxvQkFBQyxFQUFFLENBQUMsU0FBUyxJQUFDLElBQUksRUFBRSxDQUFDLEdBQUcsRUFBRSxpQkFBaUIsQ0FBQyxFQUFFLFVBQVUsRUFBRSxVQUFVLEVBQ2xFLGtCQUFrQixFQUFFLGtCQUFrQixFQUN0QyxhQUFhLEVBQUUsYUFBYSxFQUM1QixhQUFhLEVBQUUsYUFBYSxFQUM1QixXQUFXLEVBQUUsV0FBVyxHQUN4QixDQUNJLENBQUM7SUFDWCxDQUFDLENBQUM7QUFDSixDQUFDLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyIoeyBkZWVwLCBkYXRhLCByZXF1aXJlLCBnbyB9KSA9PiB7XG4gIGNvbnN0IFJlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcbiAgY29uc3QgYyA9IHJlcXVpcmUoJ0BjaGFrcmEtdWkvcmVhY3QnKTtcblxuICBjb25zdCBkcGwgPSAnQGRlZXAtZm91bmRhdGlvbi9wZXJjZXB0aW9uLWxpbmtzJztcbiAgY29uc3QgZGMgPSAnQGRlZXAtZm91bmRhdGlvbi9jb3JlJztcblxuICByZXR1cm4gKHtcbiAgICBnbyxcblxuICAgIGRpc2Nsb3N1cmU6IF9kaXNjbG9zdXJlLFxuXG4gICAgZGVmYXVsdENvbnRhaW5lcklkLFxuICAgIGRlZmF1bHRUeXBlSWQsXG4gICAgZGVmYXVsdEZyb21JZCxcbiAgICBkZWZhdWx0VG9JZCxcblxuICAgIGlzQWN0aXZlLFxuICB9LCByZWYpID0+IHtcbiAgICBjb25zdCBfX2Rpc2Nsb3N1cmUgPSBjLnVzZURpc2Nsb3N1cmUoKTtcbiAgICBjb25zdCBkaXNjbG9zdXJlID0gX2Rpc2Nsb3N1cmUgfHwgX19kaXNjbG9zdXJlO1xuXG4gICAgcmV0dXJuIDxnby5PbiBkbz17e1xuICAgICAgJ2V4ZWMnOiAoKSA9PiBkaXNjbG9zdXJlLm9uT3BlbigpLFxuICAgIH19PlxuICAgICAgPGMuQnV0dG9uXG4gICAgICAgIHJlZj17cmVmfVxuICAgICAgICB2YXJpYW50PXtpc0FjdGl2ZSA/ICdhY3RpdmUnIDogdW5kZWZpbmVkfSBqdXN0aWZ5Q29udGVudD0nY2VudGVyJyBwb3NpdGlvbj0ncmVsYXRpdmUnXG4gICAgICAgIG9uQ2xpY2s9eygpID0+IGdvLmRvKCdleGVjJyl9XG4gICAgICA+XG4gICAgICAgIDxjLkJveCBwb3NpdGlvbj0nYWJzb2x1dGUnIHJpZ2h0PXsxfSB0b3A9ezF9Pnt0cnVlID8gJ/CflJMnIDogJ/CflJInfTwvYy5Cb3g+XG4gICAgICAgIDxjLlRleHQgcHI9ezF9Pis8L2MuVGV4dD4gaW5zZXJ0XG4gICAgICA8L2MuQnV0dG9uPlxuICAgICAgPGdvLkNvbXBvbmVudCBwYXRoPXtbZHBsLCAnTGlua0luc2VydE1vZGFsJ119IGRpc2Nsb3N1cmU9e2Rpc2Nsb3N1cmV9XG4gICAgICAgIGRlZmF1bHRDb250YWluZXJJZD17ZGVmYXVsdENvbnRhaW5lcklkfVxuICAgICAgICBkZWZhdWx0VHlwZUlkPXtkZWZhdWx0VHlwZUlkfVxuICAgICAgICBkZWZhdWx0RnJvbUlkPXtkZWZhdWx0RnJvbUlkfVxuICAgICAgICBkZWZhdWx0VG9JZD17ZGVmYXVsdFRvSWR9XG4gICAgICAvPlxuICAgIDwvZ28uT24+O1xuICB9O1xufSJdfQ==",
          "link_id": 4586
        },
        "__typename": "links"
      },
      "__typename": "handlers"
    },
    {
      "dist_id": 4621,
      "src_id": 3983,
      "handler_id": 3987,
      "execution_provider_id": 33,
      "isolation_provider_id": 144,
      "dist": {
        "id": 4621,
        "type_id": 30,
        "from_id": 0,
        "to_id": 0,
        "value": {
          "id": 1030,
          "value": "({ deep, data, require, go }) => {\n    const React = require('react');\n    const c = require('@chakra-ui/react');\n    const dpl = '@deep-foundation/perception-links';\n    const dc = '@deep-foundation/core';\n    return ({ go, linkId, containerId, disclosure: _disclosure, isActive, }, ref) => {\n        if (!linkId)\n            throw new Error('!linkId');\n        const __disclosure = c.useDisclosure();\n        const disclosure = _disclosure || __disclosure;\n        return React.createElement(go.On, { do: {\n                'exec': () => disclosure.onOpen(),\n            } },\n            React.createElement(c.Button, { ref: ref, variant: isActive ? 'active' : undefined, justifyContent: 'center', position: 'relative', onClick: () => go.do('exec') },\n                React.createElement(c.Box, { position: 'absolute', right: 1, top: 1 }, true ? '🔓' : '🔒'),\n                React.createElement(c.Text, { pr: 1 }, \"x\"),\n                \" delete\"),\n            React.createElement(go.Component, { path: [dpl, 'LinkDeleteModal'], disclosure: disclosure, linkId: linkId, containerId: containerId }));\n    };\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsibW9kdWxlLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxDQUFDLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRTtJQUM5QixNQUFNLEtBQUssR0FBRyxPQUFPLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDL0IsTUFBTSxDQUFDLEdBQUcsT0FBTyxDQUFDLGtCQUFrQixDQUFDLENBQUM7SUFFdEMsTUFBTSxHQUFHLEdBQUcsbUNBQW1DLENBQUM7SUFDaEQsTUFBTSxFQUFFLEdBQUcsdUJBQXVCLENBQUM7SUFFbkMsT0FBTyxDQUFDLEVBQ04sRUFBRSxFQUVGLE1BQU0sRUFDTixXQUFXLEVBRVgsVUFBVSxFQUFFLFdBQVcsRUFDdkIsUUFBUSxHQUNULEVBQUUsR0FBRyxFQUFFLEVBQUU7UUFDUixJQUFJLENBQUMsTUFBTTtZQUFFLE1BQU0sSUFBSSxLQUFLLENBQUMsU0FBUyxDQUFDLENBQUM7UUFFeEMsTUFBTSxZQUFZLEdBQUcsQ0FBQyxDQUFDLGFBQWEsRUFBRSxDQUFDO1FBQ3ZDLE1BQU0sVUFBVSxHQUFHLFdBQVcsSUFBSSxZQUFZLENBQUM7UUFFL0MsT0FBTyxvQkFBQyxFQUFFLENBQUMsRUFBRSxJQUFDLEVBQUUsRUFBRTtnQkFDaEIsTUFBTSxFQUFFLEdBQUcsRUFBRSxDQUFDLFVBQVUsQ0FBQyxNQUFNLEVBQUU7YUFDbEM7WUFDQyxvQkFBQyxDQUFDLENBQUMsTUFBTSxJQUNQLEdBQUcsRUFBRSxHQUFHLEVBQ1IsT0FBTyxFQUFFLFFBQVEsQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxTQUFTLEVBQUUsY0FBYyxFQUFDLFFBQVEsRUFBQyxRQUFRLEVBQUMsVUFBVSxFQUNyRixPQUFPLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUM7Z0JBRTVCLG9CQUFDLENBQUMsQ0FBQyxHQUFHLElBQUMsUUFBUSxFQUFDLFVBQVUsRUFBQyxLQUFLLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLElBQUcsSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBUztnQkFDekUsb0JBQUMsQ0FBQyxDQUFDLElBQUksSUFBQyxFQUFFLEVBQUUsQ0FBQyxRQUFZOzBCQUNoQjtZQUNYLG9CQUFDLEVBQUUsQ0FBQyxTQUFTLElBQUMsSUFBSSxFQUFFLENBQUMsR0FBRyxFQUFFLGlCQUFpQixDQUFDLEVBQUUsVUFBVSxFQUFFLFVBQVUsRUFBRSxNQUFNLEVBQUUsTUFBTSxFQUFFLFdBQVcsRUFBRSxXQUFXLEdBQUcsQ0FDckcsQ0FBQztJQUNqQixDQUFDLENBQUM7QUFDSixDQUFDLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyIoeyBkZWVwLCBkYXRhLCByZXF1aXJlLCBnbyB9KSA9PiB7XG4gIGNvbnN0IFJlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcbiAgY29uc3QgYyA9IHJlcXVpcmUoJ0BjaGFrcmEtdWkvcmVhY3QnKTtcblxuICBjb25zdCBkcGwgPSAnQGRlZXAtZm91bmRhdGlvbi9wZXJjZXB0aW9uLWxpbmtzJztcbiAgY29uc3QgZGMgPSAnQGRlZXAtZm91bmRhdGlvbi9jb3JlJztcblxuICByZXR1cm4gKHtcbiAgICBnbyxcblxuICAgIGxpbmtJZCxcbiAgICBjb250YWluZXJJZCxcblxuICAgIGRpc2Nsb3N1cmU6IF9kaXNjbG9zdXJlLFxuICAgIGlzQWN0aXZlLFxuICB9LCByZWYpID0+IHtcbiAgICBpZiAoIWxpbmtJZCkgdGhyb3cgbmV3IEVycm9yKCchbGlua0lkJyk7XG5cbiAgICBjb25zdCBfX2Rpc2Nsb3N1cmUgPSBjLnVzZURpc2Nsb3N1cmUoKTtcbiAgICBjb25zdCBkaXNjbG9zdXJlID0gX2Rpc2Nsb3N1cmUgfHwgX19kaXNjbG9zdXJlO1xuXG4gICAgcmV0dXJuIDxnby5PbiBkbz17e1xuICAgICAgJ2V4ZWMnOiAoKSA9PiBkaXNjbG9zdXJlLm9uT3BlbigpLFxuICAgIH19PlxuICAgICAgPGMuQnV0dG9uXG4gICAgICAgIHJlZj17cmVmfVxuICAgICAgICB2YXJpYW50PXtpc0FjdGl2ZSA/ICdhY3RpdmUnIDogdW5kZWZpbmVkfSBqdXN0aWZ5Q29udGVudD0nY2VudGVyJyBwb3NpdGlvbj0ncmVsYXRpdmUnXG4gICAgICAgIG9uQ2xpY2s9eygpID0+IGdvLmRvKCdleGVjJyl9XG4gICAgICA+XG4gICAgICAgIDxjLkJveCBwb3NpdGlvbj0nYWJzb2x1dGUnIHJpZ2h0PXsxfSB0b3A9ezF9Pnt0cnVlID8gJ/CflJMnIDogJ/CflJInfTwvYy5Cb3g+XG4gICAgICAgIDxjLlRleHQgcHI9ezF9Png8L2MuVGV4dD4gZGVsZXRlXG4gICAgICA8L2MuQnV0dG9uPlxuICAgICAgPGdvLkNvbXBvbmVudCBwYXRoPXtbZHBsLCAnTGlua0RlbGV0ZU1vZGFsJ119IGRpc2Nsb3N1cmU9e2Rpc2Nsb3N1cmV9IGxpbmtJZD17bGlua0lkfSBjb250YWluZXJJZD17Y29udGFpbmVySWR9Lz5cbiAgICA8L2dvLlByb3ZpZGVyPjtcbiAgfTtcbn0iXX0=",
          "link_id": 4621
        },
        "__typename": "links"
      },
      "__typename": "handlers"
    },
    {
      "dist_id": 5320,
      "src_id": 5236,
      "handler_id": 5240,
      "execution_provider_id": 33,
      "isolation_provider_id": 144,
      "dist": {
        "id": 5320,
        "type_id": 30,
        "from_id": 0,
        "to_id": 0,
        "value": {
          "id": 1182,
          "value": "async ({ deep, data, Go, require }) => {\n    const React = require('react');\n    const c = require('@chakra-ui/react');\n    const dpl = '@deep-foundation/perception-links';\n    const dc = '@deep-foundation/core';\n    const dml = '@deep-foundation/deepmemo-links';\n    const Handler = deep.idLocal(dc, 'Handler');\n    const Compatable = deep.idLocal(dpl, 'Compatable');\n    const Header = deep.idLocal(dpl, 'Header');\n    const Menu = deep.idLocal(dpl, 'Menu');\n    const Stack = deep.idLocal(dpl, 'Stack');\n    const Item = ({ link, isActive }) => (React.createElement(Go.Handler, { handlerId: link.id, linkId: link.id, isActive: isActive }));\n    return ({ go, }, ref) => {\n        const { data: menu } = deep.useSubscription({\n            type_id: Handler,\n            out: {\n                type_id: Compatable,\n                to_id: Menu,\n            },\n            order_by: { id: 'desc' }\n        });\n        return React.createElement(go.On, { do: {\n                focus: (g, v, linkId, o) => {\n                    !go.value && go.focus(Stack);\n                    o?.id && go(Stack).focus(o?.id);\n                },\n            } },\n            React.createElement(go.Provider, { linkId: Stack },\n                React.createElement(go.Component, { path: [dpl, 'Stack'], links: menu, direction: 'vertical', Item: Item })));\n    };\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsibW9kdWxlLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxLQUFLLEVBQUUsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLEVBQUUsRUFBRSxPQUFPLEVBQUUsRUFBRSxFQUFFO0lBQ3BDLE1BQU0sS0FBSyxHQUFHLE9BQU8sQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUMvQixNQUFNLENBQUMsR0FBRyxPQUFPLENBQUMsa0JBQWtCLENBQUMsQ0FBQztJQUV0QyxNQUFNLEdBQUcsR0FBRyxtQ0FBbUMsQ0FBQztJQUNoRCxNQUFNLEVBQUUsR0FBRyx1QkFBdUIsQ0FBQztJQUNuQyxNQUFNLEdBQUcsR0FBRyxpQ0FBaUMsQ0FBQztJQUU5QyxNQUFNLE9BQU8sR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLEVBQUUsRUFBRSxTQUFTLENBQUMsQ0FBQztJQUM1QyxNQUFNLFVBQVUsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxZQUFZLENBQUMsQ0FBQztJQUNuRCxNQUFNLE1BQU0sR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxRQUFRLENBQUMsQ0FBQztJQUMzQyxNQUFNLElBQUksR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxNQUFNLENBQUMsQ0FBQztJQUN2QyxNQUFNLEtBQUssR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxPQUFPLENBQUMsQ0FBQztJQUV6QyxNQUFNLElBQUksR0FBRyxDQUFDLEVBQUUsSUFBSSxFQUFFLFFBQVEsRUFBRSxFQUFFLEVBQUUsQ0FBQyxDQUFDLG9CQUFDLEVBQUUsQ0FBQyxPQUFPLElBQy9DLFNBQVMsRUFBRSxJQUFJLENBQUMsRUFBRSxFQUNsQixNQUFNLEVBQUUsSUFBSSxDQUFDLEVBQUUsRUFDZixRQUFRLEVBQUUsUUFBUSxHQUNsQixDQUFDLENBQUM7SUFFSixPQUFPLENBQUMsRUFDTixFQUFFLEdBQ0gsRUFBRSxHQUFHLEVBQUUsRUFBRTtRQUNSLE1BQU0sRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLEdBQUcsSUFBSSxDQUFDLGVBQWUsQ0FBQztZQUMxQyxPQUFPLEVBQUUsT0FBTztZQUNoQixHQUFHLEVBQUU7Z0JBQ0gsT0FBTyxFQUFFLFVBQVU7Z0JBQ25CLEtBQUssRUFBRSxJQUFJO2FBQ1o7WUFDRCxRQUFRLEVBQUUsRUFBRSxFQUFFLEVBQUUsTUFBTSxFQUFFO1NBQ3pCLENBQUMsQ0FBQztRQUVILE9BQU8sb0JBQUMsRUFBRSxDQUFDLEVBQUUsSUFBQyxFQUFFLEVBQUU7Z0JBQ2hCLEtBQUssRUFBRSxDQUFDLENBQUMsRUFBQyxDQUFDLEVBQUMsTUFBTSxFQUFDLENBQUMsRUFBRSxFQUFFO29CQUN0QixDQUFDLEVBQUUsQ0FBQyxLQUFLLElBQUksRUFBRSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQztvQkFDN0IsQ0FBQyxFQUFFLEVBQUUsSUFBSSxFQUFFLENBQUMsS0FBSyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQztnQkFDbEMsQ0FBQzthQUNGO1lBQ0Msb0JBQUMsRUFBRSxDQUFDLFFBQVEsSUFBQyxNQUFNLEVBQUUsS0FBSztnQkFDeEIsb0JBQUMsRUFBRSxDQUFDLFNBQVMsSUFBQyxJQUFJLEVBQUUsQ0FBQyxHQUFHLEVBQUUsT0FBTyxDQUFDLEVBQUUsS0FBSyxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUMsVUFBVSxFQUFDLElBQUksRUFBRSxJQUFJLEdBQUcsQ0FDdkUsQ0FDUixDQUFDO0lBQ1gsQ0FBQyxDQUFDO0FBQ0osQ0FBQyxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiYXN5bmMgKHsgZGVlcCwgZGF0YSwgR28sIHJlcXVpcmUgfSkgPT4ge1xuICBjb25zdCBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XG4gIGNvbnN0IGMgPSByZXF1aXJlKCdAY2hha3JhLXVpL3JlYWN0Jyk7XG5cbiAgY29uc3QgZHBsID0gJ0BkZWVwLWZvdW5kYXRpb24vcGVyY2VwdGlvbi1saW5rcyc7XG4gIGNvbnN0IGRjID0gJ0BkZWVwLWZvdW5kYXRpb24vY29yZSc7XG4gIGNvbnN0IGRtbCA9ICdAZGVlcC1mb3VuZGF0aW9uL2RlZXBtZW1vLWxpbmtzJztcblxuICBjb25zdCBIYW5kbGVyID0gZGVlcC5pZExvY2FsKGRjLCAnSGFuZGxlcicpO1xuICBjb25zdCBDb21wYXRhYmxlID0gZGVlcC5pZExvY2FsKGRwbCwgJ0NvbXBhdGFibGUnKTtcbiAgY29uc3QgSGVhZGVyID0gZGVlcC5pZExvY2FsKGRwbCwgJ0hlYWRlcicpO1xuICBjb25zdCBNZW51ID0gZGVlcC5pZExvY2FsKGRwbCwgJ01lbnUnKTtcbiAgY29uc3QgU3RhY2sgPSBkZWVwLmlkTG9jYWwoZHBsLCAnU3RhY2snKTtcblxuICBjb25zdCBJdGVtID0gKHsgbGluaywgaXNBY3RpdmUgfSkgPT4gKDxHby5IYW5kbGVyXG4gICAgaGFuZGxlcklkPXtsaW5rLmlkfVxuICAgIGxpbmtJZD17bGluay5pZH1cbiAgICBpc0FjdGl2ZT17aXNBY3RpdmV9XG4gIC8+KTtcbiAgXG4gIHJldHVybiAoe1xuICAgIGdvLFxuICB9LCByZWYpID0+IHtcbiAgICBjb25zdCB7IGRhdGE6IG1lbnUgfSA9IGRlZXAudXNlU3Vic2NyaXB0aW9uKHtcbiAgICAgIHR5cGVfaWQ6IEhhbmRsZXIsXG4gICAgICBvdXQ6IHtcbiAgICAgICAgdHlwZV9pZDogQ29tcGF0YWJsZSxcbiAgICAgICAgdG9faWQ6IE1lbnUsXG4gICAgICB9LFxuICAgICAgb3JkZXJfYnk6IHsgaWQ6ICdkZXNjJyB9XG4gICAgfSk7XG5cbiAgICByZXR1cm4gPGdvLk9uIGRvPXt7XG4gICAgICBmb2N1czogKGcsdixsaW5rSWQsbykgPT4ge1xuICAgICAgICAhZ28udmFsdWUgJiYgZ28uZm9jdXMoU3RhY2spO1xuICAgICAgICBvPy5pZCAmJiBnbyhTdGFjaykuZm9jdXMobz8uaWQpO1xuICAgICAgfSxcbiAgICB9fT5cbiAgICAgIDxnby5Qcm92aWRlciBsaW5rSWQ9e1N0YWNrfT5cbiAgICAgICAgPGdvLkNvbXBvbmVudCBwYXRoPXtbZHBsLCAnU3RhY2snXX0gbGlua3M9e21lbnV9IGRpcmVjdGlvbj0ndmVydGljYWwnIEl0ZW09e0l0ZW19Lz5cbiAgICAgIDwvZ28uUHJvdmlkZXI+XG4gICAgPC9nby5Pbj47XG4gIH07XG59Il19",
          "link_id": 5320
        },
        "__typename": "links"
      },
      "__typename": "handlers"
    },
    {
      "dist_id": 5510,
      "src_id": 5298,
      "handler_id": 5304,
      "execution_provider_id": 33,
      "isolation_provider_id": 144,
      "dist": {
        "id": 5510,
        "type_id": 30,
        "from_id": 0,
        "to_id": 0,
        "value": {
          "id": 1202,
          "value": "async ({ deep, data, require }) => {\n    const React = require('react');\n    const { FaTree } = require(\"react-icons/fa\");\n    const c = require('@chakra-ui/react');\n    const dpl = '@deep-foundation/perception-links';\n    const dc = '@deep-foundation/core';\n    const Tree = deep.idLocal(dpl, 'Tree');\n    return ({ go, handlerId, isActive, }, ref) => {\n        return React.createElement(go.On, { do: {\n                exec: (g, v, o) => go.go.do('right', { ...o, id: Tree }),\n                click: (g, v, o) => go.do('exec', o),\n                right: (g, v, o) => go.do('exec', o),\n            } },\n            React.createElement(c.Button, { w: '3em', h: '3em', variant: isActive ? 'active' : undefined, ref: ref, onClick: () => go.do('exec') },\n                React.createElement(FaTree, null)));\n    };\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsibW9kdWxlLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxLQUFLLEVBQUUsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLE9BQU8sRUFBRSxFQUFFLEVBQUU7SUFDaEMsTUFBTSxLQUFLLEdBQUcsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQy9CLE1BQU0sRUFBRSxNQUFNLEVBQUUsR0FBRyxPQUFPLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztJQUM3QyxNQUFNLENBQUMsR0FBRyxPQUFPLENBQUMsa0JBQWtCLENBQUMsQ0FBQztJQUV0QyxNQUFNLEdBQUcsR0FBRyxtQ0FBbUMsQ0FBQztJQUNoRCxNQUFNLEVBQUUsR0FBRyx1QkFBdUIsQ0FBQztJQUVuQyxNQUFNLElBQUksR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxNQUFNLENBQUMsQ0FBQztJQUV2QyxPQUFPLENBQUMsRUFDTixFQUFFLEVBQ0YsU0FBUyxFQUVULFFBQVEsR0FDVCxFQUFFLEdBQUcsRUFBRSxFQUFFO1FBQ1IsT0FBTyxvQkFBQyxFQUFFLENBQUMsRUFBRSxJQUFDLEVBQUUsRUFBRTtnQkFDaEIsSUFBSSxFQUFFLENBQUMsQ0FBQyxFQUFDLENBQUMsRUFBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLE9BQU8sRUFBRSxFQUFFLEdBQUcsQ0FBQyxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsQ0FBQztnQkFDdEQsS0FBSyxFQUFFLENBQUMsQ0FBQyxFQUFDLENBQUMsRUFBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsTUFBTSxFQUFFLENBQUMsQ0FBQztnQkFDbEMsS0FBSyxFQUFFLENBQUMsQ0FBQyxFQUFDLENBQUMsRUFBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsTUFBTSxFQUFFLENBQUMsQ0FBQzthQUNuQztZQUNDLG9CQUFDLENBQUMsQ0FBQyxNQUFNLElBQ1AsQ0FBQyxFQUFDLEtBQUssRUFBQyxDQUFDLEVBQUMsS0FBSyxFQUNmLE9BQU8sRUFBRSxRQUFRLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsU0FBUyxFQUN4QyxHQUFHLEVBQUUsR0FBRyxFQUNSLE9BQU8sRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLE1BQU0sQ0FBQztnQkFFNUIsb0JBQUMsTUFBTSxPQUFFLENBQ0EsQ0FDTCxDQUFDO0lBQ1gsQ0FBQyxDQUFDO0FBQ0osQ0FBQyxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiYXN5bmMgKHsgZGVlcCwgZGF0YSwgcmVxdWlyZSB9KSA9PiB7XG4gIGNvbnN0IFJlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcbiAgY29uc3QgeyBGYVRyZWUgfSA9IHJlcXVpcmUoXCJyZWFjdC1pY29ucy9mYVwiKTtcbiAgY29uc3QgYyA9IHJlcXVpcmUoJ0BjaGFrcmEtdWkvcmVhY3QnKTtcblxuICBjb25zdCBkcGwgPSAnQGRlZXAtZm91bmRhdGlvbi9wZXJjZXB0aW9uLWxpbmtzJztcbiAgY29uc3QgZGMgPSAnQGRlZXAtZm91bmRhdGlvbi9jb3JlJztcblxuICBjb25zdCBUcmVlID0gZGVlcC5pZExvY2FsKGRwbCwgJ1RyZWUnKTtcblxuICByZXR1cm4gKHtcbiAgICBnbyxcbiAgICBoYW5kbGVySWQsXG5cbiAgICBpc0FjdGl2ZSxcbiAgfSwgcmVmKSA9PiB7XG4gICAgcmV0dXJuIDxnby5PbiBkbz17e1xuICAgICAgZXhlYzogKGcsdixvKSA9PiBnby5nby5kbygncmlnaHQnLCB7IC4uLm8sIGlkOiBUcmVlIH0pKSxcbiAgICAgIGNsaWNrOiAoZyx2LG8pID0+IGdvLmRvKCdleGVjJywgbyksXG4gICAgICByaWdodDogKGcsdixvKSA9PiBnby5kbygnZXhlYycsIG8pLFxuICAgIH19PlxuICAgICAgPGMuQnV0dG9uXG4gICAgICAgIHc9JzNlbScgaD0nM2VtJ1xuICAgICAgICB2YXJpYW50PXtpc0FjdGl2ZSA/ICdhY3RpdmUnIDogdW5kZWZpbmVkfVxuICAgICAgICByZWY9e3JlZn1cbiAgICAgICAgb25DbGljaz17KCkgPT4gZ28uZG8oJ2V4ZWMnKX1cbiAgICAgID5cbiAgICAgICAgPEZhVHJlZS8+XG4gICAgICA8L2MuQnV0dG9uPlxuICAgIDwvZ28uT24+O1xuICB9O1xufSJdfQ==",
          "link_id": 5510
        },
        "__typename": "links"
      },
      "__typename": "handlers"
    },
    {
      "dist_id": 5679,
      "src_id": 5601,
      "handler_id": 5605,
      "execution_provider_id": 33,
      "isolation_provider_id": 144,
      "dist": {
        "id": 5679,
        "type_id": 30,
        "from_id": 0,
        "to_id": 0,
        "value": {
          "id": 1239,
          "value": "async ({ deep, data, require }) => {\n    const React = require('react');\n    const c = require('@chakra-ui/react');\n    const dpl = '@deep-foundation/perception-links';\n    const dc = '@deep-foundation/core';\n    const Tree = deep.idLocal(dpl, 'Tree');\n    return ({ go, using = false, fullWidth = null, }, ref) => {\n        return React.createElement(go.On, { do: {\n                focus: (g, v, linkId, o) => o?.id && go.focus(o.id),\n                use: (g, v, o) => go.current && go.current.do('use', o),\n                open: async (g, v, o) => {\n                    if (!go.current)\n                        await (go.focus(Tree).go.awaitRef(Tree));\n                    if (o?.id)\n                        go.current.do('open', o);\n                },\n                concentrate: (g, v, o) => {\n                    go.current && go.current.do('concentrate', o);\n                },\n            } },\n            React.createElement(c.Box, { ref: ref, w: '100%', h: '100%' }, !!go.value && [React.createElement(go.Provider, { key: go.value, linkId: go.value },\n                    React.createElement(go.Handler, { initialId: deep?.linkId, handlerId: go.value, saveHistory: true, using: using, fullWidth: fullWidth, queryField: 'opened' }))]));\n    };\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsibW9kdWxlLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxLQUFLLEVBQUUsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLE9BQU8sRUFBRSxFQUFFLEVBQUU7SUFDaEMsTUFBTSxLQUFLLEdBQUcsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQy9CLE1BQU0sQ0FBQyxHQUFHLE9BQU8sQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDO0lBRXRDLE1BQU0sR0FBRyxHQUFHLG1DQUFtQyxDQUFDO0lBQ2hELE1BQU0sRUFBRSxHQUFHLHVCQUF1QixDQUFDO0lBRW5DLE1BQU0sSUFBSSxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLE1BQU0sQ0FBQyxDQUFDO0lBRXZDLE9BQU8sQ0FBQyxFQUNOLEVBQUUsRUFFRixLQUFLLEdBQUcsS0FBSyxFQUNiLFNBQVMsR0FBRyxJQUFJLEdBQ2pCLEVBQUUsR0FBRyxFQUFFLEVBQUU7UUFJUixPQUFPLG9CQUFDLEVBQUUsQ0FBQyxFQUFFLElBQUMsRUFBRSxFQUFFO2dCQUNoQixLQUFLLEVBQUUsQ0FBQyxDQUFDLEVBQUMsQ0FBQyxFQUFDLE1BQU0sRUFBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsRUFBRSxFQUFFLElBQUksRUFBRSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDO2dCQUNoRCxHQUFHLEVBQUUsQ0FBQyxDQUFDLEVBQUMsQ0FBQyxFQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLE9BQU8sSUFBSSxFQUFFLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQyxLQUFLLEVBQUMsQ0FBQyxDQUFDO2dCQUNwRCxJQUFJLEVBQUUsS0FBSyxFQUFFLENBQUMsRUFBQyxDQUFDLEVBQUMsQ0FBQyxFQUFFLEVBQUU7b0JBQ3BCLElBQUksQ0FBQyxFQUFFLENBQUMsT0FBTzt3QkFBRSxNQUFNLENBQUMsRUFBRSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQyxFQUFFLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7b0JBQzFELElBQUksQ0FBQyxFQUFFLEVBQUU7d0JBQUUsRUFBRSxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUMsTUFBTSxFQUFDLENBQUMsQ0FBQyxDQUFDO2dCQUNyQyxDQUFDO2dCQUNELFdBQVcsRUFBRSxDQUFDLENBQUMsRUFBQyxDQUFDLEVBQUMsQ0FBQyxFQUFFLEVBQUU7b0JBQ3JCLEVBQUUsQ0FBQyxPQUFPLElBQUksRUFBRSxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUMsYUFBYSxFQUFFLENBQUMsQ0FBQyxDQUFDO2dCQUNoRCxDQUFDO2FBQ0Y7WUFDQyxvQkFBQyxDQUFDLENBQUMsR0FBRyxJQUFDLEdBQUcsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFDLE1BQU0sRUFBQyxDQUFDLEVBQUMsTUFBTSxJQUMvQixDQUFDLENBQUMsRUFBRSxDQUFDLEtBQUssSUFBSSxDQUFDLG9CQUFDLEVBQUUsQ0FBQyxRQUFRLElBQUMsR0FBRyxFQUFFLEVBQUUsQ0FBQyxLQUFLLEVBQUUsTUFBTSxFQUFFLEVBQUUsQ0FBQyxLQUFLO29CQUMxRCxvQkFBQyxFQUFFLENBQUMsT0FBTyxJQUNULFNBQVMsRUFBRSxJQUFJLEVBQUUsTUFBTSxFQUN2QixTQUFTLEVBQUUsRUFBRSxDQUFDLEtBQUssRUFDbkIsV0FBVyxRQUNYLEtBQUssRUFBRSxLQUFLLEVBQ1osU0FBUyxFQUFFLFNBQVMsRUFDcEIsVUFBVSxFQUFDLFFBQVEsR0FDbkIsQ0FDVSxDQUFDLENBQ1QsQ0FDRixDQUFDO0lBQ1gsQ0FBQyxDQUFDO0FBQ0osQ0FBQyxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiYXN5bmMgKHsgZGVlcCwgZGF0YSwgcmVxdWlyZSB9KSA9PiB7XG4gIGNvbnN0IFJlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcbiAgY29uc3QgYyA9IHJlcXVpcmUoJ0BjaGFrcmEtdWkvcmVhY3QnKTtcblxuICBjb25zdCBkcGwgPSAnQGRlZXAtZm91bmRhdGlvbi9wZXJjZXB0aW9uLWxpbmtzJztcbiAgY29uc3QgZGMgPSAnQGRlZXAtZm91bmRhdGlvbi9jb3JlJztcblxuICBjb25zdCBUcmVlID0gZGVlcC5pZExvY2FsKGRwbCwgJ1RyZWUnKTtcblxuICByZXR1cm4gKHtcbiAgICBnbyxcblxuICAgIHVzaW5nID0gZmFsc2UsXG4gICAgZnVsbFdpZHRoID0gbnVsbCxcbiAgfSwgcmVmKSA9PiB7XG4gICAgLy8gY29uc3QgW2xheWVyLCBzZXRMYXllcl0gPSBnby51c2VRdWVyeVN0b3JlKGBsYXllcmAsIFRyZWUpO1xuICAgIC8vIFJlYWN0LnVzZUVmZmVjdCgoKSA9PiBnby52YWx1ZSAmJiBzZXRMYXllcihnby52YWx1ZSksIFtnby52YWx1ZV0pO1xuXG4gICAgcmV0dXJuIDxnby5PbiBkbz17e1xuICAgICAgZm9jdXM6IChnLHYsbGlua0lkLG8pID0+IG8/LmlkICYmIGdvLmZvY3VzKG8uaWQpLFxuICAgICAgdXNlOiAoZyx2LG8pID0+IGdvLmN1cnJlbnQgJiYgZ28uY3VycmVudC5kbygndXNlJyxvKSxcbiAgICAgIG9wZW46IGFzeW5jIChnLHYsbykgPT4ge1xuICAgICAgICBpZiAoIWdvLmN1cnJlbnQpIGF3YWl0IChnby5mb2N1cyhUcmVlKS5nby5hd2FpdFJlZihUcmVlKSk7XG4gICAgICAgIGlmIChvPy5pZCkgZ28uY3VycmVudC5kbygnb3Blbicsbyk7XG4gICAgICB9LFxuICAgICAgY29uY2VudHJhdGU6IChnLHYsbykgPT4ge1xuICAgICAgICBnby5jdXJyZW50ICYmIGdvLmN1cnJlbnQuZG8oJ2NvbmNlbnRyYXRlJywgbyk7XG4gICAgICB9LFxuICAgIH19PlxuICAgICAgPGMuQm94IHJlZj17cmVmfSB3PScxMDAlJyBoPScxMDAlJz5cbiAgICAgICAgeyEhZ28udmFsdWUgJiYgWzxnby5Qcm92aWRlciBrZXk9e2dvLnZhbHVlfSBsaW5rSWQ9e2dvLnZhbHVlfT5cbiAgICAgICAgICA8Z28uSGFuZGxlclxuICAgICAgICAgICAgaW5pdGlhbElkPXtkZWVwPy5saW5rSWR9XG4gICAgICAgICAgICBoYW5kbGVySWQ9e2dvLnZhbHVlfVxuICAgICAgICAgICAgc2F2ZUhpc3RvcnlcbiAgICAgICAgICAgIHVzaW5nPXt1c2luZ31cbiAgICAgICAgICAgIGZ1bGxXaWR0aD17ZnVsbFdpZHRofVxuICAgICAgICAgICAgcXVlcnlGaWVsZD0nb3BlbmVkJ1xuICAgICAgICAgIC8+XG4gICAgICAgIDwvZ28uUHJvdmlkZXI+XX1cbiAgICAgIDwvYy5Cb3g+XG4gICAgPC9nby5Pbj47XG4gIH07XG59Il19",
          "link_id": 5679
        },
        "__typename": "links"
      },
      "__typename": "handlers"
    },
    {
      "dist_id": 5809,
      "src_id": 5809,
      "handler_id": 5821,
      "execution_provider_id": 33,
      "isolation_provider_id": 144,
      "dist": {
        "id": 5809,
        "type_id": 717,
        "from_id": 0,
        "to_id": 0,
        "value": null,
        "__typename": "links"
      },
      "__typename": "handlers"
    },
    {
      "dist_id": 5865,
      "src_id": 5865,
      "handler_id": 5869,
      "execution_provider_id": 33,
      "isolation_provider_id": 144,
      "dist": {
        "id": 5865,
        "type_id": 717,
        "from_id": 0,
        "to_id": 0,
        "value": null,
        "__typename": "links"
      },
      "__typename": "handlers"
    },
    {
      "dist_id": 6065,
      "src_id": 5628,
      "handler_id": 5632,
      "execution_provider_id": 33,
      "isolation_provider_id": 144,
      "dist": {
        "id": 6065,
        "type_id": 30,
        "from_id": 0,
        "to_id": 0,
        "value": {
          "id": 1284,
          "value": "async ({ deep, data, Go, require }) => {\n    const React = require('react');\n    const { MoonIcon, SunIcon } = require('@chakra-ui/icons');\n    const { GrGraphQl } = require(\"react-icons/gr\");\n    const { IoReload } = require(\"react-icons/io\");\n    const c = require('@chakra-ui/react');\n    const dpl = '@deep-foundation/perception-links';\n    const dc = '@deep-foundation/core';\n    const Menu = deep.idLocal(dpl, 'Menu');\n    const Layer = deep.idLocal(dpl, 'Layer');\n    const Header = deep.idLocal(dpl, 'Header');\n    const Queries = deep.idLocal(dpl, 'Queries');\n    const Tree = deep.idLocal(dpl, 'Tree');\n    return ({ go, linkId, Status, Auth, ColorMode, children, }, ref) => {\n        const nav = go.useNav();\n        nav(Menu, Menu, Header, Layer, Queries);\n        nav(Queries, Queries, Menu, Layer, Queries);\n        nav(Layer, Menu, Header, Layer, Layer);\n        nav(Header, Header, Header, Header, Layer);\n        React.useEffect(() => {\n            go.focus(Menu);\n        }, []);\n        const isMobile = c.useBreakpointValue({ base: true, md: false }, { fallback: 'xs' });\n        return React.createElement(go.On, { do: {\n                left: (g, v, o) => go.focus(nav.get(go.value, 'left'), o),\n                up: (g, v, o) => go.focus(nav.get(go.value, 'up'), o),\n                right: (g, v, o) => go.focus(nav.get(go.value, 'right'), o),\n                down: (g, v, o) => go.focus(nav.get(go.value, 'down'), o),\n                use: (g, v, o) => {\n                    if (go.data.usedId != o?.id && o?.id) {\n                        go.data.usedId = o.id;\n                        go(Header).do('use', o);\n                        go(Layer).do('use', o);\n                    }\n                },\n                open: async (g, v, o) => {\n                    if (!go(Layer))\n                        await (go.focus(Layer).go.awaitRef(Layer));\n                    go(Layer).do('open', o);\n                },\n                concentrate: (g, v, o) => {\n                    go(Layer).do('concentrate', o);\n                },\n            } },\n            React.createElement(c.Box, { ref: go.ref, h: '100vh', w: \"100vw\", position: \"fixed\", left: \"0%\", top: \"0%\" },\n                React.createElement(c.Grid, { templateAreas: `\"tabs tabs\"\n                              \"nav main\"`, gridTemplateRows: '3em 1fr', gridTemplateColumns: '3em 1fr', h: '100vh', w: \"100vw\", position: \"fixed\", left: \"0%\", top: \"0%\", color: 'blackAlpha.700', fontWeight: 'bold', ref: ref },\n                    React.createElement(c.GridItem, { area: 'tabs', zIndex: 1 },\n                        React.createElement(c.Flex, { w: \"100%\", h: \"100%\", bg: go.value === Header ? 'deepBgDark' : 'deepBg' },\n                            React.createElement(go.Provider, { linkId: Header },\n                                React.createElement(go.Handler, { linkId: deep.linkId, handlerId: Header, using: true })))),\n                    React.createElement(c.GridItem, { area: 'nav', zIndex: 1, position: \"relative\", h: \"100%\" },\n                        React.createElement(c.Flex, { direction: 'column', h: '100%', bg: go.value === Menu ? 'deepBgDark' : 'deepBg' },\n                            React.createElement(go.Provider, { linkId: Menu },\n                                React.createElement(go.Handler, { linkId: deep.linkId, handlerId: Menu }),\n                                React.createElement(c.Spacer, null)),\n                            React.createElement(c.VStack, null,\n                                React.createElement(c.Button, { w: '3em', h: '3em', as: 'a', href: `http://${deep?.client?.path}` },\n                                    React.createElement(GrGraphQl, null)),\n                                React.createElement(ColorMode, { w: '3em', h: '3em', dark: { children: React.createElement(SunIcon, null) }, light: { children: React.createElement(MoonIcon, null) } }),\n                                React.createElement(go.Provider, { linkId: Queries },\n                                    React.createElement(go.Component, { path: [dpl, 'Queries'], isActive: go.value === Queries },\n                                        React.createElement(Status, null))),\n                                React.createElement(Auth, null)))),\n                    React.createElement(c.GridItem, { area: 'main', overflow: \"hidden\", position: \"relative\", h: '100%', bg: go.value === Layer ? 'deepBgDark' : 'deepBg' },\n                        React.createElement(go.Provider, { linkId: Layer, value: Tree },\n                            React.createElement(go.Handler, { linkId: deep.linkId, handlerId: Layer, using: true, fullWidth: isMobile ? 'calc(100vw - 3em)' : null }))))));\n    };\n};\n//# sourceMappingURL=data:application/json;base64,",
          "link_id": 6065
        },
        "__typename": "links"
      },
      "__typename": "handlers"
    },
    {
      "dist_id": 6282,
      "src_id": 6262,
      "handler_id": 6266,
      "execution_provider_id": 33,
      "isolation_provider_id": 144,
      "dist": {
        "id": 6282,
        "type_id": 30,
        "from_id": 0,
        "to_id": 0,
        "value": {
          "id": 1318,
          "value": "async ({ deep, data, require }) => {\n    const React = require('react');\n    const { PiGraphBold } = require(\"react-icons/pi\");\n    const c = require('@chakra-ui/react');\n    const dpl = '@deep-foundation/perception-links';\n    const dc = '@deep-foundation/core';\n    const Graph = deep.idLocal(dpl, 'Graph');\n    return ({ go, handlerId, isActive, }, ref) => {\n        return React.createElement(go.On, { do: {\n                exec: (g, v, o) => go.go.do('right', { ...o, id: Graph }),\n                click: (g, v, o) => go.do('exec', o),\n                right: (g, v, o) => go.do('exec', o),\n            } },\n            React.createElement(c.Button, { w: '3em', h: '3em', variant: isActive ? 'active' : undefined, onClick: () => go.do('exec'), ref: ref },\n                React.createElement(PiGraphBold, null)));\n    };\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsibW9kdWxlLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxLQUFLLEVBQUUsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLE9BQU8sRUFBRSxFQUFFLEVBQUU7SUFDaEMsTUFBTSxLQUFLLEdBQUcsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQy9CLE1BQU0sRUFBRSxXQUFXLEVBQUUsR0FBRyxPQUFPLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztJQUNsRCxNQUFNLENBQUMsR0FBRyxPQUFPLENBQUMsa0JBQWtCLENBQUMsQ0FBQztJQUV0QyxNQUFNLEdBQUcsR0FBRyxtQ0FBbUMsQ0FBQztJQUNoRCxNQUFNLEVBQUUsR0FBRyx1QkFBdUIsQ0FBQztJQUVuQyxNQUFNLEtBQUssR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxPQUFPLENBQUMsQ0FBQztJQUV6QyxPQUFPLENBQUMsRUFDTixFQUFFLEVBQ0YsU0FBUyxFQUVULFFBQVEsR0FDVCxFQUFFLEdBQUcsRUFBRSxFQUFFO1FBQ1IsT0FBTyxvQkFBQyxFQUFFLENBQUMsRUFBRSxJQUFDLEVBQUUsRUFBRTtnQkFDaEIsSUFBSSxFQUFFLENBQUMsQ0FBQyxFQUFDLENBQUMsRUFBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLE9BQU8sRUFBRSxFQUFFLEdBQUcsQ0FBQyxFQUFFLEVBQUUsRUFBRSxLQUFLLEVBQUUsQ0FBQztnQkFDdkQsS0FBSyxFQUFFLENBQUMsQ0FBQyxFQUFDLENBQUMsRUFBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsTUFBTSxFQUFFLENBQUMsQ0FBQztnQkFDbEMsS0FBSyxFQUFFLENBQUMsQ0FBQyxFQUFDLENBQUMsRUFBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsTUFBTSxFQUFFLENBQUMsQ0FBQzthQUNuQztZQUNDLG9CQUFDLENBQUMsQ0FBQyxNQUFNLElBQ1AsQ0FBQyxFQUFDLEtBQUssRUFBQyxDQUFDLEVBQUMsS0FBSyxFQUNmLE9BQU8sRUFBRSxRQUFRLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsU0FBUyxFQUN4QyxPQUFPLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUMsRUFDNUIsR0FBRyxFQUFFLEdBQUc7Z0JBRVIsb0JBQUMsV0FBVyxPQUFFLENBQ0wsQ0FDTCxDQUFDO0lBQ1gsQ0FBQyxDQUFDO0FBQ0osQ0FBQyxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiYXN5bmMgKHsgZGVlcCwgZGF0YSwgcmVxdWlyZSB9KSA9PiB7XG4gIGNvbnN0IFJlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcbiAgY29uc3QgeyBQaUdyYXBoQm9sZCB9ID0gcmVxdWlyZShcInJlYWN0LWljb25zL3BpXCIpO1xuICBjb25zdCBjID0gcmVxdWlyZSgnQGNoYWtyYS11aS9yZWFjdCcpO1xuXG4gIGNvbnN0IGRwbCA9ICdAZGVlcC1mb3VuZGF0aW9uL3BlcmNlcHRpb24tbGlua3MnO1xuICBjb25zdCBkYyA9ICdAZGVlcC1mb3VuZGF0aW9uL2NvcmUnO1xuXG4gIGNvbnN0IEdyYXBoID0gZGVlcC5pZExvY2FsKGRwbCwgJ0dyYXBoJyk7XG5cbiAgcmV0dXJuICh7XG4gICAgZ28sXG4gICAgaGFuZGxlcklkLFxuXG4gICAgaXNBY3RpdmUsXG4gIH0sIHJlZikgPT4ge1xuICAgIHJldHVybiA8Z28uT24gZG89e3tcbiAgICAgIGV4ZWM6IChnLHYsbykgPT4gZ28uZ28uZG8oJ3JpZ2h0JywgeyAuLi5vLCBpZDogR3JhcGggfSkpLFxuICAgICAgY2xpY2s6IChnLHYsbykgPT4gZ28uZG8oJ2V4ZWMnLCBvKSxcbiAgICAgIHJpZ2h0OiAoZyx2LG8pID0+IGdvLmRvKCdleGVjJywgbyksXG4gICAgfX0+XG4gICAgICA8Yy5CdXR0b25cbiAgICAgICAgdz0nM2VtJyBoPSczZW0nXG4gICAgICAgIHZhcmlhbnQ9e2lzQWN0aXZlID8gJ2FjdGl2ZScgOiB1bmRlZmluZWR9XG4gICAgICAgIG9uQ2xpY2s9eygpID0+IGdvLmRvKCdleGVjJyl9XG4gICAgICAgIHJlZj17cmVmfVxuICAgICAgPlxuICAgICAgICA8UGlHcmFwaEJvbGQvPlxuICAgICAgPC9jLkJ1dHRvbj5cbiAgICA8L2dvLk9uPjtcbiAgfTtcbn0iXX0=",
          "link_id": 6282
        },
        "__typename": "links"
      },
      "__typename": "handlers"
    },
    {
      "dist_id": 8341,
      "src_id": 5646,
      "handler_id": 5650,
      "execution_provider_id": 33,
      "isolation_provider_id": 144,
      "dist": {
        "id": 8341,
        "type_id": 30,
        "from_id": 0,
        "to_id": 0,
        "value": {
          "id": 1359,
          "value": "async ({ deep, data, Go, require }) => {\n    const { GrClear } = require(\"react-icons/gr\");\n    const React = require('react');\n    const c = require('@chakra-ui/react');\n    const _ = require('lodash');\n    const { useDebounceCallback } = require('@react-hook/debounce');\n    const dpl = '@deep-foundation/perception-links';\n    const dc = '@deep-foundation/core';\n    const Contain = deep.idLocal(dc, 'Contain');\n    const containTree = deep.idLocal(dc, 'containTree');\n    const TreeLinkButton = deep.idLocal(dpl, 'TreeLinkButton');\n    const History = deep.idLocal(dpl, 'History');\n    const HistoryHandler = deep.idLocal(dpl, 'HistoryHandler');\n    const Menu = deep.idLocal(dpl, 'Menu');\n    const Stack = deep.idLocal(dpl, 'Stack');\n    const FinderButton = deep.idLocal(dpl, 'FinderButton');\n    const Item = ({ link, isActive, isConcentrated }) => {\n        const go = Go.useGo();\n        return React.createElement(Go.Handler, { handlerId: TreeLinkButton, linkId: link.id, isActive: isActive, minW: isConcentrated === false ? '3em' : '8em', h: '100%', maxH: '100%', variant: 'short', isConcentrated: isConcentrated });\n    };\n    return ({ go, using = false, }, ref) => {\n        const { data: history } = deep.useSubscription({\n            type_id: History,\n            from_id: deep.linkId,\n            order_by: { id: 'desc' },\n            limit: 30,\n            return: {\n                item: { relation: 'to' },\n            },\n        });\n        const [concentrate, setConcentrate] = React.useState('');\n        const concetrateDebounce = useDebounceCallback((concentrate) => {\n            go.root().do('concentrate', { value: concentrate });\n        }, 500);\n        React.useEffect(() => {\n            concetrateDebounce(concentrate);\n        }, [concentrate]);\n        const { data: items, ids } = React.useMemo(() => {\n            const _ids = [];\n            const filtered = _.uniqBy(history.map(h => h?.to), (l) => l?.id).filter(l => {\n                if (!!l?.id)\n                    _ids.push(l?.id);\n                return !!l?.id;\n            });\n            return { data: filtered, ids: _ids };\n        }, [history]);\n        const nav = go.useNav();\n        nav(FinderButton, FinderButton, FinderButton, Stack, 'down');\n        nav(Stack, FinderButton, Stack, 'clear', 'down');\n        nav('clear', Stack, 'clear', 'clear', 'down');\n        const { ids: concentrated } = deep.useSearch(concentrate, {\n            db: false, sort: false,\n            query: { id: { _in: ids } },\n            skip: !!concentrate,\n        });\n        console.log({ concentrated });\n        return React.createElement(go.On, { do: {\n                exec: (g, v, o) => o?.id || go.value == Stack || !go.value ? go.root().do('open', { id: o?.id || go(Stack).value, focus: true }) : go.do(go.value),\n                use: (g, v, o) => go(Stack) && go(Stack).do('use', o),\n                focus: (g, v, linkId, o) => {\n                    !go.value && go.focus(Stack);\n                    o?.id && go(Stack).focus(o?.id);\n                },\n                right: (g, v, o) => go.focus(nav.get(go.value || Stack, 'right')),\n                left: (g, v, o) => go.focus(nav.get(go.value || Stack, 'left')),\n                finder: (g, v, o) => go(FinderButton).do('exec'),\n                clear: (g, v, o) => deep.delete({\n                    up: {\n                        tree_id: containTree,\n                        parent: {\n                            type_id: Contain,\n                            to: { type_id: { _in: [History, HistoryHandler] } },\n                        },\n                    },\n                }),\n            } },\n            React.createElement(c.Flex, { ref: ref, w: '100%' },\n                React.createElement(go.Provider, { linkId: FinderButton },\n                    React.createElement(go.Handler, { handlerId: FinderButton, isActive: go.value === FinderButton })),\n                React.createElement(c.Box, { w: '12em', h: '100%', position: 'relative' },\n                    React.createElement(go.Editor, { value: concentrate, onChange: setConcentrate, fillSize: true, lineNumbers: false })),\n                React.createElement(go.Provider, { linkId: Stack },\n                    React.createElement(go.Component, { path: [dpl, 'Stack'], links: items, direction: 'horizontal', Item: Item, flex: '1', using: using, concentrated: !!concentrate && concentrated })),\n                React.createElement(c.Button, { h: '3em', w: '3em', variant: go.value === 'clear' ? 'active' : undefined, onClick: () => go.focus('clear').go.do('clear') },\n                    React.createElement(GrClear, null))));\n    };\n};\n//# sourceMappingURL=data:application/json;base64,",
          "link_id": 8341
        },
        "__typename": "links"
      },
      "__typename": "handlers"
    },
    {
      "dist_id": 10559,
      "src_id": 10426,
      "handler_id": 10430,
      "execution_provider_id": 33,
      "isolation_provider_id": 144,
      "dist": {
        "id": 10559,
        "type_id": 30,
        "from_id": 0,
        "to_id": 0,
        "value": {
          "id": 1435,
          "value": "({ deep, data, require, Go }) => {\n    const { MdEdit, MdPreview, MdSaveAlt } = require(\"react-icons/md\");\n    const { AiOutlineStop } = require(\"react-icons/ai\");\n    const { BsX, BsCheck2, BsXLg, BsDatabase, BsRegex } = require('react-icons/bs');\n    const { useResizeDetector } = require('react-resize-detector');\n    const { useDebounceCallback } = require('@react-hook/debounce');\n    const React = require('react');\n    const c = require('@chakra-ui/react');\n    const dpl = '@deep-foundation/perception-links';\n    const dc = '@deep-foundation/core';\n    const Contain = deep.idLocal('@deep-foundation/core', 'Contain');\n    const History = deep.idLocal(dpl, 'History');\n    const Header = deep.idLocal(dpl, 'Header');\n    const Search = deep.idLocal(dpl, 'Search');\n    const TreeQuery = deep.idLocal(dpl, 'TreeQuery');\n    const TreeLink = deep.idLocal(dpl, 'TreeLink');\n    const TreeLinkInsert = deep.idLocal(dpl, 'TreeLinkInsert');\n    const TreeLinkDelete = deep.idLocal(dpl, 'TreeLinkDelete');\n    const TreeLinkButton = deep.idLocal(dpl, 'TreeLinkButton');\n    const identifiy = (q) => {\n        let value;\n        const o = {};\n        if (q?._or) {\n            for (let i in q?._or) {\n                if (q?._or[i]?.string?.value?._ilike) {\n                    o.values = true;\n                    o.query = false;\n                    if (!value)\n                        value = q?._or[i]?.string?.value?._ilike.slice(1, -1);\n                }\n                if (q?._or[i]?.string?.value?._iregex) {\n                    o.values = true;\n                    o.query = false;\n                    o.regexp = true;\n                    if (!value)\n                        value = q?._or[i]?.string?.value?._iregex;\n                }\n                if (typeof (q?._or[i]?.number?.value) === 'number') {\n                    o.values = true;\n                    o.query = false;\n                    if (!value)\n                        value = q?._or[i]?.number?.value;\n                }\n                if (q?._or[i]?.in?.type_id === Contain) {\n                    if (q?._or[i]?.in?.string?.value?._iregex) {\n                        o.query = false;\n                        o.regexp = true;\n                        if (!value)\n                            value = q?._or[i]?.in?.string?.value?._iregex;\n                    }\n                    if (q?._or[i]?.in?.string?.value?._ilike) {\n                        o.query = false;\n                        if (!value)\n                            value = q?._or[i]?.in?.string?.value?._ilike.slice(1, -1);\n                    }\n                }\n                if (q?._not?.type_id === Contain)\n                    o.contains = false;\n                else if (q?.type_id === Contain)\n                    o.contains = true;\n            }\n        }\n        console.log('identified', q, o, value);\n        return { options: o, value };\n    };\n    return ({ go, linkId, isActive, oneline = false, saveHistory = false, finder = false, query: _query, search: _search, options: _options = {\n        db: false,\n        regexp: false,\n        query: false,\n        values: false,\n        contains: false,\n    }, onChange, onSearch, childrenSearchRight = null, children, }, ref) => {\n        if (!linkId)\n            throw new Error(`linkId must be Query instance id but ${linkId}`);\n        const nav = go.useNav();\n        if (finder)\n            nav('finder', 'left', 'up', 'current', 'db');\n        nav('current', finder ? 'finder' : 'db', 'up', 'search', 'db');\n        nav('search', 'current', 'up', 'contains', 'contains');\n        nav('db', 'current', 'current', 'regexp', 'down');\n        nav('regexp', 'db', 'current', 'query', 'down');\n        nav('query', 'regexp', 'current', 'values', 'down');\n        nav('values', 'query', 'current', 'contains', 'down');\n        nav('contains', 'values', 'search', 'right', 'down');\n        const options = { ...({ db: false, regexp: false, query: false, values: false, contains: false, }), ..._options };\n        const _q = React.useMemo(() => deep.get(linkId)?.value?.value || _query, []);\n        if (_q)\n            options.query = true;\n        const [toRequest, setToRequest] = React.useState();\n        const identified = React.useMemo(() => {\n            return identifiy(deep.get(linkId)?.value?.value || {});\n        }, []);\n        const [value, setValue] = React.useState(typeof (identified?.value) === 'string' ? identified?.value : (_q ? JSON.stringify(_q) : _search));\n        const [o, setOptions] = React.useState({ ...options, ...identified.options });\n        const optionsRef = React.useRef(o);\n        React.useMemo(() => {\n            if (!optionsRef.current.query && !!o.query) {\n                setValue(JSON.stringify(deep.searchQuery(value, { ...o, query: undefined }), null, 2));\n            }\n            else if (!!optionsRef.current.query && !o.query) {\n                const identified = identifiy(toRequest);\n                setOptions(identified?.options);\n                setValue(identified?.value);\n            }\n        }, [o.query]);\n        optionsRef.current = o;\n        const [results, setResults] = React.useState([]);\n        const request = React.useCallback(async (value) => {\n            const o = optionsRef.current;\n            let cq;\n            console.log('onRequest', { _q, o, identified });\n            if (!o.query) {\n                cq = deep.searchQuery(value, { ...o, query: undefined });\n            }\n            else\n                try {\n                    cq = JSON.parse(value);\n                }\n                catch (error) {\n                    return console.error(error);\n                }\n            console.log('onRequest', cq);\n            if (saveHistory && typeof (linkId) === 'number')\n                deep.value(linkId, cq);\n            setToRequest(cq);\n        }, []);\n        React.useEffect(() => {\n            if (!!value)\n                request(value);\n        }, []);\n        React.useMemo(() => {\n            (async () => {\n                const o = optionsRef.current;\n                if (!toRequest)\n                    return;\n                if (onSearch && value) {\n                    let results;\n                    try {\n                        results = await deep.search(value, { ...o, remote: o.db, query: undefined, apply: `deep-perception-search-${go.__p}` });\n                    }\n                    catch (error) {\n                        results = { error };\n                    }\n                    console.log('onSearch', toRequest, results, o);\n                    onSearch({ ...results, query: toRequest, search: !o.query ? value : null, options: o });\n                }\n            })();\n        }, [toRequest]);\n        return React.createElement(go.On, { do: {\n                focus: () => go.set('current'),\n                left: () => go.focus(nav.get(go.value, 'left')),\n                right: () => go.focus(nav.get(go.value, 'right')),\n                up: () => go.focus(nav.get(go.value, 'up')),\n                down: () => go.focus(nav.get(go.value, 'down')),\n                finder: () => setOptions({ ...o, finder: !o.finder }),\n                search: () => request(value),\n                current: () => setOptions({ ...o, current: !o.current }),\n                db: () => setOptions({ ...o, db: !o.db }),\n                regexp: () => setOptions({ ...o, regexp: !o.regexp }),\n                query: () => setOptions({ ...o, query: !o.query }),\n                values: () => setOptions({ ...o, values: !o.values }),\n                contains: () => setOptions({ ...o, contains: !o.contains }),\n            }, focus: {\n                up: (q, v, o) => go.set().go?.go?.do('up'),\n                down: (q, v, o) => go.set().go?.go?.do('down'),\n                left: (q, v, o) => go.set(o?.left).go?.go?.do('left'),\n                right: (q, v, o) => go.set(o?.right).go?.go?.do('right'),\n            } },\n            React.createElement(c.Box, { ref: ref, position: 'relative', w: '100%', bg: isActive ? 'deepBgDark' : undefined },\n                React.createElement(c.SimpleGrid, { columns: oneline ? 2 : 1, w: oneline ? finder ? '28em' : '25em' : undefined },\n                    React.createElement(c.Flex, null,\n                        !!finder && React.createElement(c.Button, { h: '3em', maxW: '3em', w: '3em', variant: go.value === 'finder' ? 'active' : undefined, onClick: () => go.do('finder') }, \"\\uD83E\\uDEAC\"),\n                        React.createElement(c.Box, { flex: 1, h: '3em' }, [React.createElement(go.Editor, { key: o.query, fillSize: true, value: value, onChange: value => {\n                                    setValue(value);\n                                    onChange && onChange(value);\n                                }, onSave: value => go.do('search'), basicSetup: {\n                                    lineNumbers: false\n                                }, saveButton: false })]),\n                        React.createElement(c.Flex, null,\n                            React.createElement(c.Button, { h: '3em', maxW: '3em', w: '3em', variant: go.value === 'search' ? 'active' : undefined, onClick: () => go.do('search') }, \"\\uD83D\\uDD0E\"),\n                            childrenSearchRight)),\n                    React.createElement(c.Flex, null,\n                        React.createElement(c.Button, { h: '3em', maxW: '3em', w: '3em', position: 'relative', onClick: () => go.do('db'), variant: go.value === 'db' ? 'active' : undefined },\n                            React.createElement(BsDatabase, null),\n                            !o.db && React.createElement(c.Center, { position: 'absolute', top: '0', left: '0', right: '0', bottom: '0', fontSize: '2em' },\n                                React.createElement(AiOutlineStop, null))),\n                        React.createElement(c.Button, { h: '3em', maxW: '3em', w: '3em', position: 'relative', onClick: () => go.do('regexp'), variant: go.value === 'regexp' ? 'active' : undefined },\n                            React.createElement(BsRegex, null),\n                            !o.regexp && React.createElement(c.Center, { position: 'absolute', top: '0', left: '0', right: '0', bottom: '0', fontSize: '2em' },\n                                React.createElement(AiOutlineStop, null))),\n                        React.createElement(c.Button, { h: '3em', maxW: '3em', w: '3em', position: 'relative', onClick: () => go.do('query'), variant: go.value === 'query' ? 'active' : undefined },\n                            `{q}`,\n                            !o.query && React.createElement(c.Center, { position: 'absolute', top: '0', left: '0', right: '0', bottom: '0', fontSize: '2em' },\n                                React.createElement(AiOutlineStop, null))),\n                        React.createElement(c.Spacer, null),\n                        React.createElement(c.Button, { h: '3em', maxW: '3em', w: '3em', position: 'relative', onClick: () => go.do('values'), variant: go.value === 'values' ? 'active' : undefined },\n                            \"\\\"v\\\"\",\n                            !o.values && React.createElement(c.Center, { position: 'absolute', top: '0', left: '0', right: '0', bottom: '0', fontSize: '2em' },\n                                React.createElement(AiOutlineStop, null))),\n                        React.createElement(c.Button, { h: '3em', maxW: '3em', w: '3em', position: 'relative', onClick: () => go.do('contains'), variant: go.value === 'contains' ? 'active' : undefined },\n                            \"\\uD83D\\uDDC2\\uFE0F\",\n                            !o.contains && React.createElement(c.Center, { position: 'absolute', top: '0', left: '0', right: '0', bottom: '0', fontSize: '2em' },\n                                React.createElement(AiOutlineStop, null)))))));\n    };\n};\n//# sourceMappingURL=data:application/json;base64,",
          "link_id": 10559
        },
        "__typename": "links"
      },
      "__typename": "handlers"
    },
    {
      "dist_id": 10736,
      "src_id": 10711,
      "handler_id": 10715,
      "execution_provider_id": 33,
      "isolation_provider_id": 144,
      "dist": {
        "id": 10736,
        "type_id": 30,
        "from_id": 0,
        "to_id": 0,
        "value": {
          "id": 1443,
          "value": "({ deep, data, require, Go }) => {\n    const { MdEdit, MdPreview, MdSaveAlt } = require(\"react-icons/md\");\n    const React = require('react');\n    const { TypedIcon, DownIcon, UpIcon, TypeIcon, InIcon, OutIcon, FromIcon, ToIcon, useSymbol, } = require('@deep-foundation/perception-app');\n    const c = require('@chakra-ui/react');\n    const dpl = '@deep-foundation/perception-links';\n    const dc = '@deep-foundation/core';\n    const Query = deep.idLocal(dc, 'Query');\n    const Stack = deep.idLocal(dpl, 'Stack');\n    const History = deep.idLocal(dpl, 'History');\n    const Header = deep.idLocal(dpl, 'Header');\n    const Search = deep.idLocal(dpl, 'Search');\n    const TreeQuery = deep.idLocal(dpl, 'TreeQuery');\n    const TreeList = deep.idLocal(dpl, 'TreeList');\n    const TreeLink = deep.idLocal(dpl, 'TreeLink');\n    const TreeLinkInsert = deep.idLocal(dpl, 'TreeLinkInsert');\n    const TreeLinkDelete = deep.idLocal(dpl, 'TreeLinkDelete');\n    const TreeLinkButton = deep.idLocal(dpl, 'TreeLinkButton');\n    return ({ go, isActive, fullWidth = null, saveHistory = false, initialResults, ...props }, ref) => {\n        const [links, setLinks] = React.useState(initialResults || []);\n        const firstRef = React.useRef(false);\n        const nav = go.useNav();\n        nav(Search, 'left', 'up', 'right', Stack);\n        nav(Stack, 'left', Search, 'right', 'down');\n        return React.createElement(go.On, { do: {\n                exec: (g, v, o) => o?.id && go.go.do('open', { handlerId: TreeLink, id: o.id, prevId: go.linkId, focus: true }),\n                close: (g, v, o) => go.go.do('close', { id: go.linkId }),\n                left: (g, v, o) => go.focus(nav.get(go.value || Search, 'left'), { prev: go.value }),\n                up: (g, v, o) => go.focus(nav.get(go.value || Search, 'up'), { prev: go.value }),\n                right: (g, v, o) => go.focus(nav.get(go.value || Search, 'right'), { prev: go.value }),\n                down: (g, v, o) => go.focus(nav.get(go.value || Search, 'down'), { prev: go.value }),\n            } },\n            React.createElement(c.Flex, { direction: 'column', minW: fullWidth || '30em', maxW: fullWidth || '30em', h: '100%', maxH: '100%', ...props },\n                React.createElement(go.Provider, { linkId: Search },\n                    React.createElement(go.Handler, { linkId: go.linkId, handlerId: Search, saveHistory: saveHistory, onSearch: (results) => {\n                            if (!initialResults || !!firstRef.current) {\n                                console.log('onSearch', results);\n                                let links = results.data || [];\n                                setLinks(links);\n                            }\n                            firstRef.current = true;\n                        }, childrenSearchRight: React.createElement(c.Button, { minW: '3e,', w: '3em', h: '100%', minH: '3em', p: '0', onClick: () => go.focus('close').go.do('close'), variant: go.value === 'close' ? 'active' : null }, \"x\") })),\n                React.createElement(go.Provider, { linkId: Stack },\n                    React.createElement(go.Handler, { handlerId: Stack, direction: 'vertical', links: links, flex: '1', saveHistory: saveHistory }))));\n    };\n};\n//# sourceMappingURL=data:application/json;base64,",
          "link_id": 10736
        },
        "__typename": "links"
      },
      "__typename": "handlers"
    },
    {
      "dist_id": 11305,
      "src_id": 11285,
      "handler_id": 11289,
      "execution_provider_id": 33,
      "isolation_provider_id": 144,
      "dist": {
        "id": 11305,
        "type_id": 30,
        "from_id": 0,
        "to_id": 0,
        "value": {
          "id": 1456,
          "value": "({ deep, data, require, Go }) => {\n    const { BsFullscreenExit, BsFullscreen } = require(\"react-icons/bs\");\n    const React = require('react');\n    const c = require('@chakra-ui/react');\n    const dpl = '@deep-foundation/perception-links';\n    return ({ go, linkId, disclosure: __disclosure, }, ref) => {\n        const _disclosure = c.useDisclosure();\n        const disclosure = __disclosure || _disclosure;\n        return React.createElement(go.On, { do: {} },\n            !disclosure.isOpen && React.createElement(go.Editor, { linkId: linkId, fillSize: true },\n                React.createElement(c.Button, { w: '3em', h: '3em', onClick: disclosure.onOpen },\n                    React.createElement(BsFullscreen, null))),\n            React.createElement(c.Modal, { closeOnOverlayClick: true, blockScrollOnMount: false, onClose: disclosure.onClose, isOpen: disclosure.isOpen, portalProps: { containerRef: go.root().ref } },\n                React.createElement(c.ModalOverlay, null),\n                React.createElement(c.ModalContent, { w: '80vw', maxW: '80vw', h: '80vh', position: 'relative' },\n                    React.createElement(c.ModalHeader, null, '' + deep.nameLocal(linkId)),\n                    React.createElement(c.ModalBody, { p: 0, position: 'relative' },\n                        React.createElement(go.Editor, { linkId: linkId, fillSize: true },\n                            React.createElement(BsFullscreenExit, null))))));\n    };\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsibW9kdWxlLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxDQUFDLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRTtJQUM5QixNQUFNLEVBQUUsZ0JBQWdCLEVBQUUsWUFBWSxFQUFFLEdBQUcsT0FBTyxDQUFDLGdCQUFnQixDQUFDLENBQUM7SUFDckUsTUFBTSxLQUFLLEdBQUcsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBRS9CLE1BQU0sQ0FBQyxHQUFHLE9BQU8sQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDO0lBRXRDLE1BQU0sR0FBRyxHQUFHLG1DQUFtQyxDQUFDO0lBRWhELE9BQU8sQ0FBQyxFQUNOLEVBQUUsRUFDRixNQUFNLEVBRU4sVUFBVSxFQUFFLFlBQVksR0FDekIsRUFBRSxHQUFHLEVBQUUsRUFBRTtRQUNSLE1BQU0sV0FBVyxHQUFHLENBQUMsQ0FBQyxhQUFhLEVBQUUsQ0FBQztRQUN0QyxNQUFNLFVBQVUsR0FBRyxZQUFZLElBQUksV0FBVyxDQUFDO1FBRS9DLE9BQU8sb0JBQUMsRUFBRSxDQUFDLEVBQUUsSUFBQyxFQUFFLEVBQUUsRUFDakI7WUFDRSxDQUFDLFVBQVUsQ0FBQyxNQUFNLElBQUksb0JBQUMsRUFBRSxDQUFDLE1BQU0sSUFBQyxNQUFNLEVBQUUsTUFBTSxFQUFFLFFBQVE7Z0JBQ3hELG9CQUFDLENBQUMsQ0FBQyxNQUFNLElBQUMsQ0FBQyxFQUFDLEtBQUssRUFBQyxDQUFDLEVBQUMsS0FBSyxFQUFDLE9BQU8sRUFBRSxVQUFVLENBQUMsTUFBTTtvQkFDbEQsb0JBQUMsWUFBWSxPQUFFLENBQ04sQ0FDRDtZQUNaLG9CQUFDLENBQUMsQ0FBQyxLQUFLLElBQ04sbUJBQW1CLFFBQUMsa0JBQWtCLEVBQUUsS0FBSyxFQUM3QyxPQUFPLEVBQUUsVUFBVSxDQUFDLE9BQU8sRUFDM0IsTUFBTSxFQUFFLFVBQVUsQ0FBQyxNQUFNLEVBQUUsV0FBVyxFQUFFLEVBQUUsWUFBWSxFQUFFLEVBQUUsQ0FBQyxJQUFJLEVBQUUsQ0FBQyxHQUFHLEVBQUU7Z0JBRXZFLG9CQUFDLENBQUMsQ0FBQyxZQUFZLE9BQUc7Z0JBQ2xCLG9CQUFDLENBQUMsQ0FBQyxZQUFZLElBQUMsQ0FBQyxFQUFDLE1BQU0sRUFBQyxJQUFJLEVBQUMsTUFBTSxFQUFDLENBQUMsRUFBQyxNQUFNLEVBQUMsUUFBUSxFQUFDLFVBQVU7b0JBQy9ELG9CQUFDLENBQUMsQ0FBQyxXQUFXLFFBQUUsRUFBRSxHQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUFDLENBQWlCO29CQUMxRCxvQkFBQyxDQUFDLENBQUMsU0FBUyxJQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsUUFBUSxFQUFDLFVBQVU7d0JBQ3BDLG9CQUFDLEVBQUUsQ0FBQyxNQUFNLElBQUMsTUFBTSxFQUFFLE1BQU0sRUFBRSxRQUFROzRCQUNqQyxvQkFBQyxnQkFBZ0IsT0FBRSxDQUNWLENBQ0MsQ0FDQyxDQUNULENBQ0osQ0FBQztJQUNYLENBQUMsQ0FBQztBQUNKLENBQUMsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbIih7IGRlZXAsIGRhdGEsIHJlcXVpcmUsIEdvIH0pID0+IHtcbiAgY29uc3QgeyBCc0Z1bGxzY3JlZW5FeGl0LCBCc0Z1bGxzY3JlZW4gfSA9IHJlcXVpcmUoXCJyZWFjdC1pY29ucy9ic1wiKTtcbiAgY29uc3QgUmVhY3QgPSByZXF1aXJlKCdyZWFjdCcpO1xuICBcbiAgY29uc3QgYyA9IHJlcXVpcmUoJ0BjaGFrcmEtdWkvcmVhY3QnKTtcblxuICBjb25zdCBkcGwgPSAnQGRlZXAtZm91bmRhdGlvbi9wZXJjZXB0aW9uLWxpbmtzJztcblxuICByZXR1cm4gKHtcbiAgICBnbyxcbiAgICBsaW5rSWQsXG5cbiAgICBkaXNjbG9zdXJlOiBfX2Rpc2Nsb3N1cmUsXG4gIH0sIHJlZikgPT4ge1xuICAgIGNvbnN0IF9kaXNjbG9zdXJlID0gYy51c2VEaXNjbG9zdXJlKCk7XG4gICAgY29uc3QgZGlzY2xvc3VyZSA9IF9fZGlzY2xvc3VyZSB8fCBfZGlzY2xvc3VyZTtcblxuICAgIHJldHVybiA8Z28uT24gZG89e3tcbiAgICB9fT5cbiAgICAgIHshZGlzY2xvc3VyZS5pc09wZW4gJiYgPGdvLkVkaXRvciBsaW5rSWQ9e2xpbmtJZH0gZmlsbFNpemU+XG4gICAgICAgIDxjLkJ1dHRvbiB3PSczZW0nIGg9JzNlbScgb25DbGljaz17ZGlzY2xvc3VyZS5vbk9wZW59PlxuICAgICAgICAgIDxCc0Z1bGxzY3JlZW4vPlxuICAgICAgICA8L2MuQnV0dG9uPlxuICAgICAgPC9nby5FZGl0b3I+fVxuICAgICAgPGMuTW9kYWxcbiAgICAgICAgY2xvc2VPbk92ZXJsYXlDbGljayBibG9ja1Njcm9sbE9uTW91bnQ9e2ZhbHNlfVxuICAgICAgICBvbkNsb3NlPXtkaXNjbG9zdXJlLm9uQ2xvc2V9XG4gICAgICAgIGlzT3Blbj17ZGlzY2xvc3VyZS5pc09wZW59IHBvcnRhbFByb3BzPXt7IGNvbnRhaW5lclJlZjogZ28ucm9vdCgpLnJlZiB9fVxuICAgICAgPlxuICAgICAgICA8Yy5Nb2RhbE92ZXJsYXkgLz5cbiAgICAgICAgPGMuTW9kYWxDb250ZW50IHc9JzgwdncnIG1heFc9JzgwdncnIGg9JzgwdmgnIHBvc2l0aW9uPSdyZWxhdGl2ZSc+XG4gICAgICAgICAgPGMuTW9kYWxIZWFkZXI+eycnK2RlZXAubmFtZUxvY2FsKGxpbmtJZCl9PC9jLk1vZGFsSGVhZGVyPlxuICAgICAgICAgIDxjLk1vZGFsQm9keSBwPXswfSBwb3NpdGlvbj0ncmVsYXRpdmUnPlxuICAgICAgICAgICAgPGdvLkVkaXRvciBsaW5rSWQ9e2xpbmtJZH0gZmlsbFNpemU+XG4gICAgICAgICAgICAgIDxCc0Z1bGxzY3JlZW5FeGl0Lz5cbiAgICAgICAgICAgIDwvYy5CdXR0b24+XG4gICAgICAgICAgPC9jLk1vZGFsQm9keT5cbiAgICAgICAgPC9jLk1vZGFsQ29udGVudD5cbiAgICAgIDwvYy5Nb2RhbD5cbiAgICA8L2dvLk9uPjtcbiAgfTtcbn0iXX0=",
          "link_id": 11305
        },
        "__typename": "links"
      },
      "__typename": "handlers"
    },
    {
      "dist_id": 12272,
      "src_id": 12266,
      "handler_id": 12270,
      "execution_provider_id": 33,
      "isolation_provider_id": 144,
      "dist": {
        "id": 12272,
        "type_id": 30,
        "from_id": 0,
        "to_id": 0,
        "value": {
          "id": 1497,
          "value": "async ({ deep, data, require }) => {\n    const React = require('react');\n    const { SiApollographql } = require(\"react-icons/si\");\n    const c = require('@chakra-ui/react');\n    const dpl = '@deep-foundation/perception-links';\n    const dc = '@deep-foundation/core';\n    const Sandbox = deep.idLocal(dpl, 'Sandbox');\n    return ({ go, handlerId, isActive, }, ref) => {\n        return React.createElement(go.On, { do: {\n                exec: (g, v, o) => go.go.do('right', { ...o, id: Sandbox }),\n                click: (g, v, o) => go.do('exec', o),\n                right: (g, v, o) => go.do('exec', o),\n            } },\n            React.createElement(c.Button, { w: '3em', h: '3em', variant: isActive ? 'active' : undefined, onClick: () => {\n                    go.do('enter');\n                }, ref: ref },\n                React.createElement(SiApollographql, null)));\n    };\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsibW9kdWxlLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxLQUFLLEVBQUUsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLE9BQU8sRUFBRSxFQUFFLEVBQUU7SUFDaEMsTUFBTSxLQUFLLEdBQUcsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQy9CLE1BQU0sRUFBRSxlQUFlLEVBQUUsR0FBRyxPQUFPLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztJQUN0RCxNQUFNLENBQUMsR0FBRyxPQUFPLENBQUMsa0JBQWtCLENBQUMsQ0FBQztJQUV0QyxNQUFNLEdBQUcsR0FBRyxtQ0FBbUMsQ0FBQztJQUNoRCxNQUFNLEVBQUUsR0FBRyx1QkFBdUIsQ0FBQztJQUVuQyxNQUFNLE9BQU8sR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxTQUFTLENBQUMsQ0FBQztJQUU3QyxPQUFPLENBQUMsRUFDTixFQUFFLEVBQ0YsU0FBUyxFQUVULFFBQVEsR0FDVCxFQUFFLEdBQUcsRUFBRSxFQUFFO1FBQ1IsT0FBTyxvQkFBQyxFQUFFLENBQUMsRUFBRSxJQUFDLEVBQUUsRUFBRTtnQkFDaEIsSUFBSSxFQUFFLENBQUMsQ0FBQyxFQUFDLENBQUMsRUFBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLE9BQU8sRUFBRSxFQUFFLEdBQUcsQ0FBQyxFQUFFLEVBQUUsRUFBRSxPQUFPLEVBQUUsQ0FBQztnQkFDekQsS0FBSyxFQUFFLENBQUMsQ0FBQyxFQUFDLENBQUMsRUFBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsTUFBTSxFQUFFLENBQUMsQ0FBQztnQkFDbEMsS0FBSyxFQUFFLENBQUMsQ0FBQyxFQUFDLENBQUMsRUFBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsTUFBTSxFQUFFLENBQUMsQ0FBQzthQUNuQztZQUNDLG9CQUFDLENBQUMsQ0FBQyxNQUFNLElBQ1AsQ0FBQyxFQUFDLEtBQUssRUFBQyxDQUFDLEVBQUMsS0FBSyxFQUNmLE9BQU8sRUFBRSxRQUFRLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsU0FBUyxFQUN4QyxPQUFPLEVBQUUsR0FBRyxFQUFFO29CQUNaLEVBQUUsQ0FBQyxFQUFFLENBQUMsT0FBTyxDQUFDLENBQUM7Z0JBQ2pCLENBQUMsRUFDRCxHQUFHLEVBQUUsR0FBRztnQkFFUixvQkFBQyxlQUFlLE9BQUUsQ0FDVCxDQUNMLENBQUM7SUFDWCxDQUFDLENBQUM7QUFDSixDQUFDLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJhc3luYyAoeyBkZWVwLCBkYXRhLCByZXF1aXJlIH0pID0+IHtcbiAgY29uc3QgUmVhY3QgPSByZXF1aXJlKCdyZWFjdCcpO1xuICBjb25zdCB7IFNpQXBvbGxvZ3JhcGhxbCB9ID0gcmVxdWlyZShcInJlYWN0LWljb25zL3NpXCIpO1xuICBjb25zdCBjID0gcmVxdWlyZSgnQGNoYWtyYS11aS9yZWFjdCcpO1xuXG4gIGNvbnN0IGRwbCA9ICdAZGVlcC1mb3VuZGF0aW9uL3BlcmNlcHRpb24tbGlua3MnO1xuICBjb25zdCBkYyA9ICdAZGVlcC1mb3VuZGF0aW9uL2NvcmUnO1xuXG4gIGNvbnN0IFNhbmRib3ggPSBkZWVwLmlkTG9jYWwoZHBsLCAnU2FuZGJveCcpO1xuXG4gIHJldHVybiAoe1xuICAgIGdvLFxuICAgIGhhbmRsZXJJZCxcblxuICAgIGlzQWN0aXZlLFxuICB9LCByZWYpID0+IHtcbiAgICByZXR1cm4gPGdvLk9uIGRvPXt7XG4gICAgICBleGVjOiAoZyx2LG8pID0+IGdvLmdvLmRvKCdyaWdodCcsIHsgLi4ubywgaWQ6IFNhbmRib3ggfSkpLFxuICAgICAgY2xpY2s6IChnLHYsbykgPT4gZ28uZG8oJ2V4ZWMnLCBvKSxcbiAgICAgIHJpZ2h0OiAoZyx2LG8pID0+IGdvLmRvKCdleGVjJywgbyksXG4gICAgfX0+XG4gICAgICA8Yy5CdXR0b25cbiAgICAgICAgdz0nM2VtJyBoPSczZW0nXG4gICAgICAgIHZhcmlhbnQ9e2lzQWN0aXZlID8gJ2FjdGl2ZScgOiB1bmRlZmluZWR9XG4gICAgICAgIG9uQ2xpY2s9eygpID0+IHtcbiAgICAgICAgICBnby5kbygnZW50ZXInKTtcbiAgICAgICAgfX1cbiAgICAgICAgcmVmPXtyZWZ9XG4gICAgICA+XG4gICAgICAgIDxTaUFwb2xsb2dyYXBocWwvPlxuICAgICAgPC9jLkJ1dHRvbj5cbiAgICA8L2dvLk9uPjtcbiAgfTtcbn0iXX0=",
          "link_id": 12272
        },
        "__typename": "links"
      },
      "__typename": "handlers"
    },
    {
      "dist_id": 12501,
      "src_id": 12489,
      "handler_id": 12493,
      "execution_provider_id": 33,
      "isolation_provider_id": 144,
      "dist": {
        "id": 12501,
        "type_id": 30,
        "from_id": 0,
        "to_id": 0,
        "value": {
          "id": 1507,
          "value": "({ deep, data, require, Go }) => {\n    const React = require('react');\n    const { ApolloSandbox } = require('@apollo/sandbox/react');\n    const c = require('@chakra-ui/react');\n    return ({ go, requestOptions = {}, children, }, ref) => {\n        return React.createElement(go.On, { do: {\n                use: (g, v, o) => { },\n            } },\n            React.createElement(c.Box, { ref: ref, h: '100%', w: '100%', sx: { '& > div': { h: '100%' } } },\n                React.createElement(ApolloSandbox, { initialEndpoint: `http${deep.client.ssl ? 's' : ''}://${deep.client.path}`, initialState: {\n                        sharedHeaders: {\n                            Authorization: `Bearer ${deep.token}`,\n                        },\n                    } })));\n    };\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsibW9kdWxlLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxDQUFDLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRTtJQUM5QixNQUFNLEtBQUssR0FBRyxPQUFPLENBQUMsT0FBTyxDQUFDLENBQUM7SUFFL0IsTUFBTSxFQUFFLGFBQWEsRUFBRSxHQUFHLE9BQU8sQ0FBQyx1QkFBdUIsQ0FBQyxDQUFDO0lBQzNELE1BQU0sQ0FBQyxHQUFHLE9BQU8sQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDO0lBRXRDLE9BQU8sQ0FBQyxFQUNOLEVBQUUsRUFFRixjQUFjLEdBQUcsRUFBRSxFQUVuQixRQUFRLEdBQ1QsRUFBRSxHQUFHLEVBQUUsRUFBRTtRQUNSLE9BQU8sb0JBQUMsRUFBRSxDQUFDLEVBQUUsSUFBQyxFQUFFLEVBQUU7Z0JBQ2hCLEdBQUcsRUFBRSxDQUFDLENBQUMsRUFBQyxDQUFDLEVBQUMsQ0FBQyxFQUFFLEVBQUUsR0FBRSxDQUFDO2FBQ25CO1lBQ0Msb0JBQUMsQ0FBQyxDQUFDLEdBQUcsSUFBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBQyxNQUFNLEVBQUMsQ0FBQyxFQUFDLE1BQU0sRUFBQyxFQUFFLEVBQUUsRUFBRSxTQUFTLEVBQUUsRUFBRSxDQUFDLEVBQUUsTUFBTSxFQUFFLEVBQUU7Z0JBQ2pFLG9CQUFDLGFBQWEsSUFDWixlQUFlLEVBQUUsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxFQUFFLE1BQU0sSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUUsRUFDMUUsWUFBWSxFQUFFO3dCQUNaLGFBQWEsRUFBRTs0QkFDYixhQUFhLEVBQUUsVUFBVSxJQUFJLENBQUMsS0FBSyxFQUFFO3lCQUN0QztxQkFDRixHQUNELENBQ0ksQ0FDRixDQUFDO0lBQ1gsQ0FBQyxDQUFDO0FBQ0osQ0FBQyxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiKHsgZGVlcCwgZGF0YSwgcmVxdWlyZSwgR28gfSkgPT4ge1xuICBjb25zdCBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XG4gIFxuICBjb25zdCB7IEFwb2xsb1NhbmRib3ggfSA9IHJlcXVpcmUoJ0BhcG9sbG8vc2FuZGJveC9yZWFjdCcpO1xuICBjb25zdCBjID0gcmVxdWlyZSgnQGNoYWtyYS11aS9yZWFjdCcpO1xuXG4gIHJldHVybiAoe1xuICAgIGdvLFxuXG4gICAgcmVxdWVzdE9wdGlvbnMgPSB7fSxcblxuICAgIGNoaWxkcmVuLFxuICB9LCByZWYpID0+IHtcbiAgICByZXR1cm4gPGdvLk9uIGRvPXt7XG4gICAgICB1c2U6IChnLHYsbykgPT4ge30sXG4gICAgfX0+XG4gICAgICA8Yy5Cb3ggcmVmPXtyZWZ9IGg9JzEwMCUnIHc9JzEwMCUnIHN4PXt7ICcmID4gZGl2JzogeyBoOiAnMTAwJScgfSB9fT5cbiAgICAgICAgPEFwb2xsb1NhbmRib3hcbiAgICAgICAgICBpbml0aWFsRW5kcG9pbnQ9e2BodHRwJHtkZWVwLmNsaWVudC5zc2wgPyAncycgOiAnJ306Ly8ke2RlZXAuY2xpZW50LnBhdGh9YH1cbiAgICAgICAgICBpbml0aWFsU3RhdGU9e3tcbiAgICAgICAgICAgIHNoYXJlZEhlYWRlcnM6IHtcbiAgICAgICAgICAgICAgQXV0aG9yaXphdGlvbjogYEJlYXJlciAke2RlZXAudG9rZW59YCxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgfX1cbiAgICAgICAgLz5cbiAgICAgIDwvYy5Cb3g+XG4gICAgPC9nby5Pbj47XG4gIH07XG59Il19",
          "link_id": 12501
        },
        "__typename": "links"
      },
      "__typename": "handlers"
    },
    {
      "dist_id": 13045,
      "src_id": 13039,
      "handler_id": 13043,
      "execution_provider_id": 33,
      "isolation_provider_id": 144,
      "dist": {
        "id": 13045,
        "type_id": 30,
        "from_id": 0,
        "to_id": 0,
        "value": {
          "id": 1526,
          "value": "({ deep, data, require, Go }) => {\n    const { MdEdit, MdPreview, MdSaveAlt } = require(\"react-icons/md\");\n    const React = require('react');\n    const { TypedIcon, DownIcon, UpIcon, TypeIcon, InIcon, OutIcon, FromIcon, ToIcon, useSymbol, } = require('@deep-foundation/perception-app');\n    const c = require('@chakra-ui/react');\n    const dpl = '@deep-foundation/perception-links';\n    const dc = '@deep-foundation/core';\n    const History = deep.idLocal(dpl, 'History');\n    const Header = deep.idLocal(dpl, 'Header');\n    const Search = deep.idLocal(dpl, 'Search');\n    const TreeQuery = deep.idLocal(dpl, 'TreeQuery');\n    const TreeList = deep.idLocal(dpl, 'TreeList');\n    const TreeLink = deep.idLocal(dpl, 'TreeLink');\n    const TreeLinkInsert = deep.idLocal(dpl, 'TreeLinkInsert');\n    const TreeLinkDelete = deep.idLocal(dpl, 'TreeLinkDelete');\n    const TreeLinkButton = deep.idLocal(dpl, 'TreeLinkButton');\n    const _Item = ({ link, isActive, isConcentrated, Item, direction, startProps }) => {\n        const go = Go.useGo();\n        return React.createElement(c.Box, { ref: go.ref, ...(direction === 'vertical' ? { w: '100%' } : { h: '100%' }) }, !!Item ? React.createElement(Item, { link: link, go: go, isActive: isActive, ...startProps, isConcentrated: isConcentrated }) : React.createElement(go.Handler, { handlerId: TreeLinkButton, linkId: link.id, variant: 'full', ...startProps, isActive: isActive, ...(direction === 'vertical' ? { w: '100%' } : { h: '100%' }), isConcentrated: isConcentrated }));\n    };\n    const startPropsPlaceholder = {};\n    return ({ go, handlerId, links = [], Item = _Item, direction = 'vertical', using = false, saveHistory = false, startProps = {}, concentrated, children, }, ref) => {\n        const list = links.map((link, i) => !!link ? React.createElement(go.Provider, { key: `${link?.id}`, linkId: link.id },\n            React.createElement(_Item, { link: link, isActive: go.value === link.id, Item: Item, direction: direction, saveHistory: saveHistory, startProps: !i ? startProps : startPropsPlaceholder, isConcentrated: concentrated ? !!concentrated[link.id] : undefined })) : React.createElement(React.Fragment, null));\n        const content = direction === 'vertical' ? React.createElement(c.VStack, { ref: ref, overflowY: 'scroll', overflowX: 'hidden', css: go.noScrollBar, flex: 1, w: '100%', h: '100%' },\n            list,\n            children) : React.createElement(c.HStack, { ref: ref, overflowX: 'scroll', overflowY: 'hidden', css: go.noScrollBar, flex: 1, w: '100%', h: '100%' },\n            list,\n            children);\n        React.useEffect(() => {\n            if (go?.current) {\n                if (using && go.root()?.data?.usedId != go.value)\n                    go.root().do('use', { id: go.value });\n                go.do('changed', { id: go.value });\n                go?.current?.scroll();\n            }\n        }, [go.value]);\n        const events = direction === 'vertical' ? {\n            up: (g, v, o) => {\n                if (o?.hotkeyEvent?.meta || o?.hotkeyEvent?.shift || o?.hotkeyEvent?.ctrl || o?.hotkeyEvent?.alt) {\n                    go.focus(links?.[0]?.id);\n                }\n                else\n                    go.value === links?.[0]?.id ? go.go.do('up') : go.focus(go.prev(links));\n            },\n            down: (g, v, o) => {\n                if (o?.hotkeyEvent?.meta || o?.hotkeyEvent?.shift || o?.hotkeyEvent?.ctrl || o?.hotkeyEvent?.alt) {\n                    go.focus(links?.[links.length - 1]?.id);\n                }\n                else\n                    go.value === links?.[links.length - 1]?.id ? go.go.do('down') : go.focus(go.next(links));\n            },\n        } : {\n            left: (g, v, o) => {\n                if (o?.hotkeyEvent?.meta || o?.hotkeyEvent?.shift || o?.hotkeyEvent?.ctrl || o?.hotkeyEvent?.alt) {\n                    go.focus(links?.[0]?.id);\n                }\n                else\n                    go.value === links?.[0]?.id ? go.go.do('left') : go.focus(go.prev(links));\n            },\n            right: (g, v, o) => {\n                if (o?.hotkeyEvent?.meta || o?.hotkeyEvent?.shift || o?.hotkeyEvent?.ctrl || o?.hotkeyEvent?.alt) {\n                    go.focus(links?.[links.length - 1]?.id);\n                }\n                else\n                    go.value === links?.[links.length - 1]?.id ? go.go.do('right') : go.focus(go.next(links));\n            },\n        };\n        return React.createElement(go.On, { do: {\n                focus: (g, d, v, o) => !v && go.set(o?.id ? o?.id : links?.[0]?.id),\n                use: (g, v, o) => o?.id && o?.id != go.value && go(o?.id) && go.set(o.id).go(o?.id).go?.scroll().go?.do('use'),\n                exec: (g, v, o) => (o?.id || go.value) && go.set(o?.id || go.value).go.go.do('exec', { id: o?.id || go.value }),\n                ...events,\n            } }, content);\n    };\n};\n//# sourceMappingURL=data:application/json;base64,",
          "link_id": 13045
        },
        "__typename": "links"
      },
      "__typename": "handlers"
    },
    {
      "dist_id": 14099,
      "src_id": 14093,
      "handler_id": 14097,
      "execution_provider_id": 33,
      "isolation_provider_id": 144,
      "dist": {
        "id": 14099,
        "type_id": 30,
        "from_id": 0,
        "to_id": 0,
        "value": {
          "id": 1541,
          "value": "({ deep, data, require, Go }) => {\n    const { BsCheck2All } = require(\"react-icons/bs\");\n    const React = require('react');\n    const c = require('@chakra-ui/react');\n    const dc = '@deep-foundation/core';\n    const dpl = '@deep-foundation/perception-links';\n    const Query = deep.idLocal(dc, 'Query');\n    const Contain = deep.idLocal(dc, 'Contain');\n    const FinderQuery = deep.idLocal(dpl, 'FinderQuery');\n    const Tree = deep.idLocal(dpl, 'Tree');\n    const TreeList = deep.idLocal(dpl, 'TreeList');\n    const Search = deep.idLocal(dpl, 'Search');\n    return ({ go, isActive, saveHistory = false, disclosure: __disclosure, startProps, ...props }, ref) => {\n        const _disclosure = c.useDisclosure();\n        const disclosure = __disclosure || _disclosure;\n        React.useEffect(() => () => deep.minilinks.apply([], `deep-perception-finder-${go.__p}`), []);\n        const [queryId, setQueryId] = React.useState(!saveHistory ? 'virtual' : undefined);\n        return React.createElement(go.On, { do: {\n                open: (g, v, o) => {\n                    if (!o?.id)\n                        return;\n                    disclosure.onClose();\n                    go.root().do('open', { id: o?.id, focus: true });\n                },\n                exec: async (g, v, o) => {\n                    if (saveHistory) {\n                        const { data: [{ id }] } = await deep.insert({\n                            type_id: Query,\n                            object: {\n                                _or: [{ in: { type_id: Contain, string: { value: { _ilike: `%Type%` } } } }],\n                            },\n                            containerId: deep.linkId,\n                            in: {\n                                type_id: FinderQuery,\n                                from_id: deep.linkId,\n                                containerId: deep.linkId,\n                            },\n                        });\n                        await deep.select(id, { apply: `deep-perception-finder-${go.__p}` });\n                        setQueryId(id);\n                    }\n                    disclosure.onOpen();\n                    go.focus(Tree);\n                }\n            } },\n            React.createElement(c.Button, { ref: ref, h: '3em', w: '3em', variant: isActive ? 'active' : null, onClick: () => go.do('exec'), ...props }, \"\\uD83E\\uDEAC\"),\n            !!queryId && disclosure.isOpen && React.createElement(go.Component, { path: [dpl, 'Finder'], disclosure: disclosure, initialId: queryId, initialHandlerId: TreeList, onSubmit: (id) => go.do('open', { id }), startProps: startProps }));\n    };\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsibW9kdWxlLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxDQUFDLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRTtJQUM5QixNQUFNLEVBQUUsV0FBVyxFQUFFLEdBQUcsT0FBTyxDQUFDLGdCQUFnQixDQUFDLENBQUM7SUFDbEQsTUFBTSxLQUFLLEdBQUcsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBRS9CLE1BQU0sQ0FBQyxHQUFHLE9BQU8sQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDO0lBRXRDLE1BQU0sRUFBRSxHQUFHLHVCQUF1QixDQUFDO0lBQ25DLE1BQU0sR0FBRyxHQUFHLG1DQUFtQyxDQUFDO0lBRWhELE1BQU0sS0FBSyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsRUFBRSxFQUFFLE9BQU8sQ0FBQyxDQUFDO0lBQ3hDLE1BQU0sT0FBTyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsRUFBRSxFQUFFLFNBQVMsQ0FBQyxDQUFDO0lBQzVDLE1BQU0sV0FBVyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLGFBQWEsQ0FBQyxDQUFDO0lBQ3JELE1BQU0sSUFBSSxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLE1BQU0sQ0FBQyxDQUFDO0lBQ3ZDLE1BQU0sUUFBUSxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLFVBQVUsQ0FBQyxDQUFDO0lBQy9DLE1BQU0sTUFBTSxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLFFBQVEsQ0FBQyxDQUFDO0lBRTNDLE9BQU8sQ0FBQyxFQUNOLEVBQUUsRUFFRixRQUFRLEVBQ1IsV0FBVyxHQUFHLEtBQUssRUFDbkIsVUFBVSxFQUFFLFlBQVksRUFDeEIsVUFBVSxFQUNWLEdBQUcsS0FBSyxFQUNULEVBQUUsR0FBRyxFQUFFLEVBQUU7UUFDUixNQUFNLFdBQVcsR0FBRyxDQUFDLENBQUMsYUFBYSxFQUFFLENBQUM7UUFDdEMsTUFBTSxVQUFVLEdBQUcsWUFBWSxJQUFJLFdBQVcsQ0FBQztRQUUvQyxLQUFLLENBQUMsU0FBUyxDQUFDLEdBQUcsRUFBRSxDQUFDLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsS0FBSyxDQUFDLEVBQUUsRUFBRSwwQkFBMEIsRUFBRSxDQUFDLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUM7UUFDOUYsTUFBTSxDQUFDLE9BQU8sRUFBRSxVQUFVLENBQUMsR0FBRyxLQUFLLENBQUMsUUFBUSxDQUFDLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBRW5GLE9BQU8sb0JBQUMsRUFBRSxDQUFDLEVBQUUsSUFDWCxFQUFFLEVBQUU7Z0JBQ0YsSUFBSSxFQUFFLENBQUMsQ0FBQyxFQUFDLENBQUMsRUFBQyxDQUFDLEVBQUUsRUFBRTtvQkFDZCxJQUFJLENBQUMsQ0FBQyxFQUFFLEVBQUU7d0JBQUUsT0FBTztvQkFDbkIsVUFBVSxDQUFDLE9BQU8sRUFBRSxDQUFDO29CQUNyQixFQUFFLENBQUMsSUFBSSxFQUFFLENBQUMsRUFBRSxDQUFDLE1BQU0sRUFBRSxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUUsQ0FBQyxDQUFDO2dCQUNuRCxDQUFDO2dCQUNELElBQUksRUFBRSxLQUFLLEVBQUUsQ0FBQyxFQUFDLENBQUMsRUFBQyxDQUFDLEVBQUUsRUFBRTtvQkFDcEIsSUFBSSxXQUFXLEVBQUUsQ0FBQzt3QkFDaEIsTUFBTSxFQUFFLElBQUksRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLE1BQU0sSUFBSSxDQUFDLE1BQU0sQ0FBQzs0QkFDM0MsT0FBTyxFQUFFLEtBQUs7NEJBQ2QsTUFBTSxFQUFFO2dDQUNOLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLEVBQUUsT0FBTyxFQUFFLE9BQU8sRUFBRSxNQUFNLEVBQUUsRUFBRSxLQUFLLEVBQUUsRUFBRSxNQUFNLEVBQUUsUUFBUSxFQUFFLEVBQUUsRUFBRSxFQUFFLENBQUM7NkJBQzdFOzRCQUNELFdBQVcsRUFBRSxJQUFJLENBQUMsTUFBTTs0QkFDeEIsRUFBRSxFQUFFO2dDQUNGLE9BQU8sRUFBRSxXQUFXO2dDQUNwQixPQUFPLEVBQUUsSUFBSSxDQUFDLE1BQU07Z0NBQ3BCLFdBQVcsRUFBRSxJQUFJLENBQUMsTUFBTTs2QkFDekI7eUJBQ0YsQ0FBQyxDQUFDO3dCQUNILE1BQU0sSUFBSSxDQUFDLE1BQU0sQ0FBQyxFQUFFLEVBQUUsRUFBRSxLQUFLLEVBQUUsMEJBQTBCLEVBQUUsQ0FBQyxHQUFHLEVBQUUsRUFBRSxDQUFDLENBQUM7d0JBQ3JFLFVBQVUsQ0FBQyxFQUFFLENBQUMsQ0FBQztvQkFDakIsQ0FBQztvQkFDRCxVQUFVLENBQUMsTUFBTSxFQUFFLENBQUM7b0JBQ3BCLEVBQUUsQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUM7Z0JBQ2pCLENBQUM7YUFDRjtZQUVELG9CQUFDLENBQUMsQ0FBQyxNQUFNLElBQ1AsR0FBRyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUMsS0FBSyxFQUFDLENBQUMsRUFBQyxLQUFLLEVBQUMsT0FBTyxFQUFFLFFBQVEsQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxJQUFJLEVBQzdELE9BQU8sRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLE1BQU0sQ0FBQyxLQUN4QixLQUFLLG1CQUNHO1lBQ2IsQ0FBQyxDQUFDLE9BQU8sSUFBSSxVQUFVLENBQUMsTUFBTSxJQUFJLG9CQUFDLEVBQUUsQ0FBQyxTQUFTLElBQUMsSUFBSSxFQUFFLENBQUMsR0FBRyxFQUFFLFFBQVEsQ0FBQyxFQUNwRSxVQUFVLEVBQUUsVUFBVSxFQUFFLFNBQVMsRUFBRSxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsUUFBUSxFQUN0RSxRQUFRLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsTUFBTSxFQUFFLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFDdkMsVUFBVSxFQUFFLFVBQVUsR0FDdEIsQ0FDSSxDQUFDO0lBQ1gsQ0FBQyxDQUFDO0FBQ0osQ0FBQyxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiKHsgZGVlcCwgZGF0YSwgcmVxdWlyZSwgR28gfSkgPT4ge1xuICBjb25zdCB7IEJzQ2hlY2syQWxsIH0gPSByZXF1aXJlKFwicmVhY3QtaWNvbnMvYnNcIik7XG4gIGNvbnN0IFJlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcbiAgXG4gIGNvbnN0IGMgPSByZXF1aXJlKCdAY2hha3JhLXVpL3JlYWN0Jyk7XG5cbiAgY29uc3QgZGMgPSAnQGRlZXAtZm91bmRhdGlvbi9jb3JlJztcbiAgY29uc3QgZHBsID0gJ0BkZWVwLWZvdW5kYXRpb24vcGVyY2VwdGlvbi1saW5rcyc7XG4gIFxuICBjb25zdCBRdWVyeSA9IGRlZXAuaWRMb2NhbChkYywgJ1F1ZXJ5Jyk7XG4gIGNvbnN0IENvbnRhaW4gPSBkZWVwLmlkTG9jYWwoZGMsICdDb250YWluJyk7XG4gIGNvbnN0IEZpbmRlclF1ZXJ5ID0gZGVlcC5pZExvY2FsKGRwbCwgJ0ZpbmRlclF1ZXJ5Jyk7XG4gIGNvbnN0IFRyZWUgPSBkZWVwLmlkTG9jYWwoZHBsLCAnVHJlZScpO1xuICBjb25zdCBUcmVlTGlzdCA9IGRlZXAuaWRMb2NhbChkcGwsICdUcmVlTGlzdCcpO1xuICBjb25zdCBTZWFyY2ggPSBkZWVwLmlkTG9jYWwoZHBsLCAnU2VhcmNoJyk7XG5cbiAgcmV0dXJuICh7XG4gICAgZ28sXG5cbiAgICBpc0FjdGl2ZSxcbiAgICBzYXZlSGlzdG9yeSA9IGZhbHNlLFxuICAgIGRpc2Nsb3N1cmU6IF9fZGlzY2xvc3VyZSxcbiAgICBzdGFydFByb3BzLFxuICAgIC4uLnByb3BzXG4gIH0sIHJlZikgPT4ge1xuICAgIGNvbnN0IF9kaXNjbG9zdXJlID0gYy51c2VEaXNjbG9zdXJlKCk7XG4gICAgY29uc3QgZGlzY2xvc3VyZSA9IF9fZGlzY2xvc3VyZSB8fCBfZGlzY2xvc3VyZTtcblxuICAgIFJlYWN0LnVzZUVmZmVjdCgoKSA9PiAoKSA9PiBkZWVwLm1pbmlsaW5rcy5hcHBseShbXSwgYGRlZXAtcGVyY2VwdGlvbi1maW5kZXItJHtnby5fX3B9YCksIFtdKTtcbiAgICBjb25zdCBbcXVlcnlJZCwgc2V0UXVlcnlJZF0gPSBSZWFjdC51c2VTdGF0ZSghc2F2ZUhpc3RvcnkgPyAndmlydHVhbCcgOiB1bmRlZmluZWQpO1xuXG4gICAgcmV0dXJuIDxnby5PblxuICAgICAgZG89e3tcbiAgICAgICAgb3BlbjogKGcsdixvKSA9PiB7XG4gICAgICAgICAgaWYgKCFvPy5pZCkgcmV0dXJuO1xuICAgICAgICAgIGRpc2Nsb3N1cmUub25DbG9zZSgpO1xuICAgICAgICAgIGdvLnJvb3QoKS5kbygnb3BlbicsIHsgaWQ6IG8/LmlkLCBmb2N1czogdHJ1ZSB9KTtcbiAgICAgICAgfSxcbiAgICAgICAgZXhlYzogYXN5bmMgKGcsdixvKSA9PiB7XG4gICAgICAgICAgaWYgKHNhdmVIaXN0b3J5KSB7XG4gICAgICAgICAgICBjb25zdCB7IGRhdGE6IFt7IGlkIH1dIH0gPSBhd2FpdCBkZWVwLmluc2VydCh7XG4gICAgICAgICAgICAgIHR5cGVfaWQ6IFF1ZXJ5LFxuICAgICAgICAgICAgICBvYmplY3Q6IHtcbiAgICAgICAgICAgICAgICBfb3I6IFt7IGluOiB7IHR5cGVfaWQ6IENvbnRhaW4sIHN0cmluZzogeyB2YWx1ZTogeyBfaWxpa2U6IGAlVHlwZSVgIH0gfSB9IH1dLFxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICBjb250YWluZXJJZDogZGVlcC5saW5rSWQsXG4gICAgICAgICAgICAgIGluOiB7XG4gICAgICAgICAgICAgICAgdHlwZV9pZDogRmluZGVyUXVlcnksXG4gICAgICAgICAgICAgICAgZnJvbV9pZDogZGVlcC5saW5rSWQsXG4gICAgICAgICAgICAgICAgY29udGFpbmVySWQ6IGRlZXAubGlua0lkLFxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBhd2FpdCBkZWVwLnNlbGVjdChpZCwgeyBhcHBseTogYGRlZXAtcGVyY2VwdGlvbi1maW5kZXItJHtnby5fX3B9YCB9KTtcbiAgICAgICAgICAgIHNldFF1ZXJ5SWQoaWQpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBkaXNjbG9zdXJlLm9uT3BlbigpO1xuICAgICAgICAgIGdvLmZvY3VzKFRyZWUpO1xuICAgICAgICB9XG4gICAgICB9fVxuICAgID5cbiAgICAgIDxjLkJ1dHRvblxuICAgICAgICByZWY9e3JlZn0gaD0nM2VtJyB3PSczZW0nIHZhcmlhbnQ9e2lzQWN0aXZlID8gJ2FjdGl2ZScgOiBudWxsfVxuICAgICAgICBvbkNsaWNrPXsoKSA9PiBnby5kbygnZXhlYycpfVxuICAgICAgICB7Li4ucHJvcHN9XG4gICAgICA+8J+qrDwvYy5CdXR0b24+XG4gICAgICB7ISFxdWVyeUlkICYmIGRpc2Nsb3N1cmUuaXNPcGVuICYmIDxnby5Db21wb25lbnQgcGF0aD17W2RwbCwgJ0ZpbmRlciddfVxuICAgICAgICBkaXNjbG9zdXJlPXtkaXNjbG9zdXJlfSBpbml0aWFsSWQ9e3F1ZXJ5SWR9IGluaXRpYWxIYW5kbGVySWQ9e1RyZWVMaXN0fVxuICAgICAgICBvblN1Ym1pdD17KGlkKSA9PiBnby5kbygnb3BlbicsIHsgaWQgfSl9XG4gICAgICAgIHN0YXJ0UHJvcHM9e3N0YXJ0UHJvcHN9XG4gICAgICAvPn1cbiAgICA8L2dvLk9uPjtcbiAgfTtcbn0iXX0=",
          "link_id": 14099
        },
        "__typename": "links"
      },
      "__typename": "handlers"
    },
    {
      "dist_id": 16008,
      "src_id": 5813,
      "handler_id": 5823,
      "execution_provider_id": 33,
      "isolation_provider_id": 144,
      "dist": {
        "id": 16008,
        "type_id": 30,
        "from_id": 0,
        "to_id": 0,
        "value": {
          "id": 1579,
          "value": "async ({ deep, data, Go, require }) => {\n    const React = require('react');\n    const c = require('@chakra-ui/react');\n    const dpl = '@deep-foundation/perception-links';\n    const GraphLinkPlanet = await deep.id(dpl, 'GraphLinkPlanet');\n    return ({ go, isActive, position, locked = false, children, }, ref) => {\n        const { cy } = go.useGraph();\n        const $inouts = cy.$(`.link-type[target=\"${go.linkId}\"],.link-from[target=\"${go.linkId}\"],.link-to[target=\"${go.linkId}\"]`);\n        const inouts = $inouts.map((e) => {\n            return { id: e.id(), linkId: e.data().linkId };\n        });\n        const nav = go.useNav();\n        nav('current', go?.link?.from_id ? 'from_id' : 'current', 'type_id', go?.link?.to_id ? 'to_id' : 'current', inouts?.length ? 'inout' : 'current');\n        nav('from_id', 'from', 'from_id', 'current', 'from_id');\n        nav('to_id', 'current', 'to_id', 'to', 'to_id');\n        nav('type_id', 'type_id', 'type', 'type_id', 'current');\n        const [inoutId, setInoutId] = React.useState();\n        nav('inout', 'inout', 'current', 'inout', 'inouted');\n        React.useEffect(() => {\n            $inouts.removeClass('link-edge-active');\n            if (go.value === 'inout' && inoutId)\n                cy.$id(inoutId).addClass('link-edge-active');\n        }, [go.value, inoutId]);\n        React.useEffect(() => {\n            if (!isActive)\n                go.set('current');\n        }, [isActive]);\n        return React.createElement(go.On, { do: {\n                exec: (g, v, o) => {\n                    if (!go.value || go.value === 'current')\n                        go.focus(GraphLinkPlanet);\n                    if (go.value === GraphLinkPlanet)\n                        go.focus('current');\n                },\n                focus: (g, v, o) => { },\n                use: (g, v, o) => { },\n                position: (g, v, o) => { },\n                scroll: (g, v, o) => {\n                    console.log(ref);\n                    cy.center(ref.current);\n                },\n                ...(go.value === 'inout') ? {\n                    left: (g, v, o) => {\n                        if (o?.hotkeyEvent?.meta || o?.hotkeyEvent?.shift || o?.hotkeyEvent?.ctrl || o?.hotkeyEvent?.alt) {\n                            setInoutId(inouts?.[0]);\n                        }\n                        else\n                            setInoutId(go.prev(inouts, inoutId));\n                    },\n                    right: (g, v, o) => {\n                        if (o?.hotkeyEvent?.meta || o?.hotkeyEvent?.shift || o?.hotkeyEvent?.ctrl || o?.hotkeyEvent?.alt) {\n                            setInoutId(inouts?.[inouts.length - 1]?.id);\n                        }\n                        else\n                            setInoutId(go.next(inouts, inoutId));\n                    },\n                } : {\n                    left: (g, v, o) => {\n                        go.focus(nav.get(go.value || 'current', 'left'), { prev: go.value });\n                    },\n                    right: (g, v, o) => {\n                        go.focus(nav.get(go.value || 'current', 'right'), { prev: go.value });\n                    },\n                },\n                up: (g, v, o) => go.focus(nav.get(go.value || 'current', 'up'), { prev: go.value }),\n                down: (g, v, o) => go.focus(nav.get(go.value || 'current', 'down'), { prev: go.value }),\n            }, focus: {\n                type: (g, v, o) => go.set().go.go.do('open', { id: go.link.type_id, focus: true }),\n                from: (g, v, o) => go.set().go.go.do('open', { id: go.link.from_id, focus: true }),\n                to: (g, v, o) => go.set().go.go.do('open', { id: go.link.to_id, focus: true }),\n                inout: (g, v, o) => setInoutId(inouts?.[0]?.id),\n                inouted: (g, v, o) => {\n                    setInoutId();\n                    go.set().go.go.focus(cy.$id(inoutId)?.data()?.linkId);\n                }\n            } },\n            React.createElement(go.GraphNode, { element: {\n                    data: { id: `${go.link.id}-children` },\n                    classes: ['link-children'],\n                } },\n                React.createElement(go.GraphNode, { ref: ref, element: {\n                        data: { id: go.link.id, label: `${go.linkId}: ${go.link.name !== go.linkId ? go.link.name : ''}\n  (${go.link.type_id}: ${go.link.type?.name !== go.link.type_id ? go.link.type?.name : ''})\n  \n  ${go.link.symbol}` },\n                        classes: ['link-node', ...(isActive ? ['link-node-active'] : [])],\n                    }, onClick: (e) => {\n                        go.go.focus(go.linkId);\n                        go.do('exec');\n                    } },\n                    React.createElement(c.Box, { w: '0', h: '0', position: 'relative', ref: go.ref },\n                        React.createElement(go.Provider, { linkId: GraphLinkPlanet },\n                            React.createElement(go.Component, { path: [dpl, 'GraphLinkPlanet'], linkId: go.linkId, isActive: isActive && go.value === GraphLinkPlanet })))),\n                !!go.link.type_id && React.createElement(go.GraphEdge, { element: {\n                        data: { id: `${go.link.id}-type`, source: `${go.link.id}`, target: `${go.link.type_id}` },\n                        classes: ['link-edge', 'link-type', ...(go.value === 'type_id' ? ['link-edge-active'] : [])],\n                    } }),\n                !!go.link.from_id && React.createElement(go.GraphEdge, { element: {\n                        data: { id: `${go.link.id}-from`, source: `${go.link.id}`, target: `${go.link.from_id}` },\n                        classes: ['link-edge', 'link-from', ...(go.value === 'from_id' ? ['link-edge-active'] : [])],\n                    } }),\n                !!go.link.to_id && React.createElement(go.GraphEdge, { element: {\n                        data: { id: `${go.link.id}-to`, source: `${go.link.id}`, target: `${go.link.to_id}` },\n                        classes: ['link-edge', 'link-to', ...(go.value === 'to_id' ? ['link-edge-active'] : [])],\n                    } }),\n                children));\n    };\n};\n//# sourceMappingURL=data:application/json;base64,",
          "link_id": 16008
        },
        "__typename": "links"
      },
      "__typename": "handlers"
    },
    {
      "dist_id": 16360,
      "src_id": 16347,
      "handler_id": 16351,
      "execution_provider_id": 33,
      "isolation_provider_id": 144,
      "dist": {
        "id": 16360,
        "type_id": 30,
        "from_id": 0,
        "to_id": 0,
        "value": {
          "id": 1606,
          "value": "({ deep, data, require, Go }) => {\n    const React = require('react');\n    const { BsX, BsCheck2, BsXLg, BsDatabase, BsRegex } = require('react-icons/bs');\n    const { TypedIcon, DownIcon, UpIcon, TypeIcon, InIcon, OutIcon, FromIcon, ToIcon, } = require('@deep-foundation/perception-app');\n    const { useAsyncMemo } = require('use-async-memo');\n    const c = require('@chakra-ui/react');\n    const dc = '@deep-foundation/core';\n    const dpl = '@deep-foundation/perception-links';\n    const V = deep.idLocal(dc, 'Value');\n    const S = deep.idLocal(dc, 'String');\n    const N = deep.idLocal(dc, 'Number');\n    const O = deep.idLocal(dc, 'Object');\n    return ({ go, defaultContainerId, defaultTypeId, defaultFromId, defaultToId, disclosure, }, ref) => {\n        if (!disclosure)\n            throw new Error('!disclosure');\n        const [typeId, setTypeId] = React.useState(defaultTypeId);\n        const [fromId, setFromId] = React.useState(defaultFromId);\n        const [toId, setToId] = React.useState(defaultToId);\n        const type = React.useMemo(() => typeId ? deep.get(+typeId) : null, [typeId]);\n        const from = React.useMemo(() => fromId ? deep.get(+fromId) : null, [fromId]);\n        const to = React.useMemo(() => toId ? deep.get(+toId) : null, [toId]);\n        const [value, setValue] = React.useState();\n        const [name, setName] = React.useState('');\n        const [containerId, setContainerId] = React.useState(defaultContainerId);\n        const tV = useAsyncMemo(async () => {\n            return typeId ? (await deep.select({ type_id: V, from_id: +typeId }))?.data?.[0]?.to_id : undefined;\n        }, [type]);\n        const { isValid, validated } = React.useMemo(() => {\n            try {\n                if (tV === S)\n                    return { validated: value, isValid: true };\n                if (tV === N)\n                    return { validated: +value, isValud: typeof (validated) === 'number' && !Number.isNaN(validated) };\n                if (tV === O)\n                    return { validated: JSON.parse(value), isValid: true };\n                if (!tV)\n                    return { validated: value, isValid: true };\n            }\n            catch (e) { }\n            return { validated: value, isValid: false };\n        }, [value, tV]);\n        const AllowAdmin = useAsyncMemo(async () => {\n            return await deep.can(deep.linkId, deep.linkId, deep.idLocal('@deep-foundation/core', 'AllowAdmin'));\n        }, [], false);\n        const AllowInsertType = useAsyncMemo(async () => {\n            return !typeId ? false : await deep.can(+typeId, deep.linkId, deep.idLocal('@deep-foundation/core', 'AllowInsertType'));\n        }, [typeId], false);\n        const can = AllowInsertType || AllowAdmin;\n        const insertQuery = type ? {\n            type_id: type.id,\n            ...(fromId && toId ? { from_id: +fromId, to_id: +toId } : {}),\n            containerId,\n            ...(name ? { name } : {}),\n            ...(tV == S ? { string: { data: { value: validated } } } : tV == N ? { number: { data: { value: validated } } } : tV == O ? { object: { data: { value: validated } } } : {}),\n        } : {};\n        const valueType = React.useMemo(() => type?.outByType[V]?.[0]?.to_id, [type]);\n        const buttons = React.createElement(React.Fragment, null,\n            React.createElement(c.SlideFade, { in: true, offsetX: '-0.5rem', style: { position: 'absolute', top: 0, right: '-4em' } },\n                React.createElement(c.Button, { w: '3em', h: '3em', boxShadow: 'dark-lg', variant: undefined, onClick: disclosure.onClose },\n                    React.createElement(BsX, null))),\n            React.createElement(c.SlideFade, { in: ((!!fromId && !!toId) || type?.id === 1 || (!type?.from_id && !type?.to_id)) && (isValid || value === ''), offsetX: '-0.5rem', style: { position: 'absolute', bottom: 0, right: '-4em' } },\n                React.createElement(c.Button, { w: '3em', h: '3em', boxShadow: 'dark-lg', variant: 'active', onClick: async () => {\n                        await deep.insert(insertQuery);\n                        disclosure.onClose();\n                    } },\n                    React.createElement(BsCheck2, null))));\n        const alert = React.createElement(React.Fragment, null,\n            React.createElement(c.Alert, { status: can ? 'info' : 'error' },\n                React.createElement(c.AlertIcon, null),\n                React.createElement(c.AlertTitle, null,\n                    \"You \",\n                    can ? 'can' : 'can`t',\n                    \" do it.\")),\n            React.createElement(go.Editor, { value: `await deep.can(deep.linkId, deep.linkId, deep.idLocal('@deep-foundation/core', 'AllowAdmin'))\n// ${AllowAdmin}${!!typeId ? `\nawait deep.can(${typeId}, deep.linkId, deep.idLocal('@deep-foundation/core', 'AllowInsertType'))\n// ${AllowInsertType}` : ''}`, editable: false, readOnly: true }));\n        return React.createElement(go.On, { do: {} },\n            React.createElement(c.Modal, { ref: ref, closeOnOverlayClick: true, blockScrollOnMount: false, onClose: disclosure.onClose, isOpen: disclosure.isOpen, portalProps: { containerRef: go.root().ref } },\n                React.createElement(c.ModalOverlay, null),\n                React.createElement(c.ModalContent, { w: '30em', maxW: '30em', position: 'relative' },\n                    React.createElement(c.ModalHeader, null, \"Link inserting:\"),\n                    React.createElement(c.ModalBody, { p: 0, w: '100%', h: '100%' },\n                        !can && alert,\n                        React.createElement(go.Component, { path: [dpl, 'FinderInput'], leftIcon: React.createElement(TypeIcon, null), value: typeId, onChange: id => setTypeId(id) }),\n                        React.createElement(c.SimpleGrid, { columns: 2 },\n                            React.createElement(go.Component, { path: [dpl, 'FinderInput'], leftIcon: React.createElement(FromIcon, null), value: fromId, onChange: id => setFromId(id) }),\n                            React.createElement(go.Component, { path: [dpl, 'FinderInput'], leftIcon: React.createElement(ToIcon, null), value: toId, onChange: id => setToId(id) })),\n                        React.createElement(c.SimpleGrid, { columns: 2 },\n                            React.createElement(go.Component, { path: [dpl, 'FinderInput'], leftIcon: React.createElement(React.Fragment, null, \"\\uD83D\\uDDC2\\uFE0F\"), value: containerId, onChange: id => setContainId(id) }),\n                            React.createElement(c.Input, { placeholder: 'name', h: '3em', value: name, onChange: e => setName(e.target.value) })),\n                        !!type && React.createElement(c.Box, null,\n                            !valueType && React.createElement(React.Fragment, null,\n                                React.createElement(c.Alert, { status: 'info' },\n                                    React.createElement(c.AlertIcon, null),\n                                    React.createElement(c.AlertTitle, null,\n                                        \"type \",\n                                        +type,\n                                        \" can't have Value\"))),\n                            valueType === S && React.createElement(React.Fragment, null,\n                                React.createElement(go.Editor, { placeholder: 'String value', value: value, onChange: setValue })),\n                            valueType === N && React.createElement(React.Fragment, null,\n                                React.createElement(c.Input, { type: 'string', value: value, placeholder: 'Number value', onChange: e => setValue(e.target.value) })),\n                            valueType === O && React.createElement(React.Fragment, null,\n                                React.createElement(go.Editor, { placeholder: 'Object value', value: value, onChange: setValue })),\n                            (tV === S || tV === N || tV === O) && React.createElement(c.Tag, { size: 'lg', colorScheme: value === '' ? 'black' : isValid ? 'deepActive' : 'danger', variant: 'solid', borderRadius: 'full', position: 'absolute', bottom: '-0.5em', right: '-0.5em' }, value === '' ? 'empty' : isValid ? 'valid' : 'invalid')),\n                        React.createElement(c.Divider, { mt: '1em', mb: '1em' }),\n                        React.createElement(go.Editor, { value: `await deep.insert(${JSON.stringify(insertQuery, null, 2)})`, editable: false, readOnly: true }),\n                        !!can && alert),\n                    buttons)));\n    };\n};\n//# sourceMappingURL=data:application/json;base64,",
          "link_id": 16360
        },
        "__typename": "links"
      },
      "__typename": "handlers"
    },
    {
      "dist_id": 16447,
      "src_id": 16441,
      "handler_id": 16445,
      "execution_provider_id": 33,
      "isolation_provider_id": 144,
      "dist": {
        "id": 16447,
        "type_id": 30,
        "from_id": 0,
        "to_id": 0,
        "value": {
          "id": 1611,
          "value": "({ deep, data, require, Go }) => {\n    const React = require('react');\n    const { BsX, BsCheck2 } = require('react-icons/bs');\n    const c = require('@chakra-ui/react');\n    const { useAsyncMemo } = require('use-async-memo');\n    const dc = '@deep-foundation/core';\n    const V = deep.idLocal(dc, 'Value');\n    return ({ go, linkId, containerId, disclosure }, ref) => {\n        if (!disclosure)\n            throw new Error('!disclosure');\n        if (!linkId)\n            throw new Error('!linkId');\n        const link = React.useMemo(() => deep.get(linkId), [linkId]);\n        const [containment, setContainment] = React.useState('contains');\n        const [down, setDown] = React.useState(true);\n        const AllowAdmin = useAsyncMemo(async () => {\n            return await deep.can(deep.linkId, deep.linkId, deep.idLocal(dc, 'AllowAdmin'));\n        }, [], false);\n        const AllowDeleteType = useAsyncMemo(async () => {\n            return !link.type_id ? false : await deep.can(link.type_id, deep.linkId, deep.idLocal(dc, 'AllowDeleteType'));\n        }, [link.type_id], false);\n        const AllowDelete = useAsyncMemo(async () => {\n            return !linkId ? false : await deep.can(linkId, deep.linkId, deep.idLocal(dc, 'AllowDelete'));\n        }, [linkId], false);\n        const can = AllowAdmin || AllowDeleteType || AllowDelete;\n        const deleteQuery = {\n            _or: [\n                (down ? {\n                    up: {\n                        tree_id: deep.idLocal(dc, 'containTree'),\n                        parent_id: link.id,\n                    }\n                } : {\n                    id: link.id,\n                }),\n                ...(containment === 'contains' ? [{\n                        type_id: deep.idLocal(dc, 'Contain'),\n                        to_id: link.id,\n                    }] : containment === 'container' ? [{\n                        type_id: deep.idLocal(dc, 'Contain'),\n                        from_id: containerId,\n                        to_id: link.id,\n                    }] : []),\n            ],\n        };\n        const { data: countDown } = deep.useQuery({\n            up: {\n                tree_id: deep.idLocal(dc, 'containTree'),\n                parent_id: link.id,\n            }\n        }, {\n            skip: !disclosure.isOpen,\n            aggregate: 'count',\n        });\n        const { data: countInContains } = deep.useQuery({\n            to_id: link.id,\n            type_id: deep.idLocal(dc, 'Contain'),\n        }, {\n            skip: !disclosure.isOpen,\n            aggregate: 'count'\n        });\n        const buttons = (React.createElement(React.Fragment, null,\n            React.createElement(c.SlideFade, { in: true, offsetX: '-0.5rem', style: { position: 'absolute', top: 0, right: '-4em' } },\n                React.createElement(c.Button, { w: '3em', h: '3em', boxShadow: 'dark-lg', onClick: disclosure.onClose },\n                    React.createElement(BsX, null))),\n            React.createElement(c.SlideFade, { in: true, offsetX: '-0.5rem', style: { position: 'absolute', bottom: 0, right: '-4em' } },\n                React.createElement(c.Button, { w: '3em', h: '3em', boxShadow: 'dark-lg', variant: 'active', onClick: async () => {\n                        await deep.delete(deleteQuery);\n                        disclosure.onClose();\n                    } },\n                    React.createElement(BsCheck2, null)))));\n        const alert = (React.createElement(React.Fragment, null,\n            React.createElement(c.Alert, { status: can ? 'info' : 'error' },\n                React.createElement(c.AlertIcon, null),\n                React.createElement(c.AlertTitle, null,\n                    \"You \",\n                    can ? 'can' : \"can't\",\n                    \" do it.\")),\n            React.createElement(go.Editor, { value: `await deep.can(deep.linkId, deep.linkId, deep.idLocal('@deep-foundation/core', 'AllowAdmin'))\n// ${AllowAdmin}\nawait deep.can(${link.type_id}, deep.linkId, deep.idLocal('@deep-foundation/core', 'AllowDeleteType'))\n// ${AllowDeleteType}\nawait deep.can(${link.id}, deep.linkId, deep.idLocal('@deep-foundation/core', 'AllowDelete'))\n// ${AllowDelete}`, editable: false, readOnly: true })));\n        return (React.createElement(go.On, { do: {} },\n            React.createElement(c.Modal, { ref: ref, closeOnOverlayClick: true, blockScrollOnMount: false, onClose: disclosure.onClose, isOpen: disclosure.isOpen, portalProps: {\n                    containerRef: go.root().ref\n                } },\n                React.createElement(c.ModalOverlay, null),\n                React.createElement(c.ModalContent, { w: '30em', maxW: '30em', position: 'relative' },\n                    React.createElement(c.ModalHeader, null,\n                        \"Link deleting: \",\n                        `${link}`),\n                    React.createElement(c.ModalBody, { p: 0, w: '100%', h: '100%' },\n                        alert,\n                        React.createElement(c.Box, { p: '1em' },\n                            React.createElement(c.Checkbox, { size: 'lg', checked: down, onChange: () => setDown(!down) },\n                                \"Delete all contained in links? Total: (\",\n                                countDown,\n                                \")\")),\n                        React.createElement(c.Box, { p: '1em' }, \"Need to delete contains to this link?\"),\n                        React.createElement(c.Box, null,\n                            React.createElement(c.SimpleGrid, { columns: 3 },\n                                React.createElement(c.Button, { variant: containment === 'contains' ? 'active' : undefined, onClick: () => setContainment('contains') },\n                                    React.createElement(c.Box, null,\n                                        React.createElement(c.Box, null, \"all in\"),\n                                        React.createElement(c.Box, { fontSize: 'xs' },\n                                            \"contains: (\",\n                                            countInContains,\n                                            \")\"))),\n                                !!containerId && (React.createElement(c.Button, { variant: containment === 'container' ? 'active' : undefined, onClick: () => setContainment('container') },\n                                    React.createElement(c.Box, null,\n                                        React.createElement(c.Box, null, \"only one\"),\n                                        React.createElement(c.Box, { fontSize: 'xs' },\n                                            \"from \",\n                                            containerId)))),\n                                React.createElement(c.Button, { variant: containment === 'only' ? 'active' : undefined, onClick: () => setContainment('only') },\n                                    React.createElement(c.Box, null,\n                                        React.createElement(c.Box, null, \"not need\"),\n                                        React.createElement(c.Box, { fontSize: 'xs' }, \"to delete contains\"))))),\n                        React.createElement(go.Editor, { value: `await deep.delete(${JSON.stringify(deleteQuery, null, 2)})`, editable: false, readOnly: true })),\n                    buttons))));\n    };\n};\n//# sourceMappingURL=data:application/json;base64,",
          "link_id": 16447
        },
        "__typename": "links"
      },
      "__typename": "handlers"
    },
    {
      "dist_id": 16541,
      "src_id": 16525,
      "handler_id": 16529,
      "execution_provider_id": 33,
      "isolation_provider_id": 144,
      "dist": {
        "id": 16541,
        "type_id": 30,
        "from_id": 0,
        "to_id": 0,
        "value": {
          "id": 1633,
          "value": "({ deep, data, require, Go }) => {\n    const { BsX, BsCheck2All } = require(\"react-icons/bs\");\n    const React = require('react');\n    const c = require('@chakra-ui/react');\n    const dc = '@deep-foundation/core';\n    const dpl = '@deep-foundation/perception-links';\n    const Query = deep.idLocal(dc, 'Query');\n    const Contain = deep.idLocal(dc, 'Contain');\n    const FinderQuery = deep.idLocal(dpl, 'FinderQuery');\n    const Tree = deep.idLocal(dpl, 'Tree');\n    const Search = deep.idLocal(dpl, 'Search');\n    return ({ go, initialId = deep.linkId, initialHandlerId, startProps = {}, isActive, onSubmit, disclosure: __disclosure, }, ref) => {\n        const _disclosure = c.useDisclosure();\n        const disclosure = __disclosure || _disclosure;\n        const [selectedId, setSelectedId] = React.useState();\n        const [queryId, setQueryId] = React.useState();\n        const buttons = React.createElement(React.Fragment, null,\n            React.createElement(c.SlideFade, { in: true, offsetX: '-0.5rem', style: { position: 'absolute', top: 0, right: '-4em' } },\n                React.createElement(c.Button, { w: '3em', h: '3em', boxShadow: 'dark-lg', variant: undefined, onClick: disclosure.onClose },\n                    React.createElement(BsX, null))),\n            React.createElement(c.Box, { position: 'absolute', right: '0', bottom: '-4em' }, !!selectedId && React.createElement(c.Button, { h: '3em', rightIcon: React.createElement(BsCheck2All, null), onClick: () => {\n                    onSubmit && onSubmit(selectedId);\n                } }, `${deep.get(selectedId)}`)));\n        return React.createElement(go.On, { do: {\n                changed: (g, v, o) => o?.id && setSelectedId(o.id),\n            } },\n            React.createElement(c.Modal, { ref: disclosure.isOpen ? ref : null, closeOnOverlayClick: true, blockScrollOnMount: false, onClose: () => {\n                    disclosure.onClose();\n                    go.focus();\n                }, isOpen: disclosure.isOpen, portalProps: { containerRef: go.root().ref } },\n                React.createElement(c.ModalOverlay, null),\n                React.createElement(c.ModalContent, { w: '30em', maxW: '30em', h: '80vh', position: 'relative' },\n                    React.createElement(c.ModalHeader, null, \"Finder\"),\n                    React.createElement(c.ModalBody, { p: 0, w: '100%', h: '100%' },\n                        React.createElement(go.Provider, { linkId: Tree }, !!disclosure.isOpen && React.createElement(go.Handler, { initialId: initialId, initialHandlerId: initialHandlerId, startProps: startProps, handlerId: Tree, fullWidth: '30em', flex: '1', saveHistory: false, using: false }))),\n                    buttons)));\n    };\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsibW9kdWxlLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxDQUFDLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRTtJQUM5QixNQUFNLEVBQUUsR0FBRyxFQUFFLFdBQVcsRUFBRSxHQUFHLE9BQU8sQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO0lBQ3ZELE1BQU0sS0FBSyxHQUFHLE9BQU8sQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUUvQixNQUFNLENBQUMsR0FBRyxPQUFPLENBQUMsa0JBQWtCLENBQUMsQ0FBQztJQUV0QyxNQUFNLEVBQUUsR0FBRyx1QkFBdUIsQ0FBQztJQUNuQyxNQUFNLEdBQUcsR0FBRyxtQ0FBbUMsQ0FBQztJQUVoRCxNQUFNLEtBQUssR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLEVBQUUsRUFBRSxPQUFPLENBQUMsQ0FBQztJQUN4QyxNQUFNLE9BQU8sR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLEVBQUUsRUFBRSxTQUFTLENBQUMsQ0FBQztJQUM1QyxNQUFNLFdBQVcsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxhQUFhLENBQUMsQ0FBQztJQUNyRCxNQUFNLElBQUksR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxNQUFNLENBQUMsQ0FBQztJQUN2QyxNQUFNLE1BQU0sR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxRQUFRLENBQUMsQ0FBQztJQUUzQyxPQUFPLENBQUMsRUFDTixFQUFFLEVBRUYsU0FBUyxHQUFHLElBQUksQ0FBQyxNQUFNLEVBQ3ZCLGdCQUFnQixFQUNoQixVQUFVLEdBQUcsRUFBRSxFQUNmLFFBQVEsRUFDUixRQUFRLEVBQ1IsVUFBVSxFQUFFLFlBQVksR0FDekIsRUFBRSxHQUFHLEVBQUUsRUFBRTtRQUNSLE1BQU0sV0FBVyxHQUFHLENBQUMsQ0FBQyxhQUFhLEVBQUUsQ0FBQztRQUN0QyxNQUFNLFVBQVUsR0FBRyxZQUFZLElBQUksV0FBVyxDQUFDO1FBRS9DLE1BQU0sQ0FBQyxVQUFVLEVBQUUsYUFBYSxDQUFDLEdBQUcsS0FBSyxDQUFDLFFBQVEsRUFBRSxDQUFDO1FBQ3JELE1BQU0sQ0FBQyxPQUFPLEVBQUUsVUFBVSxDQUFDLEdBQUcsS0FBSyxDQUFDLFFBQVEsRUFBRSxDQUFDO1FBRS9DLE1BQU0sT0FBTyxHQUFHO1lBQ2Qsb0JBQUMsQ0FBQyxDQUFDLFNBQVMsSUFBQyxFQUFFLEVBQUUsSUFBSSxFQUFFLE9BQU8sRUFBQyxTQUFTLEVBQUMsS0FBSyxFQUFFLEVBQUMsUUFBUSxFQUFFLFVBQVUsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUM7Z0JBQzNGLG9CQUFDLENBQUMsQ0FBQyxNQUFNLElBQ1AsQ0FBQyxFQUFDLEtBQUssRUFBQyxDQUFDLEVBQUMsS0FBSyxFQUNmLFNBQVMsRUFBQyxTQUFTLEVBQ25CLE9BQU8sRUFBRSxTQUFTLEVBQ2xCLE9BQU8sRUFBRSxVQUFVLENBQUMsT0FBTztvQkFDNUIsb0JBQUMsR0FBRyxPQUFHLENBQVcsQ0FDUDtZQUNkLG9CQUFDLENBQUMsQ0FBQyxHQUFHLElBQUMsUUFBUSxFQUFDLFVBQVUsRUFBQyxLQUFLLEVBQUMsR0FBRyxFQUFDLE1BQU0sRUFBQyxNQUFNLElBQy9DLENBQUMsQ0FBQyxVQUFVLElBQUksb0JBQUMsQ0FBQyxDQUFDLE1BQU0sSUFDeEIsQ0FBQyxFQUFDLEtBQUssRUFBQyxTQUFTLEVBQUUsb0JBQUMsV0FBVyxPQUFHLEVBQ2xDLE9BQU8sRUFBRSxHQUFHLEVBQUU7b0JBQ1osUUFBUSxJQUFJLFFBQVEsQ0FBQyxVQUFVLENBQUMsQ0FBQztnQkFDbkMsQ0FBQyxJQUNELEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxVQUFVLENBQUMsRUFBRSxDQUFZLENBQ2pDLENBQ1AsQ0FBQztRQUVKLE9BQU8sb0JBQUMsRUFBRSxDQUFDLEVBQUUsSUFDWCxFQUFFLEVBQUU7Z0JBQ0YsT0FBTyxFQUFFLENBQUMsQ0FBQyxFQUFDLENBQUMsRUFBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsRUFBRSxFQUFFLElBQUksYUFBYSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUM7YUFDakQ7WUFFRCxvQkFBQyxDQUFDLENBQUMsS0FBSyxJQUNOLEdBQUcsRUFBRSxVQUFVLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLElBQUksRUFDbkMsbUJBQW1CLFFBQUMsa0JBQWtCLEVBQUUsS0FBSyxFQUM3QyxPQUFPLEVBQUUsR0FBRyxFQUFFO29CQUNaLFVBQVUsQ0FBQyxPQUFPLEVBQUUsQ0FBQztvQkFDckIsRUFBRSxDQUFDLEtBQUssRUFBRSxDQUFDO2dCQUNiLENBQUMsRUFDRCxNQUFNLEVBQUUsVUFBVSxDQUFDLE1BQU0sRUFBRSxXQUFXLEVBQUUsRUFBRSxZQUFZLEVBQUUsRUFBRSxDQUFDLElBQUksRUFBRSxDQUFDLEdBQUcsRUFBRTtnQkFFdkUsb0JBQUMsQ0FBQyxDQUFDLFlBQVksT0FBRztnQkFDbEIsb0JBQUMsQ0FBQyxDQUFDLFlBQVksSUFBQyxDQUFDLEVBQUMsTUFBTSxFQUFDLElBQUksRUFBQyxNQUFNLEVBQUMsQ0FBQyxFQUFDLE1BQU0sRUFBQyxRQUFRLEVBQUMsVUFBVTtvQkFDL0Qsb0JBQUMsQ0FBQyxDQUFDLFdBQVcsaUJBQXVCO29CQUlyQyxvQkFBQyxDQUFDLENBQUMsU0FBUyxJQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFDLE1BQU0sRUFBQyxDQUFDLEVBQUMsTUFBTTt3QkFDbEMsb0JBQUMsRUFBRSxDQUFDLFFBQVEsSUFBQyxNQUFNLEVBQUUsSUFBSSxJQUN0QixDQUFDLENBQUMsVUFBVSxDQUFDLE1BQU0sSUFBSSxvQkFBQyxFQUFFLENBQUMsT0FBTyxJQUNqQyxTQUFTLEVBQUUsU0FBUyxFQUNwQixnQkFBZ0IsRUFBRSxnQkFBZ0IsRUFDbEMsVUFBVSxFQUFFLFVBQVUsRUFDdEIsU0FBUyxFQUFFLElBQUksRUFDZixTQUFTLEVBQUMsTUFBTSxFQUFDLElBQUksRUFBQyxHQUFHLEVBQ3pCLFdBQVcsRUFBRSxLQUFLLEVBQ2xCLEtBQUssRUFBRSxLQUFLLEdBQ1osQ0FDVSxDQUNGO29CQUNiLE9BQU8sQ0FDTyxDQUNULENBQ0osQ0FBQztJQUNYLENBQUMsQ0FBQztBQUNKLENBQUMsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbIih7IGRlZXAsIGRhdGEsIHJlcXVpcmUsIEdvIH0pID0+IHtcbiAgY29uc3QgeyBCc1gsIEJzQ2hlY2syQWxsIH0gPSByZXF1aXJlKFwicmVhY3QtaWNvbnMvYnNcIik7XG4gIGNvbnN0IFJlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcbiAgXG4gIGNvbnN0IGMgPSByZXF1aXJlKCdAY2hha3JhLXVpL3JlYWN0Jyk7XG5cbiAgY29uc3QgZGMgPSAnQGRlZXAtZm91bmRhdGlvbi9jb3JlJztcbiAgY29uc3QgZHBsID0gJ0BkZWVwLWZvdW5kYXRpb24vcGVyY2VwdGlvbi1saW5rcyc7XG4gIFxuICBjb25zdCBRdWVyeSA9IGRlZXAuaWRMb2NhbChkYywgJ1F1ZXJ5Jyk7XG4gIGNvbnN0IENvbnRhaW4gPSBkZWVwLmlkTG9jYWwoZGMsICdDb250YWluJyk7XG4gIGNvbnN0IEZpbmRlclF1ZXJ5ID0gZGVlcC5pZExvY2FsKGRwbCwgJ0ZpbmRlclF1ZXJ5Jyk7XG4gIGNvbnN0IFRyZWUgPSBkZWVwLmlkTG9jYWwoZHBsLCAnVHJlZScpO1xuICBjb25zdCBTZWFyY2ggPSBkZWVwLmlkTG9jYWwoZHBsLCAnU2VhcmNoJyk7XG5cbiAgcmV0dXJuICh7XG4gICAgZ28sXG5cbiAgICBpbml0aWFsSWQgPSBkZWVwLmxpbmtJZCxcbiAgICBpbml0aWFsSGFuZGxlcklkLFxuICAgIHN0YXJ0UHJvcHMgPSB7fSxcbiAgICBpc0FjdGl2ZSxcbiAgICBvblN1Ym1pdCxcbiAgICBkaXNjbG9zdXJlOiBfX2Rpc2Nsb3N1cmUsXG4gIH0sIHJlZikgPT4ge1xuICAgIGNvbnN0IF9kaXNjbG9zdXJlID0gYy51c2VEaXNjbG9zdXJlKCk7XG4gICAgY29uc3QgZGlzY2xvc3VyZSA9IF9fZGlzY2xvc3VyZSB8fCBfZGlzY2xvc3VyZTtcblxuICAgIGNvbnN0IFtzZWxlY3RlZElkLCBzZXRTZWxlY3RlZElkXSA9IFJlYWN0LnVzZVN0YXRlKCk7XG4gICAgY29uc3QgW3F1ZXJ5SWQsIHNldFF1ZXJ5SWRdID0gUmVhY3QudXNlU3RhdGUoKTtcblxuICAgIGNvbnN0IGJ1dHRvbnMgPSA8PlxuICAgICAgPGMuU2xpZGVGYWRlIGluPXt0cnVlfSBvZmZzZXRYPSctMC41cmVtJyBzdHlsZT17e3Bvc2l0aW9uOiAnYWJzb2x1dGUnLCB0b3A6IDAsIHJpZ2h0OiAnLTRlbSd9fT5cbiAgICAgICAgPGMuQnV0dG9uXG4gICAgICAgICAgdz0nM2VtJyBoPSczZW0nXG4gICAgICAgICAgYm94U2hhZG93PSdkYXJrLWxnJ1xuICAgICAgICAgIHZhcmlhbnQ9e3VuZGVmaW5lZH1cbiAgICAgICAgICBvbkNsaWNrPXtkaXNjbG9zdXJlLm9uQ2xvc2V9XG4gICAgICAgID48QnNYIC8+PC9jLkJ1dHRvbj5cbiAgICAgIDwvYy5TbGlkZUZhZGU+XG4gICAgICA8Yy5Cb3ggcG9zaXRpb249J2Fic29sdXRlJyByaWdodD0nMCcgYm90dG9tPSctNGVtJz5cbiAgICAgICAgeyEhc2VsZWN0ZWRJZCAmJiA8Yy5CdXR0b25cbiAgICAgICAgICBoPSczZW0nIHJpZ2h0SWNvbj17PEJzQ2hlY2syQWxsIC8+fVxuICAgICAgICAgIG9uQ2xpY2s9eygpID0+IHtcbiAgICAgICAgICAgIG9uU3VibWl0ICYmIG9uU3VibWl0KHNlbGVjdGVkSWQpO1xuICAgICAgICAgIH19XG4gICAgICAgID57YCR7ZGVlcC5nZXQoc2VsZWN0ZWRJZCl9YH08L2MuQnV0dG9uPlxuICAgICAgPC9jLkJveD5cbiAgICA8Lz47XG5cbiAgICByZXR1cm4gPGdvLk9uXG4gICAgICBkbz17e1xuICAgICAgICBjaGFuZ2VkOiAoZyx2LG8pID0+IG8/LmlkICYmIHNldFNlbGVjdGVkSWQoby5pZCksXG4gICAgICB9fVxuICAgID5cbiAgICAgIDxjLk1vZGFsXG4gICAgICAgIHJlZj17ZGlzY2xvc3VyZS5pc09wZW4gPyByZWYgOiBudWxsfVxuICAgICAgICBjbG9zZU9uT3ZlcmxheUNsaWNrIGJsb2NrU2Nyb2xsT25Nb3VudD17ZmFsc2V9XG4gICAgICAgIG9uQ2xvc2U9eygpID0+IHtcbiAgICAgICAgICBkaXNjbG9zdXJlLm9uQ2xvc2UoKTtcbiAgICAgICAgICBnby5mb2N1cygpO1xuICAgICAgICB9fVxuICAgICAgICBpc09wZW49e2Rpc2Nsb3N1cmUuaXNPcGVufSBwb3J0YWxQcm9wcz17eyBjb250YWluZXJSZWY6IGdvLnJvb3QoKS5yZWYgfX1cbiAgICAgID5cbiAgICAgICAgPGMuTW9kYWxPdmVybGF5IC8+XG4gICAgICAgIDxjLk1vZGFsQ29udGVudCB3PSczMGVtJyBtYXhXPSczMGVtJyBoPSc4MHZoJyBwb3NpdGlvbj0ncmVsYXRpdmUnPlxuICAgICAgICAgIDxjLk1vZGFsSGVhZGVyPkZpbmRlcjwvYy5Nb2RhbEhlYWRlcj5cbiAgICAgICAgICB7LyogPEJveCBwb3NpdGlvbj0nYWJzb2x1dGUnIGJvdHRvbT0nLTAuNWVtJyByaWdodD0nLTAuNWVtJyBib3hTaGFkb3c9J2RhcmstbGcnIHpJbmRleD17Mn0+XG4gICAgICAgICAgICB7ISFzZWxlY3RlZExpbmsgJiYgPExpbmtCdXR0b24gaWQ9e3NlbGVjdGVkTGluaz8uaWR9IG1heFc9JzEwMCUnLz59XG4gICAgICAgICAgPC9Cb3g+ICovfVxuICAgICAgICAgIDxjLk1vZGFsQm9keSBwPXswfSB3PScxMDAlJyBoPScxMDAlJz5cbiAgICAgICAgICAgIDxnby5Qcm92aWRlciBsaW5rSWQ9e1RyZWV9PlxuICAgICAgICAgICAgICB7ISFkaXNjbG9zdXJlLmlzT3BlbiAmJiA8Z28uSGFuZGxlclxuICAgICAgICAgICAgICAgIGluaXRpYWxJZD17aW5pdGlhbElkfVxuICAgICAgICAgICAgICAgIGluaXRpYWxIYW5kbGVySWQ9e2luaXRpYWxIYW5kbGVySWR9XG4gICAgICAgICAgICAgICAgc3RhcnRQcm9wcz17c3RhcnRQcm9wc31cbiAgICAgICAgICAgICAgICBoYW5kbGVySWQ9e1RyZWV9XG4gICAgICAgICAgICAgICAgZnVsbFdpZHRoPSczMGVtJyBmbGV4PScxJ1xuICAgICAgICAgICAgICAgIHNhdmVIaXN0b3J5PXtmYWxzZX1cbiAgICAgICAgICAgICAgICB1c2luZz17ZmFsc2V9XG4gICAgICAgICAgICAgIC8+fVxuICAgICAgICAgICAgPC9nby5Qcm92aWRlcj5cbiAgICAgICAgICA8L2MuTW9kYWxCb2R5PlxuICAgICAgICAgIHtidXR0b25zfVxuICAgICAgICA8L2MuTW9kYWxDb250ZW50PlxuICAgICAgPC9jLk1vZGFsPlxuICAgIDwvZ28uT24+O1xuICB9O1xufSJdfQ==",
          "link_id": 16541
        },
        "__typename": "links"
      },
      "__typename": "handlers"
    },
    {
      "dist_id": 16677,
      "src_id": 16671,
      "handler_id": 16675,
      "execution_provider_id": 33,
      "isolation_provider_id": 144,
      "dist": {
        "id": 16677,
        "type_id": 30,
        "from_id": 0,
        "to_id": 0,
        "value": {
          "id": 1639,
          "value": "({ deep, data, require, Go }) => {\n    const React = require('react');\n    const _ = require('lodash');\n    const c = require('@chakra-ui/react');\n    const dc = '@deep-foundation/core';\n    const dpl = '@deep-foundation/perception-links';\n    const FinderButton = deep.idLocal(dpl, 'FinderButton');\n    return ({ go, placeholder = '', value, onChange, leftIcon, children, }, ref) => {\n        const link = React.useMemo(() => {\n            return typeof (+value) === 'number' && !_.isNaN(+value)\n                ? deep.get(+value)\n                : undefined;\n        }, [value]);\n        return React.createElement(go.On, { do: {} },\n            React.createElement(c.InputGroup, { position: 'relative' },\n                !!leftIcon && React.createElement(c.InputLeftElement, { h: '3em', w: '3em', minW: '3em' }, leftIcon),\n                React.createElement(c.Input, { placeholder: placeholder, value: value, onChange: (e) => onChange && onChange(e.target.value), h: '3em', pl: leftIcon ? '3em' : 0, pr: '3em', pt: link ? '0.25em' : undefined }),\n                !!link && React.createElement(c.Text, { position: 'absolute', left: leftIcon ? '4em' : '1em', bottom: '0.25em', pointerEvents: 'none', fontSize: 'xs', noOfLines: 1 }, `${link.symbol} ${link.name != link.id ? link.name : link.id}`),\n                React.createElement(c.InputRightElement, { h: '3em' },\n                    React.createElement(go.Provider, { linkId: FinderButton, on: {\n                            do: {\n                                open: (g, v, o) => {\n                                    if (o?.id)\n                                        onChange && onChange(o?.id);\n                                },\n                            }\n                        } },\n                        React.createElement(go.Handler, { handlerId: FinderButton, bg: 'transparent', isActive: go.value === FinderButton })))));\n    };\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsibW9kdWxlLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxDQUFDLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRTtJQUM5QixNQUFNLEtBQUssR0FBRyxPQUFPLENBQUMsT0FBTyxDQUFDLENBQUM7SUFFL0IsTUFBTSxDQUFDLEdBQUcsT0FBTyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQzVCLE1BQU0sQ0FBQyxHQUFHLE9BQU8sQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDO0lBRXRDLE1BQU0sRUFBRSxHQUFHLHVCQUF1QixDQUFDO0lBQ25DLE1BQU0sR0FBRyxHQUFHLG1DQUFtQyxDQUFDO0lBRWhELE1BQU0sWUFBWSxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLGNBQWMsQ0FBQyxDQUFDO0lBRXZELE9BQU8sQ0FBQyxFQUNOLEVBQUUsRUFFRixXQUFXLEdBQUcsRUFBRSxFQUNoQixLQUFLLEVBQ0wsUUFBUSxFQUNSLFFBQVEsRUFDUixRQUFRLEdBQ1QsRUFBRSxHQUFHLEVBQUUsRUFBRTtRQUNSLE1BQU0sSUFBSSxHQUFHLEtBQUssQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFO1lBQzlCLE9BQU8sT0FBTSxDQUFDLENBQUMsS0FBSyxDQUFDLEtBQUssUUFBUSxJQUFJLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLEtBQUssQ0FBQztnQkFDcEQsQ0FBQyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxLQUFLLENBQUM7Z0JBQ2xCLENBQUMsQ0FBQyxTQUFTLENBQUM7UUFDaEIsQ0FBQyxFQUFFLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQztRQUNaLE9BQU8sb0JBQUMsRUFBRSxDQUFDLEVBQUUsSUFDWCxFQUFFLEVBQUUsRUFDSDtZQUVELG9CQUFDLENBQUMsQ0FBQyxVQUFVLElBQUMsUUFBUSxFQUFDLFVBQVU7Z0JBQzlCLENBQUMsQ0FBQyxRQUFRLElBQUksb0JBQUMsQ0FBQyxDQUFDLGdCQUFnQixJQUFDLENBQUMsRUFBQyxLQUFLLEVBQUMsQ0FBQyxFQUFDLEtBQUssRUFBQyxJQUFJLEVBQUMsS0FBSyxJQUMxRCxRQUFRLENBQ1U7Z0JBQ3JCLG9CQUFDLENBQUMsQ0FBQyxLQUFLLElBQ04sV0FBVyxFQUFFLFdBQVcsRUFDeEIsS0FBSyxFQUFFLEtBQUssRUFBRSxRQUFRLEVBQUUsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLFFBQVEsSUFBSSxRQUFRLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsRUFDbkUsQ0FBQyxFQUFDLEtBQUssRUFBQyxFQUFFLEVBQUUsUUFBUSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLEVBQUMsS0FBSyxFQUFDLEVBQUUsRUFBRSxJQUFJLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsU0FBUyxHQUMxRTtnQkFDRCxDQUFDLENBQUMsSUFBSSxJQUFJLG9CQUFDLENBQUMsQ0FBQyxJQUFJLElBQ2hCLFFBQVEsRUFBQyxVQUFVLEVBQUMsSUFBSSxFQUFFLFFBQVEsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxLQUFLLEVBQUUsTUFBTSxFQUFDLFFBQVEsRUFDbkUsYUFBYSxFQUFDLE1BQU0sRUFBQyxRQUFRLEVBQUMsSUFBSSxFQUNsQyxTQUFTLEVBQUUsQ0FBQyxJQUVYLEdBQUcsSUFBSSxDQUFDLE1BQU0sSUFBSSxJQUFJLENBQUMsSUFBSSxJQUFJLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxFQUFFLEVBQUUsQ0FDeEQ7Z0JBQ1Qsb0JBQUMsQ0FBQyxDQUFDLGlCQUFpQixJQUFDLENBQUMsRUFBQyxLQUFLO29CQUMxQixvQkFBQyxFQUFFLENBQUMsUUFBUSxJQUFDLE1BQU0sRUFBRSxZQUFZLEVBQUUsRUFBRSxFQUFFOzRCQUNyQyxFQUFFLEVBQUU7Z0NBQ0YsSUFBSSxFQUFFLENBQUMsQ0FBQyxFQUFDLENBQUMsRUFBQyxDQUFDLEVBQUUsRUFBRTtvQ0FDZCxJQUFJLENBQUMsRUFBRSxFQUFFO3dDQUFFLFFBQVEsSUFBSSxRQUFRLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDO2dDQUN6QyxDQUFDOzZCQUNGO3lCQUNGO3dCQUNDLG9CQUFDLEVBQUUsQ0FBQyxPQUFPLElBQUMsU0FBUyxFQUFFLFlBQVksRUFBRSxFQUFFLEVBQUMsYUFBYSxFQUFDLFFBQVEsRUFBRSxFQUFFLENBQUMsS0FBSyxLQUFLLFlBQVksR0FBRyxDQUNoRixDQUNNLENBQ1QsQ0FDVCxDQUFDO0lBQ1gsQ0FBQyxDQUFDO0FBQ0osQ0FBQyxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiKHsgZGVlcCwgZGF0YSwgcmVxdWlyZSwgR28gfSkgPT4ge1xuICBjb25zdCBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XG4gIFxuICBjb25zdCBfID0gcmVxdWlyZSgnbG9kYXNoJyk7XG4gIGNvbnN0IGMgPSByZXF1aXJlKCdAY2hha3JhLXVpL3JlYWN0Jyk7XG5cbiAgY29uc3QgZGMgPSAnQGRlZXAtZm91bmRhdGlvbi9jb3JlJztcbiAgY29uc3QgZHBsID0gJ0BkZWVwLWZvdW5kYXRpb24vcGVyY2VwdGlvbi1saW5rcyc7XG5cbiAgY29uc3QgRmluZGVyQnV0dG9uID0gZGVlcC5pZExvY2FsKGRwbCwgJ0ZpbmRlckJ1dHRvbicpO1xuXG4gIHJldHVybiAoe1xuICAgIGdvLFxuXG4gICAgcGxhY2Vob2xkZXIgPSAnJyxcbiAgICB2YWx1ZSxcbiAgICBvbkNoYW5nZSxcbiAgICBsZWZ0SWNvbixcbiAgICBjaGlsZHJlbixcbiAgfSwgcmVmKSA9PiB7XG4gICAgY29uc3QgbGluayA9IFJlYWN0LnVzZU1lbW8oKCkgPT4ge1xuICAgICAgcmV0dXJuIHR5cGVvZigrdmFsdWUpID09PSAnbnVtYmVyJyAmJiAhXy5pc05hTigrdmFsdWUpXG4gICAgICAgID8gZGVlcC5nZXQoK3ZhbHVlKVxuICAgICAgICA6IHVuZGVmaW5lZDtcbiAgICB9LCBbdmFsdWVdKTtcbiAgICByZXR1cm4gPGdvLk9uXG4gICAgICBkbz17e1xuICAgICAgfX1cbiAgICA+XG4gICAgICA8Yy5JbnB1dEdyb3VwIHBvc2l0aW9uPSdyZWxhdGl2ZSc+XG4gICAgICAgIHshIWxlZnRJY29uICYmIDxjLklucHV0TGVmdEVsZW1lbnQgaD0nM2VtJyB3PSczZW0nIG1pblc9JzNlbSc+XG4gICAgICAgICAge2xlZnRJY29ufVxuICAgICAgICA8L2MuSW5wdXRMZWZ0RWxlbWVudD59XG4gICAgICAgIDxjLklucHV0XG4gICAgICAgICAgcGxhY2Vob2xkZXI9e3BsYWNlaG9sZGVyfVxuICAgICAgICAgIHZhbHVlPXt2YWx1ZX0gb25DaGFuZ2U9eyhlKSA9PiBvbkNoYW5nZSAmJiBvbkNoYW5nZShlLnRhcmdldC52YWx1ZSl9XG4gICAgICAgICAgaD0nM2VtJyBwbD17bGVmdEljb24gPyAnM2VtJyA6IDB9IHByPSczZW0nIHB0PXtsaW5rID8gJzAuMjVlbScgOiB1bmRlZmluZWR9XG4gICAgICAgIC8+XG4gICAgICAgIHshIWxpbmsgJiYgPGMuVGV4dFxuICAgICAgICAgIHBvc2l0aW9uPSdhYnNvbHV0ZScgbGVmdD17bGVmdEljb24gPyAnNGVtJyA6ICcxZW0nfSBib3R0b209JzAuMjVlbSdcbiAgICAgICAgICBwb2ludGVyRXZlbnRzPSdub25lJyBmb250U2l6ZT0neHMnXG4gICAgICAgICAgbm9PZkxpbmVzPXsxfVxuICAgICAgICA+XG4gICAgICAgICAge2Ake2xpbmsuc3ltYm9sfSAke2xpbmsubmFtZSAhPSBsaW5rLmlkID8gbGluay5uYW1lIDogbGluay5pZH1gfVxuICAgICAgICA8L2MuVGV4dD59XG4gICAgICAgIDxjLklucHV0UmlnaHRFbGVtZW50IGg9JzNlbSc+XG4gICAgICAgICAgPGdvLlByb3ZpZGVyIGxpbmtJZD17RmluZGVyQnV0dG9ufSBvbj17e1xuICAgICAgICAgICAgZG86IHtcbiAgICAgICAgICAgICAgb3BlbjogKGcsdixvKSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKG8/LmlkKSBvbkNoYW5nZSAmJiBvbkNoYW5nZShvPy5pZCk7XG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfX0+XG4gICAgICAgICAgICA8Z28uSGFuZGxlciBoYW5kbGVySWQ9e0ZpbmRlckJ1dHRvbn0gYmc9J3RyYW5zcGFyZW50JyBpc0FjdGl2ZT17Z28udmFsdWUgPT09IEZpbmRlckJ1dHRvbn0vPlxuICAgICAgICAgIDwvZ28uUHJvdmlkZXI+XG4gICAgICAgIDwvYy5JbnB1dFJpZ2h0RWxlbWVudD5cbiAgICAgIDwvYy5JbnB1dEdyb3VwPlxuICAgIDwvZ28uT24+O1xuICB9O1xufSJdfQ==",
          "link_id": 16677
        },
        "__typename": "links"
      },
      "__typename": "handlers"
    },
    {
      "dist_id": 17040,
      "src_id": 17034,
      "handler_id": 17038,
      "execution_provider_id": 33,
      "isolation_provider_id": 144,
      "dist": {
        "id": 17040,
        "type_id": 30,
        "from_id": 0,
        "to_id": 0,
        "value": {
          "id": 1649,
          "value": "({ deep, data, require, Go }) => {\n    const React = require('react');\n    const c = require('@chakra-ui/react');\n    return ({ go, id, ...props }, ref) => {\n        const { cy } = go.useGraph();\n        const data = { id: `${id}`, label: `${id}` };\n        const classes = ['link-ghost'];\n        return React.createElement(go.GraphNode, { ghost: true, element: {\n                data, classes,\n            }, ...props });\n    };\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsibW9kdWxlLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxDQUFDLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRTtJQUM5QixNQUFNLEtBQUssR0FBRyxPQUFPLENBQUMsT0FBTyxDQUFDLENBQUM7SUFFL0IsTUFBTSxDQUFDLEdBQUcsT0FBTyxDQUFDLGtCQUFrQixDQUFDLENBQUM7SUFFdEMsT0FBTyxDQUFDLEVBQ04sRUFBRSxFQUNGLEVBQUUsRUFFRixHQUFHLEtBQUssRUFDVCxFQUFFLEdBQUcsRUFBRSxFQUFFO1FBQ1IsTUFBTSxFQUFFLEVBQUUsRUFBRSxHQUFHLEVBQUUsQ0FBQyxRQUFRLEVBQUUsQ0FBQztRQUM3QixNQUFNLElBQUksR0FBRyxFQUFFLEVBQUUsRUFBRSxHQUFHLEVBQUUsRUFBRSxFQUFFLEtBQUssRUFBRSxHQUFHLEVBQUUsRUFBRSxFQUFFLENBQUM7UUFDN0MsTUFBTSxPQUFPLEdBQUcsQ0FBQyxZQUFZLENBQUMsQ0FBQztRQUMvQixPQUFPLG9CQUFDLEVBQUUsQ0FBQyxTQUFTLElBQ2xCLEtBQUssUUFDTCxPQUFPLEVBQUU7Z0JBQ1AsSUFBSSxFQUFFLE9BQU87YUFDZCxLQUNHLEtBQUssR0FDVCxDQUFDO0lBQ0wsQ0FBQyxDQUFDO0FBQ0osQ0FBQyxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiKHsgZGVlcCwgZGF0YSwgcmVxdWlyZSwgR28gfSkgPT4ge1xuICBjb25zdCBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XG4gIFxuICBjb25zdCBjID0gcmVxdWlyZSgnQGNoYWtyYS11aS9yZWFjdCcpO1xuXG4gIHJldHVybiAoe1xuICAgIGdvLFxuICAgIGlkLFxuXG4gICAgLi4ucHJvcHNcbiAgfSwgcmVmKSA9PiB7XG4gICAgY29uc3QgeyBjeSB9ID0gZ28udXNlR3JhcGgoKTtcbiAgICBjb25zdCBkYXRhID0geyBpZDogYCR7aWR9YCwgbGFiZWw6IGAke2lkfWAgfTtcbiAgICBjb25zdCBjbGFzc2VzID0gWydsaW5rLWdob3N0J107XG4gICAgcmV0dXJuIDxnby5HcmFwaE5vZGVcbiAgICAgIGdob3N0XG4gICAgICBlbGVtZW50PXt7XG4gICAgICAgIGRhdGEsIGNsYXNzZXMsXG4gICAgICB9fVxuICAgICAgey4uLnByb3BzfVxuICAgIC8+O1xuICB9O1xufSJdfQ==",
          "link_id": 17040
        },
        "__typename": "links"
      },
      "__typename": "handlers"
    },
    {
      "dist_id": 18274,
      "src_id": 18261,
      "handler_id": 18269,
      "execution_provider_id": 33,
      "isolation_provider_id": 144,
      "dist": {
        "id": 18274,
        "type_id": 30,
        "from_id": 0,
        "to_id": 0,
        "value": {
          "id": 1690,
          "value": "async ({ deep, data, Go, require }) => {\n    const React = require('react');\n    const { LuChevronLast, LuChevronFirst } = require(\"react-icons/lu\");\n    const { IoInfiniteSharp } = require(\"react-icons/io5\");\n    const { Planet } = require('react-planet');\n    const c = require('@chakra-ui/react');\n    const { TypedIcon, DownIcon, UpIcon, TypeIcon, InIcon, OutIcon, FromIcon, ToIcon, } = require('@deep-foundation/perception-app');\n    const dpl = '@deep-foundation/perception-links';\n    const TreeList = deep.idLocal(dpl, 'TreeList');\n    const PlanetRelations = await deep.id(dpl, 'PlanetRelations');\n    const PlanetOperations = await deep.id(dpl, 'PlanetOperations');\n    return ({ go, linkId, deleteDisclosure: _deleteDisclosure, finderDisclosure: _finderDisclosure, isActive = false, }, ref) => {\n        const { cy } = go.useGraph();\n        const link = React.useMemo(() => deep.get(linkId), []);\n        const __deleteDisclosure = c.useDisclosure();\n        const deleteDisclosure = _deleteDisclosure || __deleteDisclosure;\n        const __finderDisclosure = c.useDisclosure();\n        const finderDisclosure = _finderDisclosure || __finderDisclosure;\n        const [mode, setMode] = React.useState('current');\n        const nav = go.useNav();\n        nav('current', PlanetRelations, PlanetRelations, PlanetRelations, PlanetRelations);\n        nav(PlanetRelations, PlanetRelations, PlanetOperations, PlanetRelations, 'current');\n        nav(PlanetOperations, PlanetOperations, 'up', PlanetOperations, PlanetRelations);\n        return React.createElement(go.On, { do: {\n                exec: (g, v, o) => {\n                    if (o?.mode)\n                        setMode(mode === o.mode ? 'current' : o.mode);\n                    if (go.value === 'current')\n                        go.do(go.value);\n                },\n                focus: (g, d, v, o) => !v && go.set('current'),\n                up: (g, v, o) => go.focus(nav.get(go.value, 'up'), { position: 0.5, ...o }),\n                down: (g, v, o) => go.focus(nav.get(go.value, 'down'), { position: 0, ...o }),\n                left: (g, v, o) => go.focus(nav.get(go.value, 'left'), { position: 0.25 }),\n                right: (g, v, o) => go.focus(nav.get(go.value, 'right'), { position: 0.75 }),\n                current: (g, v, o) => go.go.do('exec'),\n            }, focus: {\n                up: (g, v, o) => go.root().do('up'),\n            } },\n            React.createElement(c.Box, { position: 'relative', top: '0', left: '0', w: '0', h: '0' },\n                React.createElement(go.Provider, { linkId: PlanetRelations },\n                    React.createElement(go.Component, { path: [dpl, 'PlanetRelations'], isActive: isActive, linkId: linkId })),\n                React.createElement(go.Provider, { linkId: PlanetOperations },\n                    React.createElement(go.Component, { path: [dpl, 'PlanetOperations'], isActive: isActive, linkId: linkId })),\n                !!isActive && React.createElement(c.Button, { variant: go.value === 'current' ? 'planetActive' : 'planet', position: 'absolute', left: '-1.5em', top: '-1.5em', onClick: () => go.focus('current').go.do('current') })));\n    };\n};\n//# sourceMappingURL=data:application/json;base64,",
          "link_id": 18274
        },
        "__typename": "links"
      },
      "__typename": "handlers"
    },
    {
      "dist_id": 19137,
      "src_id": 19125,
      "handler_id": 19129,
      "execution_provider_id": 33,
      "isolation_provider_id": 144,
      "dist": {
        "id": 19137,
        "type_id": 30,
        "from_id": 0,
        "to_id": 0,
        "value": {
          "id": 1717,
          "value": "async ({ deep, data, require }) => {\n    const React = require('react');\n    const { GiBrain } = require(\"react-icons/gi\");\n    const c = require('@chakra-ui/react');\n    const dpl = '@deep-foundation/perception-links';\n    const dc = '@deep-foundation/core';\n    const Tree = deep.idLocal(dpl, 'Tree');\n    return ({ go, handlerId, isActive, }, ref) => {\n        return React.createElement(go.On, { do: {\n                exec: (g, v, o) => go.go.do('right', { ...o, id: Tree }),\n                click: (g, v, o) => go.do('exec', o),\n                right: (g, v, o) => go.do('exec', o),\n            } },\n            React.createElement(c.Button, { w: '3em', h: '3em', variant: isActive ? 'active' : undefined, ref: ref, onClick: () => go.do('exec') },\n                React.createElement(GiBrain, null)));\n    };\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsibW9kdWxlLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxLQUFLLEVBQUUsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLE9BQU8sRUFBRSxFQUFFLEVBQUU7SUFDaEMsTUFBTSxLQUFLLEdBQUcsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQy9CLE1BQU0sRUFBRSxPQUFPLEVBQUUsR0FBRyxPQUFPLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztJQUM5QyxNQUFNLENBQUMsR0FBRyxPQUFPLENBQUMsa0JBQWtCLENBQUMsQ0FBQztJQUV0QyxNQUFNLEdBQUcsR0FBRyxtQ0FBbUMsQ0FBQztJQUNoRCxNQUFNLEVBQUUsR0FBRyx1QkFBdUIsQ0FBQztJQUVuQyxNQUFNLElBQUksR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxNQUFNLENBQUMsQ0FBQztJQUV2QyxPQUFPLENBQUMsRUFDTixFQUFFLEVBQ0YsU0FBUyxFQUVULFFBQVEsR0FDVCxFQUFFLEdBQUcsRUFBRSxFQUFFO1FBQ1IsT0FBTyxvQkFBQyxFQUFFLENBQUMsRUFBRSxJQUFDLEVBQUUsRUFBRTtnQkFDaEIsSUFBSSxFQUFFLENBQUMsQ0FBQyxFQUFDLENBQUMsRUFBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLE9BQU8sRUFBRSxFQUFFLEdBQUcsQ0FBQyxFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsQ0FBQztnQkFDdEQsS0FBSyxFQUFFLENBQUMsQ0FBQyxFQUFDLENBQUMsRUFBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsTUFBTSxFQUFFLENBQUMsQ0FBQztnQkFDbEMsS0FBSyxFQUFFLENBQUMsQ0FBQyxFQUFDLENBQUMsRUFBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsTUFBTSxFQUFFLENBQUMsQ0FBQzthQUNuQztZQUNDLG9CQUFDLENBQUMsQ0FBQyxNQUFNLElBQ1AsQ0FBQyxFQUFDLEtBQUssRUFBQyxDQUFDLEVBQUMsS0FBSyxFQUNmLE9BQU8sRUFBRSxRQUFRLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsU0FBUyxFQUN4QyxHQUFHLEVBQUUsR0FBRyxFQUNSLE9BQU8sRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLE1BQU0sQ0FBQztnQkFFNUIsb0JBQUMsT0FBTyxPQUFFLENBQ0QsQ0FDTCxDQUFDO0lBQ1gsQ0FBQyxDQUFDO0FBQ0osQ0FBQyxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiYXN5bmMgKHsgZGVlcCwgZGF0YSwgcmVxdWlyZSB9KSA9PiB7XG4gIGNvbnN0IFJlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcbiAgY29uc3QgeyBHaUJyYWluIH0gPSByZXF1aXJlKFwicmVhY3QtaWNvbnMvZ2lcIik7XG4gIGNvbnN0IGMgPSByZXF1aXJlKCdAY2hha3JhLXVpL3JlYWN0Jyk7XG5cbiAgY29uc3QgZHBsID0gJ0BkZWVwLWZvdW5kYXRpb24vcGVyY2VwdGlvbi1saW5rcyc7XG4gIGNvbnN0IGRjID0gJ0BkZWVwLWZvdW5kYXRpb24vY29yZSc7XG5cbiAgY29uc3QgVHJlZSA9IGRlZXAuaWRMb2NhbChkcGwsICdUcmVlJyk7XG5cbiAgcmV0dXJuICh7XG4gICAgZ28sXG4gICAgaGFuZGxlcklkLFxuXG4gICAgaXNBY3RpdmUsXG4gIH0sIHJlZikgPT4ge1xuICAgIHJldHVybiA8Z28uT24gZG89e3tcbiAgICAgIGV4ZWM6IChnLHYsbykgPT4gZ28uZ28uZG8oJ3JpZ2h0JywgeyAuLi5vLCBpZDogVHJlZSB9KSksXG4gICAgICBjbGljazogKGcsdixvKSA9PiBnby5kbygnZXhlYycsIG8pLFxuICAgICAgcmlnaHQ6IChnLHYsbykgPT4gZ28uZG8oJ2V4ZWMnLCBvKSxcbiAgICB9fT5cbiAgICAgIDxjLkJ1dHRvblxuICAgICAgICB3PSczZW0nIGg9JzNlbSdcbiAgICAgICAgdmFyaWFudD17aXNBY3RpdmUgPyAnYWN0aXZlJyA6IHVuZGVmaW5lZH1cbiAgICAgICAgcmVmPXtyZWZ9XG4gICAgICAgIG9uQ2xpY2s9eygpID0+IGdvLmRvKCdleGVjJyl9XG4gICAgICA+XG4gICAgICAgIDxHaUJyYWluLz5cbiAgICAgIDwvYy5CdXR0b24+XG4gICAgPC9nby5Pbj47XG4gIH07XG59Il19",
          "link_id": 19137
        },
        "__typename": "links"
      },
      "__typename": "handlers"
    },
    {
      "dist_id": 19249,
      "src_id": 19243,
      "handler_id": 19247,
      "execution_provider_id": 33,
      "isolation_provider_id": 144,
      "dist": {
        "id": 19249,
        "type_id": 30,
        "from_id": 0,
        "to_id": 0,
        "value": {
          "id": 1727,
          "value": "async ({ deep, data, require }) => {\n    const React = require('react');\n    const { GiBrain } = require(\"react-icons/gi\");\n    const c = require('@chakra-ui/react');\n    const dpl = '@deep-foundation/perception-links';\n    const dml = '@deep-foundation/deepmemo-links';\n    const dc = '@deep-foundation/core';\n    const Memo = await deep.id(dml, 'Memo');\n    return ({ go, handlerId, isActive, }, ref) => {\n        return React.createElement(go.On, { do: {\n                exec: (g, v, o) => go.go.do('right', { ...o, id: Memo }),\n                click: (g, v, o) => go.do('exec', o),\n                right: (g, v, o) => go.do('exec', o),\n            } },\n            React.createElement(c.Button, { w: '3em', h: '3em', variant: isActive ? 'active' : undefined, ref: ref, onClick: () => go.do('exec') },\n                React.createElement(GiBrain, null)));\n    };\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsibW9kdWxlLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxLQUFLLEVBQUUsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLE9BQU8sRUFBRSxFQUFFLEVBQUU7SUFDaEMsTUFBTSxLQUFLLEdBQUcsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQy9CLE1BQU0sRUFBRSxPQUFPLEVBQUUsR0FBRyxPQUFPLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztJQUM5QyxNQUFNLENBQUMsR0FBRyxPQUFPLENBQUMsa0JBQWtCLENBQUMsQ0FBQztJQUV0QyxNQUFNLEdBQUcsR0FBRyxtQ0FBbUMsQ0FBQztJQUNoRCxNQUFNLEdBQUcsR0FBRyxpQ0FBaUMsQ0FBQztJQUM5QyxNQUFNLEVBQUUsR0FBRyx1QkFBdUIsQ0FBQztJQUVuQyxNQUFNLElBQUksR0FBRyxNQUFNLElBQUksQ0FBQyxFQUFFLENBQUMsR0FBRyxFQUFFLE1BQU0sQ0FBQyxDQUFDO0lBRXhDLE9BQU8sQ0FBQyxFQUNOLEVBQUUsRUFDRixTQUFTLEVBRVQsUUFBUSxHQUNULEVBQUUsR0FBRyxFQUFFLEVBQUU7UUFDUixPQUFPLG9CQUFDLEVBQUUsQ0FBQyxFQUFFLElBQUMsRUFBRSxFQUFFO2dCQUNoQixJQUFJLEVBQUUsQ0FBQyxDQUFDLEVBQUMsQ0FBQyxFQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsT0FBTyxFQUFFLEVBQUUsR0FBRyxDQUFDLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxDQUFDO2dCQUN0RCxLQUFLLEVBQUUsQ0FBQyxDQUFDLEVBQUMsQ0FBQyxFQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxDQUFDO2dCQUNsQyxLQUFLLEVBQUUsQ0FBQyxDQUFDLEVBQUMsQ0FBQyxFQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxDQUFDO2FBQ25DO1lBQ0Msb0JBQUMsQ0FBQyxDQUFDLE1BQU0sSUFDUCxDQUFDLEVBQUMsS0FBSyxFQUFDLENBQUMsRUFBQyxLQUFLLEVBQ2YsT0FBTyxFQUFFLFFBQVEsQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxTQUFTLEVBQ3hDLEdBQUcsRUFBRSxHQUFHLEVBQ1IsT0FBTyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsTUFBTSxDQUFDO2dCQUU1QixvQkFBQyxPQUFPLE9BQUUsQ0FDRCxDQUNMLENBQUM7SUFDWCxDQUFDLENBQUM7QUFDSixDQUFDLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJhc3luYyAoeyBkZWVwLCBkYXRhLCByZXF1aXJlIH0pID0+IHtcbiAgY29uc3QgUmVhY3QgPSByZXF1aXJlKCdyZWFjdCcpO1xuICBjb25zdCB7IEdpQnJhaW4gfSA9IHJlcXVpcmUoXCJyZWFjdC1pY29ucy9naVwiKTtcbiAgY29uc3QgYyA9IHJlcXVpcmUoJ0BjaGFrcmEtdWkvcmVhY3QnKTtcblxuICBjb25zdCBkcGwgPSAnQGRlZXAtZm91bmRhdGlvbi9wZXJjZXB0aW9uLWxpbmtzJztcbiAgY29uc3QgZG1sID0gJ0BkZWVwLWZvdW5kYXRpb24vZGVlcG1lbW8tbGlua3MnO1xuICBjb25zdCBkYyA9ICdAZGVlcC1mb3VuZGF0aW9uL2NvcmUnO1xuXG4gIGNvbnN0IE1lbW8gPSBhd2FpdCBkZWVwLmlkKGRtbCwgJ01lbW8nKTtcblxuICByZXR1cm4gKHtcbiAgICBnbyxcbiAgICBoYW5kbGVySWQsXG5cbiAgICBpc0FjdGl2ZSxcbiAgfSwgcmVmKSA9PiB7XG4gICAgcmV0dXJuIDxnby5PbiBkbz17e1xuICAgICAgZXhlYzogKGcsdixvKSA9PiBnby5nby5kbygncmlnaHQnLCB7IC4uLm8sIGlkOiBNZW1vIH0pKSxcbiAgICAgIGNsaWNrOiAoZyx2LG8pID0+IGdvLmRvKCdleGVjJywgbyksXG4gICAgICByaWdodDogKGcsdixvKSA9PiBnby5kbygnZXhlYycsIG8pLFxuICAgIH19PlxuICAgICAgPGMuQnV0dG9uXG4gICAgICAgIHc9JzNlbScgaD0nM2VtJ1xuICAgICAgICB2YXJpYW50PXtpc0FjdGl2ZSA/ICdhY3RpdmUnIDogdW5kZWZpbmVkfVxuICAgICAgICByZWY9e3JlZn1cbiAgICAgICAgb25DbGljaz17KCkgPT4gZ28uZG8oJ2V4ZWMnKX1cbiAgICAgID5cbiAgICAgICAgPEdpQnJhaW4vPlxuICAgICAgPC9jLkJ1dHRvbj5cbiAgICA8L2dvLk9uPjtcbiAgfTtcbn0iXX0=",
          "link_id": 19249
        },
        "__typename": "links"
      },
      "__typename": "handlers"
    },
    {
      "dist_id": 19408,
      "src_id": 19402,
      "handler_id": 19406,
      "execution_provider_id": 33,
      "isolation_provider_id": 144,
      "dist": {
        "id": 19408,
        "type_id": 30,
        "from_id": 0,
        "to_id": 0,
        "value": {
          "id": 1740,
          "value": "",
          "link_id": 19408
        },
        "__typename": "links"
      },
      "__typename": "handlers"
    },
    {
      "dist_id": 19984,
      "src_id": 19978,
      "handler_id": 19982,
      "execution_provider_id": 33,
      "isolation_provider_id": 144,
      "dist": {
        "id": 19984,
        "type_id": 30,
        "from_id": 0,
        "to_id": 0,
        "value": {
          "id": 1756,
          "value": "async ({ deep, data, Go, require }) => {\n    const React = require('react');\n    const { LuChevronLast, LuChevronFirst } = require(\"react-icons/lu\");\n    const { IoInfiniteSharp } = require(\"react-icons/io5\");\n    const { Planet } = require('react-planet');\n    const c = require('@chakra-ui/react');\n    const { TypedIcon, DownIcon, UpIcon, TypeIcon, InIcon, OutIcon, FromIcon, ToIcon, } = require('@deep-foundation/perception-app');\n    const dpl = '@deep-foundation/perception-links';\n    const TreeList = deep.idLocal(dpl, 'TreeList');\n    const _Item = ({ link, isActive, Item, index, position }) => {\n        const go = Go.useGo();\n        const Component = link?.Component || Item;\n        return React.createElement(Component, { link: link, go: go, isActive: isActive, position: position, index: index });\n    };\n    return ({ go, links: _links, Component, ErrorComponent, UnhandledComponent, Item, saveHistory = false, linkId, link, handlerId, goHandler, ...props }, ref) => {\n        const links = React.useMemo(() => _links.filter(l => !!l?.id), [_links]);\n        const list = links.map((link, i) => !!link ? React.createElement(go.Provider, { key: link.id, linkId: link.id },\n            React.createElement(_Item, { link: link, isActive: go.value === link.id, Item: Item, saveHistory: saveHistory, index: i, position: i / (links.length - 1) })) : React.createElement(React.Fragment, null));\n        const index = React.useMemo(() => links.findIndex(l => l?.id === go.value), [go.value]);\n        const position = React.useMemo(() => index / (links.length - 1), [index]);\n        return React.createElement(go.On, { do: {\n                focus: (g, v, id, o) => !id && go.do('use', o),\n                exec: (g, v, o) => !!go.value && go.go.do('exec', { id: go.value, index, position }),\n                up: (g, v, o) => go.set().go.go.do('up', { ...o, id: go.value, index, position }),\n                down: (g, v, o) => go.set().go.go.do('down', { ...o, id: go.value, index, position }),\n                left: (g, v, o) => go.focus(go.prev(links)),\n                right: (g, v, o) => go.focus(go.next(links)),\n                use: (g, v, o) => {\n                    let id = o?.id;\n                    if (typeof (o?.position) === 'number') {\n                        id = links?.[Math.round((links.length - 1) * o.position)]?.id;\n                        console.log('XXXX', o, id, links, Math.round((links.length - 1) * o.position));\n                    }\n                    if (typeof (id) === 'number' || typeof (id) === 'string')\n                        id != go.value && go(id) && go.set(id).go(id)?.go?.do('use');\n                },\n            }, focus: {} },\n            React.createElement(Planet, { orbitRadius: 70, mass: 1, tension: 500, friction: 19, ...props }, list));\n    };\n};\n//# sourceMappingURL=data:application/json;base64,",
          "link_id": 19984
        },
        "__typename": "links"
      },
      "__typename": "handlers"
    },
    {
      "dist_id": 20120,
      "src_id": 20114,
      "handler_id": 20118,
      "execution_provider_id": 33,
      "isolation_provider_id": 144,
      "dist": {
        "id": 20120,
        "type_id": 30,
        "from_id": 0,
        "to_id": 0,
        "value": {
          "id": 1763,
          "value": "async ({ deep, data, Go, require }) => {\n    const React = require('react');\n    const { LuChevronLast, LuChevronFirst } = require(\"react-icons/lu\");\n    const { IoInfiniteSharp } = require(\"react-icons/io5\");\n    const { Planet } = require('react-planet');\n    const c = require('@chakra-ui/react');\n    const { TypedIcon, DownIcon, UpIcon, TypeIcon, InIcon, OutIcon, FromIcon, ToIcon, } = require('@deep-foundation/perception-app');\n    const dpl = '@deep-foundation/perception-links';\n    const TreeList = deep.idLocal(dpl, 'TreeList');\n    const Item = ({ isActive, link, position }) => {\n        const go = Go.useGo();\n        return React.createElement(c.Button, { variant: isActive ? 'planetActive' : 'planet', onClick: () => go.go.focus(link.id).go.do(link.id) }, link.icon);\n    };\n    let i = 1;\n    return ({ go, linkId, deleteDisclosure: _deleteDisclosure, finderDisclosure: _finderDisclosure, isActive = false, }, ref) => {\n        const { cy } = go.useGraph();\n        const links = [\n            { id: 'ups', icon: React.createElement(UpIcon, null) },\n            { id: 'out', icon: React.createElement(OutIcon, null) },\n            { id: 'from', icon: React.createElement(FromIcon, null) },\n            { id: 'type', icon: React.createElement(TypeIcon, null) },\n            { id: 'typed', icon: React.createElement(TypedIcon, null) },\n            { id: 'to', icon: React.createElement(ToIcon, null) },\n            { id: 'in', icon: React.createElement(InIcon, null) },\n            { id: 'downs', icon: React.createElement(DownIcon, null) },\n        ];\n        const focus = {};\n        for (let l in links) {\n            focus[links[l].id] = (g, v, o) => { };\n        }\n        const [queries, setQueries] = React.useState({});\n        const qs = React.useMemo(() => Object.keys(queries), [queries]);\n        return React.createElement(go.On, { do: {\n                exec: () => go.do(go.value),\n                typed: async (g, v, o) => setQueries({ ...queries, [v]: { type_id: linkId } }),\n                out: async (g, v, o) => setQueries({ ...queries, [v]: { from_id: linkId } }),\n                in: async (g, v, o) => setQueries({ ...queries, [v]: { to_id: linkId } }),\n                type: async (g, v, o) => setQueries({ ...queries, [v]: { id: deep.get(linkId).type_id } }),\n                from: async (g, v, o) => setQueries({ ...queries, [v]: { id: deep.get(linkId).from_id } }),\n                to: async (g, v, o) => setQueries({ ...queries, [v]: { id: deep.get(linkId).to_id } }),\n                ups: async (g, v, o) => setQueries({ ...queries, [v]: { down: { link_id: linkId } } }),\n                downs: async (g, v, o) => setQueries({ ...queries, [v]: { up: { parent_id: linkId } } }),\n            }, focus: focus },\n            qs.map(q => React.createElement(go.Query, { key: JSON.stringify(queries[q]), query: queries[q], onChange: ({ data }) => go.do('open', { ids: data.map(l => l.id), parentId: linkId }) })),\n            React.createElement(go.Component, { open: isActive, path: [dpl, 'Planet'], links: links, Item: Item, orbitRadius: 70, mass: 1 }));\n    };\n};\n//# sourceMappingURL=data:application/json;base64,",
          "link_id": 20120
        },
        "__typename": "links"
      },
      "__typename": "handlers"
    },
    {
      "dist_id": 20154,
      "src_id": 20144,
      "handler_id": 20152,
      "execution_provider_id": 33,
      "isolation_provider_id": 144,
      "dist": {
        "id": 20154,
        "type_id": 30,
        "from_id": 0,
        "to_id": 0,
        "value": {
          "id": 1771,
          "value": "async ({ deep, data, Go, require }) => {\n    const React = require('react');\n    const { LuChevronLast, LuChevronFirst } = require(\"react-icons/lu\");\n    const { IoInfiniteSharp } = require(\"react-icons/io5\");\n    const { Planet } = require('react-planet');\n    const c = require('@chakra-ui/react');\n    const { TypedIcon, DownIcon, UpIcon, TypeIcon, InIcon, OutIcon, FromIcon, ToIcon, } = require('@deep-foundation/perception-app');\n    const dpl = '@deep-foundation/perception-links';\n    const TreeList = deep.idLocal(dpl, 'TreeList');\n    const Item = ({ isActive, link, position }) => {\n        const go = Go.useGo();\n        return React.createElement(c.Button, { variant: isActive ? 'planetActive' : 'planet', onClick: () => go.go.focus(link.id).go.do(link.id) }, link.icon);\n    };\n    return ({ go, linkId, deleteDisclosure: _deleteDisclosure, finderDisclosure: _finderDisclosure, isActive = false, }, ref) => {\n        const { cy } = go.useGraph();\n        const links = [\n            { id: 'contains', icon: React.createElement(React.Fragment, null, \"\\uD83D\\uDDC2\\uFE0F\") },\n            { id: 'finder', icon: React.createElement(React.Fragment, null, \"\\uD83E\\uDEAC\") },\n            { id: 'delete', icon: React.createElement(React.Fragment, null, \"\\u274C\") },\n            { id: 'handlers', icon: React.createElement(React.Fragment, null, \"\\uD83D\\uDC41\\uFE0F\") },\n            { id: 'trees', icon: React.createElement(React.Fragment, null, \"\\uD83C\\uDF84\") },\n        ];\n        const focus = {};\n        for (let l in links) {\n            focus[links[l].id] = (g, v, o) => { };\n        }\n        return React.createElement(go.On, { do: {}, focus: focus },\n            React.createElement(go.Component, { open: isActive, path: [dpl, 'Planet'], links: links, Item: Item, orbitRadius: 130, mass: 3 }));\n    };\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsibW9kdWxlLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxLQUFLLEVBQUUsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLEVBQUUsRUFBRSxPQUFPLEVBQUUsRUFBRSxFQUFFO0lBQ3BDLE1BQU0sS0FBSyxHQUFHLE9BQU8sQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUMvQixNQUFNLEVBQUUsYUFBYSxFQUFFLGNBQWMsRUFBRSxHQUFHLE9BQU8sQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO0lBQ3BFLE1BQU0sRUFBRSxlQUFlLEVBQUUsR0FBRyxPQUFPLENBQUMsaUJBQWlCLENBQUMsQ0FBQztJQUN2RCxNQUFNLEVBQUUsTUFBTSxFQUFFLEdBQUcsT0FBTyxDQUFDLGNBQWMsQ0FBQyxDQUFDO0lBQzNDLE1BQU0sQ0FBQyxHQUFHLE9BQU8sQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDO0lBRXRDLE1BQU0sRUFDSixTQUFTLEVBQUUsUUFBUSxFQUFFLE1BQU0sRUFBRSxRQUFRLEVBQUUsTUFBTSxFQUFFLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxHQUN6RSxHQUFHLE9BQU8sQ0FBQyxpQ0FBaUMsQ0FBQyxDQUFDO0lBRS9DLE1BQU0sR0FBRyxHQUFHLG1DQUFtQyxDQUFDO0lBRWhELE1BQU0sUUFBUSxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLFVBQVUsQ0FBQyxDQUFDO0lBRS9DLE1BQU0sSUFBSSxHQUFHLENBQUMsRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFFLFFBQVEsRUFBRSxFQUFFLEVBQUU7UUFDNUMsTUFBTSxFQUFFLEdBQUcsRUFBRSxDQUFDLEtBQUssRUFBRSxDQUFDO1FBQ3RCLE9BQU8sb0JBQUMsQ0FBQyxDQUFDLE1BQU0sSUFBQyxPQUFPLEVBQUUsUUFBUSxDQUFDLENBQUMsQ0FBQyxjQUFjLENBQUMsQ0FBQyxDQUFDLFFBQVEsRUFDNUQsT0FBTyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsSUFDbEQsSUFBSSxDQUFDLElBQUksQ0FBWSxDQUFDO0lBQzFCLENBQUMsQ0FBQztJQUVGLE9BQU8sQ0FBQyxFQUNOLEVBQUUsRUFFRixNQUFNLEVBQ04sZ0JBQWdCLEVBQUUsaUJBQWlCLEVBQ25DLGdCQUFnQixFQUFFLGlCQUFpQixFQUVuQyxRQUFRLEdBQUcsS0FBSyxHQUNqQixFQUFFLEdBQUcsRUFBRSxFQUFFO1FBQ1IsTUFBTSxFQUFFLEVBQUUsRUFBRSxHQUFHLEVBQUUsQ0FBQyxRQUFRLEVBQUUsQ0FBQztRQUU3QixNQUFNLEtBQUssR0FBRztZQUNaLEVBQUUsRUFBRSxFQUFFLFVBQVUsRUFBRSxJQUFJLEVBQUUsK0RBQVEsRUFBRTtZQUNsQyxFQUFFLEVBQUUsRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFFLHlEQUFPLEVBQUU7WUFDL0IsRUFBRSxFQUFFLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBRSxtREFBTSxFQUFFO1lBQzlCLEVBQUUsRUFBRSxFQUFFLFVBQVUsRUFBRSxJQUFJLEVBQUUsK0RBQVEsRUFBRTtZQUNsQyxFQUFFLEVBQUUsRUFBRSxPQUFPLEVBQUUsSUFBSSxFQUFFLHlEQUFPLEVBQUU7U0FDL0IsQ0FBQztRQUVGLE1BQU0sS0FBSyxHQUFHLEVBQUUsQ0FBQztRQUNqQixLQUFLLElBQUksQ0FBQyxJQUFJLEtBQUssRUFBRSxDQUFDO1lBQ3BCLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxDQUFDLEVBQUMsQ0FBQyxFQUFDLENBQUMsRUFBRSxFQUFFLEdBQUUsQ0FBQyxDQUFBO1FBQ3BDLENBQUM7UUFFRCxPQUFPLG9CQUFDLEVBQUUsQ0FBQyxFQUFFLElBQUMsRUFBRSxFQUFFLEVBQ2pCLEVBQUUsS0FBSyxFQUFFLEtBQUs7WUFDYixvQkFBQyxFQUFFLENBQUMsU0FBUyxJQUNYLElBQUksRUFBRSxRQUFRLEVBQ2QsSUFBSSxFQUFFLENBQUMsR0FBRyxFQUFFLFFBQVEsQ0FBQyxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQ25DLElBQUksRUFBRSxJQUFJLEVBQ1YsV0FBVyxFQUFFLEdBQUcsRUFBRSxJQUFJLEVBQUUsQ0FBQyxHQUN6QixDQUNJLENBQUM7SUFDWCxDQUFDLENBQUM7QUFDSixDQUFDLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJhc3luYyAoeyBkZWVwLCBkYXRhLCBHbywgcmVxdWlyZSB9KSA9PiB7XG4gIGNvbnN0IFJlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcbiAgY29uc3QgeyBMdUNoZXZyb25MYXN0LCBMdUNoZXZyb25GaXJzdCB9ID0gcmVxdWlyZShcInJlYWN0LWljb25zL2x1XCIpO1xuICBjb25zdCB7IElvSW5maW5pdGVTaGFycCB9ID0gcmVxdWlyZShcInJlYWN0LWljb25zL2lvNVwiKTtcbiAgY29uc3QgeyBQbGFuZXQgfSA9IHJlcXVpcmUoJ3JlYWN0LXBsYW5ldCcpO1xuICBjb25zdCBjID0gcmVxdWlyZSgnQGNoYWtyYS11aS9yZWFjdCcpO1xuXG4gIGNvbnN0IHtcbiAgICBUeXBlZEljb24sIERvd25JY29uLCBVcEljb24sIFR5cGVJY29uLCBJbkljb24sIE91dEljb24sIEZyb21JY29uLCBUb0ljb24sXG4gIH0gPSByZXF1aXJlKCdAZGVlcC1mb3VuZGF0aW9uL3BlcmNlcHRpb24tYXBwJyk7XG5cbiAgY29uc3QgZHBsID0gJ0BkZWVwLWZvdW5kYXRpb24vcGVyY2VwdGlvbi1saW5rcyc7XG5cbiAgY29uc3QgVHJlZUxpc3QgPSBkZWVwLmlkTG9jYWwoZHBsLCAnVHJlZUxpc3QnKTtcblxuICBjb25zdCBJdGVtID0gKHsgaXNBY3RpdmUsIGxpbmssIHBvc2l0aW9uIH0pID0+IHtcbiAgICBjb25zdCBnbyA9IEdvLnVzZUdvKCk7XG4gICAgcmV0dXJuIDxjLkJ1dHRvbiB2YXJpYW50PXtpc0FjdGl2ZSA/ICdwbGFuZXRBY3RpdmUnIDogJ3BsYW5ldCd9XG4gICAgICBvbkNsaWNrPXsoKSA9PiBnby5nby5mb2N1cyhsaW5rLmlkKS5nby5kbyhsaW5rLmlkKX1cbiAgICA+e2xpbmsuaWNvbn08L2MuQnV0dG9uPjtcbiAgfTtcblxuICByZXR1cm4gKHtcbiAgICBnbyxcblxuICAgIGxpbmtJZCxcbiAgICBkZWxldGVEaXNjbG9zdXJlOiBfZGVsZXRlRGlzY2xvc3VyZSxcbiAgICBmaW5kZXJEaXNjbG9zdXJlOiBfZmluZGVyRGlzY2xvc3VyZSxcblxuICAgIGlzQWN0aXZlID0gZmFsc2UsXG4gIH0sIHJlZikgPT4ge1xuICAgIGNvbnN0IHsgY3kgfSA9IGdvLnVzZUdyYXBoKCk7XG5cbiAgICBjb25zdCBsaW5rcyA9IFtcbiAgICAgIHsgaWQ6ICdjb250YWlucycsIGljb246IDw+8J+Xgu+4jzwvPiB9LFxuICAgICAgeyBpZDogJ2ZpbmRlcicsIGljb246IDw+8J+qrDwvPiB9LFxuICAgICAgeyBpZDogJ2RlbGV0ZScsIGljb246IDw+4p2MPC8+IH0sXG4gICAgICB7IGlkOiAnaGFuZGxlcnMnLCBpY29uOiA8PvCfkYHvuI88Lz4gfSxcbiAgICAgIHsgaWQ6ICd0cmVlcycsIGljb246IDw+8J+OhDwvPiB9LFxuICAgIF07XG5cbiAgICBjb25zdCBmb2N1cyA9IHt9O1xuICAgIGZvciAobGV0IGwgaW4gbGlua3MpIHtcbiAgICAgIGZvY3VzW2xpbmtzW2xdLmlkXSA9IChnLHYsbykgPT4ge31cbiAgICB9XG5cbiAgICByZXR1cm4gPGdvLk9uIGRvPXt7XG4gICAgfX0gZm9jdXM9e2ZvY3VzfT5cbiAgICAgIDxnby5Db21wb25lbnRcbiAgICAgICAgb3Blbj17aXNBY3RpdmV9XG4gICAgICAgIHBhdGg9e1tkcGwsICdQbGFuZXQnXX0gbGlua3M9e2xpbmtzfVxuICAgICAgICBJdGVtPXtJdGVtfVxuICAgICAgICBvcmJpdFJhZGl1cz17MTMwfSBtYXNzPXszfVxuICAgICAgLz5cbiAgICA8L2dvLk9uPjtcbiAgfTtcbn0iXX0=",
          "link_id": 20154
        },
        "__typename": "links"
      },
      "__typename": "handlers"
    },
    {
      "dist_id": 20480,
      "src_id": 20474,
      "handler_id": 20478,
      "execution_provider_id": 33,
      "isolation_provider_id": 144,
      "dist": {
        "id": 20480,
        "type_id": 30,
        "from_id": 0,
        "to_id": 0,
        "value": {
          "id": 1788,
          "value": "({ deep, data, require, Go }) => {\n    const React = require('react');\n    const c = require('@chakra-ui/react');\n    const _ = require('lodash');\n    const moment = require('moment');\n    const { useDebounceCallback } = require('@react-hook/debounce');\n    var dpl = '@deep-foundation/perception-links';\n    var dc = '@deep-foundation/core';\n    const Stack = deep.idLocal(dpl, 'Stack');\n    const Queries = deep.idLocal(dpl, 'Queries');\n    const Compatable = deep.idLocal(dpl, 'Compatable');\n    const Handler = deep.idLocal(dc, 'Handler');\n    const Query = deep.idLocal(dpl, 'Query');\n    const QueriesClient = deep.idLocal(dpl, 'QueriesClient');\n    let initialMemoryObject = {\n        useQuery: {}, useSubscription: {}, select: {}, subscribe: {}, insert: {}, update: {}, 'delete': {},\n    };\n    if (typeof (window) === 'object') {\n        if (window._deep_perception_queries_memory)\n            initialMemoryObject = window._deep_perception_queries_memory;\n        window._deep_perception_queries_memory = initialMemoryObject;\n    }\n    return ({ go, isActive = false, children, }, ref) => {\n        const containerRef = React.useMemo(() => go.root().ref, []);\n        const { sync, setSync } = React.useContext(go.HandlerConfigContext);\n        const mode = React.useState('useQuery');\n        const modeRef = React.useRef(mode);\n        modeRef.current = mode[0];\n        const modes = Object.keys(initialMemoryObject);\n        const [list, setList] = React.useState([]);\n        const generateList = React.useCallback(() => {\n            if (!modeRef.current)\n                return;\n            const list = _.chain(Object.values(initialMemoryObject[modeRef.current] || {})).sortBy('mounted').reverse().value();\n            setList(list);\n        }, []);\n        const generateListDebounced = useDebounceCallback(generateList, 1000);\n        const apply = React.useCallback((mode, event) => {\n            const prev = initialMemoryObject[mode][event.name] || {};\n            const next = initialMemoryObject[mode][event.name] = { id: event.name, mode, ...prev, ...event, count: (prev?.count || 0) + 1 };\n            next[next.mounted ? 'updated' : 'mounted'] = new Date().valueOf();\n            if (mode === modeRef.current)\n                generateListDebounced();\n        }, []);\n        const unapply = React.useCallback((mode, event) => {\n            delete initialMemoryObject[mode][event.name];\n            if (mode === modeRef.current)\n                generateListDebounced();\n        }, []);\n        const events = React.useMemo(() => ({\n            'useQuery.mount': (event) => apply('useQuery', event),\n            'useQuery': (event) => apply('useQuery', event),\n            'useQuery.unmount': (event) => unapply('useQuery', event),\n            'useSubscription.mount': (event) => apply('useSubscription', event),\n            'useSubscription': (event) => apply('useSubscription', event),\n            'useSubscription.unmount': (event) => unapply('useSubscription', event),\n            'select': (event) => apply('select', event),\n            'subscribe.before': (event) => apply('subscribe', event),\n            'subscribe': (event) => apply('subscribe', event),\n            'insert': (event) => apply('insert', event),\n            'update': (event) => apply('update', event),\n            'delete': (event) => apply('delete', event),\n        }), []);\n        React.useEffect(() => {\n            const sub = (name) => events?.[name] && deep.emitter.on(name, events?.[name]);\n            Object.keys(events).forEach(name => sub(name));\n        }, []);\n        const [opened, setOpened] = React.useState();\n        const Item = React.useMemo(() => React.memo(({ link, isActive }) => {\n            const go = Go.useGo();\n            const q = JSON.stringify(link?.query);\n            return React.createElement(go.On, { do: {\n                    exec: (g, v, o) => setOpened(link),\n                } },\n                React.createElement(c.Button, { bg: isActive ? 'deepBgDark' : undefined, onClick: () => go.do('exec'), w: '100%' },\n                    React.createElement(c.Flex, { w: '100%' },\n                        React.createElement(c.Box, { flex: '1', p: '0.5em', pl: '1em' },\n                            React.createElement(c.Box, { noOfLines: 1, textAlign: 'left' },\n                                q.slice(0, 43),\n                                q.length > 43 ? '...' : ''),\n                            !!link?.value && React.createElement(c.Box, { noOfLines: 1 }, JSON.stringify(link?.value))),\n                        React.createElement(c.Box, { p: '0.25em', pr: '1em', fontSize: 'xs' },\n                            React.createElement(c.Box, null, moment(link.mounted).format('HH:mm:ss')),\n                            !!link.updated && React.createElement(c.Box, null, moment(link.updated).format('HH:mm:ss'))))));\n        }, _.isEqual), []);\n        React.useMemo(() => {\n            setOpened();\n            generateList();\n        }, [mode[0]]);\n        React.useMemo(() => {\n            if (!go.value)\n                mode[1]();\n            else if (!mode)\n                mode[1]('useQuery');\n        }, [go.value]);\n        React.useMemo(() => {\n            opened && go.focus(Query);\n        }, [opened]);\n        return React.createElement(go.On, { do: {\n                focus: (g, v, id, o) => {\n                    if (!v)\n                        go.set('useQuery');\n                    else if (modes.includes(v))\n                        setMode(v);\n                },\n                right: (g, v, o) => {\n                    mode[1](go.next(modes.map(m => ({ id: m })), mode[0]));\n                },\n                left: (g, v, o) => {\n                    modes[0] === mode[0] ? go.set() : mode[1](go.prev(modes.map(m => ({ id: m })), mode[0]));\n                },\n            } },\n            React.createElement(c.Popover, { placement: 'right-end', closeOnBlur: false, isOpen: !!go.value, onClose: () => go.set() },\n                React.createElement(c.PopoverTrigger, null,\n                    React.createElement(c.Button, { ref: ref, w: '3em', h: '3em', variant: !!go.value || isActive ? 'active' : undefined, onClick: () => go.value ? go.set() : go.set('useQuery') }, children)),\n                React.createElement(c.Portal, { containerRef: containerRef },\n                    React.createElement(c.PopoverContent, { w: '30em', maxH: '30em', minH: '30em', position: 'relative' },\n                        React.createElement(c.PopoverArrow, null),\n                        React.createElement(c.Flex, { direction: 'column', position: 'absolute', top: '0', left: '0', w: '100%', h: '100%' },\n                            React.createElement(c.Flex, { overflowX: 'scroll', css: go.noScrollBar },\n                                React.createElement(c.Flex, { columns: modes.length, flex: '1' }, modes.map(m => React.createElement(c.Button, { ...go.activator(mode, m) }, m))),\n                                React.createElement(c.Divider, { orientation: 'vertical' }),\n                                React.createElement(c.Button, { ...go.activator([sync, setSync], true) }, \"sync\")),\n                            React.createElement(c.Divider, null),\n                            React.createElement(go.Provider, { linkId: Stack, value: list?.[0]?.id }, !opened && React.createElement(go.Component, { key: mode[0], path: [dpl, 'Stack'], direction: 'vertical', links: list, Item: Item, flex: '1' })),\n                            !!opened && React.createElement(React.Fragment, null,\n                                React.createElement(go.Provider, { linkId: Query, value: list?.[0]?.id },\n                                    React.createElement(go.Component, { path: [dpl, 'Query'], event: opened }))))))));\n    };\n};\n//# sourceMappingURL=data:application/json;base64,",
          "link_id": 20480
        },
        "__typename": "links"
      },
      "__typename": "handlers"
    },
    {
      "dist_id": 21157,
      "src_id": 21151,
      "handler_id": 21155,
      "execution_provider_id": 33,
      "isolation_provider_id": 144,
      "dist": {
        "id": 21157,
        "type_id": 30,
        "from_id": 0,
        "to_id": 0,
        "value": {
          "id": 1796,
          "value": "({ deep, data, require, Go }) => {\n    const React = require('react');\n    const c = require('@chakra-ui/react');\n    return ({ go, children, }, ref) => {\n        return React.createElement(go.On, { do: {} },\n            React.createElement(c.Box, { ref: ref, h: '3em' }, `${go}`));\n    };\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsibW9kdWxlLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxDQUFDLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRTtJQUM5QixNQUFNLEtBQUssR0FBRyxPQUFPLENBQUMsT0FBTyxDQUFDLENBQUM7SUFFL0IsTUFBTSxDQUFDLEdBQUcsT0FBTyxDQUFDLGtCQUFrQixDQUFDLENBQUM7SUFFdEMsT0FBTyxDQUFDLEVBQ04sRUFBRSxFQUVGLFFBQVEsR0FDVCxFQUFFLEdBQUcsRUFBRSxFQUFFO1FBQ1IsT0FBTyxvQkFBQyxFQUFFLENBQUMsRUFBRSxJQUNYLEVBQUUsRUFBRSxFQUNIO1lBRUQsb0JBQUMsQ0FBQyxDQUFDLEdBQUcsSUFBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBQyxLQUFLLElBQUUsR0FBRyxFQUFFLEVBQUUsQ0FBUyxDQUNwQyxDQUFDO0lBQ1gsQ0FBQyxDQUFDO0FBQ0osQ0FBQyxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiKHsgZGVlcCwgZGF0YSwgcmVxdWlyZSwgR28gfSkgPT4ge1xuICBjb25zdCBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XG4gIFxuICBjb25zdCBjID0gcmVxdWlyZSgnQGNoYWtyYS11aS9yZWFjdCcpO1xuXG4gIHJldHVybiAoe1xuICAgIGdvLFxuXG4gICAgY2hpbGRyZW4sXG4gIH0sIHJlZikgPT4ge1xuICAgIHJldHVybiA8Z28uT25cbiAgICAgIGRvPXt7XG4gICAgICB9fVxuICAgID5cbiAgICAgIDxjLkJveCByZWY9e3JlZn0gaD0nM2VtJz57YCR7Z299YH08L2MuQm94PlxuICAgIDwvZ28uT24+O1xuICB9O1xufSJdfQ==",
          "link_id": 21157
        },
        "__typename": "links"
      },
      "__typename": "handlers"
    },
    {
      "dist_id": 21751,
      "src_id": 21743,
      "handler_id": 21747,
      "execution_provider_id": 33,
      "isolation_provider_id": 144,
      "dist": {
        "id": 21751,
        "type_id": 30,
        "from_id": 0,
        "to_id": 0,
        "value": {
          "id": 1805,
          "value": "async ({ deep, data, Go, require }) => {\n    const React = require('react');\n    const { GrGraphQl } = require(\"react-icons/gr\");\n    const c = require('@chakra-ui/react');\n    const _ = require('lodash');\n    const dpl = '@deep-foundation/perception-links';\n    const dc = '@deep-foundation/core';\n    return ({ go, handlerId, isActive, }, ref) => {\n        const View = React.useCallback(({ event }) => {\n            const value = `// query\n${event?.remoteQuery?.query?.queryString || ''}\n\n// variables\n${JSON.stringify(event?.remoteQuery?.query?.variables || {}, null, 2)}\n`;\n            return React.createElement(Go.Editor, { editable: false, readOnly: true, value: value, fillSize: true });\n        }, []);\n        return React.createElement(go.On, { do: {\n                exec: (g, v, o) => go.do('view', { id: go.linkId, Component: View })\n            } },\n            React.createElement(c.Button, { w: '3em', h: '3em', variant: isActive ? 'active' : undefined, ref: ref, onClick: () => go.do('exec') },\n                React.createElement(GrGraphQl, null)));\n    };\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsibW9kdWxlLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxLQUFLLEVBQUUsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLEVBQUUsRUFBRSxPQUFPLEVBQUUsRUFBRSxFQUFFO0lBQ3BDLE1BQU0sS0FBSyxHQUFHLE9BQU8sQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUMvQixNQUFNLEVBQUUsU0FBUyxFQUFFLEdBQUcsT0FBTyxDQUFDLGdCQUFnQixDQUFDLENBQUM7SUFDaEQsTUFBTSxDQUFDLEdBQUcsT0FBTyxDQUFDLGtCQUFrQixDQUFDLENBQUM7SUFDdEMsTUFBTSxDQUFDLEdBQUcsT0FBTyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBRTVCLE1BQU0sR0FBRyxHQUFHLG1DQUFtQyxDQUFDO0lBQ2hELE1BQU0sRUFBRSxHQUFHLHVCQUF1QixDQUFDO0lBRW5DLE9BQU8sQ0FBQyxFQUNOLEVBQUUsRUFDRixTQUFTLEVBRVQsUUFBUSxHQUNULEVBQUUsR0FBRyxFQUFFLEVBQUU7UUFDUixNQUFNLElBQUksR0FBRyxLQUFLLENBQUMsV0FBVyxDQUFDLENBQUMsRUFBRSxLQUFLLEVBQUUsRUFBRSxFQUFFO1lBQzNDLE1BQU0sS0FBSyxHQUFHO0VBQ2xCLEtBQUssRUFBRSxXQUFXLEVBQUUsS0FBSyxFQUFFLFdBQVcsSUFBSSxFQUFFOzs7RUFHNUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxLQUFLLEVBQUUsV0FBVyxFQUFFLEtBQUssRUFBRSxTQUFTLElBQUksRUFBRSxFQUFFLElBQUksRUFBRSxDQUFDLENBQUM7Q0FDcEUsQ0FBQTtZQUVLLE9BQU8sb0JBQUMsRUFBRSxDQUFDLE1BQU0sSUFBQyxRQUFRLEVBQUUsS0FBSyxFQUFFLFFBQVEsUUFBQyxLQUFLLEVBQUUsS0FBSyxFQUFFLFFBQVEsU0FBRSxDQUFDO1FBQ3ZFLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQztRQUVQLE9BQU8sb0JBQUMsRUFBRSxDQUFDLEVBQUUsSUFBQyxFQUFFLEVBQUU7Z0JBQ2hCLElBQUksRUFBRSxDQUFDLENBQUMsRUFBQyxDQUFDLEVBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLE1BQU0sRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLENBQUMsTUFBTSxFQUFFLFNBQVMsRUFBRSxJQUFJLEVBQUUsQ0FBQzthQUNuRTtZQUNDLG9CQUFDLENBQUMsQ0FBQyxNQUFNLElBQ1AsQ0FBQyxFQUFDLEtBQUssRUFBQyxDQUFDLEVBQUMsS0FBSyxFQUNmLE9BQU8sRUFBRSxRQUFRLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsU0FBUyxFQUN4QyxHQUFHLEVBQUUsR0FBRyxFQUNSLE9BQU8sRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLE1BQU0sQ0FBQztnQkFFNUIsb0JBQUMsU0FBUyxPQUFFLENBQ0gsQ0FDTCxDQUFDO0lBQ1gsQ0FBQyxDQUFDO0FBQ0osQ0FBQyxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiYXN5bmMgKHsgZGVlcCwgZGF0YSwgR28sIHJlcXVpcmUgfSkgPT4ge1xuICBjb25zdCBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XG4gIGNvbnN0IHsgR3JHcmFwaFFsIH0gPSByZXF1aXJlKFwicmVhY3QtaWNvbnMvZ3JcIik7XG4gIGNvbnN0IGMgPSByZXF1aXJlKCdAY2hha3JhLXVpL3JlYWN0Jyk7XG4gIGNvbnN0IF8gPSByZXF1aXJlKCdsb2Rhc2gnKTtcblxuICBjb25zdCBkcGwgPSAnQGRlZXAtZm91bmRhdGlvbi9wZXJjZXB0aW9uLWxpbmtzJztcbiAgY29uc3QgZGMgPSAnQGRlZXAtZm91bmRhdGlvbi9jb3JlJztcblxuICByZXR1cm4gKHtcbiAgICBnbyxcbiAgICBoYW5kbGVySWQsXG5cbiAgICBpc0FjdGl2ZSxcbiAgfSwgcmVmKSA9PiB7XG4gICAgY29uc3QgVmlldyA9IFJlYWN0LnVzZUNhbGxiYWNrKCh7IGV2ZW50IH0pID0+IHtcbiAgICAgIGNvbnN0IHZhbHVlID0gYC8vIHF1ZXJ5XG4ke2V2ZW50Py5yZW1vdGVRdWVyeT8ucXVlcnk/LnF1ZXJ5U3RyaW5nIHx8ICcnfVxuXG4vLyB2YXJpYWJsZXNcbiR7SlNPTi5zdHJpbmdpZnkoZXZlbnQ/LnJlbW90ZVF1ZXJ5Py5xdWVyeT8udmFyaWFibGVzIHx8IHt9LCBudWxsLCAyKX1cbmBcbiAgXG4gICAgICByZXR1cm4gPEdvLkVkaXRvciBlZGl0YWJsZT17ZmFsc2V9IHJlYWRPbmx5IHZhbHVlPXt2YWx1ZX0gZmlsbFNpemUvPjtcbiAgICB9LCBbXSk7XG5cbiAgICByZXR1cm4gPGdvLk9uIGRvPXt7XG4gICAgICBleGVjOiAoZyx2LG8pID0+IGdvLmRvKCd2aWV3JywgeyBpZDogZ28ubGlua0lkLCBDb21wb25lbnQ6IFZpZXcgfSkpLFxuICAgIH19PlxuICAgICAgPGMuQnV0dG9uXG4gICAgICAgIHc9JzNlbScgaD0nM2VtJ1xuICAgICAgICB2YXJpYW50PXtpc0FjdGl2ZSA/ICdhY3RpdmUnIDogdW5kZWZpbmVkfVxuICAgICAgICByZWY9e3JlZn1cbiAgICAgICAgb25DbGljaz17KCkgPT4gZ28uZG8oJ2V4ZWMnKX1cbiAgICAgID5cbiAgICAgICAgPEdyR3JhcGhRbC8+XG4gICAgICA8L2MuQnV0dG9uPlxuICAgIDwvZ28uT24+O1xuICB9O1xufSJdfQ==",
          "link_id": 21751
        },
        "__typename": "links"
      },
      "__typename": "handlers"
    },
    {
      "dist_id": 21949,
      "src_id": 21926,
      "handler_id": 21940,
      "execution_provider_id": 33,
      "isolation_provider_id": 144,
      "dist": {
        "id": 21949,
        "type_id": 30,
        "from_id": 0,
        "to_id": 0,
        "value": {
          "id": 1819,
          "value": "async ({ deep, data, Go, require }) => {\n    const React = require('react');\n    const { VscJson } = require(\"react-icons/vsc\");\n    const c = require('@chakra-ui/react');\n    const _ = require('lodash');\n    const dpl = '@deep-foundation/perception-links';\n    const dc = '@deep-foundation/core';\n    return ({ go, handlerId, isActive, }, ref) => {\n        const View = React.useCallback(({ event }) => {\n            const value = JSON.stringify(event.remoteData, null, 2);\n            return React.createElement(Go.Editor, { editable: false, readOnly: true, value: value, fillSize: true });\n        }, []);\n        return React.createElement(go.On, { do: {\n                exec: (g, v, o) => go.do('view', { id: go.linkId, Component: View })\n            } },\n            React.createElement(c.Button, { w: '3em', h: '3em', variant: isActive ? 'active' : undefined, ref: ref, onClick: () => go.do('exec') },\n                React.createElement(VscJson, null)));\n    };\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsibW9kdWxlLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxLQUFLLEVBQUUsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLEVBQUUsRUFBRSxPQUFPLEVBQUUsRUFBRSxFQUFFO0lBQ3BDLE1BQU0sS0FBSyxHQUFHLE9BQU8sQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUMvQixNQUFNLEVBQUUsT0FBTyxFQUFFLEdBQUcsT0FBTyxDQUFDLGlCQUFpQixDQUFDLENBQUM7SUFDL0MsTUFBTSxDQUFDLEdBQUcsT0FBTyxDQUFDLGtCQUFrQixDQUFDLENBQUM7SUFDdEMsTUFBTSxDQUFDLEdBQUcsT0FBTyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBRTVCLE1BQU0sR0FBRyxHQUFHLG1DQUFtQyxDQUFDO0lBQ2hELE1BQU0sRUFBRSxHQUFHLHVCQUF1QixDQUFDO0lBRW5DLE9BQU8sQ0FBQyxFQUNOLEVBQUUsRUFDRixTQUFTLEVBRVQsUUFBUSxHQUNULEVBQUUsR0FBRyxFQUFFLEVBQUU7UUFDUixNQUFNLElBQUksR0FBRyxLQUFLLENBQUMsV0FBVyxDQUFDLENBQUMsRUFBRSxLQUFLLEVBQUUsRUFBRSxFQUFFO1lBQzNDLE1BQU0sS0FBSyxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsS0FBSyxDQUFDLFVBQVUsRUFBRSxJQUFJLEVBQUUsQ0FBQyxDQUFDLENBQUM7WUFFeEQsT0FBTyxvQkFBQyxFQUFFLENBQUMsTUFBTSxJQUFDLFFBQVEsRUFBRSxLQUFLLEVBQUUsUUFBUSxRQUFDLEtBQUssRUFBRSxLQUFLLEVBQUUsUUFBUSxTQUFFLENBQUM7UUFDdkUsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDO1FBRVAsT0FBTyxvQkFBQyxFQUFFLENBQUMsRUFBRSxJQUFDLEVBQUUsRUFBRTtnQkFDaEIsSUFBSSxFQUFFLENBQUMsQ0FBQyxFQUFDLENBQUMsRUFBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsTUFBTSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsQ0FBQyxNQUFNLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxDQUFDO2FBQ25FO1lBQ0Msb0JBQUMsQ0FBQyxDQUFDLE1BQU0sSUFDUCxDQUFDLEVBQUMsS0FBSyxFQUFDLENBQUMsRUFBQyxLQUFLLEVBQ2YsT0FBTyxFQUFFLFFBQVEsQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxTQUFTLEVBQ3hDLEdBQUcsRUFBRSxHQUFHLEVBQ1IsT0FBTyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsTUFBTSxDQUFDO2dCQUU1QixvQkFBQyxPQUFPLE9BQUUsQ0FDRCxDQUNMLENBQUM7SUFDWCxDQUFDLENBQUM7QUFDSixDQUFDLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJhc3luYyAoeyBkZWVwLCBkYXRhLCBHbywgcmVxdWlyZSB9KSA9PiB7XG4gIGNvbnN0IFJlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcbiAgY29uc3QgeyBWc2NKc29uIH0gPSByZXF1aXJlKFwicmVhY3QtaWNvbnMvdnNjXCIpO1xuICBjb25zdCBjID0gcmVxdWlyZSgnQGNoYWtyYS11aS9yZWFjdCcpO1xuICBjb25zdCBfID0gcmVxdWlyZSgnbG9kYXNoJyk7XG5cbiAgY29uc3QgZHBsID0gJ0BkZWVwLWZvdW5kYXRpb24vcGVyY2VwdGlvbi1saW5rcyc7XG4gIGNvbnN0IGRjID0gJ0BkZWVwLWZvdW5kYXRpb24vY29yZSc7XG5cbiAgcmV0dXJuICh7XG4gICAgZ28sXG4gICAgaGFuZGxlcklkLFxuXG4gICAgaXNBY3RpdmUsXG4gIH0sIHJlZikgPT4ge1xuICAgIGNvbnN0IFZpZXcgPSBSZWFjdC51c2VDYWxsYmFjaygoeyBldmVudCB9KSA9PiB7XG4gICAgICBjb25zdCB2YWx1ZSA9IEpTT04uc3RyaW5naWZ5KGV2ZW50LnJlbW90ZURhdGEsIG51bGwsIDIpO1xuICBcbiAgICAgIHJldHVybiA8R28uRWRpdG9yIGVkaXRhYmxlPXtmYWxzZX0gcmVhZE9ubHkgdmFsdWU9e3ZhbHVlfSBmaWxsU2l6ZS8+O1xuICAgIH0sIFtdKTtcblxuICAgIHJldHVybiA8Z28uT24gZG89e3tcbiAgICAgIGV4ZWM6IChnLHYsbykgPT4gZ28uZG8oJ3ZpZXcnLCB7IGlkOiBnby5saW5rSWQsIENvbXBvbmVudDogVmlldyB9KSksXG4gICAgfX0+XG4gICAgICA8Yy5CdXR0b25cbiAgICAgICAgdz0nM2VtJyBoPSczZW0nXG4gICAgICAgIHZhcmlhbnQ9e2lzQWN0aXZlID8gJ2FjdGl2ZScgOiB1bmRlZmluZWR9XG4gICAgICAgIHJlZj17cmVmfVxuICAgICAgICBvbkNsaWNrPXsoKSA9PiBnby5kbygnZXhlYycpfVxuICAgICAgPlxuICAgICAgICA8VnNjSnNvbi8+XG4gICAgICA8L2MuQnV0dG9uPlxuICAgIDwvZ28uT24+O1xuICB9O1xufSJdfQ==",
          "link_id": 21949
        },
        "__typename": "links"
      },
      "__typename": "handlers"
    },
    {
      "dist_id": 21950,
      "src_id": 21927,
      "handler_id": 21936,
      "execution_provider_id": 33,
      "isolation_provider_id": 144,
      "dist": {
        "id": 21950,
        "type_id": 30,
        "from_id": 0,
        "to_id": 0,
        "value": {
          "id": 1822,
          "value": "async ({ deep, data, Go, require }) => {\n    const React = require('react');\n    const { FaNodeJs } = require(\"react-icons/fa\");\n    const c = require('@chakra-ui/react');\n    const _ = require('lodash');\n    const dpl = '@deep-foundation/perception-links';\n    const dc = '@deep-foundation/core';\n    return ({ go, handlerId, isActive, }, ref) => {\n        const View = React.useCallback(({ event }) => {\n            let value = event.mode;\n            const q = JSON.stringify(event.query, null, 2);\n            const r = JSON.stringify(event.remoteData).slice(1, 30);\n            const v = JSON.stringify(event.value || {}, null, 2);\n            const _o = { ...event.options };\n            if (_o.table === 'links')\n                delete _o.table;\n            const o = _.isEmpty(_o) ? '' : JSON.stringify(_o, null, 2);\n            const oo = o ? `, ${o}` : '';\n            if (event.mode === 'useQuery' || event.mode === 'useSubscription' || event.mode === 'select' || event.mode === 'subscribe') {\n                value = `// request to links on remote server\n\n// load links once\nawait deep.select(${q}${o});\n// { error: ${event.error ? deep.stringify(event.error) : 'null'}, data: { ${r}... } }\n\n// load and subscribe to changes\ndeep.subscribe(${q}${o})\n.subscribe({ next: (links) => {}, error: (error) => {} });\n// links // ${r}...\n\n// hint: feel free to use deep variable in browser console!\n\n${!!_o.table && `// minilinks awailable only for { table: 'links' }`}\n${!_o.table && `// request to links in local memory (minilinks)\n\n// find once\ndeep.ml.select(${q}${o});\n// Link[]...\n\n// subscribe to changes locally\ndeep.ml.subscribe(${q}${o})\n.subscribe({ next: (links) => {}, error: (error) => {} });\n// links // Link[]...\n\n// loaded with deep.select and deep.subscribe plain links\nconst Contain = deep.idLocal('@deep-foundation/core', 'Contain');\nconst results = await deep.select({\n  in: { type: Contain, from: deep.linkId, },\n  return: { contain: { in: { type: Contain } } } // get related links too\n}),\n// can be added to minilinks with:\ndeep.minilinks.apply(\n  results,\n  'name', // STRICTLY UNIQUE\n);\n// you can update links stage in minilinks, by some select/subscription flow manually\n// in react hooks deep.useSubscription and deep.useQuery apply always automatically\n// then you can simply travel by it\nconst user = deep.get(deep.linkId);\nuser.travel().out({ type: Contain }).select();\n`}`;\n            }\n            if (event.mode === 'insert') {\n                value = `// request to links on remote server\nawait deep.insert(${q}${oo});\n// { error: ${event.error ? deep.stringify(event.error) : 'null'}, data: { ${r}... } }\n\n// possible to insert multiple links at request\nawait deep.insert({\n  from: deep.idLocal('@deep-foundation/core', 'clientSupportsJs'),\n  type: deep.idLocal('@deep-foundation/core', 'Handler'),\n  to: {\n    // from/to/type as single relations can be\n    // Id of existed link or link to insert:\n    type_id: deep.idLocal('@deep-foundation/core', 'TSX'),\n    string: \\`({ deep, require }) => { var React = require('react'); return () => <div>my new component</div>; }\\`,\n  },\n  // short cut for create Contain links:\n  containerId: deep.linkId, // current user\n  name: 'my new component',\n});\n\n// hint: feel free to use deep variable in browser console!\n\n// by default only remote request\n// you can set option once\nawait deep.insert({ ... }, { local: true, ... });\n// or globally\ndeep.local = true;\n// and link will be inserted in local deep.minilinks\n// before transaction to server\n// links inserted on client side first is virtual with -123 negative id\n`;\n            }\n            if (event.mode === 'update') {\n                value = `// request to links on remote server\nawait deep.update(${q}, ${v}${oo});\n// { error: ${event.error ? deep.stringify(event.error) : 'null'}, data: { ${r}... } }\n\n// hint: feel free to use deep variable in browser console!\n\n// by default only remote request\n// you can set option once\nawait deep.update({ ... }, { ... }, { local: true, ... });\n// or globally\ndeep.local = true;\n// and link will be updated in local deep.minilinks\n// before transaction to server\n`;\n            }\n            if (event.mode === 'delete') {\n                value = `// request to links on remote server\nawait deep.delete(${q}${oo});\n// { error: ${event.error ? deep.stringify(event.error) : 'null'}, data: { ${r}... } }\n\n// hint: feel free to use deep variable in browser console!\n\n// by default only remote request\n// you can set option once\nawait deep.delete({ ... }, { ... }, { local: true, ... });\n// or globally\ndeep.local = true;\n// and link will be deleted in local deep.minilinks\n// before transaction to server\n`;\n            }\n            return React.createElement(Go.Editor, { editable: false, readOnly: true, value: value, fillSize: true });\n        }, []);\n        return React.createElement(go.On, { do: {\n                exec: (g, v, o) => go.do('view', { id: go.linkId, Component: View })\n            } },\n            React.createElement(c.Button, { w: '3em', h: '3em', variant: isActive ? 'active' : undefined, ref: ref, onClick: () => go.do('exec') },\n                React.createElement(FaNodeJs, null)));\n    };\n};\n//# sourceMappingURL=data:application/json;base64,",
          "link_id": 21950
        },
        "__typename": "links"
      },
      "__typename": "handlers"
    },
    {
      "dist_id": 21951,
      "src_id": 21925,
      "handler_id": 21938,
      "execution_provider_id": 33,
      "isolation_provider_id": 144,
      "dist": {
        "id": 21951,
        "type_id": 30,
        "from_id": 0,
        "to_id": 0,
        "value": {
          "id": 1823,
          "value": "async ({ deep, data, Go, require }) => {\n    const React = require('react');\n    const { FaReact } = require(\"react-icons/fa\");\n    const c = require('@chakra-ui/react');\n    const _ = require('lodash');\n    const dpl = '@deep-foundation/perception-links';\n    const dc = '@deep-foundation/core';\n    return ({ go, handlerId, isActive, }, ref) => {\n        const View = React.useCallback(({ event }) => {\n            let value = event.mode;\n            const q = JSON.stringify(event.query, null, 2);\n            const r = JSON.stringify(event.remoteData).slice(1, 30);\n            const v = JSON.stringify(event.value || {}, null, 2);\n            const _o = { ...event.options };\n            if (_o.table === 'links')\n                delete _o.table;\n            const o = _.isEmpty(_o) ? '' : JSON.stringify(_o, null, 2);\n            const oo = o ? `, ${o}` : '';\n            if (event.mode === 'useQuery' || event.mode === 'useSubscription' || event.mode === 'select' || event.mode === 'subscribe') {\n                value = `// basically deep.select and deep.subscribe returns plain data\n// but deep.useQuery and deep.useSubscriptions always\n// apply synced from server to deep.minilinks local memory\n\n// load links once\nconst { data } = deep.useQuery(${q}${o});\n// { error: ${event.error ? deep.stringify(event.error) : 'null'}, data: { ${r}... }, loading: false }\n\n// load and subscribe to reactive links\nconst { data } = deep.useSubscription(${q}${o})\n// { error: ${event.error ? deep.stringify(event.error) : 'null'}, data: { ${r}... }, loading: false }\n\n// equal queries can be used in local memory\n\n// find links once\nconst data = deep.useLocalSubscription(${q}${o});\n// data // Link[];\n\n// find links with reactive subscription\nconst data = deep.useLocalSubscription(${q}${o});\n// data // Link[];\n\n// links fetched from hooks already exists in minilinks and\n// related each other\n// you can travel by it simply:\nhandler.to.value // { value: \\`my new component\\` }\n\n// you can get reactive links from static links or ids\nconst [user, handler] = deep.useLinks(deep.linkId, notReactiveLink);\n\n// pretty handy use traveler:\nconst data = deep.useSubscription(myLink.travel().out({ type: Contain }).to().query());\n`;\n            }\n            if (event.mode === 'insert') {\n                value = `// hints for react\n\n// if not need to await result\nReact.useEffect(() => {\n  deep.insert(${q}${oo});\n}, []);\n\n// if need to await\nReact.useEffect(() => { (async () => {\n  deep.insert(${q}${oo});\n})() }, []);\n\n<c.Box onChange={async () => {\n  await deep.insert(${q}${oo});\n}}>button</Button>`;\n            }\n            if (event.mode === 'update') {\n                value = `// hints for react\n\n// if not need to await result\nReact.useEffect(() => {\n  deep.update(${q}, ${v}${oo});\n}, []);\n\n// if need to await\nReact.useEffect(() => { (async () => {\n  deep.update(${q}, ${v}${oo});\n})() }, []);\n\n<c.Box onChange={async () => {\n  await deep.update(${q}, ${v}${oo});\n}}>button</Button>`;\n            }\n            if (event.mode === 'delete') {\n                value = `// hints for react\n\n// if not need to await result\nReact.useEffect(() => {\n  deep.delete(${q}${oo});\n}, []);\n\n// if need to await\nReact.useEffect(() => { (async () => {\n  deep.delete(${q}${oo});\n})() }, []);\n\n<c.Box onChange={async () => {\n  await deep.delete(${q}${oo});\n}}>button</Button>`;\n            }\n            return React.createElement(Go.Editor, { editable: false, readOnly: true, value: value, fillSize: true });\n        }, []);\n        return React.createElement(go.On, { do: {\n                exec: (g, v, o) => go.do('view', { id: go.linkId, Component: View })\n            } },\n            React.createElement(c.Button, { w: '3em', h: '3em', variant: isActive ? 'active' : undefined, ref: ref, onClick: () => go.do('exec') },\n                React.createElement(FaReact, null)));\n    };\n};\n//# sourceMappingURL=data:application/json;base64,",
          "link_id": 21951
        },
        "__typename": "links"
      },
      "__typename": "handlers"
    },
    {
      "dist_id": 22432,
      "src_id": 22426,
      "handler_id": 22430,
      "execution_provider_id": 33,
      "isolation_provider_id": 144,
      "dist": {
        "id": 22432,
        "type_id": 30,
        "from_id": 0,
        "to_id": 0,
        "value": {
          "id": 1828,
          "value": "({ deep, data, require, Go }) => {\n    const React = require('react');\n    const c = require('@chakra-ui/react');\n    const _ = require('lodash');\n    const moment = require('moment');\n    const { useDebounceCallback } = require('@react-hook/debounce');\n    var dpl = '@deep-foundation/perception-links';\n    var dc = '@deep-foundation/core';\n    const Stack = deep.idLocal(dpl, 'Stack');\n    const Queries = deep.idLocal(dpl, 'Queries');\n    const Compatable = deep.idLocal(dpl, 'Compatable');\n    const Handler = deep.idLocal(dc, 'Handler');\n    const QueriesClient = deep.idLocal(dpl, 'QueriesClient');\n    return ({ go, event, children, }, ref) => {\n        const { data: views } = deep.useQuery({\n            type_id: Handler,\n            out: {\n                type_id: Compatable,\n                to_id: Queries,\n            },\n        });\n        const ViewItem = React.useMemo(() => React.memo(({ link: handler, isActive }) => {\n            return React.createElement(Go.Handler, { handlerId: handler.id, event: event, isActive: isActive });\n        }), []);\n        const [o, setO] = React.useState();\n        React.useEffect(() => go.set(Stack), []);\n        return React.createElement(go.On, { do: {\n                view: (g, v, o) => setO(o),\n            } },\n            React.createElement(c.Flex, { ref: ref, direction: 'column', h: '100%' },\n                React.createElement(c.Box, { h: '3em' },\n                    React.createElement(go.Provider, { linkId: Stack },\n                        React.createElement(go.Component, { path: [dpl, 'Stack'], direction: 'horizontal', links: views, Item: ViewItem }))),\n                typeof (o?.Component) === 'function' && [React.createElement(go.Provider, { key: o.id, linkId: o.id },\n                        React.createElement(c.Box, { flex: '1', position: 'relative' },\n                            React.createElement(o.Component, { event: event })))]));\n    };\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsibW9kdWxlLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxDQUFDLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRTtJQUM5QixNQUFNLEtBQUssR0FBRyxPQUFPLENBQUMsT0FBTyxDQUFDLENBQUM7SUFFL0IsTUFBTSxDQUFDLEdBQUcsT0FBTyxDQUFDLGtCQUFrQixDQUFDLENBQUM7SUFDdEMsTUFBTSxDQUFDLEdBQUcsT0FBTyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQzVCLE1BQU0sTUFBTSxHQUFHLE9BQU8sQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUNqQyxNQUFNLEVBQUUsbUJBQW1CLEVBQUUsR0FBRyxPQUFPLENBQUMsc0JBQXNCLENBQUMsQ0FBQztJQUVoRSxJQUFJLEdBQUcsR0FBRyxtQ0FBbUMsQ0FBQztJQUM5QyxJQUFJLEVBQUUsR0FBRyx1QkFBdUIsQ0FBQztJQUVqQyxNQUFNLEtBQUssR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxPQUFPLENBQUMsQ0FBQztJQUN6QyxNQUFNLE9BQU8sR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxTQUFTLENBQUMsQ0FBQztJQUM3QyxNQUFNLFVBQVUsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxZQUFZLENBQUMsQ0FBQztJQUNuRCxNQUFNLE9BQU8sR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLEVBQUUsRUFBRSxTQUFTLENBQUMsQ0FBQztJQUM1QyxNQUFNLGFBQWEsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxlQUFlLENBQUMsQ0FBQztJQUV6RCxPQUFPLENBQUMsRUFDTixFQUFFLEVBRUYsS0FBSyxFQUVMLFFBQVEsR0FDVCxFQUFFLEdBQUcsRUFBRSxFQUFFO1FBQ1IsTUFBTSxFQUFFLElBQUksRUFBRSxLQUFLLEVBQUUsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDO1lBQ3BDLE9BQU8sRUFBRSxPQUFPO1lBQ2hCLEdBQUcsRUFBRTtnQkFDSCxPQUFPLEVBQUUsVUFBVTtnQkFDbkIsS0FBSyxFQUFFLE9BQU87YUFDZjtTQUNGLENBQUMsQ0FBQztRQUVILE1BQU0sUUFBUSxHQUFHLEtBQUssQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDLEVBQUUsSUFBSSxFQUFFLE9BQU8sRUFBRSxRQUFRLEVBQUUsRUFBRSxFQUFFO1lBQzlFLE9BQU8sb0JBQUMsRUFBRSxDQUFDLE9BQU8sSUFBQyxTQUFTLEVBQUUsT0FBTyxDQUFDLEVBQUUsRUFBRSxLQUFLLEVBQUUsS0FBSyxFQUFFLFFBQVEsRUFBRSxRQUFRLEdBQUcsQ0FBQztRQUNoRixDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQztRQUVSLE1BQU0sQ0FBQyxDQUFDLEVBQUUsSUFBSSxDQUFDLEdBQUcsS0FBSyxDQUFDLFFBQVEsRUFBRSxDQUFDO1FBQ25DLEtBQUssQ0FBQyxTQUFTLENBQUMsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQztRQUV6QyxPQUFPLG9CQUFDLEVBQUUsQ0FBQyxFQUFFLElBQ1gsRUFBRSxFQUFFO2dCQUNGLElBQUksRUFBRSxDQUFDLENBQUMsRUFBQyxDQUFDLEVBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO2FBQ3pCO1lBRUQsb0JBQUMsQ0FBQyxDQUFDLElBQUksSUFBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLFNBQVMsRUFBQyxRQUFRLEVBQUMsQ0FBQyxFQUFDLE1BQU07Z0JBQzNDLG9CQUFDLENBQUMsQ0FBQyxHQUFHLElBQUMsQ0FBQyxFQUFDLEtBQUs7b0JBQUMsb0JBQUMsRUFBRSxDQUFDLFFBQVEsSUFBQyxNQUFNLEVBQUUsS0FBSzt3QkFDdkMsb0JBQUMsRUFBRSxDQUFDLFNBQVMsSUFBQyxJQUFJLEVBQUUsQ0FBQyxHQUFHLEVBQUUsT0FBTyxDQUFDLEVBQUUsU0FBUyxFQUFDLFlBQVksRUFBQyxLQUFLLEVBQUUsS0FBSyxFQUFFLElBQUksRUFBRSxRQUFRLEdBQUcsQ0FDOUUsQ0FBUTtnQkFDckIsT0FBTSxDQUFDLENBQUMsRUFBRSxTQUFTLENBQUMsS0FBSyxVQUFVLElBQUksQ0FBQyxvQkFBQyxFQUFFLENBQUMsUUFBUSxJQUFDLEdBQUcsRUFBRSxDQUFDLENBQUMsRUFBRSxFQUFFLE1BQU0sRUFBRSxDQUFDLENBQUMsRUFBRTt3QkFDM0Usb0JBQUMsQ0FBQyxDQUFDLEdBQUcsSUFBQyxJQUFJLEVBQUMsR0FBRyxFQUFDLFFBQVEsRUFBQyxVQUFVOzRCQUNqQyxvQkFBQyxDQUFDLENBQUMsU0FBUyxJQUFDLEtBQUssRUFBRSxLQUFLLEdBQUcsQ0FDdEIsQ0FDSSxDQUFDLENBQ1IsQ0FDSCxDQUFDO0lBQ1gsQ0FBQyxDQUFDO0FBQ0osQ0FBQyxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiKHsgZGVlcCwgZGF0YSwgcmVxdWlyZSwgR28gfSkgPT4ge1xuICBjb25zdCBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XG4gIFxuICBjb25zdCBjID0gcmVxdWlyZSgnQGNoYWtyYS11aS9yZWFjdCcpO1xuICBjb25zdCBfID0gcmVxdWlyZSgnbG9kYXNoJyk7XG4gIGNvbnN0IG1vbWVudCA9IHJlcXVpcmUoJ21vbWVudCcpO1xuICBjb25zdCB7IHVzZURlYm91bmNlQ2FsbGJhY2sgfSA9IHJlcXVpcmUoJ0ByZWFjdC1ob29rL2RlYm91bmNlJyk7XG5cbiAgdmFyIGRwbCA9ICdAZGVlcC1mb3VuZGF0aW9uL3BlcmNlcHRpb24tbGlua3MnO1xuICB2YXIgZGMgPSAnQGRlZXAtZm91bmRhdGlvbi9jb3JlJztcblxuICBjb25zdCBTdGFjayA9IGRlZXAuaWRMb2NhbChkcGwsICdTdGFjaycpO1xuICBjb25zdCBRdWVyaWVzID0gZGVlcC5pZExvY2FsKGRwbCwgJ1F1ZXJpZXMnKTtcbiAgY29uc3QgQ29tcGF0YWJsZSA9IGRlZXAuaWRMb2NhbChkcGwsICdDb21wYXRhYmxlJyk7XG4gIGNvbnN0IEhhbmRsZXIgPSBkZWVwLmlkTG9jYWwoZGMsICdIYW5kbGVyJyk7XG4gIGNvbnN0IFF1ZXJpZXNDbGllbnQgPSBkZWVwLmlkTG9jYWwoZHBsLCAnUXVlcmllc0NsaWVudCcpO1xuXG4gIHJldHVybiAoe1xuICAgIGdvLFxuXG4gICAgZXZlbnQsXG5cbiAgICBjaGlsZHJlbixcbiAgfSwgcmVmKSA9PiB7XG4gICAgY29uc3QgeyBkYXRhOiB2aWV3cyB9ID0gZGVlcC51c2VRdWVyeSh7XG4gICAgICB0eXBlX2lkOiBIYW5kbGVyLFxuICAgICAgb3V0OiB7XG4gICAgICAgIHR5cGVfaWQ6IENvbXBhdGFibGUsXG4gICAgICAgIHRvX2lkOiBRdWVyaWVzLFxuICAgICAgfSxcbiAgICB9KTtcbiAgXG4gICAgY29uc3QgVmlld0l0ZW0gPSBSZWFjdC51c2VNZW1vKCgpID0+IFJlYWN0Lm1lbW8oKHsgbGluazogaGFuZGxlciwgaXNBY3RpdmUgfSkgPT4ge1xuICAgICAgcmV0dXJuIDxHby5IYW5kbGVyIGhhbmRsZXJJZD17aGFuZGxlci5pZH0gZXZlbnQ9e2V2ZW50fSBpc0FjdGl2ZT17aXNBY3RpdmV9Lz47XG4gICAgfSksIFtdKTtcblxuICAgIGNvbnN0IFtvLCBzZXRPXSA9IFJlYWN0LnVzZVN0YXRlKCk7XG4gICAgUmVhY3QudXNlRWZmZWN0KCgpID0+IGdvLnNldChTdGFjayksIFtdKTtcblxuICAgIHJldHVybiA8Z28uT25cbiAgICAgIGRvPXt7XG4gICAgICAgIHZpZXc6IChnLHYsbykgPT4gc2V0TyhvKSxcbiAgICAgIH19XG4gICAgPlxuICAgICAgPGMuRmxleCByZWY9e3JlZn0gZGlyZWN0aW9uPSdjb2x1bW4nIGg9JzEwMCUnPlxuICAgICAgICA8Yy5Cb3ggaD0nM2VtJz48Z28uUHJvdmlkZXIgbGlua0lkPXtTdGFja30+XG4gICAgICAgICAgPGdvLkNvbXBvbmVudCBwYXRoPXtbZHBsLCAnU3RhY2snXX0gZGlyZWN0aW9uPSdob3Jpem9udGFsJyBsaW5rcz17dmlld3N9IEl0ZW09e1ZpZXdJdGVtfS8+XG4gICAgICAgIDwvZ28uUHJvdmlkZXI+PC9jLkJveD5cbiAgICAgICAge3R5cGVvZihvPy5Db21wb25lbnQpID09PSAnZnVuY3Rpb24nICYmIFs8Z28uUHJvdmlkZXIga2V5PXtvLmlkfSBsaW5rSWQ9e28uaWR9PlxuICAgICAgICAgIDxjLkJveCBmbGV4PScxJyBwb3NpdGlvbj0ncmVsYXRpdmUnPlxuICAgICAgICAgICAgPG8uQ29tcG9uZW50IGV2ZW50PXtldmVudH0vPlxuICAgICAgICAgIDwvYy5Cb3g+XG4gICAgICAgIDwvZ28uUHJvdmlkZXI+XX1cbiAgICAgIDwvYy5GbGV4PlxuICAgIDwvZ28uT24+O1xuICB9O1xufSJdfQ==",
          "link_id": 22432
        },
        "__typename": "links"
      },
      "__typename": "handlers"
    }
  ]
}